From wolfgangb at mail.berlios.de  Tue Jul 18 01:25:31 2006
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Tue, 18 Jul 2006 01:25:31 +0200
Subject: [Lincity-ng-commit] r1093 - in trunk: . data/help/en
	src/lincity/modules
Message-ID: <200607172325.k6HNPVxg005062@sheep.berlios.de>

Author: wolfgangb
Date: 2006-07-18 01:25:10 +0200 (Tue, 18 Jul 2006)
New Revision: 1093

Modified:
   trunk/RELNOTES
   trunk/data/help/en/port.xml
   trunk/src/lincity/modules/port.cpp
Log:
Port trade with transport no longer limited to top right corner.


Modified: trunk/RELNOTES
===================================================================
--- trunk/RELNOTES	2006-05-10 13:27:19 UTC (rev 1092)
+++ trunk/RELNOTES	2006-07-17 23:25:10 UTC (rev 1093)
@@ -1,7 +1,8 @@
 *** LincityNG 1.0.4 *** 
 
+* Display correct values for unemploment rate.
+* Port connects on all land parts.
 
-
 *** LincityNG 1.0.3 *** [r1089 in svn]
 
 * Show correct demolition costs for powerlines, substations and farms.

Modified: trunk/data/help/en/port.xml
===================================================================
--- trunk/data/help/en/port.xml	2006-05-10 13:27:19 UTC (rev 1092)
+++ trunk/data/help/en/port.xml	2006-07-17 23:25:10 UTC (rev 1093)
@@ -2,7 +2,7 @@
 <Document style="helpdocument">
 	<p style="htitle">Ports</p>
 	<p style="hp">Ports let you import and export goods, steel, ore, coal and food. Importing costs you money and exporting makes you money.</p>
-	<p style="hp">To be of use a port must be connected to transport at the dock gate at the top left of the area. You choose what to import by double clicking on the port. This brings up a menu with boxes to select what to import and what to export.</p>
+	<p style="hp">To be of use a port must be connected to transport. You choose what to import by double clicking on the port. This brings up a menu with boxes to select what to import and what to export.</p>
 	<p style="hp">They <b>must</b> be connected to rivers all along the right hand side.</p>
 	<p style="hp">Nothing will be imported or exported until you have checked the appropriate box.</p>
 	<p style="hp">The export area will take as much as it is given. If you need to export, but want to restrict the amount, you may want to use a type of transport with less capacity, use a long piece or pass the product through a market. You will need to experiment to get the right transport configuration.</p>

Modified: trunk/src/lincity/modules/port.cpp
===================================================================
--- trunk/src/lincity/modules/port.cpp	2006-05-10 13:27:19 UTC (rev 1092)
+++ trunk/src/lincity/modules/port.cpp	2006-07-17 23:25:10 UTC (rev 1093)
@@ -8,7 +8,83 @@
 #include "modules.h"
 #include "port.h"
 
+/* Trade with a transport.
+ * Port is at x/y, transport at u/v. */
+void trade_connection( const int x, const int y, const int u, const int v, int* ic_ptr, int* et_ptr ){
+  if (u >= 0 && v>=0 && (MP_INFO( u, v).flags
+              & FLAG_IS_TRANSPORT) != 0)
+  {
+      //printf("Port %i/%i trading with transport %i/%i\n", x,y,u,v);
+      int i, flags;
+      int ic = 0;
+      int et = 0;
+      flags = MP_INFO(x,y).flags;
+      if ((flags & FLAG_MB_FOOD) != 0)
+      {
+          i = buy_food ( u, v);
+          ic += i;
+          MP_INFO(x + 1,y).int_3 += i;
+      }
+      if ((flags & FLAG_MS_FOOD) != 0)
+      {
+          i = sell_food ( u, v);
+          et += i;
+          MP_INFO(x + 2,y).int_3 += i;
+      }
+      if ((flags & FLAG_MB_COAL) != 0)
+      {
+          i = buy_coal ( u, v);
+          ic += i;
+          MP_INFO(x + 1,y).int_4 += i;
+      }
+      if ((flags & FLAG_MS_COAL) != 0)
+      {
+          i = sell_coal ( u, v);
+          et += i;
+          MP_INFO(x + 2,y).int_4 += i;
+      }
+      if ((flags & FLAG_MB_ORE) != 0)
+      {
+          i = buy_ore ( u, v);
+          ic += i;
+          MP_INFO(x + 1,y).int_5 += i;
+      }
+      if ((flags & FLAG_MS_ORE) != 0)
+      {
+          i = sell_ore ( u, v);
+          et += i;
+          MP_INFO(x + 2,y).int_5 += i;
+      }
+      if ((flags & FLAG_MB_GOODS) != 0)
+      {
+          i = buy_goods ( u, v);
+          ic += i;
+          MP_INFO(x + 1,y).int_6 += i;
+      }
+      if ((flags & FLAG_MS_GOODS) != 0)
+      {
+          i = sell_goods ( u, v);
+          et += i;
+          MP_INFO(x + 2,y).int_6 += i;
+      }
+      if ((flags & FLAG_MB_STEEL) != 0)
+      {
+          i = buy_steel ( u, v);
+          ic += i;
+          MP_INFO(x + 1,y).int_7 += i;
+      }
+      if ((flags & FLAG_MS_STEEL) != 0)
+      {
+          i = sell_steel ( u, v);
+          et += i;
+          MP_INFO(x + 2,y).int_7 += i;
+      }
+      *ic_ptr += ic;
+      *et_ptr += et;
+  }
+}
 
+
 void
 do_port (int x, int y)
 {
@@ -23,138 +99,33 @@
      // Use int_3 to int_7 of (x+2,y) to hold the individual sell values
      //                       (x,y+2) is last month's
    */
-  int i, et = 0, ic = 0, flags, *b1, *b2, *s1, *s2;
-  /* left connection first */
-  flags = MP_INFO(x,y).flags;
-  if (x > 0 && (MP_INFO(x - 1,y).flags
-		& FLAG_IS_TRANSPORT) != 0)
-    {
-      if ((flags & FLAG_MB_FOOD) != 0)
-	{
-	  i = buy_food (x - 1, y);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_3 += i;
-	}
-      if ((flags & FLAG_MS_FOOD) != 0)
-	{
-	  i = sell_food (x - 1, y);
-	  et += i;
-	  MP_INFO(x + 2,y).int_3 += i;
-	}
-      if ((flags & FLAG_MB_COAL) != 0)
-	{
-	  i = buy_coal (x - 1, y);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_4 += i;
-	}
-      if ((flags & FLAG_MS_COAL) != 0)
-	{
-	  i = sell_coal (x - 1, y);
-	  et += i;
-	  MP_INFO(x + 2,y).int_4 += i;
-	}
-      if ((flags & FLAG_MB_ORE) != 0)
-	{
-	  i = buy_ore (x - 1, y);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_5 += i;
-	}
-      if ((flags & FLAG_MS_ORE) != 0)
-	{
-	  i = sell_ore (x - 1, y);
-	  et += i;
-	  MP_INFO(x + 2,y).int_5 += i;
-	}
-      if ((flags & FLAG_MB_GOODS) != 0)
-	{
-	  i = buy_goods (x - 1, y);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_6 += i;
-	}
-      if ((flags & FLAG_MS_GOODS) != 0)
-	{
-	  i = sell_goods (x - 1, y);
-	  et += i;
-	  MP_INFO(x + 2,y).int_6 += i;
-	}
-      if ((flags & FLAG_MB_STEEL) != 0)
-	{
-	  i = buy_steel (x - 1, y);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_7 += i;
-	}
-      if ((flags & FLAG_MS_STEEL) != 0)
-	{
-	  i = sell_steel (x - 1, y);
-	  et += i;
-	  MP_INFO(x + 2,y).int_7 += i;
-	}
+  int i, et = 0, ic = 0, *b1, *b2, *s1, *s2, a;
+
+      
+ /* left connection first */
+  for( a = 0; a < 4 ; a++ ) //try anywhere on the west side.
+    if ( x >= 0 && y>=0 && (MP_INFO( x-1, y+a ).flags
+              & FLAG_IS_TRANSPORT) != 0){
+        trade_connection( x, y, x-1, y+a, &ic, &et );
+        break;
     }
-  /* upper gate next */
-  if (y > 0 && (MP_INFO(x,y - 1).flags
-		& FLAG_IS_TRANSPORT) != 0)
-    {
-      if ((flags & FLAG_MB_FOOD) != 0)
-	{
-	  i = buy_food (x, y - 1);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_3 += i;
-	}
-      if ((flags & FLAG_MS_FOOD) != 0)
-	{
-	  i = sell_food (x, y - 1);
-	  et += i;
-	  MP_INFO(x + 2,y).int_3 += i;
-	}
-      if ((flags & FLAG_MB_COAL) != 0)
-	{
-	  i = buy_coal (x, y - 1);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_4 += i;
-	}
-      if ((flags & FLAG_MS_COAL) != 0)
-	{
-	  i = sell_coal (x, y - 1);
-	  et += i;
-	  MP_INFO(x + 2,y).int_4 += i;
-	}
-      if ((flags & FLAG_MB_ORE) != 0)
-	{
-	  i = buy_ore (x, y - 1);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_5 += i;
-	}
-      if ((flags & FLAG_MS_ORE) != 0)
-	{
-	  i = sell_ore (x, y - 1);
-	  et += i;
-	  MP_INFO(x + 2,y).int_5 += i;
-	}
-      if ((flags & FLAG_MB_GOODS) != 0)
-	{
-	  i = buy_goods (x, y - 1);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_6 += i;
-	}
-      if ((flags & FLAG_MS_GOODS) != 0)
-	{
-	  i = sell_goods (x, y - 1);
-	  et += i;
-	  MP_INFO(x + 2,y).int_6 += i;
-	}
-      if ((flags & FLAG_MB_STEEL) != 0)
-	{
-	  i = buy_steel (x, y - 1);
-	  ic += i;
-	  MP_INFO(x + 1,y).int_7 += i;
-	}
-      if ((flags & FLAG_MS_STEEL) != 0)
-	{
-	  i = sell_steel (x, y - 1);
-	  et += i;
-	  MP_INFO(x + 2,y).int_7 += i;
-	}
+ /* upper gate next */
+  bool deal = false;
+  for( a = 0; a < 3 ; a++ ) //try north
+    if ( x >= 0 && y>=0 && (MP_INFO( x+a, y-1 ).flags
+              & FLAG_IS_TRANSPORT) != 0){
+        trade_connection( x, y, x+a, y-1, &ic, &et );
+        deal = false;
+        break;
     }
+  if( !deal )
+  for( a = 0; a < 3 ; a++ ) //try south
+    if ( x >= 0 && y>=0 && (MP_INFO( x+a, y+4 ).flags
+              & FLAG_IS_TRANSPORT) != 0){
+        trade_connection( x, y, x+a, y+4, &ic, &et );
+        break;
+    }
+  
   MP_INFO(x,y).int_1 += et;
   MP_INFO(x,y).int_4 += ic;
   if (total_time % 100 == 0)



From wolfgangb at mail.berlios.de  Tue Jul 25 00:06:22 2006
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Tue, 25 Jul 2006 00:06:22 +0200
Subject: [Lincity-ng-commit] r1094 - trunk/src/lincity-ng
Message-ID: <200607242206.k6OM6MWK014835@sheep.berlios.de>

Author: wolfgangb
Date: 2006-07-25 00:06:21 +0200 (Tue, 25 Jul 2006)
New Revision: 1094

Modified:
   trunk/src/lincity-ng/ScreenInterface.cpp
Log:
Check cash limit +/- 2000MM on every change to prevent overflow.


Modified: trunk/src/lincity-ng/ScreenInterface.cpp
===================================================================
--- trunk/src/lincity-ng/ScreenInterface.cpp	2006-07-17 23:25:10 UTC (rev 1093)
+++ trunk/src/lincity-ng/ScreenInterface.cpp	2006-07-24 22:06:21 UTC (rev 1094)
@@ -245,6 +245,12 @@
     if( lastMoney == total_money ){
         return;
     }
+    //Prevent overflow
+    if (total_money > 2000000000)
+	total_money = 2000000000;
+    else if (total_money < -2000000000)
+	total_money = -2000000000; 
+    
     std::ostringstream moneyText;
     int money = total_money;
 



From wolfgangb at mail.berlios.de  Tue Jul 25 19:17:53 2006
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Tue, 25 Jul 2006 19:17:53 +0200
Subject: [Lincity-ng-commit] r1095 - in trunk: . data/help/en
Message-ID: <200607251717.k6PHHrp0031155@sheep.berlios.de>

Author: wolfgangb
Date: 2006-07-25 19:17:32 +0200 (Tue, 25 Jul 2006)
New Revision: 1095

Modified:
   trunk/TODO
   trunk/data/help/en/bulldoze.xml
Log:
Patch #1236

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-07-24 22:06:21 UTC (rev 1094)
+++ trunk/TODO	2006-07-25 17:17:32 UTC (rev 1095)
@@ -48,7 +48,7 @@
  [M] Print out more debug infos that user can send in with debug reports:
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
- [H] Looks like watching electricity minimap uses power. Seems to be this way
+ [?] Looks like watching electricity minimap uses power. Seems to be this way
      in classic already. Do we want to change that? No.
  [M] "Dungeon Keeper"-like message queue
 

Modified: trunk/data/help/en/bulldoze.xml
===================================================================
--- trunk/data/help/en/bulldoze.xml	2006-07-24 22:06:21 UTC (rev 1094)
+++ trunk/data/help/en/bulldoze.xml	2006-07-25 17:17:32 UTC (rev 1095)
@@ -7,7 +7,7 @@
 	<p style="hp">This is the bulldozer icon</p>
 	<img src="images/gui/buttonpanel/base/bulldozer.png" halign="center"/>
 	<p style="hsubtitle">See also:</p>
-	<li><a href="help/transport.xml">Transport</a></li>
-	<li><a href="help/river.xml">Rivers</a></li>
+	<li><a href="transport">Transport</a></li>
+	<li><a href="river">Rivers</a></li>
 </Document>
 



From wolfgangb at mail.berlios.de  Fri Jul 28 12:59:43 2006
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Fri, 28 Jul 2006 12:59:43 +0200
Subject: [Lincity-ng-commit] r1096 - trunk/src/lincity-ng
Message-ID: <200607281059.k6SAxh6K029817@sheep.berlios.de>

Author: wolfgangb
Date: 2006-07-28 12:59:39 +0200 (Fri, 28 Jul 2006)
New Revision: 1096

Modified:
   trunk/src/lincity-ng/MainMenu.cpp
Log:
Patch #1239

Modified: trunk/src/lincity-ng/MainMenu.cpp
===================================================================
--- trunk/src/lincity-ng/MainMenu.cpp	2006-07-25 17:17:32 UTC (rev 1095)
+++ trunk/src/lincity-ng/MainMenu.cpp	2006-07-28 10:59:39 UTC (rev 1096)
@@ -318,7 +318,28 @@
     std::string fc=button->getCaptionText();
   
     std::string file="";
+    
+    /* I guess this should be the proper way of selecting in the menu.
+       Everytime we check a new button the last one gets unchecked.
+       If the button checked is an empty one, nothing should be opened 
+       Could be done the other way around: the first time an existing item
+       is selected in the menu, an empty one could never be checked again.
+       Anyway I don't think both should be checked, when an empty is checked
+       after an existing one.
+    */
+       
+    char *bs[]={"File0","File1","File2","File3","File4","File5",""};
+    for(int i=0;std::string(bs[i]).length();i++) {
+        CheckButton *b=getCheckButton(*currentMenu,bs[i]);
+        if(b->getName()!=button->getName()){
+            b->uncheck();
+        } else {
+            b->check();
+        }
+    }
+
     if( !fc.length()) {
+        mFilename = "";
         return;
     }
     
@@ -329,16 +350,6 @@
         file=fc;
     }
     
-    char *bs[]={"File0","File1","File2","File3","File4","File5",""};
-    for(int i=0;std::string(bs[i]).length();i++) {
-        CheckButton *b=getCheckButton(*currentMenu,bs[i]);
-        if(b->getName()!=button->getName()){
-            b->uncheck();
-        } else {
-            b->check();
-        }
-    }
-
     if(newGameMenu.get()==currentMenu) {
         mFilename=PHYSFS_getRealDir( file.c_str() );
     } else {



