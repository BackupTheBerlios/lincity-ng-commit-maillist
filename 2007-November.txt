From wolfgangb at mail.berlios.de  Sat Nov  3 19:58:10 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Sat, 3 Nov 2007 19:58:10 +0100
Subject: [Lincity-ng-commit] r1270 - in trunk: . contrib/autopackage
	contrib/win32 src/lincity/modules src/lincity-ng
Message-ID: <200711031858.lA3IwABJ001907@sheep.berlios.de>

Author: wolfgangb
Date: 2007-11-03 19:58:10 +0100 (Sat, 03 Nov 2007)
New Revision: 1270

Modified:
   trunk/RELNOTES
   trunk/configure.ac
   trunk/contrib/autopackage/default.apspec
   trunk/contrib/win32/lincity-ng.iss
   trunk/src/lincity-ng/GameView.cpp
   trunk/src/lincity/modules/coalmine.cpp
Log:
* Show range for windmill and coal mine while building. 
* Prepare release 1.1.2.


Modified: trunk/RELNOTES
===================================================================
--- trunk/RELNOTES	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/RELNOTES	2007-11-03 18:58:10 UTC (rev 1270)
@@ -1,3 +1,10 @@
+*** LincityNG 1.1.2 ***
+
+* Show coal below buildings on mini map.
+* Bugfix for solar power plant.
+* Updated translations (ca, nl, ru)
+* Show range for windmill and coal mine while building. 
+
 *** LincityNG 1.1.1 *** [r1263 in svn] 2007-08-19
 
 * History in online help

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/configure.ac	2007-11-03 18:58:10 UTC (rev 1270)
@@ -4,7 +4,7 @@
 #----------------------------------------------------------------------------
 AC_PREREQ([2.54])
 
-AC_INIT([lincity-ng], [1.1.1], [matze at braunis.de])
+AC_INIT([lincity-ng], [1.1.2], [matze at braunis.de])
 AC_CONFIG_SRCDIR([mk/jam/build.jam])
 AC_CONFIG_AUX_DIR([mk/autoconf])
 

Modified: trunk/contrib/autopackage/default.apspec
===================================================================
--- trunk/contrib/autopackage/default.apspec	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/contrib/autopackage/default.apspec	2007-11-03 18:58:10 UTC (rev 1270)
@@ -9,7 +9,7 @@
 Summary: City Simulation Game
 URL: http://lincity-ng.berlios.de
 License: GNU General Public License, Version 2
-SoftwareVersion: 1.1.1
+SoftwareVersion: 1.1.2
 AutopackageTarget: 1.2
 PackageVersion: 1
 

Modified: trunk/contrib/win32/lincity-ng.iss
===================================================================
--- trunk/contrib/win32/lincity-ng.iss	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/contrib/win32/lincity-ng.iss	2007-11-03 18:58:10 UTC (rev 1270)
@@ -8,7 +8,7 @@
 ; files and the lincity-ng.exe file.
 [Setup]
 AppName=LinCity-NG
-AppVerName=LinCity-NG 1.0
+AppVerName=LinCity-NG 1.1.2
 AppPublisher=LinCity-NG Developers
 AppPublisherURL=http://lincity-ng.berlios.de/wiki
 AppSupportURL=http://lincity-ng.berlios.de/wiki

Modified: trunk/src/lincity/modules/coalmine.cpp
===================================================================
--- trunk/src/lincity/modules/coalmine.cpp	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/src/lincity/modules/coalmine.cpp	2007-11-03 18:58:10 UTC (rev 1270)
@@ -14,10 +14,9 @@
 {
   /*
      // int_1 is the coal at the surface
-     // int_2 is the coal reserve under the ground. More than one mine can
+     // int_2 is the coal reserve under the ground. More than one mine can claim the coal under ground!
      // int_3 is the jobs collected.
    */
-  /* claim the coal under ground! */
   int xx, yy, xs, ys, xe, ye, cr;
   if (MP_INFO(x,y).int_1 < (DIG_MORE_COAL_TRIGGER - 1000))
     {

Modified: trunk/src/lincity-ng/GameView.cpp
===================================================================
--- trunk/src/lincity-ng/GameView.cpp	2007-10-26 22:47:49 UTC (rev 1269)
+++ trunk/src/lincity-ng/GameView.cpp	2007-11-03 18:58:10 UTC (rev 1270)
@@ -1393,6 +1393,7 @@
 
         // Draw range for selected_module_type
         int range = 0;
+        int reduceNW = 0; // substation and market reduce the range to nort west by one. 
         switch ( selected_module_type ){
             //case CST_RESIDENCE_LL: break; 
             //case CST_RESIDENCE_ML: break;
@@ -1403,8 +1404,8 @@
             //case CST_FARM_O0: break;
             //case CST_MILL_0: break;
             case CST_HEALTH:        range = HEALTH_CENTRE_RANGE; break;
-            case CST_CRICKET_1:     range = CRICKET_RANGE + 1; break;
-            case CST_FIRESTATION_1: range = FIRESTATION_RANGE + 1; break;
+            case CST_CRICKET_1:     range = CRICKET_RANGE; break;
+            case CST_FIRESTATION_1: range = FIRESTATION_RANGE; break;
             //case CST_SCHOOL: break;
             //case CST_UNIVERSITY: break;
             //case CST_TRACK_LR: break;
@@ -1415,16 +1416,16 @@
             //case CST_POWERL_H_L: break;
             //case CST_POWERS_COAL_EMPTY: break;
             //case CST_POWERS_SOLAR: break;
-            case CST_SUBSTATION_R:   range = SUBSTATION_RANGE; break;
-            //case CST_WINDMILL_1_R: break;
+            case CST_SUBSTATION_R:   range = SUBSTATION_RANGE; reduceNW = 1; break;
+            case CST_WINDMILL_1_R:   range = SUBSTATION_RANGE; reduceNW = 1; break; //Windmills are handled like substations
             //case CST_COMMUNE_1: break;
-            //case CST_COALMINE_EMPTY: break;
+            case CST_COALMINE_EMPTY: range = COAL_RESERVE_SEARCH_LEN; break;
             //case CST_OREMINE_1: break;
             //case CST_TIP_0: break;
             //case CST_RECYCLE: break;
             //case CST_INDUSTRY_L_C: break;
             //case CST_INDUSTRY_H_C: break;
-            case CST_MARKET_EMPTY:  range = MARKET_RANGE; break;
+            case CST_MARKET_EMPTY:  range = MARKET_RANGE; reduceNW = 1; break;
             //case CST_POTTERY_0: break;
             //case CST_BLACKSMITH_0: break;
             //case CST_MONUMENT_0: break;
@@ -1433,14 +1434,14 @@
         }
        	
         if (range > 0 )
-        {        	
+        {
         	painter.setFillColor( Color( 0, 0, 128, 64 ) );
-        	Rect2D rangerect( 0, 0,
-        	                  tileWidth  * (2 * range - cursorSize) ,
-        	                  tileHeight * (2 * range - cursorSize) );
+        	Rect2D rangerect( 0,0,
+        	                  tileWidth  * ( 2 * range - reduceNW ) ,
+        	                  tileHeight * ( 2 * range - reduceNW ) );
         	Vector2 screenPoint = getScreenPoint(tile);
-        	screenPoint.x -= tileWidth  * (2 * range - cursorSize) / 2;
-        	screenPoint.y -= tileHeight * range;
+        	screenPoint.x -= tileWidth  * ( range - 0.5 * reduceNW );
+        	screenPoint.y -= tileHeight * ( range + 1 - reduceNW );
         	rangerect.move( screenPoint );
         	fillDiamond( painter, rangerect );         	
         }           
@@ -1479,7 +1480,7 @@
     //The Corners of The Screen
     //TODO: change here to only draw dirtyRect
     //      dirtyRectangle is the current Clippingarea (if set)
-    //      so we shold get clippingArea (as sonn this is implemented) 
+    //      so we shold get clippingArea (as soon this is implemented) 
     //      and adjust these Vectors:
     Vector2 upperLeft( 0, 0);
     Vector2 upperRight( getWidth(), 0 );



From wolfgangb at mail.berlios.de  Sun Nov  4 19:00:12 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Sun, 4 Nov 2007 19:00:12 +0100
Subject: [Lincity-ng-commit] r1271 - in trunk: . src/lincity-ng
Message-ID: <200711041800.lA4I0C0G020382@sheep.berlios.de>

Author: wolfgangb
Date: 2007-11-04 19:00:11 +0100 (Sun, 04 Nov 2007)
New Revision: 1271

Modified:
   trunk/RELNOTES
   trunk/src/lincity-ng/MainMenu.cpp
Log:
Quick fix for windows problem with recentfile and curfile pointer.
Just ignore date for now.


Modified: trunk/RELNOTES
===================================================================
--- trunk/RELNOTES	2007-11-03 18:58:10 UTC (rev 1270)
+++ trunk/RELNOTES	2007-11-04 18:00:11 UTC (rev 1271)
@@ -1,4 +1,4 @@
-*** LincityNG 1.1.2 ***
+*** LincityNG 1.1.2 *** [r1270 in svn] 2007-11-04
 
 * Show coal below buildings on mini map.
 * Bugfix for solar power plant.

Modified: trunk/src/lincity-ng/MainMenu.cpp
===================================================================
--- trunk/src/lincity-ng/MainMenu.cpp	2007-11-03 18:58:10 UTC (rev 1270)
+++ trunk/src/lincity-ng/MainMenu.cpp	2007-11-04 18:00:11 UTC (rev 1271)
@@ -170,6 +170,10 @@
 	        if (t == 0) {
                     recentfile = curfile;
                     t = PHYSFS_getLastModTime(recentfile->d_name);
+#ifdef WIN32
+		    //something is broken in Windows
+		    break;
+#endif		    
                 } else {
                     if (PHYSFS_getLastModTime(curfile->d_name) > t) {
 #ifdef DEBUG



From wolfgangb at mail.berlios.de  Mon Nov 12 20:36:00 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Mon, 12 Nov 2007 20:36:00 +0100
Subject: [Lincity-ng-commit] r1272 - trunk
Message-ID: <200711121936.lACJa0C6021509@sheep.berlios.de>

Author: wolfgangb
Date: 2007-11-12 20:35:59 +0100 (Mon, 12 Nov 2007)
New Revision: 1272

Modified:
   trunk/TODO
   trunk/configure.ac
Log:
version++

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2007-11-04 18:00:11 UTC (rev 1271)
+++ trunk/TODO	2007-11-12 19:35:59 UTC (rev 1272)
@@ -41,6 +41,8 @@
      (eg in load game menu) Buttons that had an empty string as caption once
      won't change to anything else. At least the caption is not shown.
  [M] Get rid of all the compiler warnings.
+ [M] Windows: Use user's home for savegames
+ [H] Windows: Something in MainMenu.cpp with recentfile and curfile is broken. 
 
 --Translations/Help--
  [H] There were help page without any link to them. Some of the texts
@@ -57,8 +59,9 @@
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
  [?] Looks like watching electricity minimap uses power. Seems to be this way
-     in classic already. Do we want to change that? No.
+     in classic already. Do we want to change that?
  [M] "Dungeon Keeper"-like message queue
+ [M] Integrate waterwell branch in main. Maybe as option so we get playtesters?
 
 -- Infrastructure/Deployment --
  [H] Setup an automatic backup script for the wiki!

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2007-11-04 18:00:11 UTC (rev 1271)
+++ trunk/configure.ac	2007-11-12 19:35:59 UTC (rev 1272)
@@ -4,7 +4,7 @@
 #----------------------------------------------------------------------------
 AC_PREREQ([2.54])
 
-AC_INIT([lincity-ng], [1.1.2], [matze at braunis.de])
+AC_INIT([lincity-ng], [1.1.3pre], [matze at braunis.de])
 AC_CONFIG_SRCDIR([mk/jam/build.jam])
 AC_CONFIG_AUX_DIR([mk/autoconf])
 



From alainb at mail.berlios.de  Sat Nov 17 20:44:42 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sat, 17 Nov 2007 20:44:42 +0100
Subject: [Lincity-ng-commit] r1273 - in branches/waterwell: . data/help/en
Message-ID: <200711171944.lAHJigAY023567@sheep.berlios.de>

Author: alainb
Date: 2007-11-17 20:44:41 +0100 (Sat, 17 Nov 2007)
New Revision: 1273

Modified:
   branches/waterwell/README-TODO-WaterWell
   branches/waterwell/data/help/en/button-index.xml
   branches/waterwell/data/help/en/commune.xml
   branches/waterwell/data/help/en/farm.xml
   branches/waterwell/data/help/en/park.xml
   branches/waterwell/data/help/en/residential.xml
   branches/waterwell/data/help/en/tutorial-basics.xml
   branches/waterwell/data/help/en/waterwell.xml
Log:
tiny updates in documentations.

Modified: branches/waterwell/README-TODO-WaterWell
===================================================================
--- branches/waterwell/README-TODO-WaterWell	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/README-TODO-WaterWell	2007-11-17 19:44:41 UTC (rev 1273)
@@ -14,8 +14,8 @@
  -info with query tool seems to not work on desert and trees, or work randomly
  -bug of trunk = (re)initialisation of engine and UI is not enough.
 
-WIP:
-----
+DONE:
+-----
 basic water management implemented:
  -residence need water like food. Lack of water has the same consequences as lack of food.
  -random village has a water well.
@@ -30,8 +30,11 @@
   
 TODO: 
 -----
+* Translations: English is ok, other languages not: 
+        added data/help/en/waterwell.xml
+        modified residential.xml, farms.xml, parks.xml, communes.xml, index.xml, button-index.xml.
 * additional tiles for desert (like water)
-* help (en), info with query tool, (waterwell, residences, farms, communes, parks)
+* info with query tool, (waterwell, residences, farms, communes, parks)
  
 AIM:
 ----
@@ -75,9 +78,9 @@
 
 REMARKS/NOTES:
 --------------
-Don't consider this is important, it's just some ideas i have while wandering in the
-code. I write them here instead of somewhere else, but maybe i will just forget them later,
-or put them in the wiki.
+Don't consider this is important, it's just some ideas caught while wandering in the
+code. They are written here instead of somewhere else, but maybe they will just be forgotten
+or go in the wiki.
 
 * initialise with srand (time) and add command line option --seed (easier debugging)
 

Modified: branches/waterwell/data/help/en/button-index.xml
===================================================================
--- branches/waterwell/data/help/en/button-index.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/button-index.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -14,6 +14,10 @@
 	<img src="images/gui/buttonpanel/residence/residence.png"/>
 	<p><a href="residential">Residential area</a></p>
 
+	<!--<p style="subtitle">Water well</p>-->
+	<img src="images/gui/buttonpanel/waterwell.png"/>
+	<p><a href="waterwell">Water well</a></p>
+
 	<!--<p style="subtitle">Parks</p>-->
 	<img src="images/gui/buttonpanel/parks/farm.png"/>
 	<p><a href="farm">Farm</a></p>

Modified: branches/waterwell/data/help/en/commune.xml
===================================================================
--- branches/waterwell/data/help/en/commune.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/commune.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -5,6 +5,7 @@
 	<p style="hp">You will probably need a 'few' communes to provide enough coal and steel for areas such as potteries, blacksmiths and mills.</p>
 	<p style="hp">If a commune is not producing anything for 10 years it is closed and the area turns in parks.</p>
 	<p style="hp">Communes can connect to transport at any point around it, not only to the gate.</p>
+	<p style="hp">Communes'production depends on underground water. (tiles with water are green, others are yellow-brown like desert)</p>
 	
 	<p style="hp">This is a commune</p>
 	<img src="images/tiles/commune1.png" halign="center"/>

Modified: branches/waterwell/data/help/en/farm.xml
===================================================================
--- branches/waterwell/data/help/en/farm.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/farm.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -1,7 +1,8 @@
 <?xml version="1.0"?>
 <Document style="helpdocument">
 	<p style="htitle">Farms</p>
-	<p style="hp">Farms grow food for people to eat, and to supply the raw materials for mills. Farmers can sell food to markets. They deliver it by tractor so they do not need transport. However they can sell to transport if you wish. Of course you need to ensure that the market is in range of the farm.</p>
+        <p style="hp">Farms grow food for people to eat, and to supply the raw materials for mills. Farmers can sell food to markets. They deliver it by tractor so they do not need transport. However they can sell to transport if you wish. Of course you need to ensure that the market is in range of the farm.</p>
+        <p style="hp">Production of farm depends on underground water. Tiles with water are green, others are yellow-brown (like desert or bare ground).</p>
 	
 	<p style="hp">This is a farm</p>
 	<img src="images/tiles/farm0.png" halign="center"/>

Modified: branches/waterwell/data/help/en/park.xml
===================================================================
--- branches/waterwell/data/help/en/park.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/park.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -5,6 +5,7 @@
 	<p style="hp">A number of areas produce pollution. These are roads, railways, coal mines and light and heavy industry. Some produce more than others.</p>
 	<p style="hp">You can use parks to shield residential areas or to stop pollution escaping from the local area of the source.</p>
 	<p style="hp">The wind comes <b>from</b> the south west, so build your parks accordingly.</p>
+        <p style="hp">Parks need underground water, so they can only be built on "green" tiles.</p>
 	
 	<p style="hp">This is a park</p>
 	<img src="images/tiles/parkland-plane.png" halign="center"/>

Modified: branches/waterwell/data/help/en/residential.xml
===================================================================
--- branches/waterwell/data/help/en/residential.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/residential.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -19,5 +19,6 @@
 
 	<p style="hsubtitle">See also:</p>
 	<li><a href="market">Market</a></li>
+        <li><a href="waterwell">Water well</a></li>
 </Document>
 

Modified: branches/waterwell/data/help/en/tutorial-basics.xml
===================================================================
--- branches/waterwell/data/help/en/tutorial-basics.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/tutorial-basics.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -4,6 +4,7 @@
 <p style="hp">Choose "new game " &gt; "random village". Other scenarii are for more or less experienced players. </p>
 <p style="hp">Notice that the random village contains basic resources: </p>
 <li>Farms for feeding markets with foods </li>
+<li>A Water well for people
 <li>Communes which produces charcoal and small amount of ore and steel </li>
 <li>Residential areas</li>
 <li>Pottery</li>
@@ -19,13 +20,13 @@
 
 <p style="hp">If a 'normal' building is not in the range of a market, then it must be connected to transport. But remember that roads and rails have a yearly cost, so unless you really want to isolate one building (e.g. a monument) it is generally better (and cheaper) to use markets when needed. </p>
 
-<p style="hp">In the initial village tracks are needed only for the communes production. Other activities need only market. </p>
+<p style="hp">In the initial village tracks are not needed. But they will be useful when the village develops.</p>
 
 <p style="hsubtitle">Money </p>
 <p style="hp">Productions are taxed and thus earn you money. In the miniwindow, the third tab is <a href="finance"> Finance window </a>.  Take care of not investing too much too quickly: when your money is negative, you cannot build some things, and you have per year cost due to the debt. This can lead to bankruptcy (see <a href="tutorial-scenario"> Hard-time scenario </a>. </p>
 
 <p style="hsubtitle">Developing the city </p>
-<p style="hp">Remember people eat food or die. To control population growth, you have to find a balance in the kind of <a href="residential"> Residential area </a> you build (they have different rate of birth/death). The new population will allow more jobs, but also need more food, goods, jobs ... </p>
+<p style="hp">Remember people eat food and drink water, or die. To control population growth, you have to find a balance in the kind of <a href="residential"> Residential area </a> you build (they have different rate of birth/death). The new population will allow more jobs, but also need more food, goods, jobs ... </p>
 <p style="hp">You will have to augment your production (add potteries, blacksmith) and at the same time take care that they are supplied. So it will also need to add communes accordingly. </p>
 <p style="hp">To get new buildings you must raise your <a href="tech-level"> Tech Level </a>.</p>
 <p style="hp"> At some point you will have to choose your aim: either <a href="sustain"> Sustainable economy </a> or evacuation with <a href="rocket"> spaceships </a>.</p>

Modified: branches/waterwell/data/help/en/waterwell.xml
===================================================================
--- branches/waterwell/data/help/en/waterwell.xml	2007-11-12 19:35:59 UTC (rev 1272)
+++ branches/waterwell/data/help/en/waterwell.xml	2007-11-17 19:44:41 UTC (rev 1273)
@@ -2,10 +2,9 @@
 <Document style="helpdocument">
 	<p style="htitle">Water well</p>
 	<p style="hp"><b> Work in progress. May crash/hang ... (no warranty: reread the GPL license ;-)</b></p>
-	<p style="hp">Provide water to builings within the range. Polluted water will have consequences. Parks reduce pollution of waterwell. Range of water well is shown in starvation overlay.</p>
+        <p style="hp">Provide water to houses within the range. Lack of water will have the same consequences as lack of food. Informations is shown in starvation overlay/minimap.</p>
 
 	<p style="hp">See also:</p>
-	<li><a href="park">Parks</a></li>
-	<li><a href="pollution">Pollution</a></li>
+	<li><a href="food">Food</a></li>
 	<li><a href="msb-starve">Starvation overlay</a></li>
 </Document>



From alainb at mail.berlios.de  Sat Nov 17 20:48:50 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sat, 17 Nov 2007 20:48:50 +0100
Subject: [Lincity-ng-commit] r1274 - in branches/waterwell: .
	contrib/autopackage contrib/win32 src/lincity/modules src/lincity-ng
Message-ID: <200711171948.lAHJmoDu023831@sheep.berlios.de>

Author: alainb
Date: 2007-11-17 20:48:49 +0100 (Sat, 17 Nov 2007)
New Revision: 1274

Modified:
   branches/waterwell/RELNOTES
   branches/waterwell/TODO
   branches/waterwell/configure.ac
   branches/waterwell/contrib/autopackage/default.apspec
   branches/waterwell/contrib/win32/lincity-ng.iss
   branches/waterwell/src/lincity-ng/GameView.cpp
   branches/waterwell/src/lincity-ng/MainMenu.cpp
   branches/waterwell/src/lincity/modules/coalmine.cpp
Log:
svn merge -r1269:1273

Modified: branches/waterwell/RELNOTES
===================================================================
--- branches/waterwell/RELNOTES	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/RELNOTES	2007-11-17 19:48:49 UTC (rev 1274)
@@ -1,3 +1,10 @@
+*** LincityNG 1.1.2 *** [r1270 in svn] 2007-11-04
+
+* Show coal below buildings on mini map.
+* Bugfix for solar power plant.
+* Updated translations (ca, nl, ru)
+* Show range for windmill and coal mine while building. 
+
 *** LincityNG 1.1.1 *** [r1263 in svn] 2007-08-19
 
 * History in online help

Modified: branches/waterwell/TODO
===================================================================
--- branches/waterwell/TODO	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/TODO	2007-11-17 19:48:49 UTC (rev 1274)
@@ -41,6 +41,8 @@
      (eg in load game menu) Buttons that had an empty string as caption once
      won't change to anything else. At least the caption is not shown.
  [M] Get rid of all the compiler warnings.
+ [M] Windows: Use user's home for savegames
+ [H] Windows: Something in MainMenu.cpp with recentfile and curfile is broken. 
 
 --Translations/Help--
  [H] There were help page without any link to them. Some of the texts
@@ -57,8 +59,9 @@
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
  [?] Looks like watching electricity minimap uses power. Seems to be this way
-     in classic already. Do we want to change that? No.
+     in classic already. Do we want to change that?
  [M] "Dungeon Keeper"-like message queue
+ [M] Integrate waterwell branch in main. Maybe as option so we get playtesters?
 
 -- Infrastructure/Deployment --
  [H] Setup an automatic backup script for the wiki!

Modified: branches/waterwell/configure.ac
===================================================================
--- branches/waterwell/configure.ac	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/configure.ac	2007-11-17 19:48:49 UTC (rev 1274)
@@ -4,7 +4,7 @@
 #----------------------------------------------------------------------------
 AC_PREREQ([2.54])
 
-AC_INIT([lincity-ng], [1.1.1], [matze at braunis.de])
+AC_INIT([lincity-ng], [1.1.3pre], [matze at braunis.de])
 AC_CONFIG_SRCDIR([mk/jam/build.jam])
 AC_CONFIG_AUX_DIR([mk/autoconf])
 

Modified: branches/waterwell/contrib/autopackage/default.apspec
===================================================================
--- branches/waterwell/contrib/autopackage/default.apspec	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/contrib/autopackage/default.apspec	2007-11-17 19:48:49 UTC (rev 1274)
@@ -9,7 +9,7 @@
 Summary: City Simulation Game
 URL: http://lincity-ng.berlios.de
 License: GNU General Public License, Version 2
-SoftwareVersion: 1.1.1
+SoftwareVersion: 1.1.2
 AutopackageTarget: 1.2
 PackageVersion: 1
 

Modified: branches/waterwell/contrib/win32/lincity-ng.iss
===================================================================
--- branches/waterwell/contrib/win32/lincity-ng.iss	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/contrib/win32/lincity-ng.iss	2007-11-17 19:48:49 UTC (rev 1274)
@@ -8,7 +8,7 @@
 ; files and the lincity-ng.exe file.
 [Setup]
 AppName=LinCity-NG
-AppVerName=LinCity-NG 1.0
+AppVerName=LinCity-NG 1.1.2
 AppPublisher=LinCity-NG Developers
 AppPublisherURL=http://lincity-ng.berlios.de/wiki
 AppSupportURL=http://lincity-ng.berlios.de/wiki

Modified: branches/waterwell/src/lincity/modules/coalmine.cpp
===================================================================
--- branches/waterwell/src/lincity/modules/coalmine.cpp	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/src/lincity/modules/coalmine.cpp	2007-11-17 19:48:49 UTC (rev 1274)
@@ -14,10 +14,9 @@
 {
   /*
      // int_1 is the coal at the surface
-     // int_2 is the coal reserve under the ground. More than one mine can
+     // int_2 is the coal reserve under the ground. More than one mine can claim the coal under ground!
      // int_3 is the jobs collected.
    */
-  /* claim the coal under ground! */
   int xx, yy, xs, ys, xe, ye, cr;
   if (MP_INFO(x,y).int_1 < (DIG_MORE_COAL_TRIGGER - 1000))
     {

Modified: branches/waterwell/src/lincity-ng/GameView.cpp
===================================================================
--- branches/waterwell/src/lincity-ng/GameView.cpp	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/src/lincity-ng/GameView.cpp	2007-11-17 19:48:49 UTC (rev 1274)
@@ -1402,6 +1402,7 @@
 
         // Draw range for selected_module_type
         int range = 0;
+        int reduceNW = 0; // substation and market reduce the range to nort west by one. 
         switch ( selected_module_type ){
             //case CST_RESIDENCE_LL: break; 
             //case CST_RESIDENCE_ML: break;
@@ -1412,8 +1413,8 @@
             //case CST_FARM_O0: break;
             //case CST_MILL_0: break;
             case CST_HEALTH:        range = HEALTH_CENTRE_RANGE; break;
-            case CST_CRICKET_1:     range = CRICKET_RANGE + 1; break;
-            case CST_FIRESTATION_1: range = FIRESTATION_RANGE + 1; break;
+            case CST_CRICKET_1:     range = CRICKET_RANGE; break;
+            case CST_FIRESTATION_1: range = FIRESTATION_RANGE; break;
             //case CST_SCHOOL: break;
             //case CST_UNIVERSITY: break;
             //case CST_TRACK_LR: break;
@@ -1424,16 +1425,16 @@
             //case CST_POWERL_H_L: break;
             //case CST_POWERS_COAL_EMPTY: break;
             //case CST_POWERS_SOLAR: break;
-            case CST_SUBSTATION_R:   range = SUBSTATION_RANGE; break;
-            //case CST_WINDMILL_1_R: break;
+            case CST_SUBSTATION_R:   range = SUBSTATION_RANGE; reduceNW = 1; break;
+            case CST_WINDMILL_1_R:   range = SUBSTATION_RANGE; reduceNW = 1; break; //Windmills are handled like substations
             //case CST_COMMUNE_1: break;
-            //case CST_COALMINE_EMPTY: break;
+            case CST_COALMINE_EMPTY: range = COAL_RESERVE_SEARCH_LEN; break;
             //case CST_OREMINE_1: break;
             //case CST_TIP_0: break;
             //case CST_RECYCLE: break;
             //case CST_INDUSTRY_L_C: break;
             //case CST_INDUSTRY_H_C: break;
-            case CST_MARKET_EMPTY:  range = MARKET_RANGE; break;
+            case CST_MARKET_EMPTY:  range = MARKET_RANGE; reduceNW = 1; break;
             //case CST_POTTERY_0: break;
             //case CST_BLACKSMITH_0: break;
             //case CST_MONUMENT_0: break;
@@ -1443,14 +1444,14 @@
         }
        	
         if (range > 0 )
-        {        	
+        {
         	painter.setFillColor( Color( 0, 0, 128, 64 ) );
-        	Rect2D rangerect( 0, 0,
-        	                  tileWidth  * (2 * range - cursorSize) ,
-        	                  tileHeight * (2 * range - cursorSize) );
+        	Rect2D rangerect( 0,0,
+        	                  tileWidth  * ( 2 * range - reduceNW ) ,
+        	                  tileHeight * ( 2 * range - reduceNW ) );
         	Vector2 screenPoint = getScreenPoint(tile);
-        	screenPoint.x -= tileWidth  * (2 * range - cursorSize) / 2;
-        	screenPoint.y -= tileHeight * range;
+        	screenPoint.x -= tileWidth  * ( range - 0.5 * reduceNW );
+        	screenPoint.y -= tileHeight * ( range + 1 - reduceNW );
         	rangerect.move( screenPoint );
         	fillDiamond( painter, rangerect );         	
         }           
@@ -1489,7 +1490,7 @@
     //The Corners of The Screen
     //TODO: change here to only draw dirtyRect
     //      dirtyRectangle is the current Clippingarea (if set)
-    //      so we shold get clippingArea (as sonn this is implemented) 
+    //      so we shold get clippingArea (as soon this is implemented) 
     //      and adjust these Vectors:
     Vector2 upperLeft( 0, 0);
     Vector2 upperRight( getWidth(), 0 );

Modified: branches/waterwell/src/lincity-ng/MainMenu.cpp
===================================================================
--- branches/waterwell/src/lincity-ng/MainMenu.cpp	2007-11-17 19:44:41 UTC (rev 1273)
+++ branches/waterwell/src/lincity-ng/MainMenu.cpp	2007-11-17 19:48:49 UTC (rev 1274)
@@ -170,6 +170,10 @@
 	        if (t == 0) {
                     recentfile = curfile;
                     t = PHYSFS_getLastModTime(recentfile->d_name);
+#ifdef WIN32
+		    //something is broken in Windows
+		    break;
+#endif		    
                 } else {
                     if (PHYSFS_getLastModTime(curfile->d_name) > t) {
 #ifdef DEBUG



From wolfgangb at mail.berlios.de  Sun Nov 18 13:20:21 2007
From: wolfgangb at mail.berlios.de (wolfgangb at BerliOS)
Date: Sun, 18 Nov 2007 13:20:21 +0100
Subject: [Lincity-ng-commit] r1275 - in trunk: . data/help/en src/lincity-ng
Message-ID: <200711181220.lAICKLIs019409@sheep.berlios.de>

Author: wolfgangb
Date: 2007-11-18 13:20:08 +0100 (Sun, 18 Nov 2007)
New Revision: 1275

Modified:
   trunk/TODO
   trunk/data/help/en/industryl.xml
   trunk/src/lincity-ng/MiniMap.cpp
Log:
Request no power for minimap. Still not perfect, green just means "connected
to power", no way to tell from minimap if building gets enough power.


Modified: trunk/TODO
===================================================================
--- trunk/TODO	2007-11-17 19:48:49 UTC (rev 1274)
+++ trunk/TODO	2007-11-18 12:20:08 UTC (rev 1275)
@@ -58,9 +58,10 @@
  [M] Print out more debug infos that user can send in with debug reports:
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
- [?] Looks like watching electricity minimap uses power. Seems to be this way
-     in classic already. Do we want to change that?
- [M] "Dungeon Keeper"-like message queue
+ [H] Looks like watching electricity minimap uses power. Seems to be this way
+     in classic already. Minmap only shows if there is power in the area, not 
+     if there is enough of it.
+ [L] "Dungeon Keeper"-like message queue
  [M] Integrate waterwell branch in main. Maybe as option so we get playtesters?
 
 -- Infrastructure/Deployment --

Modified: trunk/data/help/en/industryl.xml
===================================================================
--- trunk/data/help/en/industryl.xml	2007-11-17 19:48:49 UTC (rev 1274)
+++ trunk/data/help/en/industryl.xml	2007-11-18 12:20:08 UTC (rev 1275)
@@ -15,6 +15,6 @@
 	<li><a href="transport">Transport</a></li>
 	<li><a href="road">Roads</a></li>
 	<li><a href="rail">Railways</a></li>
-	<li><a href="market">StMarkets</a></li>
+	<li><a href="market">Markets</a></li>
 	<li><a href="jobs">Jobs</a></li>
 </Document>

Modified: trunk/src/lincity-ng/MiniMap.cpp
===================================================================
--- trunk/src/lincity-ng/MiniMap.cpp	2007-11-17 19:48:49 UTC (rev 1274)
+++ trunk/src/lincity-ng/MiniMap.cpp	2007-11-18 12:20:08 UTC (rev 1275)
@@ -714,9 +714,9 @@
         }
         case POWER: {
             Color mc;
-            if (get_power (xx, yy, 1, 1) != 0) {
+            if (get_power (xx, yy, 0, 1) != 0) {
                 mc=Color(0,0xFF,0);
-            } else if (get_power (xx, yy, 1, 0) != 0) {
+            } else if (get_power (xx, yy, 0, 0) != 0) {
                 mc=Color(0,0x7F,0);
             } else {
                 mc=Color(0xFF,0xFF,0xFF);



From alainb at mail.berlios.de  Sun Nov 18 20:47:54 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sun, 18 Nov 2007 20:47:54 +0100
Subject: [Lincity-ng-commit] r1276 - in trunk: . data/gui data/help/en
	data/images/gui/buttonpanel data/images/tiles data/opening
	doc src/lincity src/lincity/modules src/lincity-ng
Message-ID: <200711181947.lAIJls26013024@sheep.berlios.de>

Author: alainb
Date: 2007-11-18 20:47:52 +0100 (Sun, 18 Nov 2007)
New Revision: 1276

Added:
   trunk/README-TODO-WaterWell
   trunk/data/help/en/waterwell.xml
   trunk/data/images/gui/buttonpanel/waterwell.png
   trunk/data/images/tiles/desert.png
   trunk/data/images/tiles/tree.png
   trunk/data/images/tiles/tree2.png
   trunk/data/images/tiles/tree3.png
   trunk/data/images/tiles/waterwell.png
   trunk/data/opening/extreme_arid.scn
   trunk/data/opening/extreme_wetland.scn
   trunk/doc/units
   trunk/src/lincity/modules/waterwell.cpp
   trunk/src/lincity/modules/waterwell.h
Modified:
   trunk/data/gui/buttonpanel.xml
   trunk/data/gui/newgame.xml
   trunk/data/help/en/button-index.xml
   trunk/data/help/en/commune.xml
   trunk/data/help/en/farm.xml
   trunk/data/help/en/index.xml
   trunk/data/help/en/park.xml
   trunk/data/help/en/residential.xml
   trunk/data/help/en/tutorial-basics.xml
   trunk/src/lincity-ng/ButtonPanel.cpp
   trunk/src/lincity-ng/GameView.cpp
   trunk/src/lincity-ng/MapEdit.cpp
   trunk/src/lincity-ng/MiniMap.cpp
   trunk/src/lincity-ng/Mps.cpp
   trunk/src/lincity-ng/MpsInterface.cpp
   trunk/src/lincity-ng/ReadPngInterface.cpp
   trunk/src/lincity/engglobs.h
   trunk/src/lincity/engine.cpp
   trunk/src/lincity/engine.h
   trunk/src/lincity/lctypes.h
   trunk/src/lincity/ldsvguts.cpp
   trunk/src/lincity/lin-city.h
   trunk/src/lincity/lintypes.cpp
   trunk/src/lincity/lintypes.h
   trunk/src/lincity/modules/all_modules.h
   trunk/src/lincity/modules/commune.cpp
   trunk/src/lincity/modules/fire.cpp
   trunk/src/lincity/modules/organic_farm.cpp
   trunk/src/lincity/modules/residence.cpp
   trunk/src/lincity/modules/tip.cpp
   trunk/src/lincity/shrglobs.cpp
   trunk/src/lincity/shrtypes.cpp
   trunk/src/lincity/simulate.cpp
Log:
Merged branch waterwell up to 1274

Copied: trunk/README-TODO-WaterWell (from rev 1274, branches/waterwell/README-TODO-WaterWell)

Modified: trunk/data/gui/buttonpanel.xml
===================================================================
--- trunk/data/gui/buttonpanel.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/gui/buttonpanel.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -60,6 +60,7 @@
 	<button name="BPMMonumentButton"/>
 	<button name="BPMParkButton"/>
 	<button name="BPMWaterButton"/>
+	<button name="BPMWaterwellButton"/>
 	<button name="BPMFarmButton"/>
 	<button name="BPMMillButton"/>
 	
@@ -536,7 +537,7 @@
 			</cell>
 			<cell row="8" col="2" halign="left">
 				<Panel name="BPParkMenu"  width="244" height="50" background="images/gui/buttons/button-border-5.png">
-					<TableLayout rows="1" cols="5">
+					<TableLayout rows="1" cols="6">
 					<cell row="1" col="1">
 						<CheckButton name="BPMMonumentButton" main="BPParkButton">
 						<image src="images/gui/buttons/button.png"/>
@@ -568,6 +569,17 @@
 						</CheckButton>
 					</cell>
 					<cell row="1" col="4">
+						<CheckButton name="BPMWaterwellButton" main="BPParkButton">
+						<image src="images/gui/buttons/button.png"/>
+						<image-hover src="images/gui/buttons/button-hover.png"/>
+						<image-clicked src="images/gui/buttons/button-clicked.png"/>
+						<image-checked src="images/gui/buttons/button-checked.png"/>
+						<image-disabled src="images/gui/buttonpanel/waterwell.png" filter="grey"/>
+						<image-caption src="images/gui/buttonpanel/waterwell.png"/>
+						</CheckButton>
+					</cell>
+
+					<cell row="1" col="5">
 						<CheckButton name="BPMFarmButton" main="BPParkButton">
 						<image src="images/gui/buttons/button.png"/>
 						<image-hover src="images/gui/buttons/button-hover.png"/>
@@ -577,7 +589,7 @@
 						<image-caption src="images/gui/buttonpanel/parks/farm.png"/>
 						</CheckButton>
 					</cell>
-					<cell row="1" col="5">
+					<cell row="1" col="6">
 						<CheckButton name="BPMMillButton" main="BPParkButton">
 						<image src="images/gui/buttons/button.png"/>
 						<image-hover src="images/gui/buttons/button-hover.png"/>

Modified: trunk/data/gui/newgame.xml
===================================================================
--- trunk/data/gui/newgame.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/gui/newgame.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -37,7 +37,7 @@
 			-->
 			<cell row="2" col="2">
 			<CheckButton name="File0">
-			<text-caption style="button">Savegame 1</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>
@@ -46,7 +46,7 @@
 			</cell>
 			<cell row="3" col="2">
 			<CheckButton name="File1">
-			<text-caption style="button">Savegame 2</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>
@@ -55,7 +55,7 @@
 			</cell>
 			<cell row="4" col="2">
 			<CheckButton name="File2">
-			<text-caption style="button">Savegame 3</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>
@@ -64,7 +64,7 @@
 			</cell>
 			<cell row="5" col="2">
 			<CheckButton name="File3">
-			<text-caption style="button">Savegame 4</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>
@@ -73,7 +73,7 @@
 			</cell>
 			<cell row="6" col="2">
 			<CheckButton name="File4">
-			<text-caption style="button">Savegame 5</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>
@@ -82,7 +82,7 @@
 			</cell>
 			<cell row="7" col="2">
 			<CheckButton name="File5">
-			<text-caption style="button">Savegame 6</text-caption>
+			<text-caption style="button">Savegame 1234567890</text-caption>
 			<image src="images/gui/buttons/savebutton.png"/>
 			<image-hover src="images/gui/buttons/savebutton-hover.png"/>
 			<image-clicked src="images/gui/buttons/savebutton-clicked.png"/>

Modified: trunk/data/help/en/button-index.xml
===================================================================
--- trunk/data/help/en/button-index.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/button-index.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -14,6 +14,10 @@
 	<img src="images/gui/buttonpanel/residence/residence.png"/>
 	<p><a href="residential">Residential area</a></p>
 
+	<!--<p style="subtitle">Water well</p>-->
+	<img src="images/gui/buttonpanel/waterwell.png"/>
+	<p><a href="waterwell">Water well</a></p>
+
 	<!--<p style="subtitle">Parks</p>-->
 	<img src="images/gui/buttonpanel/parks/farm.png"/>
 	<p><a href="farm">Farm</a></p>

Modified: trunk/data/help/en/commune.xml
===================================================================
--- trunk/data/help/en/commune.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/commune.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -5,6 +5,7 @@
 	<p style="hp">You will probably need a 'few' communes to provide enough coal and steel for areas such as potteries, blacksmiths and mills.</p>
 	<p style="hp">If a commune is not producing anything for 10 years it is closed and the area turns in parks.</p>
 	<p style="hp">Communes can connect to transport at any point around it, not only to the gate.</p>
+	<p style="hp">Communes'production depends on underground water. (tiles with water are green, others are yellow-brown like desert)</p>
 	
 	<p style="hp">This is a commune</p>
 	<img src="images/tiles/commune1.png" halign="center"/>

Modified: trunk/data/help/en/farm.xml
===================================================================
--- trunk/data/help/en/farm.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/farm.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -1,7 +1,8 @@
 <?xml version="1.0"?>
 <Document style="helpdocument">
 	<p style="htitle">Farms</p>
-	<p style="hp">Farms grow food for people to eat, and to supply the raw materials for mills. Farmers can sell food to markets. They deliver it by tractor so they do not need transport. However they can sell to transport if you wish. Of course you need to ensure that the market is in range of the farm.</p>
+        <p style="hp">Farms grow food for people to eat, and to supply the raw materials for mills. Farmers can sell food to markets. They deliver it by tractor so they do not need transport. However they can sell to transport if you wish. Of course you need to ensure that the market is in range of the farm.</p>
+        <p style="hp">Production of farm depends on underground water. Tiles with water are green, others are yellow-brown (like desert or bare ground).</p>
 	
 	<p style="hp">This is a farm</p>
 	<img src="images/tiles/farm0.png" halign="center"/>

Modified: trunk/data/help/en/index.xml
===================================================================
--- trunk/data/help/en/index.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/index.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -75,5 +75,6 @@
 <li><a href="tutorial-advanced">Advanced</a></li>
 <li><a href="tutorial-scenario">Scenario</a></li>
 <li><a href="university">University</a></li>
+<li><a href="waterwell">Water well</a></li>
 <li><a href="windmill">Windmills</a></li>
 </Document>

Modified: trunk/data/help/en/park.xml
===================================================================
--- trunk/data/help/en/park.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/park.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -5,6 +5,7 @@
 	<p style="hp">A number of areas produce pollution. These are roads, railways, coal mines and light and heavy industry. Some produce more than others.</p>
 	<p style="hp">You can use parks to shield residential areas or to stop pollution escaping from the local area of the source.</p>
 	<p style="hp">The wind comes <b>from</b> the south west, so build your parks accordingly.</p>
+        <p style="hp">Parks need underground water, so they can only be built on "green" tiles.</p>
 	
 	<p style="hp">This is a park</p>
 	<img src="images/tiles/parkland-plane.png" halign="center"/>

Modified: trunk/data/help/en/residential.xml
===================================================================
--- trunk/data/help/en/residential.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/residential.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -19,5 +19,6 @@
 
 	<p style="hsubtitle">See also:</p>
 	<li><a href="market">Market</a></li>
+        <li><a href="waterwell">Water well</a></li>
 </Document>
 

Modified: trunk/data/help/en/tutorial-basics.xml
===================================================================
--- trunk/data/help/en/tutorial-basics.xml	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/data/help/en/tutorial-basics.xml	2007-11-18 19:47:52 UTC (rev 1276)
@@ -4,6 +4,7 @@
 <p style="hp">Choose "new game " &gt; "random village". Other scenarii are for more or less experienced players. </p>
 <p style="hp">Notice that the random village contains basic resources: </p>
 <li>Farms for feeding markets with foods </li>
+<li>A Water well for people
 <li>Communes which produces charcoal and small amount of ore and steel </li>
 <li>Residential areas</li>
 <li>Pottery</li>
@@ -19,13 +20,13 @@
 
 <p style="hp">If a 'normal' building is not in the range of a market, then it must be connected to transport. But remember that roads and rails have a yearly cost, so unless you really want to isolate one building (e.g. a monument) it is generally better (and cheaper) to use markets when needed. </p>
 
-<p style="hp">In the initial village tracks are needed only for the communes production. Other activities need only market. </p>
+<p style="hp">In the initial village tracks are not needed. But they will be useful when the village develops.</p>
 
 <p style="hsubtitle">Money </p>
 <p style="hp">Productions are taxed and thus earn you money. In the miniwindow, the third tab is <a href="finance"> Finance window </a>.  Take care of not investing too much too quickly: when your money is negative, you cannot build some things, and you have per year cost due to the debt. This can lead to bankruptcy (see <a href="tutorial-scenario"> Hard-time scenario </a>. </p>
 
 <p style="hsubtitle">Developing the city </p>
-<p style="hp">Remember people eat food or die. To control population growth, you have to find a balance in the kind of <a href="residential"> Residential area </a> you build (they have different rate of birth/death). The new population will allow more jobs, but also need more food, goods, jobs ... </p>
+<p style="hp">Remember people eat food and drink water, or die. To control population growth, you have to find a balance in the kind of <a href="residential"> Residential area </a> you build (they have different rate of birth/death). The new population will allow more jobs, but also need more food, goods, jobs ... </p>
 <p style="hp">You will have to augment your production (add potteries, blacksmith) and at the same time take care that they are supplied. So it will also need to add communes accordingly. </p>
 <p style="hp">To get new buildings you must raise your <a href="tech-level"> Tech Level </a>.</p>
 <p style="hp"> At some point you will have to choose your aim: either <a href="sustain"> Sustainable economy </a> or evacuation with <a href="rocket"> spaceships </a>.</p>

Copied: trunk/data/help/en/waterwell.xml (from rev 1274, branches/waterwell/data/help/en/waterwell.xml)

Copied: trunk/data/images/gui/buttonpanel/waterwell.png (from rev 1274, branches/waterwell/data/images/gui/buttonpanel/waterwell.png)

Copied: trunk/data/images/tiles/desert.png (from rev 1274, branches/waterwell/data/images/tiles/desert.png)

Copied: trunk/data/images/tiles/tree.png (from rev 1274, branches/waterwell/data/images/tiles/tree.png)

Copied: trunk/data/images/tiles/tree2.png (from rev 1274, branches/waterwell/data/images/tiles/tree2.png)

Copied: trunk/data/images/tiles/tree3.png (from rev 1274, branches/waterwell/data/images/tiles/tree3.png)

Copied: trunk/data/images/tiles/waterwell.png (from rev 1274, branches/waterwell/data/images/tiles/waterwell.png)

Copied: trunk/data/opening/extreme_arid.scn (from rev 1274, branches/waterwell/data/opening/extreme_arid.scn)

Copied: trunk/data/opening/extreme_wetland.scn (from rev 1274, branches/waterwell/data/opening/extreme_wetland.scn)

Copied: trunk/doc/units (from rev 1274, branches/waterwell/doc/units)

Modified: trunk/src/lincity/engglobs.h
===================================================================
--- trunk/src/lincity/engglobs.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/engglobs.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -10,6 +10,7 @@
 //#include "common.h"
 //#include "geometry.h"
 
+extern int use_waterwell, ldsv_version;
 
 /* GCS -- One of these days I will get this right. */
 struct map_struct
@@ -31,9 +32,8 @@
 #define MP_SIZE(x,y)   main_groups[MP_GROUP(x,y)].size
 #define MP_COLOR(x,y)  main_groups[MP_GROUP(x,y)].colour
 #define MP_GROUP_IS_RESIDENCE(x,y)  (GROUP_IS_RESIDENCE(MP_GROUP(x,y)))
+#define HAS_UGWATER(x,y) (MP_INFO(x,y).flags & FLAG_HAS_UNDERGROUND_WATER) 
 
-
-
 extern int mappoint_array_x[WORLD_SIDE_LEN], mappoint_array_y[WORLD_SIDE_LEN];
 extern int numof_shanties, numof_communes;
 extern int last_built_x, last_built_y;
@@ -52,6 +52,7 @@
 extern int numof_substations;
 extern int marketx[MAX_NUMOF_MARKETS], markety[MAX_NUMOF_MARKETS], numof_markets;
 extern int numof_health_centres, max_pop_ever, total_evacuated, total_births;
+extern int numof_waterwell;
 
 extern int total_money, income_tax_rate, coal_tax_rate;
 extern int dole_rate, transport_cost_rate;

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/engine.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -311,6 +311,7 @@
 	}
         break;
     case GROUP_OREMINE:
+    {
 	/* Don't allow new mines on old mines or old tips */
 	/* GCS: mines over old mines is OK if there is enough remaining 
 	        ore, as is the case when there is partial overlap. */
@@ -335,6 +336,19 @@
                     _("You can't build a mine here: there is no ore left at this site"));
 	    return -7;
 	}
+        break;
+    } 
+    case GROUP_WATERWELL:
+	numof_waterwell++;
+        break;
+    case GROUP_PARKLAND:
+        if (use_waterwell)
+            if (!HAS_UGWATER(x,y)) {
+                ok_dial_box("warning.mes", BAD,
+                        _("You can't build a park here: it is a desert, parks need water"));
+                return -8;
+            }
+
     } /* end case */
     last_warning_message_group = 0;
 
@@ -371,13 +385,14 @@
     g = MP_GROUP(x,y);
     people_pool += MP_INFO(x,y).population;
 
-    if (g == GROUP_BARE) {
+    if (g == GROUP_DESERT) {
 	/* Nothing to do. */
 	return -1;
     }
     else if (g == GROUP_SHANTY) {
 	remove_a_shanty(x, y);
 	adjust_money(-GROUP_SHANTY_BUL_COST);
+        numof_shanties--;
     }
     else if (g == GROUP_FIRE) {
 	if (MP_INFO(x,y).int_2 >= FIRE_LENGTH)
@@ -406,7 +421,11 @@
 		    if (MP_INFO(x + i,y + j).ore_reserve < ORE_RESERVE / 2)
 			do_bulldoze_area (CST_WATER, x + i, y + j);
 	} else {
-            do_bulldoze_area (CST_GREEN, x, y);
+            /* keep compatibility for saving pre_waterwell loaded game */
+            if (use_waterwell)
+                do_bulldoze_area (CST_DESERT, x, y);
+            else
+                do_bulldoze_area (CST_GREEN, x, y);
         }
     }
 
@@ -444,7 +463,7 @@
     if (MP_GROUP(x,y) < 0)
         MP_GROUP(x,y) = GROUP_BARE;
     MP_INFO(x,y).population = 0;
-    MP_INFO(x,y).flags = 0;
+    MP_INFO(x,y).flags &= FLAG_HAS_UNDERGROUND_WATER;
     MP_INFO(x,y).int_1 = 0;
     MP_INFO(x,y).int_2 = 0;
     MP_INFO(x,y).int_3 = 0;
@@ -507,7 +526,7 @@
 	  p = *pol / 16;
 	  *pol -= p;
 	  switch ( rand() % 11)
-	    {         /* prevailing wind is *from* SW ie right down */
+	    {         /* prevailing wind is *from* SW */
 	    case 0:
 	    case 1: /* up */
 	    case 2:
@@ -551,7 +570,7 @@
 {
   int x, y, m;
   m = 0xffffffff - (FLAG_FIRE_COVER | FLAG_HEALTH_COVER
-		    | FLAG_CRICKET_COVER);
+		    | FLAG_CRICKET_COVER| FLAG_WATERWELL_COVER);
   for (y = 0; y < WORLD_SIDE_LEN; y++)
     for (x = 0; x < WORLD_SIDE_LEN; x++)
       MP_INFO(x,y).flags &= m;
@@ -574,6 +593,8 @@
 	  do_health_cover (x, y);
 	else if (MP_GROUP(x,y) == GROUP_CRICKET)
 	  do_cricket_cover (x, y);
+	else if (MP_GROUP(x,y) == GROUP_WATERWELL)
+	  do_waterwell_cover (x, y);
       }
 }
 
@@ -667,6 +688,17 @@
   fire_area (x, y);
 }
 
+void do_daily_ecology ()
+{
+    for (int x = 0; x < WORLD_SIDE_LEN; x++)
+        for (int y = 0; y < WORLD_SIDE_LEN; y++) {
+            /* approximately 3 monthes needed to turn bulldoze area into green */
+            if (MP_GROUP(x,y) == GROUP_DESERT && HAS_UGWATER(x,y) 
+                    && rand() %300 == 1)
+                do_bulldoze_area(CST_GREEN, x, y);
+        }
+}
+
 /*
    // spiral round from startx,starty until we hit something of group group.
    // return the x y coords encoded as x+y*WORLD_SIDE_LEN
@@ -733,10 +765,10 @@
 	  x--;
 	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
 	      && y < WORLD_SIDE_LEN - 2)
-	    if (MP_TYPE(x,y) == CST_GREEN
-		&& MP_TYPE(x + 1,y) == CST_GREEN
-		&& MP_TYPE(x,y + 1) == CST_GREEN
-		&& MP_TYPE(x + 1,y + 1) == CST_GREEN)
+	    if (GROUP_IS_BARE(MP_GROUP(x,y))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
+		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)) )
 	      return (x + y * WORLD_SIDE_LEN);
 	}
       for (j = 0; j < i; j++)
@@ -744,10 +776,10 @@
 	  y--;
 	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
 	      && y < WORLD_SIDE_LEN - 2)
-	    if (MP_TYPE(x,y) == CST_GREEN
-		&& MP_TYPE(x + 1,y) == CST_GREEN
-		&& MP_TYPE(x,y + 1) == CST_GREEN
-		&& MP_TYPE(x + 1,y + 1) == CST_GREEN)
+	    if (GROUP_IS_BARE(MP_GROUP(x,y))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
+		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
 	      return (x + y * WORLD_SIDE_LEN);
 	}
       i++;
@@ -756,10 +788,10 @@
 	  x++;
 	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
 	      && y < WORLD_SIDE_LEN - 2)
-	    if (MP_TYPE(x,y) == CST_GREEN
-		&& MP_TYPE(x + 1,y) == CST_GREEN
-		&& MP_TYPE(x,y + 1) == CST_GREEN
-		&& MP_TYPE(x + 1,y + 1) == CST_GREEN)
+	    if (GROUP_IS_BARE(MP_GROUP(x,y))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
+		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
 	      return (x + y * WORLD_SIDE_LEN);
 	}
       for (j = 0; j < i; j++)
@@ -767,10 +799,10 @@
 	  y++;
 	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
 	      && y < WORLD_SIDE_LEN - 2)
-	    if (MP_TYPE(x,y) == CST_GREEN
-		&& MP_TYPE(x + 1,y) == CST_GREEN
-		&& MP_TYPE(x,y + 1) == CST_GREEN
-		&& MP_TYPE(x + 1,y + 1) == CST_GREEN)
+	    if (GROUP_IS_BARE(MP_GROUP(x,y))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
+		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
+		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
 	      return (x + y * WORLD_SIDE_LEN);
 	}
     }

Modified: trunk/src/lincity/engine.h
===================================================================
--- trunk/src/lincity/engine.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/engine.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -14,6 +14,7 @@
 void connect_rivers (void);
 int adjust_money(int value);
 void fire_area (int x, int y);
+void do_daily_ecology (void);
 
 extern long real_time;
 

Modified: trunk/src/lincity/lctypes.h
===================================================================
--- trunk/src/lincity/lctypes.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/lctypes.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -565,6 +565,10 @@
 #define CST_WATER_LURD_G        "waterlurd.csi"
 #define LCT_WATER_LURD_G        "waterlurd"
 
+#define CST_WATERWELL           238
+#define CST_WATERWELL_G         "waterwell.csi"
+#define LCT_WATERWELL_G         "waterwell"
+
 #define CST_CRICKET_1           240
 #define CST_CRICKET_1_G         "cricket1.csi"
 #define LCT_CRICKET_1_G         "cricket1"
@@ -878,6 +882,15 @@
 #define CST_FARM_O16_G           "farm16.csi"
 #define LCT_FARM_O16_G           "farm16"
 
+#define CST_DESERT		350
+#define LCT_DESERT_G		"desert"
+#define CST_TREE		351
+#define LCT_TREE_G		"tree"
+#define CST_TREE2		352
+#define LCT_TREE2_G		"tree2"
+#define CST_TREE3		353
+#define LCT_TREE3_G		"tree3"
+
 #define CST_NONE 1000
 
 /*

Modified: trunk/src/lincity/ldsvguts.cpp
===================================================================
--- trunk/src/lincity/ldsvguts.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/ldsvguts.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -131,8 +131,11 @@
 	printf (_("Save file <%s> - "), cname);
 	do_error (_("Can't open save file!"));
     }
+    /* save without waterwell are in NG 1.1 format, eg scenario good_time is ver 98 when loaded */
+    if (ldsv_version < VERSION_INT)
+    	ldsv_version = VERSION_INT;
 
-    gzprintf (ofile, "%d\n", (int) VERSION_INT);
+    gzprintf (ofile, "%d\n", ldsv_version);
     q = sizeof (Map_Point_Info);
     prog_box (_("Saving scene"), 0);
     check_endian ();
@@ -286,8 +289,10 @@
 	     ,sust_old_money, sust_old_population, sust_old_tech
 	     ,sustain_flag);	/* 3 */
 
-    gzprintf (ofile, "dummy\n");	/* 4 */
-
+    if (use_waterwell == true) {
+    } else {
+	    gzprintf (ofile, "dummy\n");	/* 4 */
+    }
     gzprintf (ofile, "dummy\n");	/* 5 */
 
     gzprintf (ofile, "dummy\n");	/* 6 */
@@ -326,7 +331,7 @@
 load_city (char *cname)
 {
     unsigned long q;
-    int i, x, y, z, n, p, ver;
+    int i, x, y, z, n, p;
     int num_pbars, pbar_data_size;
     int pbar_tmp;
     int dummy;
@@ -337,13 +342,25 @@
 	    printf (_("Can't open <%s> (gzipped)"), cname);
 	    do_error ("Can't open it!");
     }
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &ver);
-    if (ver < MIN_LOAD_VERSION) {
+    /* Add version to shared global variables for playing/saving games without waterwell */
+    sscanf( gzgets( gzfile, s, 256 ), "%d", &ldsv_version);
+    if (ldsv_version < MIN_LOAD_VERSION) {
 	    ok_dial_box ("too-old.mes", BAD, 0L);
 	    gzclose( gzfile );
 	return;
     }
 
+    fprintf(stderr," ldsv_version = %i \n", ldsv_version);
+    if (ldsv_version < MIN_WATERWELL_VERSION) {
+	/* ok_dial_box ("no-waterwell.mes", GOOD, 0L);*/
+	use_waterwell=false;
+    } else {
+    	use_waterwell=true; 
+	/* needed until it is written in the saved file
+	 * in case of load after having played an old game
+	 */
+    }
+
     init_pbars();
     num_pbars = NUM_PBARS;
     pbar_data_size = PBAR_DATA_SIZE;
@@ -423,7 +440,7 @@
 	main_screen_originy = WORLD_SIDE_LEN - getMainWindowHeight() / 16 - 1;
 
     sscanf( gzgets( gzfile, s, 256 ), "%d", &total_time);
-    if (ver <= MM_MS_C_VER)
+    if (ldsv_version <= MM_MS_C_VER)
 	i = OLD_MAX_NUMOF_SUBSTATIONS;
     else
 	i = MAX_NUMOF_SUBSTATIONS;
@@ -434,7 +451,7 @@
     }
     prog_box ("", 92);
     sscanf( gzgets( gzfile, s, 256 ), "%d", &numof_substations);
-    if (ver <= MM_MS_C_VER)
+    if (ldsv_version <= MM_MS_C_VER)
 	i = OLD_MAX_NUMOF_MARKETS;
     else
 	i = MAX_NUMOF_MARKETS;
@@ -478,7 +495,7 @@
 
     prog_box ("", 96);
     /* Get size of monthgraph array */
-    if (ver <= MG_C_VER) {
+    if (ldsv_version <= MG_C_VER) {
 	i = 120;
     } else {
 	sscanf( gzgets( gzfile, s, 256 ), "%d", &i);
@@ -498,7 +515,7 @@
 	    sscanf( gzgets( gzfile, s, 256 ), "%d", &monthgraph_ppool[x]);
 	}
 	/* If our save file is old, skip past obsolete diffgraph entries */
-	if (ver <= MG_C_VER) {
+	if (ldsv_version <= MG_C_VER) {
 	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_power[x] */
 	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_coal[x] */
 	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_goods[x] */
@@ -583,6 +600,8 @@
 		= sust_old_money_count = sust_old_population_count
 		= sust_old_tech_count = sust_fire_count
 		= sust_old_money = sust_old_population = sust_old_tech = 0;
+    if (use_waterwell == true) {
+    }
     gzclose( gzfile );
 
     numof_shanties = count_groups (GROUP_SHANTY);
@@ -691,7 +710,7 @@
 	}
 }
 
-/* Returns 1 if the city is proper version */
+/* Returns 1 if the city is proper version */ /* AL1 unused in NG 1.1 */
 int 
 verify_city (char *cname)
 {

Modified: trunk/src/lincity/lin-city.h
===================================================================
--- trunk/src/lincity/lin-city.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/lin-city.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -52,6 +52,9 @@
    the symbol VERSION in config.h */
 #define VERSION_INT 113
 
+/* Disable waterwell if version < MIN_WATERWELL_VERSION */
+#define MIN_WATERWELL_VERSION 1180
+
 /* Don't load if < MIN_LOAD_VERSION */
 #define MIN_LOAD_VERSION 97
 
@@ -165,9 +168,11 @@
 #define FLAG_CRICKET_COVER      (0x400000)
 #define FLAG_IS_RIVER           (0x800000)
 #define FLAG_HAD_POWER          (0x1000000)
-#define FLAG_MULTI_TRANSPORT    (0x2000000)   /* Is it a multitransport? */
-#define FLAG_MULTI_TRANS_PREV   (0x4000000)
+#define FLAG_MULTI_TRANSPORT    (0x2000000)   /* Is it a multitransport? */ /* AL1: unused in NG 1.1 */
+#define FLAG_MULTI_TRANS_PREV   (0x4000000)	  /* AL1: unused in NG 1.1 */
 #define FLAG_POWER_LINE         (0x8000000)
+#define FLAG_WATERWELL_COVER    (0x10000000)
+#define FLAG_HAS_UNDERGROUND_WATER (0x20000000)
 
 /* XXX: It would appear that the following T_ are used exactly two times each,
    in market.c.  */
@@ -218,8 +223,8 @@
 #endif
 #define RESULTS_FILENAME "results"
 
-#define MAX_ICON_LEN 4096
-#define WORLD_SIDE_LEN 100
+#define MAX_ICON_LEN 4096	/* AL1 unused in NG */
+#define WORLD_SIDE_LEN 100	/* Minimap size is hardcoded 200 pixel => some job to do ...*/
 #define NUMOF_DAYS_IN_MONTH 100
 #define NUMOF_DAYS_IN_YEAR (NUMOF_DAYS_IN_MONTH*12)
 #define FAST_TIME_FOR_YEAR 1
@@ -549,13 +554,15 @@
 #define MAX_ORE_IN_MARKET (MAX_ORE_ON_RAIL*2)
 #define MARKET_ORE_SEARCH_TRIGGER (MAX_ORE_IN_MARKET/5)
 
-
 #define MAX_STEEL_ON_TRACK 128
 #define MAX_STEEL_ON_RIVER (MAX_STEEL_ON_TRACK*2)
 #define MAX_STEEL_ON_ROAD (MAX_STEEL_ON_TRACK*4)
 #define MAX_STEEL_ON_RAIL (MAX_STEEL_ON_ROAD*4)
 #define RAIL_STEEL_USED_MASK 0x7f
 #define MAX_STEEL_AT_INDUSTRY_H (MAX_STEEL_ON_RAIL*10)
+
+#define WATERWELL_RANGE 10
+
 /*
   JOBS_MAKE_STEEL is the steel made per job at the steel works
   what's it doing here?
@@ -1043,6 +1050,47 @@
 #define GROUP_RESIDENCE_HH_TECH 0
 #define GROUP_RESIDENCE_HH_FIREC 75
 
+#define GROUP_WATERWELL	   41
+#define GROUP_WATERWELL_COLOUR    (blue(31))
+#define GROUP_WATERWELL_COST      1
+#define GROUP_WATERWELL_COST_MUL 2
+#define GROUP_WATERWELL_BUL_COST      1
+#define GROUP_WATERWELL_TECH      0
+#define GROUP_WATERWELL_FIREC 0
+
+#define GROUP_DESERT 	  42 
+#define GROUP_DESERT_COLOUR  (yellow(18))
+#define GROUP_DESERT_COST    0
+#define GROUP_DESERT_COST_MUL 1
+#define GROUP_DESERT_BUL_COST 1
+#define GROUP_DESERT_TECH    0
+#define GROUP_DESERT_FIREC   0
+
+#define GROUP_TREE 	   43
+#define GROUP_TREE_COLOUR  (green(12))
+#define GROUP_TREE_COST    0
+#define GROUP_TREE_COST_MUL 1
+#define GROUP_TREE_BUL_COST 1
+#define GROUP_TREE_TECH    0
+#define GROUP_TREE_FIREC   0
+
+#define GROUP_TREE2 	   44
+#define GROUP_TREE2_COLOUR  (green(12))
+#define GROUP_TREE2_COST    0
+#define GROUP_TREE2_COST_MUL 1
+#define GROUP_TREE2_BUL_COST 1
+#define GROUP_TREE2_TECH    0
+#define GROUP_TREE2_FIREC   0
+
+#define GROUP_TREE3 	   45
+#define GROUP_TREE3_COLOUR  (green(12))
+#define GROUP_TREE3_COST    0
+#define GROUP_TREE3_COST_MUL 1
+#define GROUP_TREE3_BUL_COST 1
+#define GROUP_TREE3_TECH    0
+#define GROUP_TREE3_FIREC   0
+
+
 #define GROUP_IS_TRANSPORT(group) \
             ((group == GROUP_TRACK) || \
              (group == GROUP_ROAD) || \
@@ -1057,15 +1105,13 @@
              (group == GROUP_RESIDENCE_MH) || \
              (group == GROUP_RESIDENCE_HH))
 
-#define GROUP_RESIDENCE_LL 4
-#define GROUP_RESIDENCE_LL_COLOUR (cyan(24))
-#define GROUP_RESIDENCE_LL_COST 1000
-#define GROUP_RESIDENCE_LL_COST_MUL 25
-#define GROUP_RESIDENCE_LL_BUL_COST 1000
-#define GROUP_RESIDENCE_LL_TECH 0
-#define GROUP_RESIDENCE_LL_FIREC 75
+#define GROUP_IS_BARE(group) \
+	    ((group == GROUP_BARE) || \
+	     (group == GROUP_DESERT) || \
+	     (group == GROUP_TREE) || \
+	     (group == GROUP_TREE2) || \
+	     (group == GROUP_TREE3))
 
-
 #define MOUSE_TYPE_NORMAL 1
 #define MOUSE_TYPE_SQUARE 2
 #define MOUSE_BUTTON_REPEAT 4
@@ -1334,6 +1380,7 @@
 extern void do_shanty (int, int);
 extern void do_tip (int, int);
 extern void update_tech_dep (int, int);
+extern void do_waterwell_cover (int, int);
 /*
    transport functions
    *******************

Modified: trunk/src/lincity/lintypes.cpp
===================================================================
--- trunk/src/lincity/lintypes.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/lintypes.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -515,6 +515,70 @@
       GROUP_RESIDENCE_HH_TECH
     },
     /* 41 */
+        { N_("Water well"),
+      FALSE,                           /* need credit? */
+      GROUP_WATERWELL,
+      2,                               /* size */
+      GROUP_WATERWELL_COLOUR,
+      GROUP_WATERWELL_COST_MUL,
+      GROUP_WATERWELL_BUL_COST,
+      GROUP_WATERWELL_FIREC,
+      GROUP_WATERWELL_COST,
+      GROUP_WATERWELL_TECH
+    },
+
+    /* 42 */
+    { N_("Desert"),       	/* name */
+      FALSE,            	/* need credit? */
+      GROUP_DESERT,       	/* group number */
+      1,                	/* size */
+      GROUP_DESERT_COLOUR,      /* color */
+      GROUP_DESERT_COST_MUL,	/* cost multiplier */
+      GROUP_DESERT_BUL_COST,	/* bulldoze cost */
+      GROUP_DESERT_FIREC,	/* probability of fire */
+      GROUP_DESERT_COST,	/* cost */
+      GROUP_DESERT_TECH		/* tech */
+    },
+    /* 43 */
+    { N_("Tree"),       	/* name */
+      FALSE,            	/* need credit? */
+      GROUP_TREE,       	/* group number */
+      1,                	/* size */
+      GROUP_TREE_COLOUR,	/* color */
+      GROUP_TREE_COST_MUL,	/* cost multiplier */
+      GROUP_TREE_BUL_COST,	/* bulldoze cost */
+      GROUP_TREE_FIREC,		/* probability of fire */
+      GROUP_TREE_COST,		/* cost */
+      GROUP_TREE_TECH		/* tech */
+    },
+
+    /* 44 */
+    { N_("Trees"),       	/* name */
+      FALSE,            	/* need credit? */
+      GROUP_TREE2,       	/* group number */
+      1,                	/* size */
+      GROUP_TREE2_COLOUR,	/* color */
+      GROUP_TREE2_COST_MUL,	/* cost multiplier */
+      GROUP_TREE2_BUL_COST,	/* bulldoze cost */
+      GROUP_TREE2_FIREC,	/* probability of fire */
+      GROUP_TREE2_COST,		/* cost */
+      GROUP_TREE2_TECH		/* tech */
+    },
+
+    /* 45 */
+    { N_("Forest"),       	/* name */
+      FALSE,            	/* need credit? */
+      GROUP_TREE3,       	/* group number */
+      1,                	/* size */
+      GROUP_TREE3_COLOUR,	/* color */
+      GROUP_TREE3_COST_MUL,	/* cost multiplier */
+      GROUP_TREE3_BUL_COST,	/* bulldoze cost */
+      GROUP_TREE3_FIREC,	/* probability of fire */
+      GROUP_TREE3_COST,		/* cost */
+      GROUP_TREE3_TECH		/* tech */
+    },
+
+    /* 46 */
     /* End of Data */
     { "EOF",
       FALSE,                           /* need credit? */
@@ -1176,6 +1240,9 @@
     main_types[CST_WATER_LURD].group=GROUP_WATER;
     main_types[CST_WATER_LURD].graphic=load_graphic(CST_WATER_LURD_G);
 
+    main_types[CST_WATERWELL].group=GROUP_WATERWELL;
+    main_types[CST_WATERWELL].graphic=load_graphic(CST_WATERWELL_G);
+
     main_types[CST_HEALTH].group=GROUP_HEALTH;
     main_types[CST_HEALTH].graphic=load_graphic(CST_HEALTH_G);
 

Modified: trunk/src/lincity/lintypes.h
===================================================================
--- trunk/src/lincity/lintypes.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/lintypes.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -14,7 +14,7 @@
 #endif
 
 #define NUM_OF_TYPES    400
-#define NUM_OF_GROUPS    42
+#define NUM_OF_GROUPS    47
 #define GROUP_NAME_LEN   20
 
 struct GROUP

Modified: trunk/src/lincity/modules/all_modules.h
===================================================================
--- trunk/src/lincity/modules/all_modules.h	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/all_modules.h	2007-11-18 19:47:52 UTC (rev 1276)
@@ -36,5 +36,6 @@
 #include "water.h"
 #include "windmill.h"
 #include "market.h"
+#include "waterwell.h"
 
 #endif

Modified: trunk/src/lincity/modules/commune.cpp
===================================================================
--- trunk/src/lincity/modules/commune.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/commune.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -25,28 +25,42 @@
   /* GCS -- I folded the trackflag into int_2, changing the logic slightly.
      This change only affects the animation. */
   int trackflag = 0;
+  int coalprod = 2;
   /* stick coal and ore on tracks, in SMALL doses. */
-  if (put_coal (x, y, 2) != 0)
-    {
+  if (use_waterwell) {
+      int w = 0;
+      int n = 0;
+      /* Check underground water, and reduce production accordingly */
+      for (int i = 0; i < MP_SIZE(x,y); i++) {
+          for (int j = 0; j < MP_SIZE(x,y); j++) {
+              n++;
+              if (HAS_UGWATER(x+i,y+j))
+                  w++;
+          }
+      }
+      if (w < n / 3) 
+          coalprod = 0;
+      else if (w < (2 * n) / 3)
+          coalprod = 1;
+  }
+
+  if (put_coal (x, y, coalprod) != 0) {
       trackflag = 1;
       MP_INFO(x,y).int_3++;
       MP_INFO(x,y).int_6 |= 1;
-    }
-  if (put_ore (x, y, 6) != 0)
-    {
+  }
+  if (put_ore (x, y, 6) != 0) {
       trackflag = 1;
       MP_INFO(x,y).int_3++;
       MP_INFO(x,y).int_6 |= 2;
-    }
+  }
   /* recycle a bit of waste */
-  if (get_waste (x, y, 20) != 0)
-    {
+  if (get_waste (x, y, 20) != 0) {
       trackflag = 1;
       MP_INFO(x,y).int_3++;
       MP_INFO(x,y).int_6 |= 8;
-    }
-  if (total_time % 10 == 0)
-    {
+  }
+  if (total_time % 10 == 0) {
       MP_INFO(x,y).int_2 = 1;
       if (put_steel (x, y, 2) != 0) {
 	  MP_INFO(x,y).int_3++;
@@ -57,38 +71,50 @@
       if (trackflag) {
 	MP_INFO(x,y).int_2 = 0;
       }
-    }
+  }
 
-  if (total_time % 100 == 48){
+  /* each month. /AL1: is there a reason for day 48 ? */
+  if (total_time % 100 == 1) {
     MP_INFO(x,y).int_5 = MP_INFO(x,y).int_6;
     MP_INFO(x,y).int_6 = 0;
     if (MP_INFO(x,y).int_5 & 4) { //producing steel
-      if (MP_TYPE(x,y) < CST_COMMUNE_7){
+        if (MP_TYPE(x,y) < CST_COMMUNE_7){
 	    MP_TYPE(x,y) += 5;
-      }
+        }
     } else {
         if (MP_TYPE(x,y) >= CST_COMMUNE_7){
 	        MP_TYPE(x,y) -= 5;
         }
     }
 
-      if (MP_INFO(x,y).int_3 > 0)	/*  >0% */
-	{
+    if (MP_INFO(x,y).int_3 > 0)	/*  >0% */ {
 	  MP_INFO(x,y).int_3 = 0;
 	  if (--MP_INFO(x,y).int_4 < 0)
-	    MP_INFO(x,y).int_4 = 0;
-	}
-      else
-	{
+              MP_INFO(x,y).int_4 = 0;
+    } else {
 	  MP_INFO(x,y).int_3 = 0;
 	  MP_INFO(x,y).int_4++;
-	  /* XXX: Why do communes only last 10 years? */
-	  if (MP_INFO(x,y).int_4 > 120)	/* 10 years */
-	    {
-	      do_bulldoze_area (CST_PARKLAND_PLANE, x, y);
+	  /* Communes without production only last 10 years */
+	  if (MP_INFO(x,y).int_4 > 120)	/* 10 years */ {
+              if (use_waterwell) {
+                  int s =  MP_SIZE(x,y);
+                  /* first destroy the commune, then fill it with correct tiles
+                   * maybe paranoid, but tile is 4x4 thus becomes 16 tiles 1x1
+                   */
+                  do_bulldoze_area (CST_DESERT, x, y);
+                  for (int i = 0; i < s; i++) {
+                      for (int j = 0; j < s; j++)
+                          if (HAS_UGWATER(x+i,y+j))
+                                do_bulldoze_area (CST_PARKLAND_PLANE, x+i, y+j);
+                          else
+                                do_bulldoze_area (CST_DESERT, x+i, y+j);
+                  }
+              } else {
+                  do_bulldoze_area (CST_PARKLAND_PLANE, x, y);
+              }
 	      return;
-	    }
-	}
+          }
+    }
   }
 
   /* animate */

Modified: trunk/src/lincity/modules/fire.cpp
===================================================================
--- trunk/src/lincity/modules/fire.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/fire.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -29,7 +29,7 @@
 	MP_INFO(x,y).int_4 = rand () % (AFTER_FIRE_LENGTH / 6);
       MP_INFO(x,y).int_4++;
       if (MP_INFO(x,y).int_4 > AFTER_FIRE_LENGTH)
-	do_bulldoze_area (CST_GREEN, x, y);
+	do_bulldoze_area (CST_DESERT, x, y);
       else if (MP_INFO(x,y).int_4 > (3 * AFTER_FIRE_LENGTH) / 4)
 	MP_TYPE(x,y) = CST_FIRE_DONE4;
       else if (MP_INFO(x,y).int_4 > (2 * AFTER_FIRE_LENGTH) / 4)

Modified: trunk/src/lincity/modules/organic_farm.cpp
===================================================================
--- trunk/src/lincity/modules/organic_farm.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/organic_farm.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -15,9 +15,10 @@
 void
 do_organic_farm (int x, int y)
 {
-  /* 
+  /* // MP_INFO(x,y)
      // int_1 is the tech level of the farm when built
      // int_2 is a flag so we don't create a farm with nearly ripe crops.
+      *      unused in NG1.1	
      // int_3 is the food sold count so far this year.
      // int_4 is the food made last year.
      // int_5 is the random crop rotation key.
@@ -25,13 +26,20 @@
      // int_7 is the jobs stored at the farm 
      // 	up to NG-1.1.0 int_7 was the tech-level dependent output of a
      // 	 powered farm with full workforce. 
-     // 	= duplicate with int_1.  see below TECH_BONUS.
+     // 	= duplicate with int_1.  see below tech_bonus.
+      * 
+      * MP_INFO(x+1,y) stores additional info
+      *    int_1 reserved (=x)
+      *    int_2 reserved (=y)
+      *    int_3 max possible production (assuming 100% water and power)
+      *    int_4 number of 1x1 tiles with underground water inside the farm
+      *    int_5 current production
   */
   int i;
   int has_power = false;
-  int TECH_BONUS = (int)(((double) MP_INFO(x,y).int_1
+  int tech_bonus = (int)(((double) MP_INFO(x,y).int_1
 			      * ORGANIC_FARM_FOOD_OUTPUT) / MAX_TECH_LEVEL);
-
+  MP_INFO(x+1,y).int_3 = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
   /* Animation */
   if (MP_INFO(x,y).int_5 == 0) {
       /* this should be done when we create the area! */
@@ -64,56 +72,63 @@
   }
 
   /* Produce some food */
+  int prod = 0;
   if (MP_INFO(x,y).int_7 >= FARM_JOBS_USED) {
       if (has_power) {
-	  if (put_food (x, y, (ORGANIC_FARM_FOOD_OUTPUT	+ TECH_BONUS)) != 0) {
-		MP_INFO(x,y).int_3++;
-		MP_INFO(x,y).int_7 -= FARM_JOBS_USED;
-	  }
+	      	 prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
       } else {
-	  if (put_food (x, y, (ORGANIC_FARM_FOOD_OUTPUT / 4)) != 0) {
-		MP_INFO(x,y).int_3++;
-		MP_INFO(x,y).int_7 -= FARM_JOBS_USED;
-	  }
+	      	 prod = ORGANIC_FARM_FOOD_OUTPUT / 4;
       }
   } else if (MP_INFO(x,y).int_7 >= FARM_JOBS_USED / 4) {
       if (has_power) {
-	  if (put_food (x, y, (ORGANIC_FARM_FOOD_OUTPUT + TECH_BONUS / 4)) != 0) {
-		MP_INFO(x,y).int_3++;
-		MP_INFO(x,y).int_7 -= FARM_JOBS_USED / 4;
-	  }
+	      	 prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 4;
       } else {
-	  if (put_food (x, y, (ORGANIC_FARM_FOOD_OUTPUT / (4 * 4))) != 0) {
-		MP_INFO(x,y).int_3++;
-		MP_INFO(x,y).int_7 -= FARM_JOBS_USED / 4;
-	  }
+	      	 prod = ORGANIC_FARM_FOOD_OUTPUT / (4 * 4);
       }
   } else if (MP_INFO(x,y).int_7 >= 1) {
       /* got 1 job */
       if (has_power) {
-	  if (put_food (x, y, (ORGANIC_FARM_FOOD_OUTPUT + (TECH_BONUS / 8))) != 0) {
-	    	MP_INFO(x,y).int_3++;
-		MP_INFO(x,y).int_7 -= 1;
-	  }
-      } else if (put_food (x, y, 30
-			 + (ORGANIC_FARM_FOOD_OUTPUT / (4 * 8))) != 0) {
-	  /* AL1 "small ouch":
-	   * without power output with 1 job is bigger than output with 3 !
-	   * 3 = FARMS_JOBS_USED / 4 
-	   * ORGANIC_FARM_FOOD_OUTPUT = 550 currently (ng_1.1)
-	   */
-	   MP_INFO(x,y).int_3++;
-	   MP_INFO(x,y).int_7 -= 1;
+	     	prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 8;
+      } else {
+	        /* AL1 "small ouch":
+	         * without power output with 1 job is bigger than output with 3 !
+	         * 3 = FARMS_JOBS_USED / 4 
+	         * ORGANIC_FARM_FOOD_OUTPUT = 550 currently (ng_1.1)
+	         */
+	         prod = 30 + ORGANIC_FARM_FOOD_OUTPUT / (4 * 8);
       }
   } else {
-      /* AL1 : the farm gives very small amount of food without job. 
-       *  ? Probably needed for start ?
-       *  ? Useful to prevent starvation when no jobs ? 
-       *  The various modules are done in random order, so it should be ok without this.
-       */
-      put_food (x, y, 30);
-      /* note that this does not generate revenu int_3) */
+            /* AL1 : the farm gives very small amount of food without job. 
+             *  ? Probably needed for start ?
+             *  ? Useful to prevent starvation when no jobs ? 
+             *  The various buildings are "done" in random order,
+             *  so it should be ok without this.
+             */
+             put_food (x, y, 30);
+             /* note that this does not generate revenu int_3) */
   }
+  /* Check underground water, and reduce production accordingly */
+  if (use_waterwell) {
+      int w = 0;
+      int n = 0;
+      for (int i = 0; i < MP_SIZE(x,y); i++) {
+          for (int j = 0; j < MP_SIZE(x,y); j++) {
+              n++;
+              if (HAS_UGWATER(x+i,y+j))
+                  w++;
+          }
+      }
+      prod = (prod * w)/n;
+      MP_INFO(x + 1, y).int_4 = w;
+  }
+  MP_INFO(x + 1, y).int_5 = prod;
+                 	 
+  if (prod != 0) {
+     if (put_food (x, y, prod) != 0) {
+	    	MP_INFO(x,y).int_3++;
+		    MP_INFO(x,y).int_7 -= 1;
+     }
+  }
 
   if ((total_time & 0x7f) == 0)
     if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0)
@@ -229,6 +244,13 @@
 	   MP_INFO(x,y).int_4 * 100.0 / 1200.0);
   mps_store_title(i++,text);
 
+  if (use_waterwell) {
+      i++;
+      mps_store_title(i++,_("Debug info"));
+      mps_store_sd(i++,_(" max with power & water"), MP_INFO(x + 1, y).int_3);
+      mps_store_sd(i++,_(" number of tile with water"), MP_INFO(x + 1, y).int_4);
+      mps_store_sd(i++,_(" current production"), MP_INFO(x + 1, y).int_5);
+  }
 
   /*
   char * p;

Modified: trunk/src/lincity/modules/residence.cpp
===================================================================
--- trunk/src/lincity/modules/residence.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/residence.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -7,6 +7,7 @@
 
 #include "modules.h"
 #include "residence.h"
+#include "waterwell.h"
 #include <stdlib.h>
 
 void
@@ -25,6 +26,7 @@
     int hc = 0;                      /* have health cover ? */
     int brm = 0, drm = 0;            /* birth/death rate modifier */
     int cc = 0;
+    int birth_flag=0;
 
     p = MP_INFO(x,y).population;
     if ((MP_INFO(x,y).flags & FLAG_HEALTH_COVER) != 0)
@@ -68,19 +70,31 @@
 	    bad += 100;
 	}
     }
-    /* normal births - must have food and jobs... and people */
-    if ((MP_INFO(x,y).flags & (FLAG_FED + FLAG_EMPLOYED))
-	== (FLAG_FED + FLAG_EMPLOYED)
+    /* normal births - must have food, water and jobs... and people */
+    if (use_waterwell) 
+        birth_flag = FLAG_FED + FLAG_WATERWELL_COVER + FLAG_EMPLOYED;
+    else
+        birth_flag = FLAG_FED + FLAG_EMPLOYED;
+
+    if (((MP_INFO(x,y).flags & birth_flag) == birth_flag)
 	&& (rand () % (RESIDENCE_BASE_BR + MP_INFO(x,y).int_4) == 1) 
-	&& p > 0)
+	&& (p > 0))
     {
+#ifdef DEBUG_WATERWELL
+    	fprintf(stderr," birth ok, we are fed. use_waterwell= %i\n",use_waterwell);
+#endif
 	p++;
 	total_births++;
 	good += 50;
     }
-    /* are people starving. */
-    if ((MP_INFO(x,y).flags & FLAG_FED) == 0 && p > 0)
+    /* are people starving or lacking water ? */
+    if ( ((MP_INFO(x,y).flags & FLAG_FED) == 0)
+		| (use_waterwell & (MP_INFO(x,y).flags & FLAG_WATERWELL_COVER) == 0) 
+		&& p > 0)
     {
+#ifdef DEBUG_WATERWELL
+    	fprintf(stderr," hey, we are dying: lack of food or water!, use_waterwell=%i\n",use_waterwell);
+#endif
 	if (rand () % DAYS_PER_STARVE == 1)
 	{
 	    p--;
@@ -163,7 +177,8 @@
 	}
     }
 
-    population += p;
+    /* XXX AL1: this is daily accumulator used stats.cpp, and maybe pop graph */
+    population += p; 
 
     /* now get power */
     if (get_power (x, y, POWER_RES_OVERHEAD
@@ -180,7 +195,7 @@
 	if ((MP_INFO(x,y).flags & FLAG_HAD_POWER) != 0)
 	    bad += 50;
     }
-    /* now get fed */
+    /* now get fed */  /* AL1: should be done earlier, before check for starvation */
     if (get_food (x, y, p) != 0)
     {
 	MP_INFO(x,y).flags |= FLAG_FED;
@@ -188,36 +203,31 @@
     }
     else
 	MP_INFO(x,y).flags &= (0xffffffff - FLAG_FED);
+
     /* now supply jobs and buy goods if employed */
     if (MP_INFO(x,y).int_1 > 0)
 	swing = JOB_SWING + (hc * HC_JOB_SWING) + cc;
     else
 	swing = -(JOB_SWING + (hc * HC_JOB_SWING) + cc);
-    if (put_jobs (x, y, ((p * (WORKING_POP_PERCENT + swing)) / 100)) != 0)
-    {
+
+    if (put_jobs (x, y, ((p * (WORKING_POP_PERCENT + swing)) / 100)) != 0) {
 	MP_INFO(x,y).flags |= FLAG_EMPLOYED;
 	MP_INFO(x,y).int_1++;
 	if (MP_INFO(x,y).int_1 > 10)
 	    MP_INFO(x,y).int_1 = 10;
 	good += 20;
-	if (get_goods (x, y, p / 4) != 0)
-	{
+	if (get_goods (x, y, p / 4) != 0) {
 	    good += 10;
-	    if (get_power (x, y, p / 2, 0) != 0)	/* goods use power */
-
-	    {
+	    if (get_power (x, y, p / 2, 0) != 0) {
 		good += 5;
 		brm += 10;
 		/*     buy more goods if got power for them */
 		if (get_goods (x, y, p / 4) != 0)
 		    good += 5;
-	    }
-	    else
+	    } else
 		bad += 5;
 	}
-    }
-    else if (MP_INFO(x,y).int_1 < 10)
-    {
+    } else if (MP_INFO(x,y).int_1 < 10) {
 	MP_INFO(x,y).flags &= (0xffffffff - FLAG_EMPLOYED);
 	MP_INFO(x,y).int_1 -= 11;
 	if (MP_INFO(x,y).int_1 < -300)
@@ -232,11 +242,8 @@
 	    unemployed_history += 1.0;
 	}
 	unemployment_cost += p;	/* hmmm */
-
 	bad += 70;
-    }
-    else
-    {
+    } else {
 	MP_INFO(x,y).int_1 -= 20;
 	bad += 50;
     }
@@ -246,16 +253,12 @@
     bad += MP_POL(x,y) / 20;
     good += people_pool / 27;
     r = rand () % ((good + bad) * RESIDENCE_PPM);
-    if (r < bad)
-    {
-	if (p > MIN_RES_POPULATION)
-	{
+    if (r < bad) {
+	if (p > MIN_RES_POPULATION) {
 	    p--;
 	    people_pool++;
 	}
-    }
-    else if (people_pool > 0 && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad))
-    {
+    } else if (people_pool > 0 && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad)) {
 	p++;
 	people_pool--;
     }
@@ -276,15 +279,24 @@
 
     mps_store_sd(i++,_("People"), MP_INFO(x,y).population);
 
-    p = ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
-    mps_store_ss(i++, _("Power"), p);
+    if (use_waterwell) {
+        p = ((MP_INFO(x,y).flags & FLAG_WATERWELL_COVER) != 0) 
+                 ? _("YES") : _("NO");
+        mps_store_ss(i++, _("Water"), p);
+    }
 
     p = ((MP_INFO(x,y).flags & FLAG_FED) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Fed"), p);
 
+    p = ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
+    mps_store_ss(i++, _("Power"), p);
+
     p = ((MP_INFO(x,y).flags & FLAG_EMPLOYED) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Employed"), p);
 
+    p = (MP_INFO(x,y).int_1 >= 10) ? _("good") : _("poor");
+    mps_store_ss(i++, _("Job"), p);
+
     p = ((MP_INFO(x,y).flags & FLAG_HEALTH_COVER) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Health Cvr"), p);
 
@@ -296,7 +308,4 @@
 
     mps_store_sd(i++, _("Pollution"), MP_POL(x,y));
 
-    p = (MP_INFO(x,y).int_1 >= 10) ? _("good") : _("poor");
-    mps_store_ss(i++, _("Job"), p);
-
 }

Modified: trunk/src/lincity/modules/tip.cpp
===================================================================
--- trunk/src/lincity/modules/tip.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/modules/tip.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -28,7 +28,7 @@
   if (MP_TYPE(x,y) == CST_TIP_8) {
       MP_INFO(x,y).int_4++;
       if (MP_INFO(x,y).int_4 >= TIP_DEGRADE_TIME) {
-	  do_bulldoze_area(CST_GREEN,x,y);
+	  do_bulldoze_area(CST_DESERT,x,y);
       }
       return;
   }

Copied: trunk/src/lincity/modules/waterwell.cpp (from rev 1274, branches/waterwell/src/lincity/modules/waterwell.cpp)

Copied: trunk/src/lincity/modules/waterwell.h (from rev 1274, branches/waterwell/src/lincity/modules/waterwell.h)

Modified: trunk/src/lincity/shrglobs.cpp
===================================================================
--- trunk/src/lincity/shrglobs.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/shrglobs.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -7,6 +7,10 @@
 //#include "common.h"
 #include "fileutil.h"
 
+/* load/save version for compatibility with(out) waterwell */
+int ldsv_version = 1170;
+int use_waterwell = true;
+
 Map map;
 
 int mappoint_array_x[WORLD_SIDE_LEN];
@@ -60,6 +64,7 @@
 int numof_substations = 0;
 int marketx[MAX_NUMOF_MARKETS], markety[MAX_NUMOF_MARKETS], numof_markets = 0;
 int numof_health_centres, max_pop_ever = 0, total_evacuated = 0, total_births = 0;
+int numof_waterwell = 0;
 
 int total_money = 0, income_tax_rate, coal_tax_rate;
 int dole_rate, transport_cost_rate;

Modified: trunk/src/lincity/shrtypes.cpp
===================================================================
--- trunk/src/lincity/shrtypes.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/shrtypes.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -14,7 +14,6 @@
 //#include "cliglobs.h"
 #include "engglobs.h"
 
-
 void
 set_mappoint_used (int fromx, int fromy, int x, int y)
 {

Modified: trunk/src/lincity/simulate.cpp
===================================================================
--- trunk/src/lincity/simulate.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity/simulate.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -39,6 +39,9 @@
 #include "gui_interface/pbar_interface.h"
 //#include "module_buttons.h"
 
+extern void connect_rivers (void);
+extern void do_daily_ecology (void);
+
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
  * ---------------------------------------------------------------------- */
@@ -50,7 +53,10 @@
 static void simulate_mappoints (void);
 static void quick_start_add (int x, int y, short type, int size);
 static void nullify_mappoint (int x, int y);
+static void setup_land (void);
 
+#define IS_RIVER(x,y) (MP_INFO(x,y).flags & FLAG_IS_RIVER)
+
 /* ---------------------------------------------------------------------- *
  * Public Functions
  * ---------------------------------------------------------------------- */
@@ -117,7 +123,7 @@
 	for (xx = 0; xx < WORLD_SIDE_LEN; xx++) {
 	    int x = mappoint_array_x[xx];
 	    short grp = MP_GROUP(x,y);
-	    if (grp == GROUP_USED || grp == GROUP_BARE)
+	    if (grp == GROUP_USED || GROUP_IS_BARE(grp))
 		continue;
 	    switch (grp) {
 	    case GROUP_TRACK:
@@ -243,11 +249,14 @@
 do_periodic_events (void)
 {
   add_daily_to_monthly();
+  do_daily_ecology ();
 
-
   if ((total_time % NUMOF_DAYS_IN_YEAR) == 0) {
     start_of_year_update ();
   }
+  if ((total_time % DAYS_PER_POLLUTION) == 3) {
+    do_pollution ();
+  }
   if ((total_time % DAYS_BETWEEN_FIRES) == 9
       && tech_level > (GROUP_FIRESTATION_TECH * MAX_TECH_LEVEL / 1000)) {
     do_random_fire (-1, -1, 1);
@@ -266,9 +275,6 @@
   if (total_time % NUMOF_DAYS_IN_YEAR == (NUMOF_DAYS_IN_YEAR - 1)) {
     end_of_year_update ();
   }
-  if ((total_time % DAYS_PER_POLLUTION) == 3) {
-    do_pollution ();
-  }
 }
 
 
@@ -450,6 +456,8 @@
     update_avail_modules(0);
     /* Al1. NG 1.1 is this enough ? Are all global variables reseted ? */
     /* TODO reset screen, sustain info */
+    use_waterwell = true;
+    ldsv_version = MIN_WATERWELL_VERSION;
 }
 
 void
@@ -458,6 +466,7 @@
     clear_game ();
     coal_reserve_setup ();
     setup_river ();
+    setup_land ();
     ore_reserve_setup ();
     init_pbars ();
 
@@ -513,7 +522,7 @@
 setup_river (void)
 {
     int x, y, i, j;
-    x = WORLD_SIDE_LEN / 2;
+    x = (1 * WORLD_SIDE_LEN  + rand () % WORLD_SIDE_LEN) / 3 ;
     y = WORLD_SIDE_LEN - 1;
     i = (rand () % 12) + 6;
     for (j = 0; j < i; j++) {
@@ -556,8 +565,8 @@
 	else if (r > 1)
 	    r = 1;
 	x += r;
-	if (MP_TYPE(x+(d+d),y) != 0
-	    || MP_TYPE(x+(d+d+d),y) != 0)
+	if (!GROUP_IS_BARE(MP_GROUP(x+(d+d),y))
+	    || !GROUP_IS_BARE(MP_GROUP(x+(d+d+d),y)) )
 	    return;
 	if (x > 5 && x < WORLD_SIDE_LEN - 5)
 	{
@@ -580,6 +589,156 @@
     }
 }
 
+void
+setup_land (void)
+{
+  int x, y, xw, yw;
+  int aridity = rand () %400 -150;
+  for (y = 0; y < WORLD_SIDE_LEN; y++) {
+	for (x = 0; x < WORLD_SIDE_LEN; x++) {
+	    int d2w_min = 2 * WORLD_SIDE_LEN * WORLD_SIDE_LEN;
+	    int r;
+	    int arid=aridity;
+
+	    /* test against IS_RIVER to prevent terrible recursion */
+	    if ( IS_RIVER(x,y) || !GROUP_IS_BARE(MP_GROUP(x,y)))
+		continue;
+
+  	    for (yw = 0; yw < WORLD_SIDE_LEN; yw++) {
+		  for (xw = 0; xw < WORLD_SIDE_LEN; xw++) {
+			int d2w;
+			if (!IS_RIVER(xw,yw))
+				continue;
+			d2w = (xw-x)*(xw-x) + (yw-y)*(yw-y);
+			if (d2w < d2w_min)
+				d2w_min = d2w;
+		  }
+	    }
+
+	    /* near river lower aridity */
+	    if (aridity > 0) {
+		if (d2w_min < 5)
+			arid = aridity/3;
+		else if (d2w_min < 17)
+			arid = (aridity*2)/3;
+	    }
+	    r = rand () % (d2w_min/3+1) + arid;
+	    if (r >= 300) {
+	        /* very dry land */
+	    	int r2 = rand() % 10;
+	    	if (r2 <= 6)
+		        set_mappoint(x, y, CST_DESERT);
+	    	else if (r2 <= 8)
+		        set_mappoint(x, y, CST_GREEN);
+	    	else 
+		        set_mappoint(x, y, CST_TREE);
+	    } else if (r >= 160) {
+	    	int r2 = rand() % 10;
+	        if (r2 <= 2)
+	    	    set_mappoint(x, y, CST_DESERT);
+		else if (r2 <= 6)
+	    	    set_mappoint(x, y, CST_GREEN);
+		else 
+	    	    set_mappoint(x, y, CST_TREE);
+	    } else if (r >= 80) {
+	    	int r2 = rand() % 10;
+		if (r2 <= 1)
+	    		set_mappoint(x, y, CST_DESERT);
+                else if (r2 <= 4)
+	    		set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 6)
+                        set_mappoint(x, y, CST_TREE);
+                else
+	    		set_mappoint(x, y, CST_TREE2);
+            } else if (r >= 40) {
+	    	int r2 = rand() % 40;
+		    if (r2 == 0)
+	    		set_mappoint(x, y, CST_DESERT);
+		    else if (r2 <= 12)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 24)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 36)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    }  else if (r >= 0) {
+	    	    /* normal land */
+	    	    int r2 = rand() % 40;
+		    if (r2 <= 10)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 20)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 30)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    } else if (r >= -40) {
+	    	    /* forest */
+	    	    int r2 = rand() % 40;
+		    if (r2 <= 5)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 10)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 25)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    } else if (r >= -80) {
+	    	    int r2 = rand() % 40;
+		    if (r2 <= 0)
+			    MP_TYPE(x, y) = CST_WATER;
+		    else if (r2 <= 6)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 15)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 28)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    } else if (r >= -120) {
+	    	    int r2 = rand() % 40;
+		    if (r2 <= 1)
+			    MP_TYPE(x, y) = CST_WATER;
+		    else if (r2 <= 6)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 16)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 30)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    } else {
+	    	/* wetland */
+	    	int r2 = rand() % 40;
+		    if (r2 <= 3 )
+			    MP_TYPE(x, y) = CST_WATER;
+		    else if (r2 <= 8)
+	    		set_mappoint(x, y, CST_GREEN);
+		    else if (r2 <= 20)
+	    		set_mappoint(x, y, CST_TREE);
+		    else if (r2 <= 35)
+			    set_mappoint(x, y, CST_TREE2);
+		    else
+			    set_mappoint(x, y, CST_TREE3);
+	    }
+	    MP_POL(x,y) = 0;
+            /* preserve rivers, so that we can connect port later */
+            if (MP_TYPE(x,y) == CST_WATER){
+                int navigable = MP_INFO(x,y).flags & FLAG_IS_RIVER;
+                set_mappoint(x, y, CST_WATER);
+                MP_INFO(x,y).flags |= navigable;
+                MP_INFO(x,y).flags |= FLAG_HAS_UNDERGROUND_WATER;            
+            } else if (MP_TYPE(x,y) != CST_DESERT) {
+            	MP_INFO(x,y).flags |= FLAG_HAS_UNDERGROUND_WATER;
+            }	
+  	    /* TODO Store square of distance to river for each tile */
+	    /* MP_DIST2RIVER(x,y) = d2w_min; */
+        }
+    }
+    connect_rivers();
+}
+
 int
 count_groups (int g)
 {
@@ -602,7 +761,7 @@
     for (y = 0; y < WORLD_SIDE_LEN; y++) {
 	for (x = 0; x < WORLD_SIDE_LEN; x++) {
 	    t = MP_TYPE(x,y);
-	    if (t != CST_USED && t != CST_GREEN) {
+	    if (t != CST_USED && !GROUP_IS_BARE(MP_GROUP(x,y)))  {
 		g = get_group_of_type(t);
 		group_count[g]++;
 	    }
@@ -624,21 +783,26 @@
 	    flag = 0;
 	    for (y = yy + 2; y < yy + 23; y++)
 		for (x = xx + 2; x < xx + 23; x++)
-		    if (MP_GROUP(x,y) == GROUP_WATER)
-		    {
+		    if (IS_RIVER(x,y)) {
 			flag = 1;
 			x = xx + 23;   /* break out of loop */
 			y = yy + 23;   /* break out of loop */
 		    }
-	} while (flag == 0 || (--watchdog) < 1);
+	} while (flag == 0 && (--watchdog) > 1);
 	for (y = yy + 4; y < yy + 22; y++)
 	    for (x = xx + 4; x < xx + 22; x++)
-		if (MP_GROUP(x,y) != GROUP_BARE) {
-		    flag = 0;
-		    x = xx + 22;   /* break out of loop */
-		    y = yy + 22;   /* break out of loop */
-		}
-    } while (flag == 0 || (--watchdog) < 1);
+                /* Don't put the village on a river, but don't care of
+                 * isolated random water tiles putted by setup_land
+                 */
+		if (IS_RIVER(x,y)) {
+                    flag = 0;
+                    x = xx + 22;   /* break out of loop */
+                    y = yy + 22;   /* break out of loop */
+                }
+    } while (flag == 0 && (--watchdog) > 1);
+#ifdef DEBUG
+    fprintf(stderr,"random village watchdog = %i\n", watchdog);
+#endif
 
     /* These are going to be the main_screen_origin? vars */
     *originx = xx;
@@ -646,36 +810,41 @@
 
     /*  Draw the start scene. */
     quick_start_add (xx + 5, yy + 5, CST_FARM_O0, 4);
+    /* The first two farms have more underground water */
+    for (int i = 0; i < MP_SIZE(xx + 5, yy + 5); i++)
+        for (int j = 0; j < MP_SIZE(xx + 5, yy + 5); j++)
+            if (!HAS_UGWATER(xx + 5 + i, yy + 5 + j) && (rand() % 2))
+               MP_INFO(xx + 5 + i, yy + 5 + j).flags
+                              |= FLAG_HAS_UNDERGROUND_WATER;
+ 
     quick_start_add (xx + 9, yy + 6, CST_RESIDENCE_ML, 3);
     MP_INFO(xx + 9,yy + 6).population = 50;
-    MP_INFO(xx + 9,yy + 6).flags |= (FLAG_FED + FLAG_EMPLOYED);
-    quick_start_add (xx + 7, yy + 9, CST_MARKET_EMPTY, 2);
-    marketx[numof_markets] = xx + 7;
-    markety[numof_markets] = yy + 9;
-    numof_markets++;
-    /* Bootstap markets with some stuff. */
-    MP_INFO(xx + 7,yy + 9).int_1 = 2000;
-    MP_INFO(xx + 7,yy + 9).int_2 = 10000;
-    MP_INFO(xx + 7,yy + 9).int_3 = 100;
-    MP_INFO(xx + 7,yy + 9).int_5 = 10000;
-    MP_INFO(xx + 7,yy + 9).flags 
-	    |= (FLAG_MB_FOOD + FLAG_MS_FOOD + FLAG_MB_JOBS
-		+ FLAG_MS_JOBS + FLAG_MB_COAL + FLAG_MS_COAL + FLAG_MB_ORE
-		+ FLAG_MS_ORE + FLAG_MB_GOODS + FLAG_MS_GOODS + FLAG_MB_STEEL
-		+ FLAG_MS_STEEL);
+    MP_INFO(xx + 9,yy + 6).flags 
+                |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
+    quick_start_add (xx + 9, yy + 9, CST_POTTERY_0, 2);
+    quick_start_add (xx + 16, yy + 9, CST_WATERWELL, 2);
 
-
     quick_start_add (xx + 14, yy + 6, CST_RESIDENCE_ML, 3);
     MP_INFO(xx + 14,yy + 6).population = 50;
-    MP_INFO(xx + 14,yy + 6).flags |= (FLAG_FED + FLAG_EMPLOYED);
+    MP_INFO(xx + 14,yy + 6).flags 
+                |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
     quick_start_add (xx + 17, yy + 5, CST_FARM_O0, 4);
-    quick_start_add (xx + 17, yy + 9, CST_MARKET_EMPTY, 2);
-    marketx[numof_markets] = xx + 17;
+    for (int i = 0; i < MP_SIZE(xx + 17, yy + 5); i++)
+        for (int j = 0; j < MP_SIZE(xx + 17, yy + 5); j++)
+            if (!HAS_UGWATER(xx + 17 + i, yy + 5 + j) && (rand() % 2))
+                MP_INFO(xx + 17 + i, yy + 5 + j).flags 
+                              |= FLAG_HAS_UNDERGROUND_WATER; 
+
+    quick_start_add (xx + 14, yy + 9, CST_MARKET_EMPTY, 2);
+    marketx[numof_markets] = xx + 14;
     markety[numof_markets] = yy + 9;
     numof_markets++;
-    MP_INFO(xx + 17,yy + 9).int_1 = 2000;
-    MP_INFO(xx + 17,yy + 9).int_2 = 8000;
-    MP_INFO(xx + 17,yy + 9).flags 
+    /* Bootstrap markets with some stuff. */
+    MP_INFO(xx + 14,yy + 9).int_1 = 2000;
+    MP_INFO(xx + 14,yy + 9).int_2 = 10000;
+    MP_INFO(xx + 14,yy + 9).int_3 = 100;
+    MP_INFO(xx + 14,yy + 9).int_5 = 10000;
+    MP_INFO(xx + 14,yy + 9).flags 
 	    |= (FLAG_MB_FOOD + FLAG_MS_FOOD + FLAG_MB_JOBS
 		+ FLAG_MS_JOBS + FLAG_MB_COAL + FLAG_MS_COAL + FLAG_MB_ORE
 		+ FLAG_MS_ORE + FLAG_MB_GOODS + FLAG_MS_GOODS + FLAG_MB_STEEL
@@ -686,35 +855,12 @@
 	quick_start_add (xx + x, yy + 11, CST_TRACK_LR, 1);
 	MP_INFO(xx + x,yy + 11).flags |= FLAG_IS_TRANSPORT;
     }
-    for (y = 12; y < 18; y++)
-    {
-	quick_start_add (xx + 5, yy + y, CST_TRACK_LR, 1);
-	MP_INFO(xx + 5,yy + y).flags |= FLAG_IS_TRANSPORT;
-    }
     quick_start_add (xx + 6, yy + 12, CST_COMMUNE_1, 4);
     quick_start_add (xx + 6, yy + 17, CST_COMMUNE_1, 4);
     quick_start_add (xx + 11, yy + 12, CST_COMMUNE_1, 4);
     quick_start_add (xx + 11, yy + 17, CST_COMMUNE_1, 4);
     quick_start_add (xx + 16, yy + 12, CST_COMMUNE_1, 4);
     quick_start_add (xx + 16, yy + 17, CST_COMMUNE_1, 4);
-    for (x = 6; x < 17; x++)
-    {
-	quick_start_add (xx + x, yy + 16, CST_TRACK_LR, 1);
-	MP_INFO(xx + x,yy + 16).flags |= FLAG_IS_TRANSPORT;
-    }
-    for (y = 12; y < 16; y++)
-    {
-	quick_start_add (xx + 10, yy + y, CST_TRACK_LR, 1);
-	MP_INFO(xx + 10,yy + y).flags |= FLAG_IS_TRANSPORT;
-	quick_start_add (xx + 15, yy + y, CST_TRACK_LR, 1);
-	MP_INFO(xx + 15,yy + y).flags |= FLAG_IS_TRANSPORT;
-    }
-    quick_start_add (xx + 10, yy + 17, CST_TRACK_LR, 1);
-    MP_INFO(xx + 10,yy + 17).flags |= FLAG_IS_TRANSPORT;
-    quick_start_add (xx + 15, yy + 17, CST_TRACK_LR, 1);
-    MP_INFO(xx + 15,yy + 17).flags |= FLAG_IS_TRANSPORT;
-
-    quick_start_add (xx + 9, yy + 9, CST_POTTERY_0, 2);
 }
 
 /* XXX: WCK: What is up with this?  Why not just use set_mappoint?! */
@@ -815,7 +961,7 @@
   for (x = 0; x < WORLD_SIDE_LEN; x++)
     for (y = 0; y < WORLD_SIDE_LEN; y++)
       {
-	if (MP_GROUP(x,y) == GROUP_BARE
+	if (GROUP_IS_BARE(MP_GROUP(x,y))
 	    || MP_TYPE(x,y) == CST_USED
 	    || MP_GROUP(x,y) == GROUP_WATER
 	    || MP_GROUP(x,y) == GROUP_POWER_LINE

Modified: trunk/src/lincity-ng/ButtonPanel.cpp
===================================================================
--- trunk/src/lincity-ng/ButtonPanel.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/ButtonPanel.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -173,7 +173,7 @@
 }
 
 /*
- * enable/disabel buttons accordig to tech.
+ * enable/disable buttons according to tech.
  *  lincity/ldsvguts.cpp
  *  oldgui/module_buttons.cpp
  */
@@ -230,7 +230,7 @@
         return;
     }
     doButton( name );
-	if ( enoughTech( selected_module_type ) ){
+    if ( enoughTech( selected_module_type ) ){
         if( !b->isEnabled() ){
             newTechMessage( selected_module_type, showInfo );
             b->setTooltip( createTooltip( selected_module_type, false ) );
@@ -246,6 +246,15 @@
             b->setTooltip(tooltip);
         }
     }
+    if ( name=="BPMWaterwellButton" & !use_waterwell ) {
+            b->enable( false );
+            char tooltip[2048];
+            snprintf(tooltip, sizeof(tooltip), _("%s is disabled (loaded old game)."),
+	    		createTooltip(selected_module_type, false ).c_str());
+	    b->setTooltip(tooltip);
+    }
+
+
     selected_module_type = tmp;
 }
 
@@ -562,6 +571,8 @@
             getGame()->showHelpWindow( "park" ); break;
         case CST_WATER:
             getGame()->showHelpWindow( "river" ); break;
+        case CST_WATERWELL:
+            getGame()->showHelpWindow( "waterwell" ); break;
         default:
             std::cerr << "ButtonPanel::showToolHelp# unknown Type " << tooltype << "\n";
     }
@@ -617,6 +628,7 @@
         case CST_MONUMENT_0: newName ="BPMMonumentButton"; break;
         case CST_PARKLAND_PLANE: newName ="BPMParkButton"; break;
         case CST_WATER: newName ="BPMWaterButton"; break;
+        case CST_WATERWELL: newName ="BPMWaterwellButton"; break;
         default:
             std::cerr << "ButtonPanel::switchToTool# unknown Type " << newModuleType << "\n";
             newName ="BPMPointerButton";
@@ -893,6 +905,8 @@
         selected_module_type=CST_PARKLAND_PLANE;
     else if(button=="BPMWaterButton")
         selected_module_type=CST_WATER;
+    else if(button=="BPMWaterwellButton")
+        selected_module_type=CST_WATERWELL;
 }
 
 void ButtonPanel::updateSelectedCost()

Modified: trunk/src/lincity-ng/GameView.cpp
===================================================================
--- trunk/src/lincity-ng/GameView.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/GameView.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -481,6 +481,10 @@
            -e 's/"/.png" );/2'                 
    */
    preReadCityTexture( CST_GREEN, 	"green.png" );
+   preReadCityTexture( CST_DESERT, 	"desert.png" );
+   preReadCityTexture( CST_TREE, 	"tree.png" );
+   preReadCityTexture( CST_TREE2, 	"tree2.png" );
+   preReadCityTexture( CST_TREE3, 	"tree3.png" );
    preReadCityTexture( CST_POWERL_H_L, "powerlhl.png" );
    preReadCityTexture( CST_POWERL_V_L,  	"powerlvl.png" );
    preReadCityTexture( CST_POWERL_LD_L, 	"powerlldl.png" );
@@ -651,6 +655,7 @@
    preReadCityTexture( CST_WATER_LUR,         "waterlur.png" );
    preReadCityTexture( CST_WATER_URD,         "waterurd.png" );
    preReadCityTexture( CST_WATER_LURD,        "waterlurd.png" );
+   preReadCityTexture( CST_WATERWELL,         "waterwell.png" );
    preReadCityTexture( CST_CRICKET_1,         "cricket1.png" );
    preReadCityTexture( CST_CRICKET_2,         "cricket2.png" );
    preReadCityTexture( CST_CRICKET_3,         "cricket3.png" );
@@ -843,7 +848,11 @@
             if( roadDragging && ( cursorSize != 1 ) ){
                 roadDragging = false;
             }
-            if( roadDragging && ( selected_module_type == CST_GREEN ) 
+            if( roadDragging 
+	    	    && ( selected_module_type == CST_GREEN |selected_module_type == CST_DESERT
+		        |selected_module_type == CST_TREE
+		        |selected_module_type == CST_TREE2
+		        |selected_module_type == CST_TREE3 ) 
                     && getConfig()->instantBulldoze ){ 
                 editMap( tile, SDL_BUTTON_LEFT);
                 startRoad = tile;
@@ -1364,7 +1373,7 @@
         } else {
             for( y = (int) tile.y; y < tile.y + cursorSize; y++ ) {
                 for( x = (int) tile.x; x < tile.x + cursorSize; x++ ) {
-                    if( MP_TYPE( x, y ) != CST_GREEN ) {
+                    if( !GROUP_IS_BARE(MP_GROUP( x, y ))) {
                         painter.setFillColor( alphared );
                         y += cursorSize;
                         break;
@@ -1431,6 +1440,7 @@
             //case CST_MONUMENT_0: break;
             //case CST_PARKLAND_PLANE: break;
             //case CST_WATER: break;
+            case CST_WATERWELL: range = MARKET_RANGE; break;
         }
        	
         if (range > 0 )
@@ -1542,18 +1552,26 @@
             currentTile = startRoad;
             while( currentTile.x != tileUnderMouse.x ) {
                 markTile( painter, currentTile );
-                if( selected_module_type == CST_GREEN && realTile( currentTile ) != lastRazed ){ 
-                    cost += bulldozeCost( currentTile );
-                    lastRazed = realTile( currentTile );
+                if( (selected_module_type == CST_GREEN |selected_module_type == CST_DESERT
+				|selected_module_type == CST_TREE 
+				|selected_module_type == CST_TREE2
+				|selected_module_type == CST_TREE3)
+		     && realTile( currentTile ) != lastRazed ){ 
+                    	cost += bulldozeCost( currentTile );
+                    	lastRazed = realTile( currentTile );
                 }
                 tiles++;
                 currentTile.x += stepx;
             }
             while( currentTile.y != tileUnderMouse.y ) {
                 markTile( painter, currentTile );
-                if( selected_module_type == CST_GREEN && realTile( currentTile ) != lastRazed ){ 
-                    cost += bulldozeCost( currentTile );
-                    lastRazed = realTile( currentTile );
+                if( (selected_module_type == CST_GREEN |selected_module_type == CST_DESERT
+				|selected_module_type == CST_TREE 
+				|selected_module_type == CST_TREE2
+				|selected_module_type == CST_TREE3)
+		     && realTile( currentTile ) != lastRazed ){ 
+                    	cost += bulldozeCost( currentTile );
+                    	lastRazed = realTile( currentTile );
                 }
                 tiles++;
                 currentTile.y += stepy;
@@ -1561,10 +1579,17 @@
         } 
         markTile( painter, tileUnderMouse );
         tiles++;
-        if( selected_module_type == CST_GREEN && realTile( currentTile ) != lastRazed ) { 
-            cost += bulldozeCost( tileUnderMouse );
+        if( (selected_module_type == CST_GREEN |selected_module_type == CST_DESERT
+				|selected_module_type == CST_TREE 
+				|selected_module_type == CST_TREE2
+				|selected_module_type == CST_TREE3)
+	     && realTile( currentTile ) != lastRazed ) { 
+            	  cost += bulldozeCost( tileUnderMouse );
         } 
-        if( selected_module_type == CST_GREEN ){
+        if( selected_module_type == CST_GREEN |selected_module_type == CST_DESERT
+				|selected_module_type == CST_TREE 
+				|selected_module_type == CST_TREE2
+				|selected_module_type == CST_TREE3 ){
             std::stringstream prize;
             if( roadDragging ){
                 prize << _("Estimated Bulldoze Cost: ");
@@ -1648,11 +1673,7 @@
                           MP_INFO(tile.x,tile.y).int_2 );
     else
         group = MP_GROUP( tile.x,tile.y );
-    if (group == 0) {  /* Can't bulldoze grass. */
-        prize = 0; 
-    } else {
-        prize = main_groups[group].bul_cost;
-    }
+    prize = main_groups[group].bul_cost;
     return prize;
 }
 

Modified: trunk/src/lincity-ng/MapEdit.cpp
===================================================================
--- trunk/src/lincity-ng/MapEdit.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/MapEdit.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -59,8 +59,8 @@
 void
 check_bulldoze_area (int x, int y)
 {
-    //no need to bulldoze grass
-    if( MP_TYPE( x, y ) == CST_GREEN ) 
+    //no need to bulldoze desert
+    if( MP_TYPE( x, y ) == CST_DESERT ) 
         return;
     
   int xx, yy, g;
@@ -152,7 +152,7 @@
     /* Bring up mappoint_stats for certain left mouse clicks */
     /* Check market and port double-clicks here */
     /* Check rocket launches */
-    if( MP_TYPE( x,y ) != CST_GREEN ) {
+    if( !GROUP_IS_BARE(MP_GROUP( x,y )) ) {
         if(mapMPS)
             mapMPS->playBuildingSound( mod_x, mod_y );
         mps_result = mps_set( mod_x, mod_y, MPS_MAP ); //query Tool
@@ -221,27 +221,27 @@
         return;
     
     if (size >= 2) {
-        if (MP_TYPE(x + 1,y) != CST_GREEN
-            || MP_TYPE(x,y + 1) != CST_GREEN
-            || MP_TYPE(x + 1,y + 1) != CST_GREEN)
+        if (!GROUP_IS_BARE(MP_GROUP(x + 1,y))
+            || !GROUP_IS_BARE(MP_GROUP(x,y + 1))
+            || !GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
             return;
     }
     if (size >= 3) {
-        if (MP_TYPE(x + 2,y) != CST_GREEN
-            || MP_TYPE(x + 2,y + 1) != CST_GREEN
-            || MP_TYPE(x + 2,y + 2) != CST_GREEN
-            || MP_TYPE(x + 1,y + 2) != CST_GREEN
-            || MP_TYPE(x,y + 2) != CST_GREEN)
+        if (!GROUP_IS_BARE(MP_GROUP(x + 2,y))
+            || !GROUP_IS_BARE(MP_GROUP(x + 2,y + 1))
+            || !GROUP_IS_BARE(MP_GROUP(x + 2,y + 2))
+            || !GROUP_IS_BARE(MP_GROUP(x + 1,y + 2))
+            || !GROUP_IS_BARE(MP_GROUP(x,y + 2)))
             return;
     }
     if (size == 4) {
-        if (MP_TYPE(x + 3,y) != CST_GREEN
-            || MP_TYPE(x + 3,y + 1) != CST_GREEN
-            || MP_TYPE(x + 3,y + 2) != CST_GREEN
-            || MP_TYPE(x + 3,y + 3) != CST_GREEN
-            || MP_TYPE(x + 2,y + 3) != CST_GREEN
-            || MP_TYPE(x + 1,y + 3) != CST_GREEN
-            || MP_TYPE(x,y + 3) != CST_GREEN)
+        if (!GROUP_IS_BARE(MP_GROUP(x + 3,y))
+            || !GROUP_IS_BARE(MP_GROUP(x + 3,y + 1))
+            || !GROUP_IS_BARE(MP_GROUP(x + 3,y + 2))
+            || !GROUP_IS_BARE(MP_GROUP(x + 3,y + 3))
+            || !GROUP_IS_BARE(MP_GROUP(x + 2,y + 3))
+            || !GROUP_IS_BARE(MP_GROUP(x + 1,y + 3))
+            || !GROUP_IS_BARE(MP_GROUP(x,y + 3)))
             return;
     }
     

Modified: trunk/src/lincity-ng/MiniMap.cpp
===================================================================
--- trunk/src/lincity-ng/MiniMap.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/MiniMap.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -709,7 +709,11 @@
                 else
                     return Color(0,0xFF,0);
             } else {
-                return makeGrey(getColorNormal(x,y));
+                    if (use_waterwell) {
+                        if ((flags & FLAG_WATERWELL_COVER) != 0)
+                                return makeBlue(getColorNormal(x,y));
+                    }
+                    return makeGrey(getColorNormal(x,y));
             }
         }
         case POWER: {

Modified: trunk/src/lincity-ng/Mps.cpp
===================================================================
--- trunk/src/lincity-ng/Mps.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/Mps.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -272,7 +272,7 @@
             getSound()->playSound( "Shanty" );
             break;
         default: 
-            if( MP_TYPE( mps_x, mps_y ) == CST_GREEN ){
+            if( GROUP_IS_BARE(MP_GROUP( mps_x, mps_y )) && (MP_GROUP( mps_x, mps_y) != CST_DESERT )){
                 getSound()->playSound( "Green" );
             }  
             if( MP_TYPE( mps_x, mps_y ) == CST_PARKLAND_PLANE ){

Modified: trunk/src/lincity-ng/MpsInterface.cpp
===================================================================
--- trunk/src/lincity-ng/MpsInterface.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/MpsInterface.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -213,6 +213,9 @@
                 case GROUP_WINDMILL:
                     mps_windmill (mps_x, mps_y);
                     break;
+		case GROUP_WATERWELL:
+		    mps_waterwell (mps_x, mps_y);
+		    break;
                 default: 
                     //no special information on this group, just show the Name.
                     for(int i = 1; i < MPS_PARAGRAPH_COUNT; ++i) {
@@ -220,7 +223,7 @@
                     }
                     mps_store_title(0, 
                             _(main_groups[MP_GROUP(mps_x, mps_y)].name));
-                    if( MP_TYPE( mps_x, mps_y ) == CST_GREEN ){
+                    if( GROUP_IS_BARE(MP_GROUP( mps_x, mps_y )) ){
                         mps_store_title(4,_("build something here") );
                     }
                     mps_store_title(2, _("no further information available") );

Modified: trunk/src/lincity-ng/ReadPngInterface.cpp
===================================================================
--- trunk/src/lincity-ng/ReadPngInterface.cpp	2007-11-18 12:20:08 UTC (rev 1275)
+++ trunk/src/lincity-ng/ReadPngInterface.cpp	2007-11-18 19:47:52 UTC (rev 1276)
@@ -135,6 +135,8 @@
     LG(CST_WATER_URD,GROUP_WATER,LCT_WATER_URD_G);
     LG(CST_WATER_LURD,GROUP_WATER,LCT_WATER_LURD_G);
 
+    LG(CST_WATERWELL,GROUP_WATERWELL,LCT_WATERWELL_G);
+
     LG(CST_BLACKSMITH_0,GROUP_BLACKSMITH,LCT_BLACKSMITH_0_G);
     LG(CST_BLACKSMITH_1,GROUP_BLACKSMITH,LCT_BLACKSMITH_1_G);
     LG(CST_BLACKSMITH_2,GROUP_BLACKSMITH,LCT_BLACKSMITH_2_G);
@@ -347,6 +349,11 @@
     LG(CST_TIP_7,GROUP_TIP,LCT_TIP_7_G);
     LG(CST_TIP_8,GROUP_TIP,LCT_TIP_8_G);
 
+    LG(CST_DESERT,GROUP_DESERT,LCT_DESERT_G);
+    LG(CST_TREE,GROUP_TREE,LCT_TREE_G);
+    LG(CST_TREE2,GROUP_TREE2,LCT_TREE2_G);
+    LG(CST_TREE3,GROUP_TREE3,LCT_TREE3_G);
+
     return 0;
 }
 



From alainb at mail.berlios.de  Sun Nov 18 22:20:29 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sun, 18 Nov 2007 22:20:29 +0100
Subject: [Lincity-ng-commit] r1277 - trunk/src/lincity/modules
Message-ID: <200711182120.lAILKT24019829@sheep.berlios.de>

Author: alainb
Date: 2007-11-18 22:20:29 +0100 (Sun, 18 Nov 2007)
New Revision: 1277

Modified:
   trunk/src/lincity/modules/fire.cpp
   trunk/src/lincity/modules/tip.cpp
Log:
tiny fix to keep compatibility

Modified: trunk/src/lincity/modules/fire.cpp
===================================================================
--- trunk/src/lincity/modules/fire.cpp	2007-11-18 19:47:52 UTC (rev 1276)
+++ trunk/src/lincity/modules/fire.cpp	2007-11-18 21:20:29 UTC (rev 1277)
@@ -29,7 +29,11 @@
 	MP_INFO(x,y).int_4 = rand () % (AFTER_FIRE_LENGTH / 6);
       MP_INFO(x,y).int_4++;
       if (MP_INFO(x,y).int_4 > AFTER_FIRE_LENGTH)
-	do_bulldoze_area (CST_DESERT, x, y);
+          if (use_waterwell) {
+              do_bulldoze_area (CST_DESERT, x, y);
+          } else {
+              do_bulldoze_area (CST_GREEN, x, y);
+          }
       else if (MP_INFO(x,y).int_4 > (3 * AFTER_FIRE_LENGTH) / 4)
 	MP_TYPE(x,y) = CST_FIRE_DONE4;
       else if (MP_INFO(x,y).int_4 > (2 * AFTER_FIRE_LENGTH) / 4)

Modified: trunk/src/lincity/modules/tip.cpp
===================================================================
--- trunk/src/lincity/modules/tip.cpp	2007-11-18 19:47:52 UTC (rev 1276)
+++ trunk/src/lincity/modules/tip.cpp	2007-11-18 21:20:29 UTC (rev 1277)
@@ -28,7 +28,11 @@
   if (MP_TYPE(x,y) == CST_TIP_8) {
       MP_INFO(x,y).int_4++;
       if (MP_INFO(x,y).int_4 >= TIP_DEGRADE_TIME) {
-	  do_bulldoze_area(CST_DESERT,x,y);
+          if (use_waterwell) {
+              do_bulldoze_area (CST_DESERT, x, y);
+          } else {
+              do_bulldoze_area(CST_GREEN,x,y);
+          }
       }
       return;
   }



From alainb at mail.berlios.de  Mon Nov 19 22:26:32 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Mon, 19 Nov 2007 22:26:32 +0100
Subject: [Lincity-ng-commit] r1278 - in trunk: . src/lincity-ng
Message-ID: <200711192126.lAJLQWXZ013240@sheep.berlios.de>

Author: alainb
Date: 2007-11-19 22:26:31 +0100 (Mon, 19 Nov 2007)
New Revision: 1278

Added:
   trunk/Bugs-beta
Modified:
   trunk/src/lincity-ng/GameView.cpp
Log:
move one line in Gameview.cpp for clarity. Add Bugs-beta file

Added: trunk/Bugs-beta
===================================================================
--- trunk/Bugs-beta	2007-11-18 21:20:29 UTC (rev 1277)
+++ trunk/Bugs-beta	2007-11-19 21:26:31 UTC (rev 1278)
@@ -0,0 +1,7 @@
+* regression from 1.0.3 (dont know precisely when)
+  When tech is not high enough, trying to build a gayed item, just close the item tray,
+  and show a message in the console only.
+  1.0.3 behavior is to let the  item tray open, so info_bubble pop-up and shows the required tech.
+
+* can build a water well on tiles without water :-)
+ 

Modified: trunk/src/lincity-ng/GameView.cpp
===================================================================
--- trunk/src/lincity-ng/GameView.cpp	2007-11-18 21:20:29 UTC (rev 1277)
+++ trunk/src/lincity-ng/GameView.cpp	2007-11-19 21:26:31 UTC (rev 1278)
@@ -130,6 +130,7 @@
     stopThread = false;
     SDL_mutexP( mThreadRunning );
     loaderThread = SDL_CreateThread( gameViewThread, this );
+    SDL_mutexV( mThreadRunning );
    
     //GameView is resizable
     setFlags(FLAG_RESIZABLE);
@@ -757,7 +758,6 @@
    //preReadCityTexture( CST_FARM_O16,           "farm16.png" );
    
    // End of generated Code.
-   SDL_mutexV( mThreadRunning );
 }
 
 /*



From alainb at mail.berlios.de  Mon Nov 19 22:35:50 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Mon, 19 Nov 2007 22:35:50 +0100
Subject: [Lincity-ng-commit] r1279 - trunk/src/lincity/modules
Message-ID: <200711192135.lAJLZo2Z013645@sheep.berlios.de>

Author: alainb
Date: 2007-11-19 22:35:50 +0100 (Mon, 19 Nov 2007)
New Revision: 1279

Modified:
   trunk/src/lincity/modules/residence.cpp
Log:
no newcomer in house when there is starvation

Modified: trunk/src/lincity/modules/residence.cpp
===================================================================
--- trunk/src/lincity/modules/residence.cpp	2007-11-19 21:26:31 UTC (rev 1278)
+++ trunk/src/lincity/modules/residence.cpp	2007-11-19 21:35:50 UTC (rev 1279)
@@ -258,9 +258,11 @@
 	    p--;
 	    people_pool++;
 	}
-    } else if (people_pool > 0 && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad)) {
-	p++;
-	people_pool--;
+    } else if (people_pool > 0
+            &&  (MP_INFO(x,y).flags & FLAG_FED) != 0  /* No newcomer gets in when there is starvation */
+            && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad)) /* r > (rmax - good) */ {
+        p++;
+        people_pool--;
     }
     MP_INFO(x,y).population = p;
     MP_INFO(x,y).int_4 = brm;



From alainb at mail.berlios.de  Mon Nov 19 22:50:26 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Mon, 19 Nov 2007 22:50:26 +0100
Subject: [Lincity-ng-commit] r1280 - in trunk: . src/lincity
Message-ID: <200711192150.lAJLoQgH014423@sheep.berlios.de>

Author: alainb
Date: 2007-11-19 22:50:26 +0100 (Mon, 19 Nov 2007)
New Revision: 1280

Modified:
   trunk/Bugs-beta
   trunk/src/lincity/engine.cpp
Log:
fix: cannot build water well on pure desert :-)

Modified: trunk/Bugs-beta
===================================================================
--- trunk/Bugs-beta	2007-11-19 21:35:50 UTC (rev 1279)
+++ trunk/Bugs-beta	2007-11-19 21:50:26 UTC (rev 1280)
@@ -3,5 +3,3 @@
   and show a message in the console only.
   1.0.3 behavior is to let the  item tray open, so info_bubble pop-up and shows the required tech.
 
-* can build a water well on tiles without water :-)
- 

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-19 21:35:50 UTC (rev 1279)
+++ trunk/src/lincity/engine.cpp	2007-11-19 21:50:26 UTC (rev 1280)
@@ -339,7 +339,19 @@
         break;
     } 
     case GROUP_WATERWELL:
-	numof_waterwell++;
+        if (use_waterwell) {
+            int has_ugw=0;
+            for (i=0;i<size;i++) 
+                for (j=0;j<size;j++) 
+                    has_ugw = has_ugw | HAS_UGWATER(x+i, y+j);
+            if (!has_ugw) {
+                ok_dial_box("warning.mes", BAD,
+                        _("You can't build a water well here: it is all desert."));
+                return -8;
+            } else {
+                numof_waterwell++;
+            }
+        } /* else ... is not possible */
         break;
     case GROUP_PARKLAND:
         if (use_waterwell)



From alainb at mail.berlios.de  Wed Nov 21 02:05:50 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Wed, 21 Nov 2007 02:05:50 +0100
Subject: [Lincity-ng-commit] r1281 - in trunk/src: lincity lincity-ng
Message-ID: <200711210105.lAL15oAH016671@sheep.berlios.de>

Author: alainb
Date: 2007-11-21 02:05:49 +0100 (Wed, 21 Nov 2007)
New Revision: 1281

Modified:
   trunk/src/lincity-ng/MiniMap.cpp
   trunk/src/lincity/engine.cpp
   trunk/src/lincity/lin-city.h
   trunk/src/lincity/power.cpp
Log:
minimap_power displays info per building

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-19 21:50:26 UTC (rev 1280)
+++ trunk/src/lincity/engine.cpp	2007-11-21 01:05:49 UTC (rev 1281)
@@ -582,7 +582,8 @@
 {
   int x, y, m;
   m = 0xffffffff - (FLAG_FIRE_COVER | FLAG_HEALTH_COVER
-		    | FLAG_CRICKET_COVER| FLAG_WATERWELL_COVER);
+		    | FLAG_CRICKET_COVER| FLAG_WATERWELL_COVER
+                    | FLAG_ASKED_FOR_POWER |FLAG_GOT_POWER );
   for (y = 0; y < WORLD_SIDE_LEN; y++)
     for (x = 0; x < WORLD_SIDE_LEN; x++)
       MP_INFO(x,y).flags &= m;

Modified: trunk/src/lincity/lin-city.h
===================================================================
--- trunk/src/lincity/lin-city.h	2007-11-19 21:50:26 UTC (rev 1280)
+++ trunk/src/lincity/lin-city.h	2007-11-21 01:05:49 UTC (rev 1281)
@@ -173,6 +173,8 @@
 #define FLAG_POWER_LINE         (0x8000000)
 #define FLAG_WATERWELL_COVER    (0x10000000)
 #define FLAG_HAS_UNDERGROUND_WATER (0x20000000)
+#define FLAG_ASKED_FOR_POWER       (0x40000000)
+#define FLAG_GOT_POWER             (0x80000000) /* 2^31 = last flag*/
 
 /* XXX: It would appear that the following T_ are used exactly two times each,
    in market.c.  */

Modified: trunk/src/lincity/power.cpp
===================================================================
--- trunk/src/lincity/power.cpp	2007-11-19 21:50:26 UTC (rev 1280)
+++ trunk/src/lincity/power.cpp	2007-11-21 01:05:49 UTC (rev 1281)
@@ -295,6 +295,7 @@
   int xi, yi;
   int grid_tmp; /* for simplicity */
 
+  MP_INFO(x,y).flags |= FLAG_ASKED_FOR_POWER;
   if (numof_substations == 0)
     return(0);
 
@@ -319,6 +320,7 @@
 	if (grid[grid_tmp]->total_power >= power) {
 	  grid[grid_tmp]->total_power -= power;
 	  MP_INFO(xi,yi).int_4 += power; // local demand in substation xi yi
+          MP_INFO(x,y).flags |= FLAG_GOT_POWER;
 	  return 1;
 	}
 	

Modified: trunk/src/lincity-ng/MiniMap.cpp
===================================================================
--- trunk/src/lincity-ng/MiniMap.cpp	2007-11-19 21:50:26 UTC (rev 1280)
+++ trunk/src/lincity-ng/MiniMap.cpp	2007-11-21 01:05:49 UTC (rev 1281)
@@ -623,6 +623,7 @@
         xx = MP_INFO(x,y).int_1;
         yy = MP_INFO(x,y).int_2;
     }
+    /* FIXME: ugly coding: since here we should use xx, yy and not x,y */
 
     int flags=MP_INFO(xx,yy).flags;
 
@@ -718,17 +719,26 @@
         }
         case POWER: {
             Color mc;
-            if (get_power (xx, yy, 0, 1) != 0) {
-                mc=Color(0,0xFF,0);
-            } else if (get_power (xx, yy, 0, 0) != 0) {
-                mc=Color(0,0x7F,0);
-            } else {
-                mc=Color(0xFF,0xFF,0xFF);
+            /* default color = grey */
+            mc=Color(0xFF,0xFF,0xFF);
+            if (MP_INFO(xx, yy).flags & FLAG_ASKED_FOR_POWER) {
+                if ( (MP_INFO(xx, yy).flags & FLAG_GOT_POWER) != 0) {
+                    /* Windmill powered */
+                    if (get_power (xx, yy, 0, 0) != 0)
+                        mc=Color(0,0x7F,0);
+                    /* Normal powered */
+                    if (get_power (xx, yy, 0, 1) != 0)
+                        mc=Color(0,0xFF,0);
+                } else {
+                    /* did not get power */
+                    /* !!! don't call get power here or the flags will be set :-) */
+                        mc=Color(0xFF,0,0); // (red)
+                }
             }
             if (MP_GROUP(xx,yy) == GROUP_POWER_LINE)
                 mc=Color(0xFF,0xFF,0); //yellow
 
-            mc=light(mc,brightness(getColorNormal(x,y)));
+            mc=light( mc,(0xAA + brightness(getColorNormal(xx,yy)))/2 );
             return mc;
         }
         case TRAFFIC: {



From alainb at mail.berlios.de  Wed Nov 21 02:21:36 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Wed, 21 Nov 2007 02:21:36 +0100
Subject: [Lincity-ng-commit] r1282 - trunk
Message-ID: <200711210121.lAL1LaQ3018829@sheep.berlios.de>

Author: alainb
Date: 2007-11-21 02:21:36 +0100 (Wed, 21 Nov 2007)
New Revision: 1282

Modified:
   trunk/TODO
Log:
update TODO

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2007-11-21 01:05:49 UTC (rev 1281)
+++ trunk/TODO	2007-11-21 01:21:36 UTC (rev 1282)
@@ -58,13 +58,11 @@
  [M] Print out more debug infos that user can send in with debug reports:
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
- [H] Looks like watching electricity minimap uses power. Seems to be this way
-     in classic already. Minmap only shows if there is power in the area, not 
-     if there is enough of it.
  [L] "Dungeon Keeper"-like message queue
- [M] Integrate waterwell branch in main. Maybe as option so we get playtesters?
+ [?] waterwell as a runtime option ?
 
 -- Infrastructure/Deployment --
  [H] Setup an automatic backup script for the wiki!
  [L] Is it possible to automatically generate/maintain a ChangeLog file from svn
      commits?  (Nathan: http://tiefighter.et.tudelft.nl/~arthur/svn2cl/)
+     Yes:  $ svn log >Changelog_full



From alainb at mail.berlios.de  Thu Nov 22 00:04:32 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Thu, 22 Nov 2007 00:04:32 +0100
Subject: [Lincity-ng-commit] r1283 - in trunk: . src/lincity/modules
Message-ID: <200711212304.lALN4WnY028215@sheep.berlios.de>

Author: alainb
Date: 2007-11-22 00:04:31 +0100 (Thu, 22 Nov 2007)
New Revision: 1283

Added:
   trunk/README-TODO-WaterWell
   trunk/README-WaterWell
Removed:
   trunk/README-TODO-WaterWell
Modified:
   trunk/TODO
   trunk/src/lincity/modules/residence.cpp
Log:
update TODO with waterwell stuff

Deleted: trunk/README-TODO-WaterWell
===================================================================
--- trunk/README-TODO-WaterWell	2007-11-21 01:21:36 UTC (rev 1282)
+++ trunk/README-TODO-WaterWell	2007-11-21 23:04:31 UTC (rev 1283)
@@ -1,146 +0,0 @@
-README:
--------
-Attempt to implement some kind of water management.
-This file is a temporary note book.
-
-HELP NEEDED:
-------------
- -Better graphic for icon and tile. (i did my best but its not enough ;-)
- -sound for waterwell tile.
-  
-BUGS:
------
- -icon, tile (hmmm, must be redrawn by someone competent)
- -info with query tool seems to not work on desert and trees, or work randomly
- -bug of trunk = (re)initialisation of engine and UI is not enough.
-
-DONE:
------
-basic water management implemented:
- -residence need water like food. Lack of water has the same consequences as lack of food.
- -random village has a water well.
- -well's range is shown in starvation window and around cursor
- -initial desert tiles have no underground water (added flag has_underground_water)
- -farm and charcoal (in communes) production depends on underground water
- -parks need ugw (no park on true desert tile)
- -2 scenarios: extreme_arid and extreme_wetland (random village is in between)
- -basic ecology: change desert with UGW (= bulldozed tile) to green after some monthes.
-   (needed for showing UGW for placing farms communes and parks)
- -Tuning of aridity parameter and others (communes, farms, parks) seems rather correct.
-  
-TODO: 
------
-* Translations: English is ok, other languages not: 
-        added data/help/en/waterwell.xml
-        modified residential.xml, farms.xml, parks.xml, communes.xml, index.xml, button-index.xml.
-* additional tiles for desert (like water)
-* info with query tool, (waterwell, residences, farms, communes, parks)
- 
-AIM:
-----
-* simple ecology = periodic event :
-   - probably need additional property (global aridity, tile_aridity_table_pointer)
-   - neighbours  => % decrease/increase from desert to tree3. (tree3 need 4 neighbouring trees)
-   - pollution ++%decrease
-   - water ++%increase
-   = just look nicer (change nothing in the game) but could show impact of human activities on forests :)
-
-* Water quality (from drinkable to mortal).
-  - tile property ++ UG_water, UG_pollution, UG_waste , UG_altitude.
-  - altitude to know the local slope and the drainage basin.
-        unit 1cm        +1/tile is enough slope for calm river, large river => +0/tile,
-                        coast line +100, land + rand() % mountainity per tile.
-        maybe just UGW_altitude. Need to be tested and displayed in altitude minimap.
-        pb: ugw motion with desert tile:
-                -probably need some iterations during creation to draw a path.
-                -allow diagonal motion
-  - residences, farms and industries can pollute water.
-  - park along a river or around a well will also reduce the pollution.
-  - pollution transported by water will follow the slope, so go in river and travel toward the bottom
-      of the map (roughtly opposite of wind direction :-)
-  - annual event = waste => pollution diffusion and slow diminution (1000 years)
-	In NG_1.1 already, tips slowly degrade to green.
-
-Won't do soon, maybe never:
----------------------------
-* Areas without water could need high-tech deep well and/or pipes to feed the water station.
-
-* residence near river should not need water well.
-
-* transport capacity for water = water_on_road, water_on rail.... ?
-  This mean quantity management of water. can be very tricky in addition to quality.
-  rev 1170 uses range, so no need for transport.
-  ? market can buy/sell water ? or waterwell is a watermarket ? 
-
-* fire/health cover in dry area should cost more (need more equipment ...)
-
-* industries also need water (connection needed?, or pipes?)
-
-REMARKS/NOTES:
---------------
-Don't consider this is important, it's just some ideas caught while wandering in the
-code. They are written here instead of somewhere else, but maybe they will just be forgotten
-or go in the wiki.
-
-* initialise with srand (time) and add command line option --seed (easier debugging)
-
-* random village is placed near water in original lincity :) 
-  (see src/lincity/simulate.cpp random_start)
-
-* Code contains obsolete stuff from old lincity (eg .csi references ...). Maybe a clean up should
- be considered, but that can be a big job with compatibility issues.
- (so in another branch, and later as far as i m concerned :-)
-
-* separation of engine and graphics is rather good
-   - additional data structure could be useful
-        map += group_xyz_no_credit + underground missing stuff + empty slots for future improvements.
-   - a building gives: tech at build time, average state (needs %, production %) during last period
-   - the drawing modules uses the info to choose correct tile, and manage looping for
-                cleaner animation (currently fast speed skip frames => weird animation).
-
-* With market range, everything can already jump accross rivers.
-* rivers are ready for transport: in lin-city.h  
-  #define MAX_FOOD_ON_RIVER (MAX_FOOD_ON_TRACK*2)
-  #define MAX_JOBS_ON_RIVER (MAX_JOBS_ON_TRACK*2)
-  #define MAX_COAL_ON_RIVER (MAX_COAL_ON_TRACK*2)
-  #define MAX_GOODS_ON_RIVER (MAX_GOODS_ON_TRACK*2)
-  #define MAX_ORE_ON_RIVER (MAX_ORE_ON_TRACK*2)
-  #define MAX_STEEL_ON_RIVER (MAX_STEEL_ON_TRACK*2)
-
-  but are not in GROUP_IS_TRANSPORT.
-  #define GROUP_IS_TRANSPORT(group) \
-            ((group == GROUP_TRACK) || \
-             (group == GROUP_ROAD) || \
-             (group == GROUP_RAIL) || \
-             (group == GROUP_POWER_LINE))
-  Beach scenario could cause trouble (stock many thing in the sea !).
-  FLAG_IS_RIVER (=navigable) should allow to control this: 
-  	coast line = navigable = RIVER
-	off shore = not navigable = WATER
-  In current version (1195), in Beach all the sea is navigable.
-
-* Speed of transport: (must think of this and look more carefully)
-  afaik speed of transport +-= 1 tile/iteration for all transports
-  it could be set to different value: speed = N <=> N iteration
-  track_speed = 1
-  road_speed = 2
-  train_speed = 3
-  river_speed = 0.3 but huge capacity for coal,ore and steel.
-  	low speed should prevent absorbing everything, but once the
-	river is loaded it should be a nice transport.
-
-* Parks are not entertainment parks. They are biological depollution tool
- => they are build in very polluted areas (sometimes mortal)
- => no child games should appear there!
-
-* Parks appear too early, when they are not needed.
-
-* Graphic before rail techlevel should not have cars, but horses and bullocks instead.
-* Low tech houses looks too modern.
-
-* non-navigable waters (not seas) could very slowly become green
-        less than 1/1000 chance per year, inversely proportionnal to surface.
-
-* Minimap size is hardcoded 200 pixel = 2x WORLD_SIDE_LEN. Probably need to use pixel for sharp graphics.
-
-

Added: trunk/README-TODO-WaterWell
===================================================================
--- trunk/README-TODO-WaterWell	2007-11-21 01:21:36 UTC (rev 1282)
+++ trunk/README-TODO-WaterWell	2007-11-21 23:04:31 UTC (rev 1283)
@@ -0,0 +1,133 @@
+README:
+-------
+Attempt to implement some kind of water management.
+This file is a temporary note book.
+
+BUGS:
+-----
+ -waterwell icon, tile (hmmm, must be redrawn by someone competent :-)
+ -info with query tool seems to not work on desert and trees, or work randomly
+ -bug of trunk = (re)initialisation of engine and UI is not enough.
+
+DONE:
+-----
+basic water management implemented:
+ -residence need water like food. Lack of water has the same consequences as lack of food.
+ -random village has a water well.
+ -well's range is shown in starvation window and around cursor
+ -initial desert tiles have no underground water (added flag has_underground_water)
+ -farm and charcoal (in communes) production depends on underground water
+ -parks need ugw (no park on true desert tile)
+ -2 scenarios: extreme_arid and extreme_wetland (random village is in between)
+ -basic ecology: change desert with UGW (= bulldozed tile) to green after some monthes.
+   (needed for showing UGW for placing farms communes and parks)
+ -Tuning of aridity parameter and others (communes, farms, parks) seems rather correct.
+  
+AIM:
+----
+* simple ecology = periodic event :
+   - probably need additional property (global aridity, tile_aridity_table_pointer)
+   - neighbours  => % decrease/increase from desert to tree3. (tree3 need 4 neighbouring trees)
+   - pollution ++%decrease
+   - water ++%increase
+   = just look nicer (change nothing in the game) but could show impact of human activities on forests :)
+
+* Water quality (from drinkable to mortal).
+  - tile property ++ UG_water, UG_pollution, UG_waste , UG_altitude.
+  - altitude to know the local slope and the drainage basin.
+        unit 1cm        +1/tile is enough slope for calm river, large river => +0/tile,
+                        coast line +100, land + rand() % mountainity per tile.
+        maybe just UGW_altitude. Need to be tested and displayed in altitude minimap.
+        pb: ugw motion with desert tile:
+                -probably need some iterations during creation to draw a path.
+                -allow diagonal motion
+  - residences, farms and industries can pollute water.
+  - park along a river or around a well will also reduce the pollution.
+  - pollution transported by water will follow the slope, so go in river and travel toward the bottom
+      of the map (roughtly opposite of wind direction :-)
+  - annual event = waste => pollution diffusion and slow diminution (1000 years)
+	In NG_1.1 already, tips slowly degrade to green.
+
+Won't do soon, maybe never:
+---------------------------
+* Areas without water could need high-tech deep well and/or pipes to feed the water station.
+
+* residence near river should not need water well.
+
+* transport capacity for water = water_on_road, water_on rail.... ?
+  This mean quantity management of water. can be very tricky in addition to quality.
+  rev 1170 uses range, so no need for transport.
+  ? market can buy/sell water ? or waterwell is a watermarket ? 
+
+* fire/health cover in dry area should cost more (need more equipment ...)
+
+* industries also need water (connection needed?, or pipes?)
+
+REMARKS/NOTES:
+--------------
+Don't consider this is important, it's just some ideas caught while wandering in the
+code. They are written here instead of somewhere else, but maybe they will just be forgotten
+or go in the wiki.
+
+* initialise with srand (time) and add command line option --seed (easier debugging)
+
+* random village is placed near water in original lincity :) 
+  (see src/lincity/simulate.cpp random_start)
+
+* Code contains obsolete stuff from old lincity (eg .csi references ...). Maybe a clean up should
+ be considered, but that can be a big job with compatibility issues.
+ (so in another branch, and later as far as i m concerned :-)
+
+* separation of engine and graphics is rather good
+   - additional data structure could be useful
+        map += group_xyz_no_credit + underground missing stuff + empty slots for future improvements.
+   - a building gives: tech at build time, average state (needs %, production %) during last period
+   - the drawing modules uses the info to choose correct tile, and manage looping for
+                cleaner animation (currently fast speed skip frames => weird animation).
+
+* With market range, everything can already jump accross rivers.
+* rivers are ready for transport: in lin-city.h  
+  #define MAX_FOOD_ON_RIVER (MAX_FOOD_ON_TRACK*2)
+  #define MAX_JOBS_ON_RIVER (MAX_JOBS_ON_TRACK*2)
+  #define MAX_COAL_ON_RIVER (MAX_COAL_ON_TRACK*2)
+  #define MAX_GOODS_ON_RIVER (MAX_GOODS_ON_TRACK*2)
+  #define MAX_ORE_ON_RIVER (MAX_ORE_ON_TRACK*2)
+  #define MAX_STEEL_ON_RIVER (MAX_STEEL_ON_TRACK*2)
+
+  but are not in GROUP_IS_TRANSPORT.
+  #define GROUP_IS_TRANSPORT(group) \
+            ((group == GROUP_TRACK) || \
+             (group == GROUP_ROAD) || \
+             (group == GROUP_RAIL) || \
+             (group == GROUP_POWER_LINE))
+  Beach scenario could cause trouble (stock many thing in the sea !).
+  FLAG_IS_RIVER (=navigable) should allow to control this: 
+  	coast line = navigable = RIVER
+	off shore = not navigable = WATER
+  In current version (1195), in Beach all the sea is navigable.
+
+* Speed of transport: (must think of this and look more carefully)
+  afaik speed of transport +-= 1 tile/iteration for all transports
+  it could be set to different value: speed = N <=> N iteration
+  track_speed = 1
+  road_speed = 2
+  train_speed = 3
+  river_speed = 0.3 but huge capacity for coal,ore and steel.
+  	low speed should prevent absorbing everything, but once the
+	river is loaded it should be a nice transport.
+
+* Parks are not entertainment parks. They are biological depollution tool
+ => they are build in very polluted areas (sometimes mortal)
+ => no child games should appear there!
+
+* Parks appear too early, when they are not needed.
+
+* Graphic before rail techlevel should not have cars, but horses and bullocks instead.
+* Low tech houses looks too modern.
+
+* non-navigable waters (not seas) could very slowly become green
+        less than 1/1000 chance per year, inversely proportionnal to surface.
+
+* Minimap size is hardcoded 200 pixel = 2x WORLD_SIDE_LEN. Probably need to use pixel for sharp graphics.
+
+

Added: trunk/README-WaterWell
===================================================================
--- trunk/README-WaterWell	2007-11-21 01:21:36 UTC (rev 1282)
+++ trunk/README-WaterWell	2007-11-21 23:04:31 UTC (rev 1283)
@@ -0,0 +1,133 @@
+README:
+-------
+Attempt to implement some kind of water management.
+This file is a temporary note book.
+
+BUGS:
+-----
+ -waterwell icon, tile (hmmm, must be redrawn by someone competent :-)
+ -info with query tool seems to not work on desert and trees, or work randomly
+ -bug of trunk = (re)initialisation of engine and UI is not enough.
+
+DONE:
+-----
+basic water management implemented:
+ -residence need water like food. Lack of water has the same consequences as lack of food.
+ -random village has a water well.
+ -well's range is shown in starvation window and around cursor
+ -initial desert tiles have no underground water (added flag has_underground_water)
+ -farm and charcoal (in communes) production depends on underground water
+ -parks need ugw (no park on true desert tile)
+ -2 scenarios: extreme_arid and extreme_wetland (random village is in between)
+ -basic ecology: change desert with UGW (= bulldozed tile) to green after some monthes.
+   (needed for showing UGW for placing farms communes and parks)
+ -Tuning of aridity parameter and others (communes, farms, parks) seems rather correct.
+  
+AIM:
+----
+* simple ecology = periodic event :
+   - probably need additional property (global aridity, tile_aridity_table_pointer)
+   - neighbours  => % decrease/increase from desert to tree3. (tree3 need 4 neighbouring trees)
+   - pollution ++%decrease
+   - water ++%increase
+   = just look nicer (change nothing in the game) but could show impact of human activities on forests :)
+
+* Water quality (from drinkable to mortal).
+  - tile property ++ UG_water, UG_pollution, UG_waste , UG_altitude.
+  - altitude to know the local slope and the drainage basin.
+        unit 1cm        +1/tile is enough slope for calm river, large river => +0/tile,
+                        coast line +100, land + rand() % mountainity per tile.
+        maybe just UGW_altitude. Need to be tested and displayed in altitude minimap.
+        pb: ugw motion with desert tile:
+                -probably need some iterations during creation to draw a path.
+                -allow diagonal motion
+  - residences, farms and industries can pollute water.
+  - park along a river or around a well will also reduce the pollution.
+  - pollution transported by water will follow the slope, so go in river and travel toward the bottom
+      of the map (roughtly opposite of wind direction :-)
+  - annual event = waste => pollution diffusion and slow diminution (1000 years)
+	In NG_1.1 already, tips slowly degrade to green.
+
+Won't do soon, maybe never:
+---------------------------
+* Areas without water could need high-tech deep well and/or pipes to feed the water station.
+
+* residence near river should not need water well.
+
+* transport capacity for water = water_on_road, water_on rail.... ?
+  This mean quantity management of water. can be very tricky in addition to quality.
+  rev 1170 uses range, so no need for transport.
+  ? market can buy/sell water ? or waterwell is a watermarket ? 
+
+* fire/health cover in dry area should cost more (need more equipment ...)
+
+* industries also need water (connection needed?, or pipes?)
+
+REMARKS/NOTES:
+--------------
+Don't consider this is important, it's just some ideas caught while wandering in the
+code. They are written here instead of somewhere else, but maybe they will just be forgotten
+or go in the wiki.
+
+* initialise with srand (time) and add command line option --seed (easier debugging)
+
+* random village is placed near water in original lincity :) 
+  (see src/lincity/simulate.cpp random_start)
+
+* Code contains obsolete stuff from old lincity (eg .csi references ...). Maybe a clean up should
+ be considered, but that can be a big job with compatibility issues.
+ (so in another branch, and later as far as i m concerned :-)
+
+* separation of engine and graphics is rather good
+   - additional data structure could be useful
+        map += group_xyz_no_credit + underground missing stuff + empty slots for future improvements.
+   - a building gives: tech at build time, average state (needs %, production %) during last period
+   - the drawing modules uses the info to choose correct tile, and manage looping for
+                cleaner animation (currently fast speed skip frames => weird animation).
+
+* With market range, everything can already jump accross rivers.
+* rivers are ready for transport: in lin-city.h  
+  #define MAX_FOOD_ON_RIVER (MAX_FOOD_ON_TRACK*2)
+  #define MAX_JOBS_ON_RIVER (MAX_JOBS_ON_TRACK*2)
+  #define MAX_COAL_ON_RIVER (MAX_COAL_ON_TRACK*2)
+  #define MAX_GOODS_ON_RIVER (MAX_GOODS_ON_TRACK*2)
+  #define MAX_ORE_ON_RIVER (MAX_ORE_ON_TRACK*2)
+  #define MAX_STEEL_ON_RIVER (MAX_STEEL_ON_TRACK*2)
+
+  but are not in GROUP_IS_TRANSPORT.
+  #define GROUP_IS_TRANSPORT(group) \
+            ((group == GROUP_TRACK) || \
+             (group == GROUP_ROAD) || \
+             (group == GROUP_RAIL) || \
+             (group == GROUP_POWER_LINE))
+  Beach scenario could cause trouble (stock many thing in the sea !).
+  FLAG_IS_RIVER (=navigable) should allow to control this: 
+  	coast line = navigable = RIVER
+	off shore = not navigable = WATER
+  In current version (1195), in Beach all the sea is navigable.
+
+* Speed of transport: (must think of this and look more carefully)
+  afaik speed of transport +-= 1 tile/iteration for all transports
+  it could be set to different value: speed = N <=> N iteration
+  track_speed = 1
+  road_speed = 2
+  train_speed = 3
+  river_speed = 0.3 but huge capacity for coal,ore and steel.
+  	low speed should prevent absorbing everything, but once the
+	river is loaded it should be a nice transport.
+
+* Parks are not entertainment parks. They are biological depollution tool
+ => they are build in very polluted areas (sometimes mortal)
+ => no child games should appear there!
+
+* Parks appear too early, when they are not needed.
+
+* Graphic before rail techlevel should not have cars, but horses and bullocks instead.
+* Low tech houses looks too modern.
+
+* non-navigable waters (not seas) could very slowly become green
+        less than 1/1000 chance per year, inversely proportionnal to surface.
+
+* Minimap size is hardcoded 200 pixel = 2x WORLD_SIDE_LEN. Probably need to use pixel for sharp graphics.
+
+

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2007-11-21 01:21:36 UTC (rev 1282)
+++ trunk/TODO	2007-11-21 23:04:31 UTC (rev 1283)
@@ -6,7 +6,10 @@
 
 Graphics 
 ~~~~~~~~
+ [H] Decent graphic for Waterwell icon and tiles (2 files)
 
+ [M] Additional tiles for correct link between desert/green (like water/green)
+
  [M] Draw Mousecursors for
         - text normal, link (in help window)
         - what's this (query tool), bulldoze
@@ -16,53 +19,75 @@
 
 Sounds
 ~~~~~~
+ [L] Add sound for waterwell tile
  [L] Add sound for rocket launch and rocket crash. 
 
+Translations/Help
+~~~~~~~~~~~~~~~~~
+ [H] There were help page without any link to them. Some of the texts
+     are just wrong because they were taken from classic without any
+     adjustment to the new gui.
+     This should is fixed for english version in svn 1162 (march 2007), but
+     need to be checked for other languages. see:
+     http://lincity-ng.berlios.de/wiki/index.php/Translate#Maintaining_existing_translations
 
+ [H] svn 1276 merged branch waterwell.
+     English help is more or less ok, other languages not: 
+       -added data/help/en/waterwell.xml
+       -modified residential.xml, farms.xml, parks.xml, communes.xml, index.xml, button-index.xml.
+
+
 Programming
 ~~~~~~~~~~~
 
 --Gui--
+ [M] Resize "help" window.
+
  [M] Implement dirty rectangle methods to only redraw when needed
- [?] Think about mechanism for attach arbitrary properties to components
-    (for tooltips, styles (and layout data?) )
+
  [M] drawToTexture in OpenGL (noone using this at the moment, could be used to
      optimize minimap in the future. Maybe this is a good starting point :
      http://www.paulsprojects.net/opengl/rtotex/rtotex.html)
      glTexSubImage2D might be helpfull
+
  [?] Usability testing log. That the buttons the user pressed (and additional
      actions like scrolling the map, creating buildings, displaying building
      stats). This could be used to measure common user actions and improve
      usability.
- [M] Resize "help" window.
 
+ [?] Think about mechanism for attach arbitrary properties to components
+    (for tooltips, styles (and layout data?) )
+
 --Bugs--
+ [H] Windows: Something in MainMenu.cpp with recentfile and curfile is broken. 
+
+ [M] Windows: Use user's home for savegames
+
+ [M] Get rid of all the compiler warnings.
+
  [L] New text on buttons is truncated to original textlength. 
      (eg in load game menu) Buttons that had an empty string as caption once
      won't change to anything else. At least the caption is not shown.
- [M] Get rid of all the compiler warnings.
- [M] Windows: Use user's home for savegames
- [H] Windows: Something in MainMenu.cpp with recentfile and curfile is broken. 
 
---Translations/Help--
- [H] There were help page without any link to them. Some of the texts
-     are just wrong because they were taken from classic without any
-     adjustment to the new gui.
-     This should is fixed for english version in svn 1162 (march 2007), but
-     need to be checked for other languages. see:
-     http://lincity-ng.berlios.de/wiki/index.php/Translate#Maintaining_existing_translations
+--Game--
+ [H] Check that info obtained with query tool exists/are correct for
+        waterwell, residences, farms, communes, parks
 
---Game--
- [L] Implement a What's this button - down to [L], we can simply open the front
-     page of the help file for now... Right click for help for nearly every button.
  [M] Print out more debug infos that user can send in with debug reports:
      architecture?, SDL version, opengl driver name, SDL software driver name,
      SDL sound driver name, screen resolution
+
+ [L] Implement a What's this button - down to [L], we can simply open the front
+     page of the help file for now... Right click for help for nearly every button.
+
  [L] "Dungeon Keeper"-like message queue
+
  [?] waterwell as a runtime option ?
 
+
 -- Infrastructure/Deployment --
  [H] Setup an automatic backup script for the wiki!
+
  [L] Is it possible to automatically generate/maintain a ChangeLog file from svn
      commits?  (Nathan: http://tiefighter.et.tudelft.nl/~arthur/svn2cl/)
      Yes:  $ svn log >Changelog_full

Modified: trunk/src/lincity/modules/residence.cpp
===================================================================
--- trunk/src/lincity/modules/residence.cpp	2007-11-21 01:21:36 UTC (rev 1282)
+++ trunk/src/lincity/modules/residence.cpp	2007-11-21 23:04:31 UTC (rev 1283)
@@ -19,6 +19,10 @@
       // int 3 is the real time for the next icon update
       // int_4 is the birth rate modifier.
       // int_5 is the death rate modifier.
+      // int_6 unused
+      // int_7 unused Could be FLAG_HAD_POWER which is specific to residences, and will free 1 flag.
+      //                btw, FLAG_POWERED and FLAG_GOT_POWER means the same thing. => free 1 more flag.
+      //
       */
     int p;                           /* population */
     int bad = 35, good = 30;         /* (un)desirability of living here */



From alainb at mail.berlios.de  Thu Nov 22 00:18:16 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Thu, 22 Nov 2007 00:18:16 +0100
Subject: [Lincity-ng-commit] r1284 - trunk
Message-ID: <200711212318.lALNIGYb029139@sheep.berlios.de>

Author: alainb
Date: 2007-11-22 00:18:15 +0100 (Thu, 22 Nov 2007)
New Revision: 1284

Removed:
   trunk/README-TODO-WaterWell
Log:
remove duplicated readme-waterwell (missed mv)

Deleted: trunk/README-TODO-WaterWell
===================================================================
--- trunk/README-TODO-WaterWell	2007-11-21 23:04:31 UTC (rev 1283)
+++ trunk/README-TODO-WaterWell	2007-11-21 23:18:15 UTC (rev 1284)
@@ -1,133 +0,0 @@
-README:
--------
-Attempt to implement some kind of water management.
-This file is a temporary note book.
-
-BUGS:
------
- -waterwell icon, tile (hmmm, must be redrawn by someone competent :-)
- -info with query tool seems to not work on desert and trees, or work randomly
- -bug of trunk = (re)initialisation of engine and UI is not enough.
-
-DONE:
------
-basic water management implemented:
- -residence need water like food. Lack of water has the same consequences as lack of food.
- -random village has a water well.
- -well's range is shown in starvation window and around cursor
- -initial desert tiles have no underground water (added flag has_underground_water)
- -farm and charcoal (in communes) production depends on underground water
- -parks need ugw (no park on true desert tile)
- -2 scenarios: extreme_arid and extreme_wetland (random village is in between)
- -basic ecology: change desert with UGW (= bulldozed tile) to green after some monthes.
-   (needed for showing UGW for placing farms communes and parks)
- -Tuning of aridity parameter and others (communes, farms, parks) seems rather correct.
-  
-AIM:
-----
-* simple ecology = periodic event :
-   - probably need additional property (global aridity, tile_aridity_table_pointer)
-   - neighbours  => % decrease/increase from desert to tree3. (tree3 need 4 neighbouring trees)
-   - pollution ++%decrease
-   - water ++%increase
-   = just look nicer (change nothing in the game) but could show impact of human activities on forests :)
-
-* Water quality (from drinkable to mortal).
-  - tile property ++ UG_water, UG_pollution, UG_waste , UG_altitude.
-  - altitude to know the local slope and the drainage basin.
-        unit 1cm        +1/tile is enough slope for calm river, large river => +0/tile,
-                        coast line +100, land + rand() % mountainity per tile.
-        maybe just UGW_altitude. Need to be tested and displayed in altitude minimap.
-        pb: ugw motion with desert tile:
-                -probably need some iterations during creation to draw a path.
-                -allow diagonal motion
-  - residences, farms and industries can pollute water.
-  - park along a river or around a well will also reduce the pollution.
-  - pollution transported by water will follow the slope, so go in river and travel toward the bottom
-      of the map (roughtly opposite of wind direction :-)
-  - annual event = waste => pollution diffusion and slow diminution (1000 years)
-	In NG_1.1 already, tips slowly degrade to green.
-
-Won't do soon, maybe never:
----------------------------
-* Areas without water could need high-tech deep well and/or pipes to feed the water station.
-
-* residence near river should not need water well.
-
-* transport capacity for water = water_on_road, water_on rail.... ?
-  This mean quantity management of water. can be very tricky in addition to quality.
-  rev 1170 uses range, so no need for transport.
-  ? market can buy/sell water ? or waterwell is a watermarket ? 
-
-* fire/health cover in dry area should cost more (need more equipment ...)
-
-* industries also need water (connection needed?, or pipes?)
-
-REMARKS/NOTES:
---------------
-Don't consider this is important, it's just some ideas caught while wandering in the
-code. They are written here instead of somewhere else, but maybe they will just be forgotten
-or go in the wiki.
-
-* initialise with srand (time) and add command line option --seed (easier debugging)
-
-* random village is placed near water in original lincity :) 
-  (see src/lincity/simulate.cpp random_start)
-
-* Code contains obsolete stuff from old lincity (eg .csi references ...). Maybe a clean up should
- be considered, but that can be a big job with compatibility issues.
- (so in another branch, and later as far as i m concerned :-)
-
-* separation of engine and graphics is rather good
-   - additional data structure could be useful
-        map += group_xyz_no_credit + underground missing stuff + empty slots for future improvements.
-   - a building gives: tech at build time, average state (needs %, production %) during last period
-   - the drawing modules uses the info to choose correct tile, and manage looping for
-                cleaner animation (currently fast speed skip frames => weird animation).
-
-* With market range, everything can already jump accross rivers.
-* rivers are ready for transport: in lin-city.h  
-  #define MAX_FOOD_ON_RIVER (MAX_FOOD_ON_TRACK*2)
-  #define MAX_JOBS_ON_RIVER (MAX_JOBS_ON_TRACK*2)
-  #define MAX_COAL_ON_RIVER (MAX_COAL_ON_TRACK*2)
-  #define MAX_GOODS_ON_RIVER (MAX_GOODS_ON_TRACK*2)
-  #define MAX_ORE_ON_RIVER (MAX_ORE_ON_TRACK*2)
-  #define MAX_STEEL_ON_RIVER (MAX_STEEL_ON_TRACK*2)
-
-  but are not in GROUP_IS_TRANSPORT.
-  #define GROUP_IS_TRANSPORT(group) \
-            ((group == GROUP_TRACK) || \
-             (group == GROUP_ROAD) || \
-             (group == GROUP_RAIL) || \
-             (group == GROUP_POWER_LINE))
-  Beach scenario could cause trouble (stock many thing in the sea !).
-  FLAG_IS_RIVER (=navigable) should allow to control this: 
-  	coast line = navigable = RIVER
-	off shore = not navigable = WATER
-  In current version (1195), in Beach all the sea is navigable.
-
-* Speed of transport: (must think of this and look more carefully)
-  afaik speed of transport +-= 1 tile/iteration for all transports
-  it could be set to different value: speed = N <=> N iteration
-  track_speed = 1
-  road_speed = 2
-  train_speed = 3
-  river_speed = 0.3 but huge capacity for coal,ore and steel.
-  	low speed should prevent absorbing everything, but once the
-	river is loaded it should be a nice transport.
-
-* Parks are not entertainment parks. They are biological depollution tool
- => they are build in very polluted areas (sometimes mortal)
- => no child games should appear there!
-
-* Parks appear too early, when they are not needed.
-
-* Graphic before rail techlevel should not have cars, but horses and bullocks instead.
-* Low tech houses looks too modern.
-
-* non-navigable waters (not seas) could very slowly become green
-        less than 1/1000 chance per year, inversely proportionnal to surface.
-
-* Minimap size is hardcoded 200 pixel = 2x WORLD_SIDE_LEN. Probably need to use pixel for sharp graphics.
-
-



From alainb at mail.berlios.de  Sun Nov 25 20:00:27 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sun, 25 Nov 2007 20:00:27 +0100
Subject: [Lincity-ng-commit] r1285 - in trunk: . src/tools
Message-ID: <200711251900.lAPJ0RQQ020592@sheep.berlios.de>

Author: alainb
Date: 2007-11-25 20:00:26 +0100 (Sun, 25 Nov 2007)
New Revision: 1285

Added:
   trunk/src/tools/Lindent-2.6.23.8.sh
Modified:
   trunk/Bugs-beta
   trunk/README-WaterWell
Log:
added src/tools/Lindent script for reformating code

Modified: trunk/Bugs-beta
===================================================================
--- trunk/Bugs-beta	2007-11-21 23:18:15 UTC (rev 1284)
+++ trunk/Bugs-beta	2007-11-25 19:00:26 UTC (rev 1285)
@@ -1,5 +1,11 @@
 * regression from 1.0.3 (dont know precisely when)
-  When tech is not high enough, trying to build a gayed item, just close the item tray,
+  When tech is not high enough, trying to build a grayed item, just close the item tray,
   and show a message in the console only.
   1.0.3 behavior is to let the  item tray open, so info_bubble pop-up and shows the required tech.
 
+* waterwell icon, tile (hmmm, must be redrawn by someone competent :-)
+
+* info with query tool seems to not work on desert and trees, or work randomly
+
+* bug of trunk = (re)initialisation of engine and UI is not enough. (max tech level...)
+

Modified: trunk/README-WaterWell
===================================================================
--- trunk/README-WaterWell	2007-11-21 23:18:15 UTC (rev 1284)
+++ trunk/README-WaterWell	2007-11-25 19:00:26 UTC (rev 1285)
@@ -3,12 +3,6 @@
 Attempt to implement some kind of water management.
 This file is a temporary note book.
 
-BUGS:
------
- -waterwell icon, tile (hmmm, must be redrawn by someone competent :-)
- -info with query tool seems to not work on desert and trees, or work randomly
- -bug of trunk = (re)initialisation of engine and UI is not enough.
-
 DONE:
 -----
 basic water management implemented:

Added: trunk/src/tools/Lindent-2.6.23.8.sh
===================================================================
--- trunk/src/tools/Lindent-2.6.23.8.sh	2007-11-21 23:18:15 UTC (rev 1284)
+++ trunk/src/tools/Lindent-2.6.23.8.sh	2007-11-25 19:00:26 UTC (rev 1285)
@@ -0,0 +1,11 @@
+#!/bin/sh
+# The original tiny script is use to put linux code in corformance with
+# the Linux Coding Style. You should read it :-)
+#indent -npro -kr -i8 -ts8 -sob -l80 -ss -ncs -cp1 "$@"
+
+# However for Lincity-ng, due to
+# - C++ code which tends to have longs lines
+# - NG is graphic so run on rather good hardware => we can afford longer line (120) than linux kernel (80)
+# - indent 8 is too much for existing code => indent is 4
+# - tabs causes trouble to some we use spaces intead of tabs.
+indent -npro -kr -i4 --no-tabs -sob -l120 -ss -ncs -cp1 "$@"


Property changes on: trunk/src/tools/Lindent-2.6.23.8.sh
___________________________________________________________________
Name: svn:executable
   + *



From alainb at mail.berlios.de  Mon Nov 26 00:01:01 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Mon, 26 Nov 2007 00:01:01 +0100
Subject: [Lincity-ng-commit] r1287 - in trunk/src/lincity: . modules
Message-ID: <200711252301.lAPN119Q006745@sheep.berlios.de>

Author: alainb
Date: 2007-11-26 00:01:01 +0100 (Mon, 26 Nov 2007)
New Revision: 1287

Modified:
   trunk/src/lincity/engine.cpp
   trunk/src/lincity/engine.h
   trunk/src/lincity/lin-city.h
   trunk/src/lincity/modules/shanty.cpp
   trunk/src/lincity/simulate.cpp
   trunk/src/lincity/simulate.h
Log:
move some code for clarity, and reduce number of global functions

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/engine.cpp	2007-11-25 23:01:01 UTC (rev 1287)
@@ -26,11 +26,17 @@
 #include "gui_interface/shared_globals.h"
 
 extern int selected_type_cost;
+
+/****** Private functions prototypes *****/
 static void bulldoze_mappoint(short fill, int x, int y);
-int is_real_river(int x, int y);
 
+static int no_credit_build(int selected_group);
+static void no_credit_build_msg_ng(int selected_group);
+
+int is_real_river(int x, int y);
 int last_warning_message_group = 0;
 
+/************************************************/
 void fire_area(int xx, int yy)
 {
     /* this happens when a rocket crashes or on random_fire. */
@@ -100,7 +106,7 @@
     return total_money;
 }
 
-int no_credit_build(int selected_group)
+static int no_credit_build(int selected_group)
 {
     if (total_money >= 0)
         return (0);
@@ -137,7 +143,7 @@
     return (0);
 }
 
-void no_credit_build_msg_ng(int selected_group)
+static void no_credit_build_msg_ng(int selected_group)
 {
     if (last_warning_message_group == selected_group)
         return;
@@ -457,34 +463,6 @@
     MP_INFO(x, y).int_7 = 0;
 }
 
-/** Mappoint array shuffles mappoint in order to stop linear simulation effects */
-
-/** this is called on startup */
-void init_mappoint_array(void)
-{
-    int x;
-    for (x = 0; x < WORLD_SIDE_LEN; x++) {
-        mappoint_array_x[x] = x;
-        mappoint_array_y[x] = x;
-    }
-}
-
-/** this is called at the beginning of every frame */
-void shuffle_mappoint_array(void)
-{
-    int i, x, a;
-    for (i = 0; i < SHUFFLE_MAPPOINT_COUNT; i++) {
-        x = rand() % WORLD_SIDE_LEN;
-        a = mappoint_array_x[i];
-        mappoint_array_x[i] = mappoint_array_x[x];
-        mappoint_array_x[x] = a;
-        x = rand() % WORLD_SIDE_LEN;
-        a = mappoint_array_y[i];
-        mappoint_array_y[i] = mappoint_array_y[x];
-        mappoint_array_y[x] = a;
-    }
-}
-
 void do_pollution()
 {
     int x, p;
@@ -669,100 +647,6 @@
         }
 }
 
-/*
-   // spiral round from startx,starty until we hit something of group group.
-   // return the x y coords encoded as x+y*WORLD_SIDE_LEN
-   // return -1 if we don't find one.
- */
-int spiral_find_group(int startx, int starty, int group)
-{
-    int i, j, x, y;
-    x = startx;
-    y = starty;
-    /* let's just do a complete spiral for now, work out the bounds later */
-    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
-        for (j = 0; j < i; j++) {
-            x--;
-            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-                if (MP_GROUP(x, y) == group)
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        for (j = 0; j < i; j++) {
-            y--;
-            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-                if (MP_GROUP(x, y) == group)
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        i++;
-        for (j = 0; j < i; j++) {
-            x++;
-            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-                if (MP_GROUP(x, y) == group)
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        for (j = 0; j < i; j++) {
-            y++;
-            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-                if (MP_GROUP(x, y) == group)
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-    }
-    return (-1);
-}
-
-/*
-   // spiral round from startx,starty until we hit a 2x2 space.
-   // return the x y coords encoded as x+y*WORLD_SIDE_LEN
-   // return -1 if we don't find one.
- */
-int spiral_find_2x2(int startx, int starty)
-{
-    int i, j, x, y;
-    x = startx;
-    y = starty;
-    /* let's just do a complete spiral for now, work out the bounds later */
-    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
-        for (j = 0; j < i; j++) {
-            x--;
-            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
-                if (GROUP_IS_BARE(MP_GROUP(x, y))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
-                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        for (j = 0; j < i; j++) {
-            y--;
-            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
-                if (GROUP_IS_BARE(MP_GROUP(x, y))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
-                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        i++;
-        for (j = 0; j < i; j++) {
-            x++;
-            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
-                if (GROUP_IS_BARE(MP_GROUP(x, y))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
-                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-        for (j = 0; j < i; j++) {
-            y++;
-            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
-                if (GROUP_IS_BARE(MP_GROUP(x, y))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
-                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
-                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
-                    return (x + y * WORLD_SIDE_LEN);
-        }
-    }
-    return (-1);
-}
-
 void connect_rivers(void)
 {
     int x, y, count;

Modified: trunk/src/lincity/engine.h
===================================================================
--- trunk/src/lincity/engine.h	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/engine.h	2007-11-25 23:01:01 UTC (rev 1287)
@@ -15,6 +15,9 @@
 int adjust_money(int value);
 void fire_area(int x, int y);
 void do_daily_ecology(void);
+void do_pollution(void);
+void clear_fire_health_and_cricket_cover(void);
+void do_fire_health_and_cricket_cover(void);
 
 extern long real_time;
 

Modified: trunk/src/lincity/lin-city.h
===================================================================
--- trunk/src/lincity/lin-city.h	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/lin-city.h	2007-11-25 23:01:01 UTC (rev 1287)
@@ -174,7 +174,7 @@
 #define FLAG_WATERWELL_COVER    (0x10000000)
 #define FLAG_HAS_UNDERGROUND_WATER (0x20000000)
 #define FLAG_ASKED_FOR_POWER       (0x40000000)
-#define FLAG_GOT_POWER             (0x80000000) /* 2^31 = last flag */
+#define FLAG_GOT_POWER             (0x80000000) /* 2^31 = last flag */  //nearly duplicate of FLAG_POWERED 0x10
 
 /* XXX: It would appear that the following T_ are used exactly two times each,
    in market.c.  */
@@ -1166,10 +1166,6 @@
 extern void load_opening_city(char *);
 extern void load_city(char *);
 extern void reset_animation_times(void);
-extern void coal_reserve_setup(void);
-extern void ore_reserve_setup(void);
-extern void setup_river(void);
-extern void setup_river2(int, int, int);
 extern void check_savedir(void);
 extern void make_savedir(void);
 extern void draw_save_dir(int);
@@ -1197,8 +1193,6 @@
 #ifndef LC_X11
 extern void parse_args(int, char **);
 #endif
-extern void sustainability_test(void);
-extern int sust_fire_cover(void);
 extern void check_endian(void);
 extern void eswap32(int *);
 extern void eswap16(unsigned short *);
@@ -1321,7 +1315,6 @@
 void initialize_tax_rates(void);
 void set_mappoint(int x, int y, short selected_type);
 void set_mappoint_used(int, int, int, int);
-int no_credit_build(int selected_type);
 void set_mappoint_ints(int fromx, int fromy, int x, int y);
 void new_city(int *originx, int *originy, int random_village);
 extern void engine_do_time_step(void);
@@ -1336,15 +1329,12 @@
 extern int add_a_substation(int, int);
 extern void remove_a_substation(int, int);
 extern void do_organic_farm(int, int);
-void init_mappoint_array(void);
-extern void shuffle_mappoint_array(void);
 extern void shuffle_substations(void);
 extern void do_coalmine(int, int);
 extern void do_oremine(int, int);
 extern void do_commune(int, int);
 extern void do_port(int, int);
 
-extern void do_pollution(void);
 extern void do_parkland(int, int);
 extern void do_university(int, int);
 extern void do_recycle(int, int);
@@ -1359,15 +1349,11 @@
 extern void do_pottery(int, int);
 extern void do_firestation(int, int);
 extern void do_cricket(int, int);
-extern void clear_fire_health_and_cricket_cover(void);
-extern void do_fire_health_and_cricket_cover(void);
 extern void do_fire_cover(int, int);
 extern void do_health_cover(int, int);
 extern void do_cricket_cover(int, int);
 extern void do_random_fire(int, int, int);
 extern void do_fire(int, int);
-extern int spiral_find_group(int, int, int);
-extern int spiral_find_2x2(int, int);
 extern void add_a_shanty(void);
 extern void remove_a_shanty(int, int);
 extern void update_shanty(void);

Modified: trunk/src/lincity/modules/shanty.cpp
===================================================================
--- trunk/src/lincity/modules/shanty.cpp	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/modules/shanty.cpp	2007-11-25 23:01:01 UTC (rev 1287)
@@ -10,6 +10,8 @@
 #include "shanty.h"
 
 #include <stdlib.h>
+static int spiral_find_2x2(int startx, int starty);
+static int spiral_find_group(int startx, int starty, int group);
 
 void add_a_shanty(void)
 {
@@ -110,3 +112,97 @@
     else
         MP_POL(x + 1, y + 1)++;
 }
+
+/*
+   // spiral round from startx,starty until we hit something of group group.
+   // return the x y coords encoded as x+y*WORLD_SIDE_LEN
+   // return -1 if we don't find one.
+ */
+static int spiral_find_group(int startx, int starty, int group)
+{
+    int i, j, x, y;
+    x = startx;
+    y = starty;
+    /* let's just do a complete spiral for now, work out the bounds later */
+    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
+        for (j = 0; j < i; j++) {
+            x--;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y--;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        i++;
+        for (j = 0; j < i; j++) {
+            x++;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y++;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+    }
+    return (-1);
+}
+
+/*
+   // spiral round from startx,starty until we hit a 2x2 space.
+   // return the x y coords encoded as x+y*WORLD_SIDE_LEN
+   // return -1 if we don't find one.
+ */
+static int spiral_find_2x2(int startx, int starty)
+{
+    int i, j, x, y;
+    x = startx;
+    y = starty;
+    /* let's just do a complete spiral for now, work out the bounds later */
+    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
+        for (j = 0; j < i; j++) {
+            x--;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y--;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        i++;
+        for (j = 0; j < i; j++) {
+            x++;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y++;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+    }
+    return (-1);
+}

Modified: trunk/src/lincity/simulate.cpp
===================================================================
--- trunk/src/lincity/simulate.cpp	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/simulate.cpp	2007-11-25 23:01:01 UTC (rev 1287)
@@ -11,7 +11,6 @@
 #include <sys/types.h>
 #include <fcntl.h>
 
-#include "gui_interface/shared_globals.h"
 /*
 #if defined (WIN32)
 #include <winsock.h>
@@ -29,6 +28,8 @@
 #endif
 */
 
+#include "simulate.h"
+#include "gui_interface/shared_globals.h"
 #include "lctypes.h"
 #include "lin-city.h"
 //#include "cliglobs.h"
@@ -39,8 +40,12 @@
 #include "gui_interface/pbar_interface.h"
 //#include "module_buttons.h"
 
+/* AL1: they are all in engine.cpp */
 extern void connect_rivers(void);
 extern void do_daily_ecology(void);
+extern void clear_fire_health_and_cricket_cover(void);
+extern void do_pollution(void);
+extern void do_fire_health_and_cricket_cover(void);
 
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
@@ -49,11 +54,23 @@
 static void end_of_month_update(void);
 static void start_of_year_update(void);
 static void end_of_year_update(void);
+static void simulate_mappoints(void);
+static void nullify_mappoint(int x, int y);
+
+static void sustainability_test(void);
+static int sust_fire_cover(void);
+
+static void clear_game(void);
 static void random_start(int *originx, int *originy);
-static void simulate_mappoints(void);
 static void quick_start_add(int x, int y, short type, int size);
-static void nullify_mappoint(int x, int y);
 static void setup_land(void);
+static void coal_reserve_setup(void);
+static void ore_reserve_setup(void);
+static void setup_river(void);
+static void setup_river2(int x, int y, int d);
+static void quick_start_add(int x, int y, short type, int size);
+static void debug_mappoints(void);
+static void shuffle_mappoint_array(void);
 
 #define IS_RIVER(x,y) (MP_INFO(x,y).flags & FLAG_IS_RIVER)
 
@@ -91,157 +108,75 @@
     do_periodic_events();
 }
 
-static void nullify_mappoint(int x, int y)
+int count_groups(int g)
 {
-    MP_TYPE(x, y) = CST_GREEN;
-    MP_GROUP(x, y) = GROUP_BARE;
-    MP_SIZE(x, y) = 1;
-    MP_POL(x, y) = 0;
-    MP_INFO(x, y).population = 0;
-    MP_INFO(x, y).flags = 0;
-    MP_INFO(x, y).coal_reserve = 0;
-    MP_INFO(x, y).ore_reserve = 0;
-    MP_INFO(x, y).int_1 = 0;
-    MP_INFO(x, y).int_2 = 0;
-    MP_INFO(x, y).int_3 = 0;
-    MP_INFO(x, y).int_4 = 0;
-    MP_INFO(x, y).int_5 = 0;
-    MP_INFO(x, y).int_6 = 0;
-    MP_INFO(x, y).int_7 = 0;
+    int x, y, i;
+    i = 0;
+    for (y = 0; y < WORLD_SIDE_LEN; y++)
+        for (x = 0; x < WORLD_SIDE_LEN; x++)
+            if (MP_GROUP(x, y) == g)
+                i++;
+    return (i);
 }
 
-static void simulate_mappoints(void)
+void count_all_groups(int *group_count)
 {
-    int xx, yy;
-    shuffle_mappoint_array();
-    for (yy = 0; yy < WORLD_SIDE_LEN; yy++) {
-        /* indirection to rand array to stop lots of linear effects */
-        int y = mappoint_array_y[yy];
-        for (xx = 0; xx < WORLD_SIDE_LEN; xx++) {
-            int x = mappoint_array_x[xx];
-            short grp = MP_GROUP(x, y);
-            if (grp == GROUP_USED || GROUP_IS_BARE(grp))
-                continue;
-            switch (grp) {
-            case GROUP_TRACK:
-                do_track(x, y);
-                break;
-            case GROUP_RAIL:
-                do_rail(x, y);
-                break;
-            case GROUP_ROAD:
-                do_road(x, y);
-                break;
-            case GROUP_ORGANIC_FARM:
-                do_organic_farm(x, y);
-                break;
-            case GROUP_MARKET:
-                do_market(x, y);
-                break;
-            case GROUP_RESIDENCE_LL:
-                do_residence(x, y);
-                break;
-            case GROUP_RESIDENCE_ML:
-                do_residence(x, y);
-                break;
-            case GROUP_RESIDENCE_HL:
-                do_residence(x, y);
-                break;
-            case GROUP_RESIDENCE_LH:
-                do_residence(x, y);
-                break;
-            case GROUP_RESIDENCE_MH:
-                do_residence(x, y);
-                break;
-            case GROUP_RESIDENCE_HH:
-                do_residence(x, y);
-                break;
-            case GROUP_POWER_LINE:
-                do_power_line(x, y);
-                break;
-            case GROUP_SOLAR_POWER:
-                do_power_source(x, y);
-                break;
-            case GROUP_SUBSTATION:
-                do_power_substation(x, y);
-                break;
-            case GROUP_COALMINE:
-                do_coalmine(x, y);
-                break;
-            case GROUP_COAL_POWER:
-                do_power_source_coal(x, y);
-                break;
-            case GROUP_INDUSTRY_L:
-                do_industry_l(x, y);
-                break;
-            case GROUP_INDUSTRY_H:
-                do_industry_h(x, y);
-                break;
-            case GROUP_COMMUNE:
-                do_commune(x, y);
-                break;
-            case GROUP_OREMINE:
-                do_oremine(x, y);
-                break;
-            case GROUP_PORT:
-                do_port(x, y);
-                break;
-            case GROUP_TIP:
-                do_tip(x, y);
-                break;
-            case GROUP_PARKLAND:
-                do_parkland(x, y);
-                break;
-            case GROUP_UNIVERSITY:
-                do_university(x, y);
-                break;
-            case GROUP_RECYCLE:
-                do_recycle(x, y);
-                break;
-            case GROUP_HEALTH:
-                do_health_centre(x, y);
-                break;
-            case GROUP_ROCKET:
-                do_rocket_pad(x, y);
-                break;
-            case GROUP_WINDMILL:
-                do_windmill(x, y);
-                break;
-            case GROUP_MONUMENT:
-                do_monument(x, y);
-                break;
-            case GROUP_SCHOOL:
-                do_school(x, y);
-                break;
-            case GROUP_BLACKSMITH:
-                do_blacksmith(x, y);
-                break;
-            case GROUP_MILL:
-                do_mill(x, y);
-                break;
-            case GROUP_POTTERY:
-                do_pottery(x, y);
-                break;
-            case GROUP_FIRESTATION:
-                do_firestation(x, y);
-                break;
-            case GROUP_CRICKET:
-                do_cricket(x, y);
-                break;
-            case GROUP_FIRE:
-                do_fire(x, y);
-                break;
-            case GROUP_SHANTY:
-                do_shanty(x, y);
-                break;
+    int x, y;
+    unsigned short t, g;
+    for (x = 0; x < NUM_OF_GROUPS; x++)
+        group_count[x] = 0;
+    for (y = 0; y < WORLD_SIDE_LEN; y++) {
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            t = MP_TYPE(x, y);
+            if (t != CST_USED && !GROUP_IS_BARE(MP_GROUP(x, y))) {
+                g = get_group_of_type(t);
+                group_count[g]++;
             }
         }
     }
 }
 
+void initialize_tax_rates(void)
+{
+    income_tax_rate = INCOME_TAX_RATE;
+    coal_tax_rate = COAL_TAX_RATE;
+    goods_tax_rate = GOODS_TAX_RATE;
+    dole_rate = DOLE_RATE;
+    transport_cost_rate = TRANSPORT_COST_RATE;
+    import_cost_rate = IM_PORT_COST_RATE;
+}
+
+
+void init_mappoint_array(void)
+{
+    int x;
+    for (x = 0; x < WORLD_SIDE_LEN; x++) {
+        mappoint_array_x[x] = x;
+        mappoint_array_y[x] = x;
+    }
+}
+
 /* ---------------------------------------------------------------------- *
  * Private Functions
  * ---------------------------------------------------------------------- */
+
+/** this is called at the beginning of every frame */
+static void shuffle_mappoint_array(void)
+{
+    /** Mappoint array shuffles mappoint in order to stop linear simulation effects */
+    int i, x, a;
+    for (i = 0; i < SHUFFLE_MAPPOINT_COUNT; i++) {
+        x = rand() % WORLD_SIDE_LEN;
+        a = mappoint_array_x[i];
+        mappoint_array_x[i] = mappoint_array_x[x];
+        mappoint_array_x[x] = a;
+        x = rand() % WORLD_SIDE_LEN;
+        a = mappoint_array_y[i];
+        mappoint_array_y[i] = mappoint_array_y[x];
+        mappoint_array_y[x] = a;
+    }
+}
+
 static void do_periodic_events(void)
 {
     add_daily_to_monthly();
@@ -400,6 +335,135 @@
     print_total_money();
 }
 
+static void simulate_mappoints(void)
+{
+    int xx, yy;
+    shuffle_mappoint_array();
+    for (yy = 0; yy < WORLD_SIDE_LEN; yy++) {
+        /* indirection to rand array to stop lots of linear effects */
+        int y = mappoint_array_y[yy];
+        for (xx = 0; xx < WORLD_SIDE_LEN; xx++) {
+            int x = mappoint_array_x[xx];
+            short grp = MP_GROUP(x, y);
+            if (grp == GROUP_USED || GROUP_IS_BARE(grp))
+                continue;
+            switch (grp) {
+            case GROUP_TRACK:
+                do_track(x, y);
+                break;
+            case GROUP_RAIL:
+                do_rail(x, y);
+                break;
+            case GROUP_ROAD:
+                do_road(x, y);
+                break;
+            case GROUP_ORGANIC_FARM:
+                do_organic_farm(x, y);
+                break;
+            case GROUP_MARKET:
+                do_market(x, y);
+                break;
+            case GROUP_RESIDENCE_LL:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_ML:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_HL:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_LH:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_MH:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_HH:
+                do_residence(x, y);
+                break;
+            case GROUP_POWER_LINE:
+                do_power_line(x, y);
+                break;
+            case GROUP_SOLAR_POWER:
+                do_power_source(x, y);
+                break;
+            case GROUP_SUBSTATION:
+                do_power_substation(x, y);
+                break;
+            case GROUP_COALMINE:
+                do_coalmine(x, y);
+                break;
+            case GROUP_COAL_POWER:
+                do_power_source_coal(x, y);
+                break;
+            case GROUP_INDUSTRY_L:
+                do_industry_l(x, y);
+                break;
+            case GROUP_INDUSTRY_H:
+                do_industry_h(x, y);
+                break;
+            case GROUP_COMMUNE:
+                do_commune(x, y);
+                break;
+            case GROUP_OREMINE:
+                do_oremine(x, y);
+                break;
+            case GROUP_PORT:
+                do_port(x, y);
+                break;
+            case GROUP_TIP:
+                do_tip(x, y);
+                break;
+            case GROUP_PARKLAND:
+                do_parkland(x, y);
+                break;
+            case GROUP_UNIVERSITY:
+                do_university(x, y);
+                break;
+            case GROUP_RECYCLE:
+                do_recycle(x, y);
+                break;
+            case GROUP_HEALTH:
+                do_health_centre(x, y);
+                break;
+            case GROUP_ROCKET:
+                do_rocket_pad(x, y);
+                break;
+            case GROUP_WINDMILL:
+                do_windmill(x, y);
+                break;
+            case GROUP_MONUMENT:
+                do_monument(x, y);
+                break;
+            case GROUP_SCHOOL:
+                do_school(x, y);
+                break;
+            case GROUP_BLACKSMITH:
+                do_blacksmith(x, y);
+                break;
+            case GROUP_MILL:
+                do_mill(x, y);
+                break;
+            case GROUP_POTTERY:
+                do_pottery(x, y);
+                break;
+            case GROUP_FIRESTATION:
+                do_firestation(x, y);
+                break;
+            case GROUP_CRICKET:
+                do_cricket(x, y);
+                break;
+            case GROUP_FIRE:
+                do_fire(x, y);
+                break;
+            case GROUP_SHANTY:
+                do_shanty(x, y);
+                break;
+            }
+        }
+    }
+}
+
 static void clear_game(void)
 {
     int x, y;
@@ -455,7 +519,7 @@
     refresh_pbars();
 }
 
-void coal_reserve_setup(void)
+static void coal_reserve_setup(void)
 {
     int i, j, x, y, xx, yy;
     for (i = 0; i < NUMOF_COAL_RESERVES / 5; i++) {
@@ -474,7 +538,7 @@
     }
 }
 
-void ore_reserve_setup(void)
+static void ore_reserve_setup(void)
 {
     int x, y;
     for (y = 0; y < WORLD_SIDE_LEN; y++)
@@ -697,34 +761,25 @@
     connect_rivers();
 }
 
-int count_groups(int g)
+static void nullify_mappoint(int x, int y)
 {
-    int x, y, i;
-    i = 0;
-    for (y = 0; y < WORLD_SIDE_LEN; y++)
-        for (x = 0; x < WORLD_SIDE_LEN; x++)
-            if (MP_GROUP(x, y) == g)
-                i++;
-    return (i);
+    MP_TYPE(x, y) = CST_GREEN;
+    MP_GROUP(x, y) = GROUP_BARE;
+    MP_SIZE(x, y) = 1;
+    MP_POL(x, y) = 0;
+    MP_INFO(x, y).population = 0;
+    MP_INFO(x, y).flags = 0;
+    MP_INFO(x, y).coal_reserve = 0;
+    MP_INFO(x, y).ore_reserve = 0;
+    MP_INFO(x, y).int_1 = 0;
+    MP_INFO(x, y).int_2 = 0;
+    MP_INFO(x, y).int_3 = 0;
+    MP_INFO(x, y).int_4 = 0;
+    MP_INFO(x, y).int_5 = 0;
+    MP_INFO(x, y).int_6 = 0;
+    MP_INFO(x, y).int_7 = 0;
 }
 
-void count_all_groups(int *group_count)
-{
-    int x, y;
-    unsigned short t, g;
-    for (x = 0; x < NUM_OF_GROUPS; x++)
-        group_count[x] = 0;
-    for (y = 0; y < WORLD_SIDE_LEN; y++) {
-        for (x = 0; x < WORLD_SIDE_LEN; x++) {
-            t = MP_TYPE(x, y);
-            if (t != CST_USED && !GROUP_IS_BARE(MP_GROUP(x, y))) {
-                g = get_group_of_type(t);
-                group_count[g]++;
-            }
-        }
-    }
-}
-
 static void random_start(int *originx, int *originy)
 {
     int x, y, xx, yy, flag, watchdog;
@@ -832,7 +887,7 @@
     MP_GROUP(x, y) = get_group_of_type(type);
 }
 
-void sustainability_test(void)
+static void sustainability_test(void)
 {
     int i;
     if (sust_dig_ore_coal_tip_flag == 0) {
@@ -889,7 +944,7 @@
     }
 }
 
-int sust_fire_cover(void)
+static int sust_fire_cover(void)
 {
     int x, y;
     for (x = 0; x < WORLD_SIDE_LEN; x++)
@@ -905,7 +960,7 @@
     return (1);
 }
 
-void debug_mappoints(void)
+static void debug_mappoints(void)
 {
     int x, y;
     for (x = 0; x < WORLD_SIDE_LEN; x++) {
@@ -918,12 +973,4 @@
     }
 }
 
-void initialize_tax_rates(void)
-{
-    income_tax_rate = INCOME_TAX_RATE;
-    coal_tax_rate = COAL_TAX_RATE;
-    goods_tax_rate = GOODS_TAX_RATE;
-    dole_rate = DOLE_RATE;
-    transport_cost_rate = TRANSPORT_COST_RATE;
-    import_cost_rate = IM_PORT_COST_RATE;
-}
+

Modified: trunk/src/lincity/simulate.h
===================================================================
--- trunk/src/lincity/simulate.h	2007-11-25 19:15:34 UTC (rev 1286)
+++ trunk/src/lincity/simulate.h	2007-11-25 23:01:01 UTC (rev 1287)
@@ -7,7 +7,10 @@
 #define __simulate_h__
 
 void new_city(int *originx, int *originy, int random_village);
+void do_time_step(void);
+void initialize_tax_rates(void);
+int count_groups(int gr);
 void count_all_groups(int *group_count);
-void do_time_step(void);
+void init_mappoint_array(void);
 
 #endif /* __simulate_h__ */



From alainb at mail.berlios.de  Wed Nov 28 00:18:29 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Wed, 28 Nov 2007 00:18:29 +0100
Subject: [Lincity-ng-commit] r1288 - in trunk/src: lincity lincity/modules
	lincity-ng
Message-ID: <200711272318.lARNITtH017587@sheep.berlios.de>

Author: alainb
Date: 2007-11-28 00:18:29 +0100 (Wed, 28 Nov 2007)
New Revision: 1288

Removed:
   trunk/src/lincity/interface.h
Modified:
   trunk/src/lincity-ng/Mps.cpp
   trunk/src/lincity/lclib.cpp
   trunk/src/lincity/modules/all_modules.h
   trunk/src/lincity/modules/market.cpp
Log:
check modules headers

Deleted: trunk/src/lincity/interface.h
===================================================================

Modified: trunk/src/lincity/lclib.cpp
===================================================================
--- trunk/src/lincity/lclib.cpp	2007-11-25 23:01:01 UTC (rev 1287)
+++ trunk/src/lincity/lclib.cpp	2007-11-27 23:18:29 UTC (rev 1288)
@@ -74,18 +74,18 @@
         break;
     case 1:
         triplets = 'k';
-        break;                  // kila
+        break;                  // kilo
     case 2:
-        triplets = 'm';
+        triplets = 'M';
         break;                  // mega
     case 3:
-        triplets = 'g';
+        triplets = 'G';
         break;                  // giga 
     case 4:
-        triplets = 't';
+        triplets = 'T';
         break;                  // tera 
     case 5:
-        triplets = 'p';
+        triplets = 'P';
         break;                  // peta
     default:
         triplets = '?';

Modified: trunk/src/lincity/modules/all_modules.h
===================================================================
--- trunk/src/lincity/modules/all_modules.h	2007-11-25 23:01:01 UTC (rev 1287)
+++ trunk/src/lincity/modules/all_modules.h	2007-11-27 23:18:29 UTC (rev 1288)
@@ -1,7 +1,6 @@
 #ifndef ALL_MODULES_H
 #define ALL_MODULES_H
 
-#include "all_modules.h"
 #include "blacksmith.h"
 #include "coalmine.h"
 #include "coal_power.h"

Modified: trunk/src/lincity/modules/market.cpp
===================================================================
--- trunk/src/lincity/modules/market.cpp	2007-11-25 23:01:01 UTC (rev 1287)
+++ trunk/src/lincity/modules/market.cpp	2007-11-27 23:18:29 UTC (rev 1288)
@@ -3,15 +3,7 @@
  * This file is part of lincity.
  * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
  * ---------------------------------------------------------------------- */
-#include "lcconfig.h"
-#include <stdio.h>
-#include <stdlib.h>
-//#include "common.h"
-#include "lctypes.h"
-#include "lin-city.h"
-#include "stats.h"
-#include "gui_interface/mps.h"
-#include "lcintl.h"
+#include "modules.h"
 #include "market.h"
 
 int get_jobs(int x, int y, int jobs)

Modified: trunk/src/lincity-ng/Mps.cpp
===================================================================
--- trunk/src/lincity-ng/Mps.cpp	2007-11-25 23:01:01 UTC (rev 1287)
+++ trunk/src/lincity-ng/Mps.cpp	2007-11-27 23:18:29 UTC (rev 1288)
@@ -20,7 +20,8 @@
 #include "Mps.hpp"
 #include "gui_interface/mps.h"
 #include "lincity/engglobs.h"
-#include "lincity/modules/all_modules.h"
+//#include "lincity/modules/all_modules.h"
+#include "lincity/lctypes.h"
 
 #include "Util.hpp"
 



From alainb at mail.berlios.de  Thu Nov 29 00:27:08 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Thu, 29 Nov 2007 00:27:08 +0100
Subject: [Lincity-ng-commit] r1289 - in trunk: data data/locale
	data/locale/gui src/lincity
Message-ID: <200711282327.lASNR83X009528@sheep.berlios.de>

Author: alainb
Date: 2007-11-29 00:27:07 +0100 (Thu, 29 Nov 2007)
New Revision: 1289

Modified:
   trunk/data/Jamfile
   trunk/data/locale/fr.po
   trunk/data/locale/gui/fr.po
   trunk/src/lincity/engine.cpp
   trunk/src/lincity/engine.h
   trunk/src/lincity/simulate.cpp
Log:
move code inside engine.cpp, and update messages.pot

Modified: trunk/data/Jamfile
===================================================================
--- trunk/data/Jamfile	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/data/Jamfile	2007-11-28 23:27:07 UTC (rev 1289)
@@ -68,6 +68,7 @@
 if $(build) = $(target)
 {
     DoXmlGetText locale/gui/messages.pot : [ Wildcard gui : *.xml ] ;
+    DoXmlGetText locale/messages.pot : [ Wildcard gui : *.xml ] ;
 }
 
 # Stuff from old lincity, still needed for the lib at the moment

Modified: trunk/data/locale/fr.po
===================================================================
--- trunk/data/locale/fr.po	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/data/locale/fr.po	2007-11-28 23:27:07 UTC (rev 1289)
@@ -12,7 +12,7 @@
 "Project-Id-Version: fr\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2007-01-27 22:03+0100\n"
-"PO-Revision-Date: 2007-02-17 16:05-0000\n"
+"PO-Revision-Date: 2007-11-28 01:23+0100\n"
 "Last-Translator: alain <alain.baeckeroot at laposte.net>\n"
 "Language-Team: fran?ais <fr at li.org>\n"
 "MIME-Version: 1.0\n"
@@ -39,30 +39,47 @@
 msgid "Out of memory: malloc failure\n"
 msgstr "M?moire insuffisante : ?chec de malloc\n"
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "Vous ne pouvez pas construire une d?charge ici"
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr "Vous avez de trop nombreux r?seaux ?lectriques. R?unissez-en quelques uns."
 
-#: src/lincity/engine.cpp:158
-#: src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Cette zone a servi de d?charge"
+#: src/lincity/engine.cpp:199
+msgid "ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr "ERREUR: ce group n'existe pas. Ceci ne devrait _jamais_ se produire. SVP envoyez un rapport de bug ? l'?quipe linicty-ng, si possible avec une copie de la suvegarde du jeu et ce que vous avez fait pour obtenir ce message :-)"
 
-#: src/lincity/engine.cpp:159
-#: src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "OK"
+#: src/lincity/engine.cpp:225
+msgid "Port must be connected to river all along right side."
+msgstr "Les ports doivent ?tre connect?s ? une rivi?re tout au long du cot? droit."
 
-#: src/lincity/engine.cpp:188
-#: src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "Vous ne pouvez pas construire une mine ici"
+#: src/lincity/engine.cpp:234
+#: src/lincity/engine.cpp:243
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr "Trop d'?oliennes + transformateurs. Vous ne pouvez pas en construire davantage."
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "Il n'y a plus de minerai restant sur ce site"
+#: src/lincity/engine.cpp:273
+msgid "Too many markets. You cannot build one more"
+msgstr "Trop de march?s; Vous ne pouvez pas en construire d'avantage."
 
+#: src/lincity/engine.cpp:296
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr "Vous ne pouvez pas construire de d?charge ici. Il y en a d?j? eu une dans le pass?."
+
+#: src/lincity/engine.cpp:321
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr "Vous ne pouvez pas construire une mine ici. Il y a eu une d?charge ici."
+
+#: src/lincity/engine.cpp:325
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr "Vous ne pouvez pas construire une carri?re ici. Il ne reste plus de minerai."
+
+#: src/lincity/engine.cpp:337
+msgid "You can't build a water well here: it is all desert."
+msgstr "Vous ne pouvez pas construire de puit ici. C'est un d?sert."
+
+#: src/lincity/engine.cpp:347
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr "Vous ne pouvez pas construire de parc ici. C'est un d?sert, hors les parcs ont besoin d'eau."
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "C'est sur une ligne ?lectrique"
@@ -179,28 +196,6 @@
 msgid "UNKNOWN!"
 msgstr "INCONNU!"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Sauver le fichier <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Impossible de sauver le fichier !"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Sauvegarde de la sc?ne"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Impossible d'ouvrir <%s> (gzipp?)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Chargement de la sc?ne"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Vide"
@@ -386,6 +381,48 @@
 msgid "Residential HH"
 msgstr "R?sidences modernes ? forte densit?"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr "Puit"
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr "D?sert"
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr "Arbre"
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr "Arbres"
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr "For?t"
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Sauver le fichier <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Impossible de sauver le fichier !"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Sauvegarde de la sc?ne"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Impossible d'ouvrir <%s> (gzipp?)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Chargement de la sc?ne"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Jan"
@@ -683,6 +720,19 @@
 msgid "Employed"
 msgstr "Employ?s"
 
+#: src/lincity/modules/residence.cpp:299
+#: src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "bon"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "pauvre"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Travail"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Assurance sant?"
@@ -698,19 +748,6 @@
 msgid "Pollution"
 msgstr "Pollution"
 
-#: src/lincity/modules/residence.cpp:299
-#: src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "bon"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "pauvre"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Travail"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Sagesse Accord?e"
@@ -748,7 +785,7 @@
 
 #: src/lincity/modules/heavy_industry.cpp:331
 msgid "Grid"
-msgstr ""
+msgstr "R?seau ?lectrique"
 
 #: src/lincity/modules/heavy_industry.cpp:339
 #: src/lincity/modules/light_industry.cpp:362
@@ -842,6 +879,10 @@
 msgid "Activity"
 msgstr "Activit?"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Le?ons apprises"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Caserne de Pompiers"
@@ -858,14 +899,34 @@
 msgid "Prod"
 msgstr "Prod"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Le?ons apprises"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr "Info"
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr "max avec ?lec et eau"
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr "nombre de case avec de l'eau"
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr "production actuelle"
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "Solaire"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr "Puit"
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr "Potable"
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Site de lancement"
@@ -930,16 +991,6 @@
 msgid ".   Residences %4d         Markets %4d            Farms %4d"
 msgstr ".      R?sidences %4d              March?s %4d                Fermes %4d"
 
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".          Pistes %4d               Routes %4d                 Rails %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".        Poteries %4d               Forges %4d             Fabriques %4d"
-
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
@@ -950,10 +1001,10 @@
 msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
 msgstr ".        Pompiers %4d                Parcs %4d                Stades %4d"
 
-#: src/lincity-ng/Dialog.cpp:428
+#: src/lincity-ng/Dialog.cpp:449
 #, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".Mines de charbon %4d  Carri?re de minerai %4d              Communes %4d"
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr ". Centre de soins %4d            D?charges %4d           Bidonvilles %4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
@@ -965,16 +1016,36 @@
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
 msgstr ". Transformateurs %4d   Lignes ?lectriques %4d                 Ports %4d"
 
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ".          Pistes %4d               Routes %4d                 Rails %4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ".        Poteries %4d               Forges %4d             Fabriques %4d"
+
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
 msgstr ".   Inds. l?g?res %4d        Inds. lourdes %4d  Centres de recyclage %4d"
 
-#: src/lincity-ng/Dialog.cpp:449
+#: src/lincity-ng/Dialog.cpp:428
 #, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr ". Centre de soins %4d            D?charges %4d           Bidonvilles %4d"
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ".Mines de charbon %4d  Carri?re de minerai %4d              Communes %4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:258
+msgid "MM"
+msgstr "M."
+
+#: src/lincity-ng/GameView.cpp:1520
+#: src/lincity-ng/GameView.cpp:1551
+#: src/lincity-ng/ScreenInterface.cpp:269
+msgid "$"
+msgstr "?"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minicarte : vue d'ensemble"
@@ -1023,12 +1094,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Co?t de d?molition : "
 
-#: src/lincity-ng/GameView.cpp:1520
-#: src/lincity-ng/GameView.cpp:1551
-#: src/lincity-ng/ScreenInterface.cpp:269
-msgid "$"
-msgstr "?"
-
 #: src/lincity-ng/GameView.cpp:1522
 msgid "n/a"
 msgstr "n/d"
@@ -1239,42 +1304,6 @@
 msgid "Cases"
 msgstr "Cas"
 
-#: src/lincity-ng/EconomyGraph.cpp:121
-msgid "Mining"
-msgstr "Mines"
-
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Trade"
-msgstr "Port"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Money"
-msgstr "Argent"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Popul."
-msgstr "Popul."
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Techn."
-msgstr "Techn."
-
-#: src/lincity-ng/EconomyGraph.cpp:134
-msgid "Economy Overview:"
-msgstr "Vue d'Ensemble de l'Economie :"
-
-#: src/lincity-ng/EconomyGraph.cpp:137
-msgid "Sustainability:"
-msgstr "D?veloppement durable :"
-
-#: src/lincity-ng/EconomyGraph.cpp:140
-msgid "Frames per Second:"
-msgstr "Trames par Seconde :"
-
-#: src/lincity-ng/EconomyGraph.cpp:216
-msgid "You lose."
-msgstr "Vous avez perdu."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Outil de Requ?te"
@@ -1317,10 +1346,44 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (Niveau Tech %.1f n?cessaire)"
 
-#: src/lincity-ng/ScreenInterface.cpp:258
-msgid "MM"
-msgstr "M."
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
+msgstr "%s est d?sactiv? (chargement d'un ancien jeu)"
 
-#~ msgid "Couldn't create the save directory %s\n"
-#~ msgstr "Impossible de cr?er le r?pertoire de sauvegarde %s\n"
+#: src/lincity-ng/EconomyGraph.cpp:121
+msgid "Mining"
+msgstr "Mines"
 
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Trade"
+msgstr "Port"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Money"
+msgstr "Argent"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Popul."
+msgstr "Popul."
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Techn."
+msgstr "Techn."
+
+#: src/lincity-ng/EconomyGraph.cpp:134
+msgid "Economy Overview:"
+msgstr "Vue d'Ensemble de l'Economie :"
+
+#: src/lincity-ng/EconomyGraph.cpp:137
+msgid "Sustainability:"
+msgstr "D?veloppement durable :"
+
+#: src/lincity-ng/EconomyGraph.cpp:140
+msgid "Frames per Second:"
+msgstr "Trames par Seconde :"
+
+#: src/lincity-ng/EconomyGraph.cpp:216
+msgid "You lose."
+msgstr "Vous avez perdu."
+

Modified: trunk/data/locale/gui/fr.po
===================================================================
--- trunk/data/locale/gui/fr.po	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/data/locale/gui/fr.po	2007-11-28 23:27:07 UTC (rev 1289)
@@ -10,7 +10,7 @@
 "Project-Id-Version: fr\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: Sat Jan 27 22:03:14 2007\n"
-"PO-Revision-Date: 2007-02-17 16:15-0000\n"
+"PO-Revision-Date: 2007-11-28 01:43+0100\n"
 "Last-Translator: alain <alain.baeckeroot at laposte.net>\n"
 "Language-Team: fran?ais <fr at li.org>\n"
 "MIME-Version: 1.0\n"

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/src/lincity/engine.cpp	2007-11-28 23:27:07 UTC (rev 1289)
@@ -26,17 +26,15 @@
 #include "gui_interface/shared_globals.h"
 
 extern int selected_type_cost;
+int last_warning_message_group = 0;
 
 /****** Private functions prototypes *****/
 static void bulldoze_mappoint(short fill, int x, int y);
-
 static int no_credit_build(int selected_group);
 static void no_credit_build_msg_ng(int selected_group);
+static int is_real_river(int x, int y);
 
-int is_real_river(int x, int y);
-int last_warning_message_group = 0;
-
-/************************************************/
+/*************** Global functions ********************/
 void fire_area(int xx, int yy)
 {
     /* this happens when a rocket crashes or on random_fire. */
@@ -106,82 +104,6 @@
     return total_money;
 }
 
-static int no_credit_build(int selected_group)
-{
-    if (total_money >= 0)
-        return (0);
-
-#ifdef GROUP_SOLAR_POWER_NO_CREDIT
-    if (selected_group == GROUP_SOLAR_POWER) {
-        return (1);
-    }
-#endif
-#ifdef GROUP_UNIVERSITY_NO_CREDIT
-    if (selected_group == GROUP_UNIVERSITY) {
-        return (1);
-    }
-#endif
-#ifdef GROUP_PARKLAND_NO_CREDIT
-    if (selected_group == GROUP_PARKLAND) {
-        return (1);
-    }
-#endif
-#ifdef GROUP_RECYCLE_NO_CREDIT
-    if (selected_group == GROUP_RECYCLE) {
-        return (1);
-    }
-#endif
-#ifdef GROUP_ROCKET
-    if (selected_group == GROUP_ROCKET) {
-        return (1);
-    }
-#endif
-
-    if (main_groups[selected_group].no_credit == TRUE) {
-        return (1);
-    }
-    return (0);
-}
-
-static void no_credit_build_msg_ng(int selected_group)
-{
-    if (last_warning_message_group == selected_group)
-        return;
-    last_warning_message_group = selected_group;
-
-#ifdef GROUP_SOLAR_POWER_NO_CREDIT
-    if (selected_group == GROUP_SOLAR_POWER) {
-        ok_dial_box("no-credit-solar-power.mes", BAD, 0L);
-        return;
-    }
-#endif
-#ifdef GROUP_UNIVERSITY_NO_CREDIT
-    if (selected_group == GROUP_UNIVERSITY) {
-        ok_dial_box("no-credit-university.mes", BAD, 0L);
-        return;
-    }
-#endif
-#ifdef GROUP_PARKLAND_NO_CREDIT
-    if (selected_group == GROUP_PARKLAND) {
-        ok_dial_box("no-credit-parkland.mes", BAD, 0L);
-        return;
-    }
-#endif
-#ifdef GROUP_RECYCLE_NO_CREDIT
-    if (selected_group == GROUP_RECYCLE) {
-        ok_dial_box("no-credit-recycle.mes", BAD, 0L);
-        return;
-    }
-#endif
-#ifdef GROUP_ROCKET
-    if (selected_group == GROUP_ROCKET) {
-        ok_dial_box("no-credit-rocket.mes", BAD, 0L);
-        return;
-    }
-#endif
-    return;
-}
-
 int place_item(int x, int y, short type)
 {
     int i, j;
@@ -445,24 +367,6 @@
             bulldoze_mappoint(fill, x + i, y + j);
 }
 
-static void bulldoze_mappoint(short fill, int x, int y)
-{
-    /* bulldoze preserve underground resources */
-    MP_TYPE(x, y) = fill;
-    MP_GROUP(x, y) = get_group_of_type(fill);
-    if (MP_GROUP(x, y) < 0)
-        MP_GROUP(x, y) = GROUP_BARE;
-    MP_INFO(x, y).population = 0;
-    MP_INFO(x, y).flags &= FLAG_HAS_UNDERGROUND_WATER;
-    MP_INFO(x, y).int_1 = 0;
-    MP_INFO(x, y).int_2 = 0;
-    MP_INFO(x, y).int_3 = 0;
-    MP_INFO(x, y).int_4 = 0;
-    MP_INFO(x, y).int_5 = 0;
-    MP_INFO(x, y).int_6 = 0;
-    MP_INFO(x, y).int_7 = 0;
-}
-
 void do_pollution()
 {
     int x, p;
@@ -522,20 +426,17 @@
     } while (++pol < &map.pollution[WORLD_SIDE_LEN][0]);
 }
 
-void clear_fire_health_and_cricket_cover(void)
+void do_fire_health_cricket_power_cover(void)
 {
-    int x, y, m;
+    int x, y,m;
+    /* Clear the flag */
     m = 0xffffffff - (FLAG_FIRE_COVER | FLAG_HEALTH_COVER
                       | FLAG_CRICKET_COVER | FLAG_WATERWELL_COVER | FLAG_ASKED_FOR_POWER | FLAG_GOT_POWER);
     for (y = 0; y < WORLD_SIDE_LEN; y++)
         for (x = 0; x < WORLD_SIDE_LEN; x++)
             MP_INFO(x, y).flags &= m;
-    /* Wow... chache misses or what! */
-}
 
-void do_fire_health_and_cricket_cover(void)
-{
-    int x, y;
+    /* Check cover */
     for (y = 0; y < WORLD_SIDE_LEN; y++)
         for (x = 0; x < WORLD_SIDE_LEN; x++) {
             /*  The next few lines need changing to test for */
@@ -677,6 +578,34 @@
     }
 }
 
+/* Feature: coal survey should vary in price and accuracy with technology */
+void do_coal_survey(void)
+{
+    if (coal_survey_done == 0) {
+        adjust_money(-1000000);
+        coal_survey_done = 1;
+    }
+}
+
+/************ Private functions ***************************/
+static void bulldoze_mappoint(short fill, int x, int y)
+{
+    /* bulldoze preserve underground resources */
+    MP_TYPE(x, y) = fill;
+    MP_GROUP(x, y) = get_group_of_type(fill);
+    if (MP_GROUP(x, y) < 0)
+        MP_GROUP(x, y) = GROUP_BARE;
+    MP_INFO(x, y).population = 0;
+    MP_INFO(x, y).flags &= FLAG_HAS_UNDERGROUND_WATER;
+    MP_INFO(x, y).int_1 = 0;
+    MP_INFO(x, y).int_2 = 0;
+    MP_INFO(x, y).int_3 = 0;
+    MP_INFO(x, y).int_4 = 0;
+    MP_INFO(x, y).int_5 = 0;
+    MP_INFO(x, y).int_6 = 0;
+    MP_INFO(x, y).int_7 = 0;
+}
+
 int is_real_river(int x, int y)
 {
     /* returns zero if not water at all or if out of bounds. */
@@ -689,11 +618,80 @@
     return (-1);
 }
 
-/* Feature: coal survey should vary in price and accuracy with technology */
-void do_coal_survey(void)
+static int no_credit_build(int selected_group)
 {
-    if (coal_survey_done == 0) {
-        adjust_money(-1000000);
-        coal_survey_done = 1;
+    if (total_money >= 0)
+        return (0);
+
+#ifdef GROUP_SOLAR_POWER_NO_CREDIT
+    if (selected_group == GROUP_SOLAR_POWER) {
+        return (1);
     }
+#endif
+#ifdef GROUP_UNIVERSITY_NO_CREDIT
+    if (selected_group == GROUP_UNIVERSITY) {
+        return (1);
+    }
+#endif
+#ifdef GROUP_PARKLAND_NO_CREDIT
+    if (selected_group == GROUP_PARKLAND) {
+        return (1);
+    }
+#endif
+#ifdef GROUP_RECYCLE_NO_CREDIT
+    if (selected_group == GROUP_RECYCLE) {
+        return (1);
+    }
+#endif
+#ifdef GROUP_ROCKET
+    if (selected_group == GROUP_ROCKET) {
+        return (1);
+    }
+#endif
+
+    if (main_groups[selected_group].no_credit == TRUE) {
+        return (1);
+    }
+    return (0);
 }
+
+static void no_credit_build_msg_ng(int selected_group)
+{
+    if (last_warning_message_group == selected_group)
+        return;
+    last_warning_message_group = selected_group;
+
+#ifdef GROUP_SOLAR_POWER_NO_CREDIT
+    if (selected_group == GROUP_SOLAR_POWER) {
+        ok_dial_box("no-credit-solar-power.mes", BAD, 0L);
+        return;
+    }
+#endif
+#ifdef GROUP_UNIVERSITY_NO_CREDIT
+    if (selected_group == GROUP_UNIVERSITY) {
+        ok_dial_box("no-credit-university.mes", BAD, 0L);
+        return;
+    }
+#endif
+#ifdef GROUP_PARKLAND_NO_CREDIT
+    if (selected_group == GROUP_PARKLAND) {
+        ok_dial_box("no-credit-parkland.mes", BAD, 0L);
+        return;
+    }
+#endif
+#ifdef GROUP_RECYCLE_NO_CREDIT
+    if (selected_group == GROUP_RECYCLE) {
+        ok_dial_box("no-credit-recycle.mes", BAD, 0L);
+        return;
+    }
+#endif
+#ifdef GROUP_ROCKET
+    if (selected_group == GROUP_ROCKET) {
+        ok_dial_box("no-credit-rocket.mes", BAD, 0L);
+        return;
+    }
+#endif
+    return;
+}
+
+

Modified: trunk/src/lincity/engine.h
===================================================================
--- trunk/src/lincity/engine.h	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/src/lincity/engine.h	2007-11-28 23:27:07 UTC (rev 1289)
@@ -6,18 +6,20 @@
 #ifndef __engine_h__
 #define __engine_h__
 
+int adjust_money(int value);
 int place_item(int x, int y, short type);
 int bulldoze_item(int x, int y);
+void do_bulldoze_area(short fill, int xx, int yy);
 void do_coal_survey(void);
-void do_bulldoze_area(short fill, int xx, int yy);
+void do_random_fire(int x, int y, int pwarning);
 void launch_rocket(int x, int y);
-void connect_rivers(void);
-int adjust_money(int value);
 void fire_area(int x, int y);
+
+/* called only by simulate.cpp */
+void connect_rivers(void); // called by engine.cpp too.
 void do_daily_ecology(void);
 void do_pollution(void);
-void clear_fire_health_and_cricket_cover(void);
-void do_fire_health_and_cricket_cover(void);
+void do_fire_health_cricket_power_cover(void);
 
 extern long real_time;
 

Modified: trunk/src/lincity/simulate.cpp
===================================================================
--- trunk/src/lincity/simulate.cpp	2007-11-27 23:18:29 UTC (rev 1288)
+++ trunk/src/lincity/simulate.cpp	2007-11-28 23:27:07 UTC (rev 1289)
@@ -43,24 +43,24 @@
 /* AL1: they are all in engine.cpp */
 extern void connect_rivers(void);
 extern void do_daily_ecology(void);
-extern void clear_fire_health_and_cricket_cover(void);
 extern void do_pollution(void);
-extern void do_fire_health_and_cricket_cover(void);
+extern void do_fire_health_cricket_power_cover(void);
 
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
  * ---------------------------------------------------------------------- */
+static void shuffle_mappoint_array(void);
 static void do_periodic_events(void);
 static void end_of_month_update(void);
 static void start_of_year_update(void);
 static void end_of_year_update(void);
 static void simulate_mappoints(void);
-static void nullify_mappoint(int x, int y);
 
 static void sustainability_test(void);
 static int sust_fire_cover(void);
 
 static void clear_game(void);
+static void nullify_mappoint(int x, int y);
 static void random_start(int *originx, int *originy);
 static void quick_start_add(int x, int y, short type, int size);
 static void setup_land(void);
@@ -69,8 +69,7 @@
 static void setup_river(void);
 static void setup_river2(int x, int y, int d);
 static void quick_start_add(int x, int y, short type, int size);
-static void debug_mappoints(void);
-static void shuffle_mappoint_array(void);
+static void debug_mappoints(void); /* AL1: NG 1.1.2 compiler warns that this is unused */
 
 #define IS_RIVER(x,y) (MP_INFO(x,y).flags & FLAG_IS_RIVER)
 
@@ -192,8 +191,7 @@
         do_random_fire(-1, -1, 1);
     }
     if ((total_time % DAYS_BETWEEN_COVER) == 75) {
-        clear_fire_health_and_cricket_cover();
-        do_fire_health_and_cricket_cover();
+        do_fire_health_cricket_power_cover();
     }
     if ((total_time % DAYS_BETWEEN_SHANTY) == 85 && tech_level > (GROUP_HEALTH_TECH * MAX_TECH_LEVEL / 1000)) {
         update_shanty();



From alainb at mail.berlios.de  Fri Nov 30 01:21:55 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Fri, 30 Nov 2007 01:21:55 +0100
Subject: [Lincity-ng-commit] r1291 - in trunk: . src/lincity src/oldgui
Message-ID: <200711300021.lAU0Ltiu004710@sheep.berlios.de>

Author: alainb
Date: 2007-11-30 01:21:54 +0100 (Fri, 30 Nov 2007)
New Revision: 1291

Removed:
   trunk/src/lincity/typeinit.h
Modified:
   trunk/Bugs-beta
   trunk/TODO
   trunk/src/lincity/lin-city.h
   trunk/src/lincity/lintypes.h
   trunk/src/lincity/shrtypes.cpp
   trunk/src/oldgui/lcx11.cpp
   trunk/src/oldgui/screen.cpp
Log:
moved prototypes from lin-city.h to lintypes.h

Modified: trunk/Bugs-beta
===================================================================
--- trunk/Bugs-beta	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/Bugs-beta	2007-11-30 00:21:54 UTC (rev 1291)
@@ -9,3 +9,6 @@
 
 * bug of trunk = (re)initialisation of engine and UI is not enough. (max tech level...)
 
+* cursor is still blue even when we try to build a waterwell on 4 desert tiles. It Should become red
+
+* Starvation in housing is not shown when there is water but no food

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/TODO	2007-11-30 00:21:54 UTC (rev 1291)
@@ -36,6 +36,8 @@
        -added data/help/en/waterwell.xml
        -modified residential.xml, farms.xml, parks.xml, communes.xml, index.xml, button-index.xml.
 
+ [H] all data/locale/xy.po and data/locale/gui/xy.po files have been update (rev 1290). 
+     Translators should check them with poedit for the rare new messages to translate.
 
 Programming
 ~~~~~~~~~~~

Modified: trunk/src/lincity/lin-city.h
===================================================================
--- trunk/src/lincity/lin-city.h	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/lincity/lin-city.h	2007-11-30 00:21:54 UTC (rev 1291)
@@ -65,24 +65,24 @@
 #define MG_C_VER 111
 
 #if defined (_MSC_VER)
-#define snprintf _snprintf
+#   define snprintf _snprintf
 #endif
 
 #if defined (WIN32)
-#define PATH_SLASH '\\'
-#define PATH_SLASH_STRING "\\"
+#   define PATH_SLASH '\\'
+#   define PATH_SLASH_STRING "\\"
 #else
-#define PATH_SLASH '/'
-#define PATH_SLASH_STRING "/"
+#   define PATH_SLASH '/'
+#   define PATH_SLASH_STRING "/"
 #endif
 
 #define USE_X11_PIXMAPS
 
 #ifndef TRUE
-#define TRUE 1
+#   define TRUE 1
 #endif
 #ifndef FALSE
-#define FALSE 0
+#   define FALSE 0
 #endif
 
 /* Used by HandleError () */
@@ -91,7 +91,7 @@
 
 /* comment out the the next three lines for _slightly_ faster X drawing. */
 #if defined LC_X11 || defined WIN32
-#define ALLOW_PIX_DOUBLING
+#   define ALLOW_PIX_DOUBLING
 #endif
 
 /*
@@ -125,8 +125,8 @@
 */
 
 #if defined (LC_X11) || defined (WIN32)
-#define BORDERX 30
-#define BORDERY 30
+#    define BORDERX 30
+#    define BORDERY 30
 #endif
 
 #define TEXT_FG_COLOUR  (white(24))
@@ -654,6 +654,11 @@
 #define MAPPOINT_STATS_H (11*8)
 #endif
 
+/******* Buildings // GROUPS ************/ 
+#define NUM_OF_TYPES    400
+#define NUM_OF_GROUPS    47
+#define GROUP_NAME_LEN   20
+
 #define GROUP_BARE 	   0
 #define GROUP_BARE_COLOUR  (green(12))
 #define GROUP_BARE_COST    0
@@ -1124,416 +1129,12 @@
 #define cyan(x) (192 + x)
 #define white(x) (224 + x)
 
-struct map_point_info_struct {
-    int population;
-    int flags;
-    unsigned short coal_reserve;
-    unsigned short ore_reserve;
-    int int_1;
-    int int_2;
-    int int_3;
-    int int_4;
-    int int_5;
-    int int_6;
-    int int_7;
-};
-typedef struct map_point_info_struct Map_Point_Info;
-
-/* Set these flags to true when they need to be updated on the screen */
-struct update_scoreboard_struct {
-    int mps;
-    int mini;
-    int date;
-    int money;
-    int monthly;
-    int yearly_1;
-    int yearly_2;
-    long int message_area;
-};
-typedef struct update_scoreboard_struct Update_Scoreboard;
-
 /*
-  main functions
-  **************
-*/
-extern int lincity_main(int, char **);
-extern void client_main_loop(void);
-extern void do_error(const char *);
-extern void do_save_city(void);
-extern void remove_scene(char *);
-extern void save_city(char *);
-extern void do_load_city(void);
-extern void load_opening_city(char *);
-extern void load_city(char *);
-extern void reset_animation_times(void);
-extern void check_savedir(void);
-extern void make_savedir(void);
-extern void draw_save_dir(int);
-extern void input_save_filename(char *);
-extern void load_start_image(void);
-extern void start_image_text(void);
-extern void si_scroll_text(void);
-extern char si_next_char(FILE *);
-extern void get_real_time(void);
-extern void debug_writeval(int);
-extern int cheat(void);
-extern void print_cheat(void);
-extern void unprint_cheat(void);
-extern void order_select_buttons(void);
-extern void lincityrc(void);
-extern void check_for_old_save_dir(void);
-extern int count_groups(int);
-extern int compile_results(void);
-extern void print_results(void);
-extern void mail_results(void);
-extern void window_results(void);
-extern void init_path_strings(void);
-extern void lc_usleep(unsigned long);
-extern void dump_tcore(void);
-#ifndef LC_X11
-extern void parse_args(int, char **);
-#endif
-extern void check_endian(void);
-extern void eswap32(int *);
-extern void eswap16(unsigned short *);
-extern void malloc_failure(void);
-
-/*
-  fileutil
-  ********
-*/
-void malloc_failure(void);
-//FILE* fopen_read_gzipped (char* fn);
-//void fclose_read_gzipped (FILE* fp);
-void verify_package(void);
-
-/*
-  ldsvgui
-  *******
-*/
-void load_opening_city(char *s);
-void check_savedir(void);
-
-/*
-  opening
-  *******
-*/
-void load_start_image(void);
-
-/*
-  type init functions
-  *******************
-*/
-extern void init_types(void);
-extern void init_type_graphics(void);
-void init_costs(void);
-int get_selected_type_cost(short selected_type);
-extern char *load_graphic(char *);
-
-/*
-  screen functions
-  ****************
-*/
-#ifdef CS_PROFILE
-extern void FPgl_write(int, int, char *);
-extern void FPgl_getbox(int, int, int, int, void *);
-extern void FPgl_putbox(int, int, int, int, void *);
-extern void FPgl_fillbox(int, int, int, int, int);
-extern void FPgl_hline(int, int, int, int);
-extern void FPgl_line(int, int, int, int, int);
-extern void FPgl_setpixel(int, int, int);
-#endif
-extern void check_power_line_graphics(void);
-extern void check_water_graphics(void);
-extern void check_track_graphics(void);
-extern void check_rail_graphics(void);
-extern void check_road_graphics(void);
-extern int select_power_line_type(int, int, int, int);
-extern int select_water_type(int, int, int, int);
-extern int select_track_type(int, int, int, int);
-extern int select_rail_type(int, int, int, int);
-extern int select_road_type(int, int, int, int);
-extern void update_select_buttons(void);
-extern void draw_main_window_box(int);
-extern void draw_select_button_graphic(int, char *);
-extern void setcustompalette(void);
-extern void clip_main_window(void);
-extern void unclip_main_window(void);
-extern void initfont(void);
-extern void load_scroll_buttons(void);
-extern void draw_scroll_buttons(void);
-extern void update_mini_screen(void);
-extern void draw_mini_screen(void);
-extern void draw_big_mini_screen(void);
-extern void draw_mini_screen_pollution(void);
-extern void draw_mini_screen_fire_cover(void);
-extern void draw_mini_screen_cricket_cover(void);
-extern void draw_mini_screen_health_cover(void);
-extern void draw_mini_screen_ub40(void);
-extern void draw_mini_screen_starve(void);
-extern void draw_mini_screen_coal(void);
-extern void draw_mini_screen_power(void);
-extern void draw_mini_screen_ocost(void);
-extern void draw_mini_screen_port(void);
-extern void draw_mini_screen_cursor(void);
-extern void print_stats(void);
-extern void print_total_money(void);
-int ask_launch_rocket_now(int x, int y);
-void print_date(void);
-extern void draw_market_cb(void);
-extern void clicked_market_cb(int, int);
-extern void close_market_cb(void);
-extern void draw_port_cb(void);
-extern void clicked_port_cb(int, int);
-extern void close_port_cb(void);
-extern int yn_dial_box(const char *, const char *, const char *, const char *);
-extern void ok_dial_box(const char *, int, const char *);
-extern int inv_sbut(int);
-extern void call_select_change_up(int);
-extern void beg_space_pad(const char *, int);
-extern void draw_up_pbar(int, int, int, int);
-extern void draw_down_pbar(int, int, int, int);
-extern void do_pbar_population(int);
-extern void do_pbar_tech(int);
-extern void do_pbar_food(int);
-extern void do_pbar_jobs(int);
-extern void do_pbar_coal(int);
-extern void do_pbar_goods(int);
-extern void do_pbar_ore(int);
-extern void do_pbar_steel(int);
-extern void do_pbar_money(int);
-extern void prog_box(const char *, int);
-/*
-  mouse functions -- are now in mouse.h, where they should be!
-  ***************
-*/
-
-/*
-  engine functions
-  ****************
-*/
-void initialize_tax_rates(void);
-void set_mappoint(int x, int y, short selected_type);
-void set_mappoint_used(int, int, int, int);
-void set_mappoint_ints(int fromx, int fromy, int x, int y);
-void new_city(int *originx, int *originy, int random_village);
-extern void engine_do_time_step(void);
-extern void do_residence(int, int);
-extern void debug_print(int);
-extern void do_power_source(int, int);
-extern void do_power_source_coal(int, int);
-extern void do_industry_l(int, int);
-extern void do_industry_h(int, int);
-extern void do_power_substation(int, int);
-extern int get_power(int, int, int, int);
-extern int add_a_substation(int, int);
-extern void remove_a_substation(int, int);
-extern void do_organic_farm(int, int);
-extern void shuffle_substations(void);
-extern void do_coalmine(int, int);
-extern void do_oremine(int, int);
-extern void do_commune(int, int);
-extern void do_port(int, int);
-
-extern void do_parkland(int, int);
-extern void do_university(int, int);
-extern void do_recycle(int, int);
-extern void do_health_centre(int, int);
-extern void do_rocket_pad(int, int);
-extern void launch_rocket(int x, int y);
-extern void do_windmill(int, int);
-extern void do_monument(int, int);
-extern void do_school(int, int);
-extern void do_blacksmith(int, int);
-extern void do_mill(int, int);
-extern void do_pottery(int, int);
-extern void do_firestation(int, int);
-extern void do_cricket(int, int);
-extern void do_fire_cover(int, int);
-extern void do_health_cover(int, int);
-extern void do_cricket_cover(int, int);
-extern void do_random_fire(int, int, int);
-extern void do_fire(int, int);
-extern void add_a_shanty(void);
-extern void remove_a_shanty(int, int);
-extern void update_shanty(void);
-extern void do_shanty(int, int);
-extern void do_tip(int, int);
-extern void update_tech_dep(int, int);
-extern void do_waterwell_cover(int, int);
-/*
-   transport functions
-   *******************
-*/
-void connect_transport(int originx, int originy, int w, int h);
-extern void do_power_line(int, int);
-extern void do_track(int, int);
-extern void do_rail(int, int);
-extern void do_road(int, int);
-extern void general_transport(Map_Point_Info *, int *, int, int *);
-
-/*
-   market functions
-   ****************
-*/
-extern int get_food(int, int, int);
-extern int put_food(int, int, int);
-extern int get_jobs(int, int, int);
-extern int put_jobs(int, int, int);
-extern int get_goods(int, int, int);
-extern int put_goods(int, int, int);
-extern int get_ore(int, int, int);
-extern int put_ore(int, int, int);
-extern int get_coal(int, int, int);
-extern int put_coal(int, int, int);
-extern int add_a_market(int, int);
-extern void remove_a_market(int, int);
-extern void do_market(int, int);
-extern void shuffle_markets(void);
-extern int deal_with_transport(int, int, int, int);
-extern int get_steel(int, int, int);
-extern int put_steel(int, int, int);
-extern int get_waste(int, int, int);
-extern int put_waste(int, int, int);
-extern int get_stuff(int, int, int, int);
-extern int get_stuff2(Map_Point_Info *, int, int);
-extern int get_stuff3(Map_Point_Info *, int, int);
-extern int get_stuff4(Map_Point_Info *, int, int);
-extern int put_stuff(int, int, int, int);
-extern int put_stuff2(Map_Point_Info *, short *, int, int);
-extern int put_stuff3(Map_Point_Info *, short *, int, int);
-extern int put_stuff4(Map_Point_Info *, short *, int, int);
-
-#if defined SDL
-#warning "SDL defined"
-#include <SDL/SDL.h>
-
-extern void sdl_gl_write(int, int, char *);
-extern void sdl_gl_getbox(int, int, int, int, void *);
-extern void sdl_gl_putbox(int, int, int, int, void *);
-extern void sdl_gl_fillbox(int, int, int, int, Uint32 col);
-
-extern void sdl_gl_hline(int x1, int y1, int x2, Uint32 col);
-extern void sdl_gl_vline(int x1, int y1, int y2, Uint32 col);
-extern void sdl_gl_line(int x1, int y1, int x2, int y2, Uint32 col);
-
-extern void sdl_gl_setpixel(int x, int y, Uint32 col);
-extern void sdl_gl_setfontcolors(Uint32 bg, Uint32 fg);
-extern void sdl_gl_setfont(int, int, void *);
-extern void sdl_gl_enableclipping(void);
-extern void sdl_gl_setclippingwindow(int, int, int, int);
-extern void sdl_gl_disableclipping(void);
-
-extern void sdl_blit(int x, int y, int w, int h, SDL_Surface *);
-
-/* Wait for a key or some other event */
-extern int sdl_wait_for_key(void);
-extern int sdl_update_wait_for_key(void);
-
-extern int sdl_check_key(void);
-extern int sdl_update_check_key(void);
-
-#define sdl_map_rgb(r,g,b) SDL_MapRGB(display.surface->format, r, g, b)
-
-#define sdl_video() (display.surface)
-
-#define sdl_flip() SDL_Flip(display.surface)
-
-extern void sdl_clear(Uint32 col);
-
-#define Fgl_write(a,b,c) sdl_gl_write(a,b,c)
-#define Fgl_getbox(a,b,c,d,e) sdl_gl_getbox(a,b,c,d,e)
-#define Fgl_putbox(a,b,c,d,e) sdl_gl_putbox(a,b,c,d,e)
-#define Fgl_fillbox(a,b,c,d,e) sdl_gl_fillbox(a,b,c,d,e)
-#define Fgl_hline(a,b,c,d) sdl_gl_hline(a,b,c,d)
-#define Fgl_line(a,b,c,d,e) sdl_gl_line(a,b,c,d,e)
-#define Fgl_setpixel(a,b,c) sdl_gl_setpixel(a,b,c)
-#define Fgl_setfontcolors(a,b) sdl_gl_setfontcolors(a,b)
-#define Fgl_setfont(a,b,c) sdl_gl_setfont(a,b,c)
-#define Fgl_enableclipping() sdl_gl_enableclipping()
-#define Fgl_setclippingwindow(a,b,c,d) sdl_gl_setclippingwindow(a,b,c,d)
-#define Fgl_disableclipping() sdl_gl_disableclipping()
-
-#elif defined LC_X11
-/* ----- X11 functions ----- */
-extern void Fgl_write(int, int, const char *);
-extern void open_write(int, int, const char *);
-extern void Fgl_getbox(int, int, int, int, void *);
-extern void Fgl_putbox(int, int, int, int, void *);
-extern void Fgl_fillbox(int, int, int, int, int);
-extern void Fgl_hline(int, int, int, int);
-extern void Fgl_line(int, int, int, int, int);
-extern void Fgl_setpixel(int, int, int);
-extern void Fgl_setfontcolors(int, int);
-extern void Fgl_setfont(int, int, void *);
-extern void Fgl_enableclipping(void);
-extern void Fgl_setclippingwindow(int, int, int, int);
-extern void Fgl_disableclipping(void);
-#ifdef USE_X11_PIXMAPS
-#define USE_PIXMAPS
-extern void init_pixmaps(void);
-extern void init_icon_pixmap(short);
-extern void update_pixmap(int, int, int, int, int, int, int, char *);
-#endif
-
-#elif defined (WIN32)
-/* ----- Win32 functions ----- */
-extern void gl_setpalettecolor(long, long, long, long);
-extern void Fgl_write(int, int, const char *);
-extern void open_write(int, int, const char *);
-extern void Fgl_getbox(int, int, int, int, void *);
-extern void Fgl_putbox(int, int, int, int, void *);
-extern void Fgl_fillbox(int, int, int, int, int);
-extern void Fgl_hline(int, int, int, int);
-extern void Fgl_line(int, int, int, int, int);
-extern void Fgl_setpixel(int, int, int);
-extern void Fgl_setfontcolors(int, int);
-extern void Fgl_setfont(int, int, void *);
-extern void Fgl_enableclipping(void);
-extern void Fgl_setclippingwindow(int, int, int, int);
-extern void Fgl_disableclipping(void);
-#define USE_PIXMAPS             /* Always */
-extern void init_pixmaps(void);
-extern void init_icon_pixmap(short);
-extern void update_pixmap(int, int, int, int, int, int, int, char *);
-
-#else
-/* ----- SVGALIB functions ----- */
-/* profiling */
-#ifdef CS_PROFILE
-#define Fgl_write(a,b,c) FPgl_write(a,b,c)
-#define Fgl_getbox(a,b,c,d,e) FPgl_getbox(a,b,c,d,e)
-#define Fgl_putbox(a,b,c,d,e) FPgl_putbox(a,b,c,d,e)
-#define Fgl_fillbox(a,b,c,d,e) FPgl_fillbox(a,b,c,d,e)
-#define Fgl_hline(a,b,c,d) FPgl_hline(a,b,c,d)
-#define Fgl_line(a,b,c,d,e) FPgl_line(a,b,c,d,e)
-#define Fgl_setpixel(a,b,c) FPgl_setpixel(a,b,c)
-#define Fgl_setfontcolors(a,b) gl_setfontcolors(a,b)
-#define Fgl_setfont(a,b,c) gl_setfont(a,b,c)
-#define Fgl_enableclipping()   gl_enableclipping()
-#define Fgl_setclippingwindow(a,b,c,d)   gl_setclippingwindow(a,b,c,d)
-#define Fgl_disableclipping()   gl_disableclipping()
-#else
-#define Fgl_write(a,b,c) gl_write(a,b,c)
-#define Fgl_getbox(a,b,c,d,e) gl_getbox(a,b,c,d,e)
-#define Fgl_putbox(a,b,c,d,e) gl_putbox(a,b,c,d,e)
-#define Fgl_fillbox(a,b,c,d,e) gl_fillbox(a,b,c,d,e)
-#define Fgl_hline(a,b,c,d) gl_hline(a,b,c,d)
-#define Fgl_line(a,b,c,d,e) gl_line(a,b,c,d,e)
-#define Fgl_setpixel(a,b,c) gl_setpixel(a,b,c)
-#define Fgl_setfontcolors(a,b) gl_setfontcolors(a,b)
-#define Fgl_setfont(a,b,c) gl_setfont(a,b,c)
-#define Fgl_enableclipping()   gl_enableclipping()
-#define Fgl_setclippingwindow(a,b,c,d)   gl_setclippingwindow(a,b,c,d)
-#define Fgl_disableclipping()   gl_disableclipping()
-#endif
-
-#endif
-/*
   *******   end of lin-city.h   ***********
   *****************************************
 */
 
+/* FIXME : isn't it forbidden to include .h in .h ?  :-) */
 #include "lintypes.h"
 
 #endif /* __lin_city_h__ */

Modified: trunk/src/lincity/lintypes.h
===================================================================
--- trunk/src/lincity/lintypes.h	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/lincity/lintypes.h	2007-11-30 00:21:54 UTC (rev 1291)
@@ -6,17 +6,8 @@
 #ifndef __lintypes_h__
 #define __lintypes_h__
 
-#ifndef TRUE
-#define TRUE 1
-#endif
-#ifndef FALSE
-#define FALSE 0
-#endif
+/********** Data structures ***************/
 
-#define NUM_OF_TYPES    400
-#define NUM_OF_GROUPS    47
-#define GROUP_NAME_LEN   20
-
 struct GROUP {
     const char *name;           /* name of group */
     unsigned short no_credit;   /* TRUE if need credit to build */
@@ -45,4 +36,419 @@
 extern struct GROUP main_groups[NUM_OF_GROUPS];
 extern struct TYPE main_types[NUM_OF_TYPES];
 
+
+struct map_point_info_struct {
+    int population;
+    int flags;
+    unsigned short coal_reserve;
+    unsigned short ore_reserve;
+    int int_1;
+    int int_2;
+    int int_3;
+    int int_4;
+    int int_5;
+    int int_6;
+    int int_7;
+};
+typedef struct map_point_info_struct Map_Point_Info;
+
+/* Set these flags to true when they need to be updated on the screen */
+struct update_scoreboard_struct {
+    int mps;
+    int mini;
+    int date;
+    int money;
+    int monthly;
+    int yearly_1;
+    int yearly_2;
+    long int message_area;
+};
+typedef struct update_scoreboard_struct Update_Scoreboard;
+
+
+/********************** Functions ********************/
+/* FIXME: AL1 1290. This shoudl go elsewhere
+ * Split this in 2 parts: 
+ *      - one for lincity/      wrt engine functions
+ *      - one for lincity-ng/   wrt graphic functions
+ *
+ * and reduce the number of visible function here. (i'm lost , its too much :)
+ */
+
+
+/*
+  main functions
+  **************
+*/
+extern int lincity_main(int, char **);
+extern void client_main_loop(void);
+extern void do_error(const char *);
+extern void do_save_city(void);
+extern void remove_scene(char *);
+extern void save_city(char *);
+extern void do_load_city(void);
+extern void load_opening_city(char *);
+extern void load_city(char *);
+extern void reset_animation_times(void);
+extern void check_savedir(void);
+extern void make_savedir(void);
+extern void draw_save_dir(int);
+extern void input_save_filename(char *);
+extern void load_start_image(void);
+extern void start_image_text(void);
+extern void si_scroll_text(void);
+extern char si_next_char(FILE *);
+extern void get_real_time(void);
+extern void debug_writeval(int);
+extern int cheat(void);
+extern void print_cheat(void);
+extern void unprint_cheat(void);
+extern void order_select_buttons(void);
+extern void lincityrc(void);
+extern void check_for_old_save_dir(void);
+extern int count_groups(int);
+extern int compile_results(void);
+extern void print_results(void);
+extern void mail_results(void);
+extern void window_results(void);
+extern void init_path_strings(void);
+extern void lc_usleep(unsigned long);
+extern void dump_tcore(void);
+#ifndef LC_X11
+    extern void parse_args(int, char **);
+#endif
+extern void check_endian(void);
+extern void eswap32(int *);
+extern void eswap16(unsigned short *);
+extern void malloc_failure(void);
+
+/*
+  fileutil
+  ********
+*/
+void malloc_failure(void);
+//FILE* fopen_read_gzipped (char* fn);
+//void fclose_read_gzipped (FILE* fp);
+void verify_package(void);
+
+/*
+  ldsvgui
+  *******
+*/
+void load_opening_city(char *s);
+void check_savedir(void);
+
+/*
+  opening
+  *******
+*/
+void load_start_image(void);
+
+/*
+  type init functions
+  *******************
+*/
+extern void init_types(void);
+extern void init_type_graphics(void);
+void init_costs(void);
+int get_selected_type_cost(short selected_type);
+extern char *load_graphic(char *);
+
+/*
+  screen functions
+  ****************
+*/
+#ifdef CS_PROFILE
+    extern void FPgl_write(int, int, char *);
+    extern void FPgl_getbox(int, int, int, int, void *);
+    extern void FPgl_putbox(int, int, int, int, void *);
+    extern void FPgl_fillbox(int, int, int, int, int);
+    extern void FPgl_hline(int, int, int, int);
+    extern void FPgl_line(int, int, int, int, int);
+    extern void FPgl_setpixel(int, int, int);
+#endif
+extern void check_power_line_graphics(void);
+extern void check_water_graphics(void);
+extern void check_track_graphics(void);
+extern void check_rail_graphics(void);
+extern void check_road_graphics(void);
+extern int select_power_line_type(int, int, int, int);
+extern int select_water_type(int, int, int, int);
+extern int select_track_type(int, int, int, int);
+extern int select_rail_type(int, int, int, int);
+extern int select_road_type(int, int, int, int);
+extern void update_select_buttons(void);
+extern void draw_main_window_box(int);
+extern void draw_select_button_graphic(int, char *);
+extern void setcustompalette(void);
+extern void clip_main_window(void);
+extern void unclip_main_window(void);
+extern void initfont(void);
+extern void load_scroll_buttons(void);
+extern void draw_scroll_buttons(void);
+extern void update_mini_screen(void);
+extern void draw_mini_screen(void);
+extern void draw_big_mini_screen(void);
+extern void draw_mini_screen_pollution(void);
+extern void draw_mini_screen_fire_cover(void);
+extern void draw_mini_screen_cricket_cover(void);
+extern void draw_mini_screen_health_cover(void);
+extern void draw_mini_screen_ub40(void);
+extern void draw_mini_screen_starve(void);
+extern void draw_mini_screen_coal(void);
+extern void draw_mini_screen_power(void);
+extern void draw_mini_screen_ocost(void);
+extern void draw_mini_screen_port(void);
+extern void draw_mini_screen_cursor(void);
+extern void print_stats(void);
+extern void print_total_money(void);
+int ask_launch_rocket_now(int x, int y);
+void print_date(void);
+extern void draw_market_cb(void);
+extern void clicked_market_cb(int, int);
+extern void close_market_cb(void);
+extern void draw_port_cb(void);
+extern void clicked_port_cb(int, int);
+extern void close_port_cb(void);
+extern int yn_dial_box(const char *, const char *, const char *, const char *);
+extern void ok_dial_box(const char *, int, const char *);
+extern int inv_sbut(int);
+extern void call_select_change_up(int);
+extern void beg_space_pad(const char *, int);
+extern void draw_up_pbar(int, int, int, int);
+extern void draw_down_pbar(int, int, int, int);
+extern void do_pbar_population(int);
+extern void do_pbar_tech(int);
+extern void do_pbar_food(int);
+extern void do_pbar_jobs(int);
+extern void do_pbar_coal(int);
+extern void do_pbar_goods(int);
+extern void do_pbar_ore(int);
+extern void do_pbar_steel(int);
+extern void do_pbar_money(int);
+extern void prog_box(const char *, int);
+/*
+  mouse functions -- are now in mouse.h, where they should be!
+  ***************
+*/
+
+/*
+  engine functions
+  ****************
+*/
+void initialize_tax_rates(void);
+void set_mappoint(int x, int y, short selected_type);
+void set_mappoint_used(int, int, int, int);
+void set_mappoint_ints(int fromx, int fromy, int x, int y);
+void new_city(int *originx, int *originy, int random_village);
+//extern void engine_do_time_step(void);
+extern void do_residence(int, int);
+extern void debug_print(int);
+extern void do_power_source(int, int);
+extern void do_power_source_coal(int, int);
+extern void do_industry_l(int, int);
+extern void do_industry_h(int, int);
+extern void do_power_substation(int, int);
+extern int get_power(int, int, int, int);
+extern int add_a_substation(int, int);
+extern void remove_a_substation(int, int);
+extern void do_organic_farm(int, int);
+extern void shuffle_substations(void);
+extern void do_coalmine(int, int);
+extern void do_oremine(int, int);
+extern void do_commune(int, int);
+extern void do_port(int, int);
+
+extern void do_parkland(int, int);
+extern void do_university(int, int);
+extern void do_recycle(int, int);
+extern void do_health_centre(int, int);
+extern void do_rocket_pad(int, int);
+extern void launch_rocket(int x, int y);
+extern void do_windmill(int, int);
+extern void do_monument(int, int);
+extern void do_school(int, int);
+extern void do_blacksmith(int, int);
+extern void do_mill(int, int);
+extern void do_pottery(int, int);
+extern void do_firestation(int, int);
+extern void do_cricket(int, int);
+extern void do_fire_cover(int, int);
+extern void do_health_cover(int, int);
+extern void do_cricket_cover(int, int);
+extern void do_random_fire(int, int, int);
+extern void do_fire(int, int);
+extern void add_a_shanty(void);
+extern void remove_a_shanty(int, int);
+extern void update_shanty(void);
+extern void do_shanty(int, int);
+extern void do_tip(int, int);
+extern void update_tech_dep(int, int);
+extern void do_waterwell_cover(int, int);
+/*
+   transport functions
+   *******************
+*/
+void connect_transport(int originx, int originy, int w, int h);
+extern void do_power_line(int, int);
+extern void do_track(int, int);
+extern void do_rail(int, int);
+extern void do_road(int, int);
+extern void general_transport(Map_Point_Info *, int *, int, int *);
+
+/*
+   market functions
+   ****************
+*/
+extern int get_food(int, int, int);
+extern int put_food(int, int, int);
+extern int get_jobs(int, int, int);
+extern int put_jobs(int, int, int);
+extern int get_goods(int, int, int);
+extern int put_goods(int, int, int);
+extern int get_ore(int, int, int);
+extern int put_ore(int, int, int);
+extern int get_coal(int, int, int);
+extern int put_coal(int, int, int);
+extern int add_a_market(int, int);
+extern void remove_a_market(int, int);
+extern void do_market(int, int);
+extern void shuffle_markets(void);
+extern int deal_with_transport(int, int, int, int);
+extern int get_steel(int, int, int);
+extern int put_steel(int, int, int);
+extern int get_waste(int, int, int);
+extern int put_waste(int, int, int);
+extern int get_stuff(int, int, int, int);
+extern int get_stuff2(Map_Point_Info *, int, int);
+extern int get_stuff3(Map_Point_Info *, int, int);
+extern int get_stuff4(Map_Point_Info *, int, int);
+extern int put_stuff(int, int, int, int);
+extern int put_stuff2(Map_Point_Info *, short *, int, int);
+extern int put_stuff3(Map_Point_Info *, short *, int, int);
+extern int put_stuff4(Map_Point_Info *, short *, int, int);
+
+#if defined SDL
+#   warning "SDL defined"
+#   include <SDL/SDL.h>
+
+    extern void sdl_gl_write(int, int, char *);
+    extern void sdl_gl_getbox(int, int, int, int, void *);
+    extern void sdl_gl_putbox(int, int, int, int, void *);
+    extern void sdl_gl_fillbox(int, int, int, int, Uint32 col);
+    
+    extern void sdl_gl_hline(int x1, int y1, int x2, Uint32 col);
+    extern void sdl_gl_vline(int x1, int y1, int y2, Uint32 col);
+    extern void sdl_gl_line(int x1, int y1, int x2, int y2, Uint32 col);
+    
+    extern void sdl_gl_setpixel(int x, int y, Uint32 col);
+    extern void sdl_gl_setfontcolors(Uint32 bg, Uint32 fg);
+    extern void sdl_gl_setfont(int, int, void *);
+    extern void sdl_gl_enableclipping(void);
+    extern void sdl_gl_setclippingwindow(int, int, int, int);
+    extern void sdl_gl_disableclipping(void);
+    
+    extern void sdl_blit(int x, int y, int w, int h, SDL_Surface *);
+    
+    /* Wait for a key or some other event */
+    extern int sdl_wait_for_key(void);
+    extern int sdl_update_wait_for_key(void);
+    
+    extern int sdl_check_key(void);
+    extern int sdl_update_check_key(void);
+    
+#   define sdl_map_rgb(r,g,b) SDL_MapRGB(display.surface->format, r, g, b)
+#   define sdl_video() (display.surface)
+#   define sdl_flip() SDL_Flip(display.surface)
+    
+    extern void sdl_clear(Uint32 col);
+    
+#   define Fgl_write(a,b,c) sdl_gl_write(a,b,c)
+#   define Fgl_getbox(a,b,c,d,e) sdl_gl_getbox(a,b,c,d,e)
+#   define Fgl_putbox(a,b,c,d,e) sdl_gl_putbox(a,b,c,d,e)
+#   define Fgl_fillbox(a,b,c,d,e) sdl_gl_fillbox(a,b,c,d,e)
+#   define Fgl_hline(a,b,c,d) sdl_gl_hline(a,b,c,d)
+#   define Fgl_line(a,b,c,d,e) sdl_gl_line(a,b,c,d,e)
+#   define Fgl_setpixel(a,b,c) sdl_gl_setpixel(a,b,c)
+#   define Fgl_setfontcolors(a,b) sdl_gl_setfontcolors(a,b)
+#   define Fgl_setfont(a,b,c) sdl_gl_setfont(a,b,c)
+#   define Fgl_enableclipping() sdl_gl_enableclipping()
+#   define Fgl_setclippingwindow(a,b,c,d) sdl_gl_setclippingwindow(a,b,c,d)
+#   define Fgl_disableclipping() sdl_gl_disableclipping()
+   
+#elif defined LC_X11
+    /* ----- X11 functions ----- */
+    extern void Fgl_write(int, int, const char *);
+    extern void open_write(int, int, const char *);
+    extern void Fgl_getbox(int, int, int, int, void *);
+    extern void Fgl_putbox(int, int, int, int, void *);
+    extern void Fgl_fillbox(int, int, int, int, int);
+    extern void Fgl_hline(int, int, int, int);
+    extern void Fgl_line(int, int, int, int, int);
+    extern void Fgl_setpixel(int, int, int);
+    extern void Fgl_setfontcolors(int, int);
+    extern void Fgl_setfont(int, int, void *);
+    extern void Fgl_enableclipping(void);
+    extern void Fgl_setclippingwindow(int, int, int, int);
+    extern void Fgl_disableclipping(void);
+#   ifdef USE_X11_PIXMAPS
+#       define USE_PIXMAPS
+        extern void init_pixmaps(void);
+        extern void init_icon_pixmap(short);
+        extern void update_pixmap(int, int, int, int, int, int, int, char *);
+#   endif
+    
+#elif defined (WIN32)
+    /* ----- Win32 functions ----- */
+    extern void gl_setpalettecolor(long, long, long, long);
+    extern void Fgl_write(int, int, const char *);
+    extern void open_write(int, int, const char *);
+    extern void Fgl_getbox(int, int, int, int, void *);
+    extern void Fgl_putbox(int, int, int, int, void *);
+    extern void Fgl_fillbox(int, int, int, int, int);
+    extern void Fgl_hline(int, int, int, int);
+    extern void Fgl_line(int, int, int, int, int);
+    extern void Fgl_setpixel(int, int, int);
+    extern void Fgl_setfontcolors(int, int);
+    extern void Fgl_setfont(int, int, void *);
+    extern void Fgl_enableclipping(void);
+    extern void Fgl_setclippingwindow(int, int, int, int);
+    extern void Fgl_disableclipping(void);
+#   define USE_PIXMAPS             /* Always */
+    extern void init_pixmaps(void);
+    extern void init_icon_pixmap(short);
+    extern void update_pixmap(int, int, int, int, int, int, int, char *);
+    
+#else
+    /* ----- SVGALIB functions ----- */
+    /* profiling */
+#   ifdef CS_PROFILE
+#       define Fgl_write(a,b,c) FPgl_write(a,b,c)
+#       define Fgl_getbox(a,b,c,d,e) FPgl_getbox(a,b,c,d,e)
+#       define Fgl_putbox(a,b,c,d,e) FPgl_putbox(a,b,c,d,e)
+#       define Fgl_fillbox(a,b,c,d,e) FPgl_fillbox(a,b,c,d,e)
+#       define Fgl_hline(a,b,c,d) FPgl_hline(a,b,c,d)
+#       define Fgl_line(a,b,c,d,e) FPgl_line(a,b,c,d,e)
+#       define Fgl_setpixel(a,b,c) FPgl_setpixel(a,b,c)
+#       define Fgl_setfontcolors(a,b) gl_setfontcolors(a,b)
+#       define Fgl_setfont(a,b,c) gl_setfont(a,b,c)
+#       define Fgl_enableclipping()   gl_enableclipping()
+#       define Fgl_setclippingwindow(a,b,c,d)   gl_setclippingwindow(a,b,c,d)
+#       define Fgl_disableclipping()   gl_disableclipping()
+#   else
+#       define Fgl_write(a,b,c) gl_write(a,b,c)
+#       define Fgl_getbox(a,b,c,d,e) gl_getbox(a,b,c,d,e)
+#       define Fgl_putbox(a,b,c,d,e) gl_putbox(a,b,c,d,e)
+#       define Fgl_fillbox(a,b,c,d,e) gl_fillbox(a,b,c,d,e)
+#       define Fgl_hline(a,b,c,d) gl_hline(a,b,c,d)
+#       define Fgl_line(a,b,c,d,e) gl_line(a,b,c,d,e)
+#       define Fgl_setpixel(a,b,c) gl_setpixel(a,b,c)
+#       define Fgl_setfontcolors(a,b) gl_setfontcolors(a,b)
+#       define Fgl_setfont(a,b,c) gl_setfont(a,b,c)
+#       define Fgl_enableclipping()   gl_enableclipping()
+#       define Fgl_setclippingwindow(a,b,c,d)   gl_setclippingwindow(a,b,c,d)
+#       define Fgl_disableclipping()   gl_disableclipping()
+#   endif
+
+#endif
 #endif /* __lintypes_h__ */

Modified: trunk/src/lincity/shrtypes.cpp
===================================================================
--- trunk/src/lincity/shrtypes.cpp	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/lincity/shrtypes.cpp	2007-11-30 00:21:54 UTC (rev 1291)
@@ -10,7 +10,7 @@
 //#include "common.h"
 #include "lctypes.h"
 #include "lin-city.h"
-#include "typeinit.h"
+//#include "typeinit.h"
 //#include "cliglobs.h"
 #include "engglobs.h"
 

Deleted: trunk/src/lincity/typeinit.h
===================================================================
--- trunk/src/lincity/typeinit.h	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/lincity/typeinit.h	2007-11-30 00:21:54 UTC (rev 1291)
@@ -1,8 +0,0 @@
-/* ---------------------------------------------------------------------- *
- * typeinit.h
- * This file is part of lincity.
- * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
- * ---------------------------------------------------------------------- */
-#include "lintypes.h"
-
-extern char graphic_path[];

Modified: trunk/src/oldgui/lcx11.cpp
===================================================================
--- trunk/src/oldgui/lcx11.cpp	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/oldgui/lcx11.cpp	2007-11-30 00:21:54 UTC (rev 1291)
@@ -230,8 +230,10 @@
 {
   int i;
   FILE *finf;
-  if ((finf = fopen (fontfile, "r")) == 0)
+  if ((finf = fopen (fontfile, "r")) == 0) {
+    fprintf(stderr," font file should be = %s\n",fontfile);
     HandleError ("Can't open the font file", FATAL);
+  }
   for (i = 0; i < 256 * 8; i++)
     myfont[i] = fgetc (finf);
   fclose (finf);

Modified: trunk/src/oldgui/screen.cpp
===================================================================
--- trunk/src/oldgui/screen.cpp	2007-11-29 20:37:08 UTC (rev 1290)
+++ trunk/src/oldgui/screen.cpp	2007-11-30 00:21:54 UTC (rev 1291)
@@ -792,8 +792,10 @@
     int i;
     FILE *inf;
     /* main_font */
-    if ((inf = fopen (fontfile, "r")) == 0)
+    if ((inf = fopen (fontfile, "r")) == 0) {
+        fprintf(stderr," font file should be =%s;\n", fontfile);
 	HandleError ("Can't open the font file", FATAL);
+    }
     for (i = 0; i < 256 * 8; i++)
 	main_font[i] = fgetc (inf);
     fclose (inf);



From alainb at mail.berlios.de  Sun Nov 25 20:16:59 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Sun, 25 Nov 2007 19:16:59 -0000
Subject: [Lincity-ng-commit] r1286 - in trunk/src: lincity lincity/modules
	tools
Message-ID: <200711251915.lAPJFtme021369@sheep.berlios.de>

Author: alainb
Date: 2007-11-25 20:15:34 +0100 (Sun, 25 Nov 2007)
New Revision: 1286

Added:
   trunk/src/tools/Lindent.sh
Removed:
   trunk/src/tools/Lindent-2.6.23.8.sh
Modified:
   trunk/src/lincity/confw32.h
   trunk/src/lincity/engglobs.h
   trunk/src/lincity/engine.cpp
   trunk/src/lincity/engine.h
   trunk/src/lincity/fileutil.cpp
   trunk/src/lincity/fileutil.h
   trunk/src/lincity/getopt.cpp
   trunk/src/lincity/lc_common.h
   trunk/src/lincity/lc_locale.cpp
   trunk/src/lincity/lc_locale.h
   trunk/src/lincity/lcconfig.h
   trunk/src/lincity/lclib.cpp
   trunk/src/lincity/lclib.h
   trunk/src/lincity/lcstring.h
   trunk/src/lincity/lctypes.h
   trunk/src/lincity/ldsvguts.cpp
   trunk/src/lincity/ldsvguts.h
   trunk/src/lincity/lin-city.h
   trunk/src/lincity/lintypes.cpp
   trunk/src/lincity/lintypes.h
   trunk/src/lincity/modules/blacksmith.cpp
   trunk/src/lincity/modules/blacksmith.h
   trunk/src/lincity/modules/coal_power.cpp
   trunk/src/lincity/modules/coal_power.h
   trunk/src/lincity/modules/coalmine.cpp
   trunk/src/lincity/modules/coalmine.h
   trunk/src/lincity/modules/commune.cpp
   trunk/src/lincity/modules/commune.h
   trunk/src/lincity/modules/cricket.cpp
   trunk/src/lincity/modules/cricket.h
   trunk/src/lincity/modules/fire.cpp
   trunk/src/lincity/modules/firestation.cpp
   trunk/src/lincity/modules/firestation.h
   trunk/src/lincity/modules/health_centre.cpp
   trunk/src/lincity/modules/health_centre.h
   trunk/src/lincity/modules/heavy_industry.cpp
   trunk/src/lincity/modules/light_industry.cpp
   trunk/src/lincity/modules/market.cpp
   trunk/src/lincity/modules/mill.cpp
   trunk/src/lincity/modules/mill.h
   trunk/src/lincity/modules/monument.cpp
   trunk/src/lincity/modules/monument.h
   trunk/src/lincity/modules/oremine.cpp
   trunk/src/lincity/modules/oremine.h
   trunk/src/lincity/modules/organic_farm.cpp
   trunk/src/lincity/modules/organic_farm.h
   trunk/src/lincity/modules/parkland.cpp
   trunk/src/lincity/modules/port.cpp
   trunk/src/lincity/modules/port.h
   trunk/src/lincity/modules/pottery.cpp
   trunk/src/lincity/modules/pottery.h
   trunk/src/lincity/modules/power_line.cpp
   trunk/src/lincity/modules/power_line.h
   trunk/src/lincity/modules/rail.cpp
   trunk/src/lincity/modules/recycle.cpp
   trunk/src/lincity/modules/recycle.h
   trunk/src/lincity/modules/residence.cpp
   trunk/src/lincity/modules/road.cpp
   trunk/src/lincity/modules/rocket_pad.cpp
   trunk/src/lincity/modules/rocket_pad.h
   trunk/src/lincity/modules/school.cpp
   trunk/src/lincity/modules/school.h
   trunk/src/lincity/modules/shanty.cpp
   trunk/src/lincity/modules/solar_power.cpp
   trunk/src/lincity/modules/substation.cpp
   trunk/src/lincity/modules/substation.h
   trunk/src/lincity/modules/tip.cpp
   trunk/src/lincity/modules/tip.h
   trunk/src/lincity/modules/track.cpp
   trunk/src/lincity/modules/university.cpp
   trunk/src/lincity/modules/water.cpp
   trunk/src/lincity/modules/water.h
   trunk/src/lincity/modules/waterwell.cpp
   trunk/src/lincity/modules/waterwell.h
   trunk/src/lincity/modules/windmill.cpp
   trunk/src/lincity/power.cpp
   trunk/src/lincity/power.h
   trunk/src/lincity/shrglobs.cpp
   trunk/src/lincity/shrtypes.cpp
   trunk/src/lincity/simulate.cpp
   trunk/src/lincity/simulate.h
   trunk/src/lincity/stats.cpp
   trunk/src/lincity/stats.h
   trunk/src/lincity/transport.cpp
   trunk/src/lincity/transport.h
Log:
reformated engine sources src/lincity/

Modified: trunk/src/lincity/confw32.h
===================================================================
--- trunk/src/lincity/confw32.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/confw32.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -2,95 +2,95 @@
  * confw32.h
  * This file is part of lincity.
  * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
- * ---------------------------------------------------------------------- */
+ * ---------------------------------------------------------------------- */  
 /* This is a config.h file that has been hacked for VC++ 4.0.  You'll 
  * probably need to change if you are using a different compiler.
- * ---------------------------------------------------------------------- */
-
-/* Define to empty if the keyword does not work.  */
-/* #undef const */
-
-/* Define if you have locale.h */
+ * ---------------------------------------------------------------------- */ 
+    
+/* Define to empty if the keyword does not work.  */ 
+/* #undef const */ 
+    
+/* Define if you have locale.h */ 
 #define HAVE_LOCALE_H
-
-/* Define if you want to enable foreign language support */
+    
+/* Define if you want to enable foreign language support */ 
 #undef ENABLE_NLS
-/* #define ENABLE_NLS */
-
-/* Define as __inline if that's what the C compiler calls it.  */
+/* #define ENABLE_NLS */ 
+    
+/* Define as __inline if that's what the C compiler calls it.  */ 
 #define inline __inline
-
-/* This is not yet fixed for UNIX...  */
-/* #define snprintf _snprintf */
-
-/* Define if you need to in order for stat and other things to work.  */
-/* #undef _POSIX_SOURCE */
-
-/* Define if you have the ANSI C header files.  */
-/* #undef STDC_HEADERS */
-
-/* Define if you can safely include both <sys/time.h> and <time.h>.  */
-/* #undef TIME_WITH_SYS_TIME */
-
-/* Define if the X Window System is missing or not being used.  */
-/* #undef X_DISPLAY_MISSING */
-
-/* Define if save files should be compressed with gzip.  */
-/* #undef HAVE_GZIP */
-
-/* The number of bytes in a char.  */
+    
+/* This is not yet fixed for UNIX...  */ 
+/* #define snprintf _snprintf */ 
+    
+/* Define if you need to in order for stat and other things to work.  */ 
+/* #undef _POSIX_SOURCE */ 
+    
+/* Define if you have the ANSI C header files.  */ 
+/* #undef STDC_HEADERS */ 
+    
+/* Define if you can safely include both <sys/time.h> and <time.h>.  */ 
+/* #undef TIME_WITH_SYS_TIME */ 
+    
+/* Define if the X Window System is missing or not being used.  */ 
+/* #undef X_DISPLAY_MISSING */ 
+    
+/* Define if save files should be compressed with gzip.  */ 
+/* #undef HAVE_GZIP */ 
+    
+/* The number of bytes in a char.  */ 
 #define SIZEOF_CHAR 1
-
-/* The number of bytes in a int.  */
+    
+/* The number of bytes in a int.  */ 
 #define SIZEOF_INT 4
-
-/* The number of bytes in a long.  */
+    
+/* The number of bytes in a long.  */ 
 #define SIZEOF_LONG 4
-
-/* The number of bytes in a short.  */
+    
+/* The number of bytes in a short.  */ 
 #define SIZEOF_SHORT 2
-
-/* Define if you have the gettimeofday function.  */
-/* #undef HAVE_GETTIMEOFDAY */
-
-/* Define if you have the mkdir function.  */
-/* #undef HAVE_MKDIR */
-
-/* Define if you have the popen function.  */
-/* #undef HAVE_POPEN */
-
-/* Define if you have the select function.  */
-/* #undef HAVE_SELECT */
-
-/* Define if you have the <dirent.h> header file.  */
-/* #undef HAVE_DIRENT_H */
-
-/* Define if you have the <ndir.h> header file.  */
-/* #undef HAVE_NDIR_H */
-
-/* Define if you have the <string.h> header file.  */
+    
+/* Define if you have the gettimeofday function.  */ 
+/* #undef HAVE_GETTIMEOFDAY */ 
+    
+/* Define if you have the mkdir function.  */ 
+/* #undef HAVE_MKDIR */ 
+    
+/* Define if you have the popen function.  */ 
+/* #undef HAVE_POPEN */ 
+    
+/* Define if you have the select function.  */ 
+/* #undef HAVE_SELECT */ 
+    
+/* Define if you have the <dirent.h> header file.  */ 
+/* #undef HAVE_DIRENT_H */ 
+    
+/* Define if you have the <ndir.h> header file.  */ 
+/* #undef HAVE_NDIR_H */ 
+    
+/* Define if you have the <string.h> header file.  */ 
 #define HAVE_STRING_H 1
-
-/* Define if you have the <strings.h> header file.  */
-/* #undef HAVE_STRINGS_H */
-
-/* Define if you have the <sys/dir.h> header file.  */
-/* #undef HAVE_SYS_DIR_H */
-
-/* Define if you have the <sys/ndir.h> header file.  */
-/* #undef HAVE_SYS_NDIR_H */
-
-/* Define if you have the <sys/time.h> header file.  */
-/* #undef HAVE_SYS_TIME_H */
-
-/* Define if you have the <unistd.h> header file.  */
-/* #undef HAVE_UNISTD_H */
-
-/* Define if you have the <vga.h> header file.  */
-/* #undef HAVE_VGA_H */
-
-/* Name of package */
+    
+/* Define if you have the <strings.h> header file.  */ 
+/* #undef HAVE_STRINGS_H */ 
+    
+/* Define if you have the <sys/dir.h> header file.  */ 
+/* #undef HAVE_SYS_DIR_H */ 
+    
+/* Define if you have the <sys/ndir.h> header file.  */ 
+/* #undef HAVE_SYS_NDIR_H */ 
+    
+/* Define if you have the <sys/time.h> header file.  */ 
+/* #undef HAVE_SYS_TIME_H */ 
+    
+/* Define if you have the <unistd.h> header file.  */ 
+/* #undef HAVE_UNISTD_H */ 
+    
+/* Define if you have the <vga.h> header file.  */ 
+/* #undef HAVE_VGA_H */ 
+    
+/* Name of package */ 
 #define PACKAGE "lincity"
-
-/* Version number of package */
+    
+/* Version number of package */ 
 #define VERSION "1.13.2"

Modified: trunk/src/lincity/engglobs.h
===================================================================
--- trunk/src/lincity/engglobs.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/engglobs.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -13,8 +13,7 @@
 extern int use_waterwell, ldsv_version;
 
 /* GCS -- One of these days I will get this right. */
-struct map_struct
-{
+struct map_struct {
     short type[WORLD_SIDE_LEN][WORLD_SIDE_LEN];
     short group[WORLD_SIDE_LEN][WORLD_SIDE_LEN];
     int pollution[WORLD_SIDE_LEN][WORLD_SIDE_LEN];
@@ -32,7 +31,7 @@
 #define MP_SIZE(x,y)   main_groups[MP_GROUP(x,y)].size
 #define MP_COLOR(x,y)  main_groups[MP_GROUP(x,y)].colour
 #define MP_GROUP_IS_RESIDENCE(x,y)  (GROUP_IS_RESIDENCE(MP_GROUP(x,y)))
-#define HAS_UGWATER(x,y) (MP_INFO(x,y).flags & FLAG_HAS_UNDERGROUND_WATER) 
+#define HAS_UGWATER(x,y) (MP_INFO(x,y).flags & FLAG_HAS_UNDERGROUND_WATER)
 
 extern int mappoint_array_x[WORLD_SIDE_LEN], mappoint_array_y[WORLD_SIDE_LEN];
 extern int numof_shanties, numof_communes;
@@ -43,7 +42,7 @@
 extern int sust_old_money_count, sust_old_population, sust_old_population_count;
 extern int sust_old_tech, sust_old_tech_count, sust_fire_count;
 
-extern int total_time;    /* game time */
+extern int total_time;          /* game time */
 
 extern int population, starving_population;
 extern int housed_population;

Modified: trunk/src/lincity/engine.cpp
===================================================================
--- trunk/src/lincity/engine.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/engine.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -26,25 +26,24 @@
 #include "gui_interface/shared_globals.h"
 
 extern int selected_type_cost;
-static void bulldoze_mappoint (short fill, int x, int y);
-int is_real_river (int x, int y);
+static void bulldoze_mappoint(short fill, int x, int y);
+int is_real_river(int x, int y);
 
 int last_warning_message_group = 0;
 
-void
-fire_area (int xx, int yy)
+void fire_area(int xx, int yy)
 {
     /* this happens when a rocket crashes or on random_fire. */
     int x = xx;
     int y = yy;
     int size;
-    if (MP_GROUP(x,y) == GROUP_WATER || MP_GROUP(x,y) == GROUP_FIRE)
+    if (MP_GROUP(x, y) == GROUP_WATER || MP_GROUP(x, y) == GROUP_FIRE)
         return;
-    if (MP_TYPE(x,y) == CST_USED) {
-        x = MP_INFO(xx,yy).int_1;
-        y = MP_INFO(xx,yy).int_2;
+    if (MP_TYPE(x, y) == CST_USED) {
+        x = MP_INFO(xx, yy).int_1;
+        y = MP_INFO(xx, yy).int_2;
     }
-    size = MP_SIZE(x,y);
+    size = MP_SIZE(x, y);
 
     /* Destroy the content of the building to prevent special management
      * when bulldozed.
@@ -53,138 +52,133 @@
     /* Kill 'only' half of the people (bulldoze item put them in people_pool)
      * lincity NG 1.1 and previous killed all the people!
      */
-    if ((MP_INFO(x,y).flags & FLAG_FIRE_COVER) !=0)
-        MP_INFO(x,y).population = MP_INFO(x,y).population / 2;
+    if ((MP_INFO(x, y).flags & FLAG_FIRE_COVER) != 0)
+        MP_INFO(x, y).population = MP_INFO(x, y).population / 2;
     else
-        MP_INFO(x,y).population = 0;
-    MP_INFO(x,y).flags = 0;
-    MP_INFO(x,y).int_1 = 0;
-    MP_INFO(x,y).int_2 = 0;
-    MP_INFO(x,y).int_3 = 0;
-    MP_INFO(x,y).int_4 = 0;
-    MP_INFO(x,y).int_5 = 0;
-    MP_INFO(x,y).int_6 = 0;
-    MP_INFO(x,y).int_7 = 0;
+        MP_INFO(x, y).population = 0;
+    MP_INFO(x, y).flags = 0;
+    MP_INFO(x, y).int_1 = 0;
+    MP_INFO(x, y).int_2 = 0;
+    MP_INFO(x, y).int_3 = 0;
+    MP_INFO(x, y).int_4 = 0;
+    MP_INFO(x, y).int_5 = 0;
+    MP_INFO(x, y).int_6 = 0;
+    MP_INFO(x, y).int_7 = 0;
 
     /* Correctly remove buildings (substations...) and adjust count,
      * but don't count bulldoze cost
      * */
-    adjust_money(+main_groups[MP_GROUP(x,y)].bul_cost);
+    adjust_money(+main_groups[MP_GROUP(x, y)].bul_cost);
     bulldoze_item(x, y);
 
     /* put fire */
     for (int i = 0; i < size; i++)
         for (int j = 0; j < size; j++) {
-            bulldoze_mappoint (CST_FIRE_1, x + i, y + j);
+            bulldoze_mappoint(CST_FIRE_1, x + i, y + j);
             MP_GROUP(x + i, y + j) = GROUP_FIRE;
         }
 
-
     /* AL1: is it necessary ? It is the only place in lincity/. with such a call
      *  all other are in lincity-ng/.
      */
-    refresh_main_screen ();
+    refresh_main_screen();
 
-  /* 
-    // update transport or we get stuff put in
-    // the area from connected tracks etc.
-    // FIXME: AL1: NG 1.1: do the right thing and/or remove this comment
-  */
+    /* 
+       // update transport or we get stuff put in
+       // the area from connected tracks etc.
+       // FIXME: AL1: NG 1.1: do the right thing and/or remove this comment
+     */
 }
 
-int 
-adjust_money(int value)
+int adjust_money(int value)
 {
     total_money += value;
     print_total_money();
     mps_update();
-    update_pbar (PMONEY, total_money, 0);
-    refresh_pbars(); /* This could be more specific */
+    update_pbar(PMONEY, total_money, 0);
+    refresh_pbars();            /* This could be more specific */
     return total_money;
 }
 
-int
-no_credit_build (int selected_group)
+int no_credit_build(int selected_group)
 {
-  if (total_money >= 0)
-    return (0);
+    if (total_money >= 0)
+        return (0);
 
 #ifdef GROUP_SOLAR_POWER_NO_CREDIT
-  if (selected_group == GROUP_SOLAR_POWER) {
-    return (1);
-  }
+    if (selected_group == GROUP_SOLAR_POWER) {
+        return (1);
+    }
 #endif
 #ifdef GROUP_UNIVERSITY_NO_CREDIT
-  if (selected_group == GROUP_UNIVERSITY) {
-    return (1);
-  }
+    if (selected_group == GROUP_UNIVERSITY) {
+        return (1);
+    }
 #endif
 #ifdef GROUP_PARKLAND_NO_CREDIT
-  if (selected_group == GROUP_PARKLAND) {
-    return (1);
-  }
+    if (selected_group == GROUP_PARKLAND) {
+        return (1);
+    }
 #endif
 #ifdef GROUP_RECYCLE_NO_CREDIT
-  if (selected_group == GROUP_RECYCLE) {
-    return (1);
-  }
+    if (selected_group == GROUP_RECYCLE) {
+        return (1);
+    }
 #endif
 #ifdef GROUP_ROCKET
-  if (selected_group == GROUP_ROCKET) {
-    return (1);
-  }
+    if (selected_group == GROUP_ROCKET) {
+        return (1);
+    }
 #endif
 
-  if (main_groups[selected_group].no_credit == TRUE ) {
-    return (1);
-  }
-  return (0);
+    if (main_groups[selected_group].no_credit == TRUE) {
+        return (1);
+    }
+    return (0);
 }
 
-void 
-no_credit_build_msg_ng (int selected_group)
+void no_credit_build_msg_ng(int selected_group)
 {
-  if (last_warning_message_group == selected_group)
+    if (last_warning_message_group == selected_group)
         return;
-  last_warning_message_group = selected_group;
+    last_warning_message_group = selected_group;
 
 #ifdef GROUP_SOLAR_POWER_NO_CREDIT
-  if (selected_group == GROUP_SOLAR_POWER) {
-    ok_dial_box ("no-credit-solar-power.mes", BAD, 0L);
-    return;
-  }
+    if (selected_group == GROUP_SOLAR_POWER) {
+        ok_dial_box("no-credit-solar-power.mes", BAD, 0L);
+        return;
+    }
 #endif
 #ifdef GROUP_UNIVERSITY_NO_CREDIT
-  if (selected_group == GROUP_UNIVERSITY) {
-    ok_dial_box ("no-credit-university.mes", BAD, 0L);
-    return;
-  }
+    if (selected_group == GROUP_UNIVERSITY) {
+        ok_dial_box("no-credit-university.mes", BAD, 0L);
+        return;
+    }
 #endif
 #ifdef GROUP_PARKLAND_NO_CREDIT
-  if (selected_group == GROUP_PARKLAND) {
-    ok_dial_box ("no-credit-parkland.mes", BAD, 0L);
-    return;
-  }
+    if (selected_group == GROUP_PARKLAND) {
+        ok_dial_box("no-credit-parkland.mes", BAD, 0L);
+        return;
+    }
 #endif
 #ifdef GROUP_RECYCLE_NO_CREDIT
-  if (selected_group == GROUP_RECYCLE) {
-    ok_dial_box ("no-credit-recycle.mes", BAD, 0L);
-    return;
-  }
+    if (selected_group == GROUP_RECYCLE) {
+        ok_dial_box("no-credit-recycle.mes", BAD, 0L);
+        return;
+    }
 #endif
 #ifdef GROUP_ROCKET
-  if (selected_group == GROUP_ROCKET) {
-    ok_dial_box ("no-credit-rocket.mes", BAD, 0L);
-    return;
-  }
+    if (selected_group == GROUP_ROCKET) {
+        ok_dial_box("no-credit-rocket.mes", BAD, 0L);
+        return;
+    }
 #endif
-  return;
+    return;
 }
 
-int 
-place_item (int x, int y, short type)
+int place_item(int x, int y, short type)
 {
-    int i,j;
+    int i, j;
     int prev_tip = 0;
     int group;
     int size;
@@ -192,522 +186,485 @@
     group = get_group_of_type(type);
     if (group < 0) {
 #ifdef DEBUG
-        fprintf(stderr,"Error: group does not exist %i\n", group);
+        fprintf(stderr, "Error: group does not exist %i\n", group);
 #endif
-        ok_dial_box ("warning.mes", BAD,
-                _("ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "));
+        ok_dial_box("warning.mes", BAD,
+                    _
+                    ("ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "));
         return -1000;
     }
 
     size = main_groups[group].size;
 
     /* You can't build because credit not available. */
-    if (no_credit_build (group) != 0) {
-        no_credit_build_msg_ng (group);
-	return -1;
+    if (no_credit_build(group) != 0) {
+        no_credit_build_msg_ng(group);
+        return -1;
     }
 
     switch (group) {
     case GROUP_ORGANIC_FARM:
-	MP_INFO(x,y).int_1 = tech_level;
+        MP_INFO(x, y).int_1 = tech_level;
         break;
     case GROUP_TRACK:
     case GROUP_ROAD:
     case GROUP_RAIL:
-	MP_INFO(x,y).flags |= FLAG_IS_TRANSPORT;
+        MP_INFO(x, y).flags |= FLAG_IS_TRANSPORT;
         break;
     case GROUP_PORT:
-	if (is_real_river (x + 4, y) != 1 
-	        || is_real_river (x + 4, y + 1) != 1
-	        || is_real_river (x + 4, y + 2) != 1 
-	        || is_real_river (x + 4, y + 3) != 1) {
+        if (is_real_river(x + 4, y) != 1
+            || is_real_river(x + 4, y + 1) != 1
+            || is_real_river(x + 4, y + 2) != 1 || is_real_river(x + 4, y + 3) != 1) {
             if (last_warning_message_group != group)
-                ok_dial_box ("warning.mes", BAD,
-                    _("Port must be connected to river all along right side."));
+                ok_dial_box("warning.mes", BAD, _("Port must be connected to river all along right side."));
             last_warning_message_group = group;
             return -2;
         }
         break;
     case GROUP_SUBSTATION:
-        if (add_a_substation (x, y) == 0) {
+        if (add_a_substation(x, y) == 0) {
             /* Not enough slots in the substation array */
             if (last_warning_message_group != group)
-                ok_dial_box ("warning.mes", BAD,
-                    _("Too many substations + windmills. You cannot build one more"));
+                ok_dial_box("warning.mes", BAD, _("Too many substations + windmills. You cannot build one more"));
             last_warning_message_group = group;
-	    return -3;
+            return -3;
         }
         break;
     case GROUP_WINDMILL:
-	if (add_a_substation (x, y) == 0) {
+        if (add_a_substation(x, y) == 0) {
             /* Not enough slots in the substation array */
             if (last_warning_message_group != group)
-                ok_dial_box ("warning.mes", BAD,
-                    _("Too many substations + windmills. You cannot build one more"));
+                ok_dial_box("warning.mes", BAD, _("Too many substations + windmills. You cannot build one more"));
             last_warning_message_group = group;
-	    return -3;
+            return -3;
         }
-        MP_INFO(x,y).int_2 = tech_level;
-        MP_INFO(x,y).int_1 = (int)(WINDMILL_POWER
-	        + (((double) MP_INFO(x,y).int_2 * WINDMILL_POWER) / MAX_TECH_LEVEL));
+        MP_INFO(x, y).int_2 = tech_level;
+        MP_INFO(x, y).int_1 = (int)(WINDMILL_POWER + (((double)MP_INFO(x, y).int_2 * WINDMILL_POWER) / MAX_TECH_LEVEL));
         /* Make sure that the correct windmill graphic shows up */
-	if (tech_level > MODERN_WINDMILL_TECH)
-	    type = CST_WINDMILL_1_R;
-	else 
-	    type = CST_WINDMILL_1_W;
+        if (tech_level > MODERN_WINDMILL_TECH)
+            type = CST_WINDMILL_1_R;
+        else
+            type = CST_WINDMILL_1_W;
         break;
     case (GROUP_COAL_POWER):
-        MP_INFO(x,y).int_4 = tech_level;
-        MP_INFO(x,y).int_1 = (int)(POWERS_COAL_OUTPUT
-	        + (((double) MP_INFO(x,y).int_4 * POWERS_COAL_OUTPUT)
-	                / MAX_TECH_LEVEL));
+        MP_INFO(x, y).int_4 = tech_level;
+        MP_INFO(x, y).int_1 = (int)(POWERS_COAL_OUTPUT + (((double)MP_INFO(x, y).int_4 * POWERS_COAL_OUTPUT)
+                                                          / MAX_TECH_LEVEL));
         break;
     case (GROUP_SOLAR_POWER):
- 	MP_INFO(x,y).int_2 = tech_level;
-        MP_INFO(x,y).int_1 = (int)(POWERS_SOLAR_OUTPUT
-	        + (((double) MP_INFO(x,y).int_2 * POWERS_SOLAR_OUTPUT)
-	                / MAX_TECH_LEVEL)); /* like other power sources */
-        MP_INFO(x,y).int_3 = MP_INFO(x,y).int_1; /* Int_3 is kept for compatibility */
+        MP_INFO(x, y).int_2 = tech_level;
+        MP_INFO(x, y).int_1 = (int)(POWERS_SOLAR_OUTPUT + (((double)MP_INFO(x, y).int_2 * POWERS_SOLAR_OUTPUT)
+                                                           / MAX_TECH_LEVEL));  /* like other power sources */
+        MP_INFO(x, y).int_3 = MP_INFO(x, y).int_1;      /* Int_3 is kept for compatibility */
         break;
     case GROUP_COMMUNE:
-	numof_communes++;
+        numof_communes++;
         break;
     case GROUP_MARKET:
-	/* Test for enough slots in the market array */
-	if (add_a_market (x, y) == 0) {
+        /* Test for enough slots in the market array */
+        if (add_a_market(x, y) == 0) {
             if (last_warning_message_group != group)
-                ok_dial_box ("warning.mes", BAD,
-                        _("Too many markets. You cannot build one more"));
+                ok_dial_box("warning.mes", BAD, _("Too many markets. You cannot build one more"));
             last_warning_message_group = group;
-	    return -4;
+            return -4;
         }
-	MP_INFO(x,y).flags += (FLAG_MB_FOOD | FLAG_MB_JOBS
-			       | FLAG_MB_COAL | FLAG_MB_ORE | FLAG_MB_STEEL
-			       | FLAG_MB_GOODS | FLAG_MS_FOOD | FLAG_MS_JOBS
-			       | FLAG_MS_COAL | FLAG_MS_GOODS | FLAG_MS_ORE
-			       | FLAG_MS_STEEL);
+        MP_INFO(x, y).flags += (FLAG_MB_FOOD | FLAG_MB_JOBS
+                                | FLAG_MB_COAL | FLAG_MB_ORE | FLAG_MB_STEEL
+                                | FLAG_MB_GOODS | FLAG_MS_FOOD | FLAG_MS_JOBS
+                                | FLAG_MS_COAL | FLAG_MS_GOODS | FLAG_MS_ORE | FLAG_MS_STEEL);
         break;
     case GROUP_RECYCLE:
-        MP_INFO(x,y).int_4 = tech_level;
+        MP_INFO(x, y).int_4 = tech_level;
         break;
     case GROUP_TIP:
-	/* Don't build a tip if there has already been one.  If we succeed,
-	   mark the spot permanently by "doubling" the ore reserve */
-	prev_tip = 0;
-	for (i=0; i < size; i++)
-	    for (j=0; j < size; j++)
-		if (MP_INFO(x+i,y+j).ore_reserve > ORE_RESERVE) {
-		    prev_tip = 1;
-		    break;
-		}
-	if (prev_tip) {
-	    ok_dial_box ("warning.mes", BAD,
-                    _("You can't build a tip here: this area was once a landfill"));
-	    return -5;
-	} else {
-	    for (i=0; i < size; i++)
-		for (j=0; j < size; j++)
-		    MP_INFO(x+i,y+j).ore_reserve = ORE_RESERVE * 2;
-	}
+        /* Don't build a tip if there has already been one.  If we succeed,
+           mark the spot permanently by "doubling" the ore reserve */
+        prev_tip = 0;
+        for (i = 0; i < size; i++)
+            for (j = 0; j < size; j++)
+                if (MP_INFO(x + i, y + j).ore_reserve > ORE_RESERVE) {
+                    prev_tip = 1;
+                    break;
+                }
+        if (prev_tip) {
+            ok_dial_box("warning.mes", BAD, _("You can't build a tip here: this area was once a landfill"));
+            return -5;
+        } else {
+            for (i = 0; i < size; i++)
+                for (j = 0; j < size; j++)
+                    MP_INFO(x + i, y + j).ore_reserve = ORE_RESERVE * 2;
+        }
         break;
     case GROUP_OREMINE:
-    {
-	/* Don't allow new mines on old mines or old tips */
-	/* GCS: mines over old mines is OK if there is enough remaining 
-	        ore, as is the case when there is partial overlap. */
-	int total_ore = 0;
-	prev_tip = 0;
-	for (i=0;i<size;i++) {
-	    for (j=0;j<size;j++) {
-		total_ore += MP_INFO(x+i,y+j).ore_reserve;
-		if (MP_INFO(x+i,y+j).ore_reserve > ORE_RESERVE) {
-		    prev_tip = 1;
-		    break;
-		}
-	    }
-	}
-	if (prev_tip) {
-	    ok_dial_box ("warning.mes", BAD,
-                    _("You can't build a mine here: This area was once a landfill"));
-	    return -6;
-	}
-	if (total_ore < MIN_ORE_RESERVE_FOR_MINE) {
-	    ok_dial_box("warning.mes", BAD,
-                    _("You can't build a mine here: there is no ore left at this site"));
-	    return -7;
-	}
-        break;
-    } 
+        {
+            /* Don't allow new mines on old mines or old tips */
+            /* GCS: mines over old mines is OK if there is enough remaining 
+               ore, as is the case when there is partial overlap. */
+            int total_ore = 0;
+            prev_tip = 0;
+            for (i = 0; i < size; i++) {
+                for (j = 0; j < size; j++) {
+                    total_ore += MP_INFO(x + i, y + j).ore_reserve;
+                    if (MP_INFO(x + i, y + j).ore_reserve > ORE_RESERVE) {
+                        prev_tip = 1;
+                        break;
+                    }
+                }
+            }
+            if (prev_tip) {
+                ok_dial_box("warning.mes", BAD, _("You can't build a mine here: This area was once a landfill"));
+                return -6;
+            }
+            if (total_ore < MIN_ORE_RESERVE_FOR_MINE) {
+                ok_dial_box("warning.mes", BAD, _("You can't build a mine here: there is no ore left at this site"));
+                return -7;
+            }
+            break;
+        }
     case GROUP_WATERWELL:
         if (use_waterwell) {
-            int has_ugw=0;
-            for (i=0;i<size;i++) 
-                for (j=0;j<size;j++) 
-                    has_ugw = has_ugw | HAS_UGWATER(x+i, y+j);
+            int has_ugw = 0;
+            for (i = 0; i < size; i++)
+                for (j = 0; j < size; j++)
+                    has_ugw = has_ugw | HAS_UGWATER(x + i, y + j);
             if (!has_ugw) {
-                ok_dial_box("warning.mes", BAD,
-                        _("You can't build a water well here: it is all desert."));
+                ok_dial_box("warning.mes", BAD, _("You can't build a water well here: it is all desert."));
                 return -8;
             } else {
                 numof_waterwell++;
             }
-        } /* else ... is not possible */
+        }                       /* else ... is not possible */
         break;
     case GROUP_PARKLAND:
         if (use_waterwell)
-            if (!HAS_UGWATER(x,y)) {
-                ok_dial_box("warning.mes", BAD,
-                        _("You can't build a park here: it is a desert, parks need water"));
+            if (!HAS_UGWATER(x, y)) {
+                ok_dial_box("warning.mes", BAD, _("You can't build a park here: it is a desert, parks need water"));
                 return -8;
             }
 
-    } /* end case */
+    }                           /* end case */
     last_warning_message_group = 0;
 
     /* Store last_built for refund on "mistakes" */
     last_built_x = x;
     last_built_y = y;
 
-    set_mappoint (x, y, type);
+    set_mappoint(x, y, type);
 
     if (group == GROUP_RIVER)
-	connect_rivers ();
+        connect_rivers();
 
-    connect_transport (x-2,y-2,x+size+1,y+size+1);
+    connect_transport(x - 2, y - 2, x + size + 1, y + size + 1);
 
     adjust_money(-selected_module_cost);
     map_power_grid();
     return 0;
 }
 
-int 
-bulldoze_item (int x, int y)
+int bulldoze_item(int x, int y)
 {
     int g, size;
 
-    if (MP_TYPE(x,y) == CST_USED) {
-	/* This is considered "improper" input.  Silently ignore. */
+    if (MP_TYPE(x, y) == CST_USED) {
+        /* This is considered "improper" input.  Silently ignore. */
 #ifdef DEBUG
-        fprintf(stderr," try to improperly bulldoze_item CST_USED\n");
+        fprintf(stderr, " try to improperly bulldoze_item CST_USED\n");
 #endif
-	return -1;
+        return -1;
     }
 
-    size = MP_SIZE(x,y);
-    g = MP_GROUP(x,y);
-    people_pool += MP_INFO(x,y).population;
+    size = MP_SIZE(x, y);
+    g = MP_GROUP(x, y);
+    people_pool += MP_INFO(x, y).population;
 
     if (g == GROUP_DESERT) {
-	/* Nothing to do. */
-	return -1;
-    }
-    else if (g == GROUP_SHANTY) {
-	remove_a_shanty(x, y);
-	adjust_money(-GROUP_SHANTY_BUL_COST);
+        /* Nothing to do. */
+        return -1;
+    } else if (g == GROUP_SHANTY) {
+        remove_a_shanty(x, y);
+        adjust_money(-GROUP_SHANTY_BUL_COST);
         numof_shanties--;
-    }
-    else if (g == GROUP_FIRE) {
-	if (MP_INFO(x,y).int_2 >= FIRE_LENGTH)
-	    return -1;  /* Can't bulldoze ? */
-	MP_INFO(x,y).int_2 = FIRE_LENGTH + 1;
-	MP_TYPE(x,y) = CST_FIRE_DONE1;
-	MP_GROUP(x,y) = GROUP_BURNT;
-	adjust_money(-GROUP_BURNT_BUL_COST);
-    }
-    else {
-	adjust_money(-main_groups[g].bul_cost);
-         
+    } else if (g == GROUP_FIRE) {
+        if (MP_INFO(x, y).int_2 >= FIRE_LENGTH)
+            return -1;          /* Can't bulldoze ? */
+        MP_INFO(x, y).int_2 = FIRE_LENGTH + 1;
+        MP_TYPE(x, y) = CST_FIRE_DONE1;
+        MP_GROUP(x, y) = GROUP_BURNT;
+        adjust_money(-GROUP_BURNT_BUL_COST);
+    } else {
+        adjust_money(-main_groups[g].bul_cost);
+
         if (g == GROUP_COMMUNE)
-             numof_communes--;
+            numof_communes--;
 
         if (g == GROUP_MARKET)
-            remove_a_market (x, y);
- 
+            remove_a_market(x, y);
+
         if (g == GROUP_SUBSTATION || g == GROUP_WINDMILL)
-             remove_a_substation (x, y);
- 
-	if (g == GROUP_OREMINE)	{
-	    int i, j;
-	    for (j = 0; j < 4; j++)
-		for (i = 0; i < 4; i++)
-		    if (MP_INFO(x + i,y + j).ore_reserve < ORE_RESERVE / 2)
-			do_bulldoze_area (CST_WATER, x + i, y + j);
-	} else {
+            remove_a_substation(x, y);
+
+        if (g == GROUP_OREMINE) {
+            int i, j;
+            for (j = 0; j < 4; j++)
+                for (i = 0; i < 4; i++)
+                    if (MP_INFO(x + i, y + j).ore_reserve < ORE_RESERVE / 2)
+                        do_bulldoze_area(CST_WATER, x + i, y + j);
+        } else {
             /* keep compatibility for saving pre_waterwell loaded game */
             if (use_waterwell)
-                do_bulldoze_area (CST_DESERT, x, y);
+                do_bulldoze_area(CST_DESERT, x, y);
             else
-                do_bulldoze_area (CST_GREEN, x, y);
+                do_bulldoze_area(CST_GREEN, x, y);
         }
     }
 
     /* Tell mps about it, in case its selected */
     mps_update();
-    return size;  /* No longer used... */
+    return size;                /* No longer used... */
 }
 
-void
-do_bulldoze_area (short fill, int xx, int yy)
+void do_bulldoze_area(short fill, int xx, int yy)
 {
-  int size, x, y;
-  if (MP_TYPE(xx,yy) == CST_USED)
-    {
-      x = MP_INFO(xx,yy).int_1;
-      y = MP_INFO(xx,yy).int_2;
+    int size, x, y;
+    if (MP_TYPE(xx, yy) == CST_USED) {
+        x = MP_INFO(xx, yy).int_1;
+        y = MP_INFO(xx, yy).int_2;
+    } else {
+        x = xx;
+        y = yy;
     }
-  else
-    {
-      x = xx;
-      y = yy;
-    }
-  size = MP_SIZE(x,y);
-  for (int i = 0; i < size; i++)
-      for (int j = 0; j < size; j++)  
-          bulldoze_mappoint (fill, x+i, y+j);
+    size = MP_SIZE(x, y);
+    for (int i = 0; i < size; i++)
+        for (int j = 0; j < size; j++)
+            bulldoze_mappoint(fill, x + i, y + j);
 }
 
-static void 
-bulldoze_mappoint (short fill, int x, int y)
+static void bulldoze_mappoint(short fill, int x, int y)
 {
     /* bulldoze preserve underground resources */
-    MP_TYPE(x,y) = fill;
-    MP_GROUP(x,y) = get_group_of_type(fill);
-    if (MP_GROUP(x,y) < 0)
-        MP_GROUP(x,y) = GROUP_BARE;
-    MP_INFO(x,y).population = 0;
-    MP_INFO(x,y).flags &= FLAG_HAS_UNDERGROUND_WATER;
-    MP_INFO(x,y).int_1 = 0;
-    MP_INFO(x,y).int_2 = 0;
-    MP_INFO(x,y).int_3 = 0;
-    MP_INFO(x,y).int_4 = 0;
-    MP_INFO(x,y).int_5 = 0;
-    MP_INFO(x,y).int_6 = 0;
-    MP_INFO(x,y).int_7 = 0;
+    MP_TYPE(x, y) = fill;
+    MP_GROUP(x, y) = get_group_of_type(fill);
+    if (MP_GROUP(x, y) < 0)
+        MP_GROUP(x, y) = GROUP_BARE;
+    MP_INFO(x, y).population = 0;
+    MP_INFO(x, y).flags &= FLAG_HAS_UNDERGROUND_WATER;
+    MP_INFO(x, y).int_1 = 0;
+    MP_INFO(x, y).int_2 = 0;
+    MP_INFO(x, y).int_3 = 0;
+    MP_INFO(x, y).int_4 = 0;
+    MP_INFO(x, y).int_5 = 0;
+    MP_INFO(x, y).int_6 = 0;
+    MP_INFO(x, y).int_7 = 0;
 }
 
 /** Mappoint array shuffles mappoint in order to stop linear simulation effects */
 
 /** this is called on startup */
-void init_mappoint_array (void)
+void init_mappoint_array(void)
 {
     int x;
     for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	mappoint_array_x[x] = x;
-	mappoint_array_y[x] = x;
+        mappoint_array_x[x] = x;
+        mappoint_array_y[x] = x;
     }
 }
 
 /** this is called at the beginning of every frame */
-void shuffle_mappoint_array (void)
+void shuffle_mappoint_array(void)
 {
-  int i, x, a;
-  for (i = 0; i < SHUFFLE_MAPPOINT_COUNT; i++)
-    {
-      x = rand () % WORLD_SIDE_LEN;
-      a = mappoint_array_x[i];
-      mappoint_array_x[i] = mappoint_array_x[x];
-      mappoint_array_x[x] = a;
-      x = rand () % WORLD_SIDE_LEN;
-      a = mappoint_array_y[i];
-      mappoint_array_y[i] = mappoint_array_y[x];
-      mappoint_array_y[x] = a;
+    int i, x, a;
+    for (i = 0; i < SHUFFLE_MAPPOINT_COUNT; i++) {
+        x = rand() % WORLD_SIDE_LEN;
+        a = mappoint_array_x[i];
+        mappoint_array_x[i] = mappoint_array_x[x];
+        mappoint_array_x[x] = a;
+        x = rand() % WORLD_SIDE_LEN;
+        a = mappoint_array_y[i];
+        mappoint_array_y[i] = mappoint_array_y[x];
+        mappoint_array_y[x] = a;
     }
 }
 
-void
-do_pollution ()
+void do_pollution()
 {
-  int x, p;
-  int* pol = &map.pollution[0][0];
+    int x, p;
+    int *pol = &map.pollution[0][0];
 
-  /* Kill pollution from top edge of map */
-  do {
-    if (*pol > 0)
-      *pol /= POL_DIV;
-  } while (++pol < &map.pollution[1][0]);
+    /* Kill pollution from top edge of map */
+    do {
+        if (*pol > 0)
+            *pol /= POL_DIV;
+    } while (++pol < &map.pollution[1][0]);
 
-
-  x= 1;
-  do
-    {
-      /* Kill some pollution from left edge of map */
-      if (*pol++ > 0)
-        *(pol-1) /= POL_DIV;
-      do {
-        if (*pol > 10) {
-	  p = *pol / 16;
-	  *pol -= p;
-	  switch ( rand() % 11)
-	    {         /* prevailing wind is *from* SW */
-	    case 0:
-	    case 1: /* up */
-	    case 2:
-	      *(pol - 1) += p;
-	      break;
-	    case 3:
-	    case 4: /* right */
-	    case 5:
-	      *(pol + WORLD_SIDE_LEN) += p;
-	      break;
-	    case 6: /* down */
-	    case 7:
-	      *(pol + 1) += p;
-	      break;
-	    case 8: /* left */
-	    case 9:
-	      *(pol - WORLD_SIDE_LEN) += p;
-	      break;
-	    case 10:
-	      *pol += p- 2;
-	      break;
-	    }
-	}
-      } while (++pol < &map.pollution[x][WORLD_SIDE_LEN-1]);
-      /* Kill some pollution from right edge of map */
-      if (*pol > 0)
-        *pol /= POL_DIV;
-      ++x;
+    x = 1;
+    do {
+        /* Kill some pollution from left edge of map */
+        if (*pol++ > 0)
+            *(pol - 1) /= POL_DIV;
+        do {
+            if (*pol > 10) {
+                p = *pol / 16;
+                *pol -= p;
+                switch (rand() % 11) {  /* prevailing wind is *from* SW */
+                case 0:
+                case 1:        /* up */
+                case 2:
+                    *(pol - 1) += p;
+                    break;
+                case 3:
+                case 4:        /* right */
+                case 5:
+                    *(pol + WORLD_SIDE_LEN) += p;
+                    break;
+                case 6:        /* down */
+                case 7:
+                    *(pol + 1) += p;
+                    break;
+                case 8:        /* left */
+                case 9:
+                    *(pol - WORLD_SIDE_LEN) += p;
+                    break;
+                case 10:
+                    *pol += p - 2;
+                    break;
+                }
+            }
+        } while (++pol < &map.pollution[x][WORLD_SIDE_LEN - 1]);
+        /* Kill some pollution from right edge of map */
+        if (*pol > 0)
+            *pol /= POL_DIV;
+        ++x;
     }
-  while (++pol < &map.pollution[WORLD_SIDE_LEN-1][0]);
+    while (++pol < &map.pollution[WORLD_SIDE_LEN - 1][0]);
 
-  /* Kill pollution from bottom edge of map */
-  do {
-    if (*pol > 0)
-      *pol /= POL_DIV;
-  } while (++pol < &map.pollution[WORLD_SIDE_LEN][0]);
+    /* Kill pollution from bottom edge of map */
+    do {
+        if (*pol > 0)
+            *pol /= POL_DIV;
+    } while (++pol < &map.pollution[WORLD_SIDE_LEN][0]);
 }
 
-void
-clear_fire_health_and_cricket_cover (void)
+void clear_fire_health_and_cricket_cover(void)
 {
-  int x, y, m;
-  m = 0xffffffff - (FLAG_FIRE_COVER | FLAG_HEALTH_COVER
-		    | FLAG_CRICKET_COVER| FLAG_WATERWELL_COVER
-                    | FLAG_ASKED_FOR_POWER |FLAG_GOT_POWER );
-  for (y = 0; y < WORLD_SIDE_LEN; y++)
-    for (x = 0; x < WORLD_SIDE_LEN; x++)
-      MP_INFO(x,y).flags &= m;
-  /* Wow... chache misses or what! */
+    int x, y, m;
+    m = 0xffffffff - (FLAG_FIRE_COVER | FLAG_HEALTH_COVER
+                      | FLAG_CRICKET_COVER | FLAG_WATERWELL_COVER | FLAG_ASKED_FOR_POWER | FLAG_GOT_POWER);
+    for (y = 0; y < WORLD_SIDE_LEN; y++)
+        for (x = 0; x < WORLD_SIDE_LEN; x++)
+            MP_INFO(x, y).flags &= m;
+    /* Wow... chache misses or what! */
 }
 
-void
-do_fire_health_and_cricket_cover (void)
+void do_fire_health_and_cricket_cover(void)
 {
-  int x, y;
-  for (y = 0; y < WORLD_SIDE_LEN; y++)
-    for (x = 0; x < WORLD_SIDE_LEN; x++)
-      {
-	/*  The next few lines need changing to test for */
-	/*  the group if these areas are animated. */
+    int x, y;
+    for (y = 0; y < WORLD_SIDE_LEN; y++)
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            /*  The next few lines need changing to test for */
+            /*  the group if these areas are animated. */
 
-	if (MP_GROUP(x,y) == GROUP_FIRESTATION)
-	  do_fire_cover (x, y);
-	else if (MP_TYPE(x,y) == CST_HEALTH)
-	  do_health_cover (x, y);
-	else if (MP_GROUP(x,y) == GROUP_CRICKET)
-	  do_cricket_cover (x, y);
-	else if (MP_GROUP(x,y) == GROUP_WATERWELL)
-	  do_waterwell_cover (x, y);
-      }
+            if (MP_GROUP(x, y) == GROUP_FIRESTATION)
+                do_fire_cover(x, y);
+            else if (MP_TYPE(x, y) == CST_HEALTH)
+                do_health_cover(x, y);
+            else if (MP_GROUP(x, y) == GROUP_CRICKET)
+                do_cricket_cover(x, y);
+            else if (MP_GROUP(x, y) == GROUP_WATERWELL)
+                do_waterwell_cover(x, y);
+        }
 }
 
-void
-do_random_fire (int x, int y, int pwarning)	/* well random if x=y=-1 */
-{
-  int xx, yy;
-  if (x == -1 && y == -1)
-    {
-      x = rand () % WORLD_SIDE_LEN;
-      y = rand () % WORLD_SIDE_LEN;
+void do_random_fire(int x, int y, int pwarning)
+{                               /* well random if x=y=-1 */
+    int xx, yy;
+    if (x == -1 && y == -1) {
+        x = rand() % WORLD_SIDE_LEN;
+        y = rand() % WORLD_SIDE_LEN;
+    } else {
+        if (x < 0 || x >= WORLD_SIDE_LEN || y < 0 || y >= WORLD_SIDE_LEN)
+            return;
     }
-  else
-    {
-      if (x < 0 || x >= WORLD_SIDE_LEN || y < 0 || y >= WORLD_SIDE_LEN)
-	return;
+    if (MP_TYPE(x, y) == CST_USED) {
+        xx = MP_INFO(x, y).int_1;
+        yy = MP_INFO(x, y).int_2;
+        x = xx;
+        y = yy;
     }
-  if (MP_TYPE(x,y) == CST_USED)
-    {
-      xx = MP_INFO(x,y).int_1;
-      yy = MP_INFO(x,y).int_2;
-      x = xx;
-      y = yy;
+    xx = rand() % 100;
+    if (xx >= (main_groups[MP_GROUP(x, y)].fire_chance))
+        return;
+    if ((MP_INFO(x, y).flags & FLAG_FIRE_COVER) != 0)
+        return;
+    if (pwarning) {
+        if (MP_GROUP(x, y) == GROUP_POWER_LINE)
+            ok_dial_box("fire.mes", BAD, _("It's at a power line."));
+        else if (MP_GROUP(x, y) == GROUP_SOLAR_POWER)
+            ok_dial_box("fire.mes", BAD, _("It's at a solar power station."));
+        else if (MP_GROUP(x, y) == GROUP_SUBSTATION)
+            ok_dial_box("fire.mes", BAD, _("It's at a substation."));
+        else if (MP_GROUP_IS_RESIDENCE(x, y))
+            ok_dial_box("fire.mes", BAD, _("It's at a residential area."));
+        else if (MP_GROUP(x, y) == GROUP_ORGANIC_FARM)
+            ok_dial_box("fire.mes", BAD, _("It's at a farm."));
+        else if (MP_GROUP(x, y) == GROUP_MARKET)
+            ok_dial_box("fire.mes", BAD, _("It's at a market."));
+        else if (MP_GROUP(x, y) == GROUP_TRACK)
+            ok_dial_box("fire.mes", BAD, _("It's at a track."));
+        else if (MP_GROUP(x, y) == GROUP_COALMINE)
+            ok_dial_box("fire.mes", BAD, _("It's at a coal mine."));
+        else if (MP_GROUP(x, y) == GROUP_RAIL)
+            ok_dial_box("fire.mes", BAD, _("It's at a railway."));
+        else if (MP_GROUP(x, y) == GROUP_COAL_POWER)
+            ok_dial_box("fire.mes", BAD, _("It's at a coal power station."));
+        else if (MP_GROUP(x, y) == GROUP_ROAD)
+            ok_dial_box("fire.mes", BAD, _("It's at a road."));
+        else if (MP_GROUP(x, y) == GROUP_INDUSTRY_L)
+            ok_dial_box("fire.mes", BAD, _("It's at light industry."));
+        else if (MP_GROUP(x, y) == GROUP_UNIVERSITY)
+            ok_dial_box("fire.mes", BAD, _("It's at a university."));
+        else if (MP_GROUP(x, y) == GROUP_COMMUNE)
+            ok_dial_box("fire.mes", BAD, _("It's at a commune."));
+        else if (MP_GROUP(x, y) == GROUP_TIP)
+            ok_dial_box("fire.mes", BAD, _("It's at a tip."));
+        else if (MP_GROUP(x, y) == GROUP_PORT)
+            ok_dial_box("fire.mes", BAD, _("It's at a port."));
+        else if (MP_GROUP(x, y) == GROUP_INDUSTRY_H)
+            ok_dial_box("fire.mes", BAD, _("It's at a steel works."));
+        else if (MP_GROUP(x, y) == GROUP_RECYCLE)
+            ok_dial_box("fire.mes", BAD, _("It's at a recycle centre."));
+        else if (MP_GROUP(x, y) == GROUP_HEALTH)
+            ok_dial_box("fire.mes", BAD, _("It's at a health centre."));
+        else if (MP_GROUP(x, y) == GROUP_ROCKET)
+            ok_dial_box("fire.mes", BAD, _("It's at a rocket site."));
+        else if (MP_GROUP(x, y) == GROUP_WINDMILL)
+            ok_dial_box("fire.mes", BAD, _("It's at a windmill."));
+        else if (MP_GROUP(x, y) == GROUP_SCHOOL)
+            ok_dial_box("fire.mes", BAD, _("It's at a school."));
+        else if (MP_GROUP(x, y) == GROUP_BLACKSMITH)
+            ok_dial_box("fire.mes", BAD, _("It's at a blacksmith."));
+        else if (MP_GROUP(x, y) == GROUP_MILL)
+            ok_dial_box("fire.mes", BAD, _("It's at a mill."));
+        else if (MP_GROUP(x, y) == GROUP_POTTERY)
+            ok_dial_box("fire.mes", BAD, _("It's at a pottery."));
+        else if (MP_GROUP(x, y) == GROUP_FIRESTATION)
+            ok_dial_box("fire.mes", BAD, _("It's at a fire station!!!."));
+        else if (MP_GROUP(x, y) == GROUP_CRICKET)
+            ok_dial_box("fire.mes", BAD, _("It's at a sports field!!!."));
+        else if (MP_GROUP(x, y) == GROUP_SHANTY)
+            ok_dial_box("fire.mes", BAD, _("It's at a shanty town."));
+        else
+            ok_dial_box("fire.mes", BAD, _("UNKNOWN!"));
     }
-  xx = rand () % 100;
-  if (xx >= (main_groups[MP_GROUP(x,y)].fire_chance))
-    return;
-  if ((MP_INFO(x,y).flags & FLAG_FIRE_COVER) != 0)
-    return;
-  if (pwarning)
-    {
-      if (MP_GROUP(x,y) == GROUP_POWER_LINE)
-	ok_dial_box ("fire.mes", BAD, _("It's at a power line."));
-      else if (MP_GROUP(x,y) == GROUP_SOLAR_POWER)
-	ok_dial_box ("fire.mes", BAD, _("It's at a solar power station."));
-      else if (MP_GROUP(x,y) == GROUP_SUBSTATION)
-	ok_dial_box ("fire.mes", BAD, _("It's at a substation."));
-      else if (MP_GROUP_IS_RESIDENCE(x,y))
-	ok_dial_box ("fire.mes", BAD, _("It's at a residential area."));
-      else if (MP_GROUP(x,y) == GROUP_ORGANIC_FARM)
-	ok_dial_box ("fire.mes", BAD, _("It's at a farm."));
-      else if (MP_GROUP(x,y) == GROUP_MARKET)
-	ok_dial_box ("fire.mes", BAD, _("It's at a market."));
-      else if (MP_GROUP(x,y) == GROUP_TRACK)
-	ok_dial_box ("fire.mes", BAD, _("It's at a track."));
-      else if (MP_GROUP(x,y) == GROUP_COALMINE)
-	ok_dial_box ("fire.mes", BAD, _("It's at a coal mine."));
-      else if (MP_GROUP(x,y) == GROUP_RAIL)
-	ok_dial_box ("fire.mes", BAD, _("It's at a railway."));
-      else if (MP_GROUP(x,y) == GROUP_COAL_POWER)
-	ok_dial_box ("fire.mes", BAD, _("It's at a coal power station."));
-      else if (MP_GROUP(x,y) == GROUP_ROAD)
-	ok_dial_box ("fire.mes", BAD, _("It's at a road."));
-      else if (MP_GROUP(x,y) == GROUP_INDUSTRY_L)
-	ok_dial_box ("fire.mes", BAD, _("It's at light industry."));
-      else if (MP_GROUP(x,y) == GROUP_UNIVERSITY)
-	ok_dial_box ("fire.mes", BAD, _("It's at a university."));
-      else if (MP_GROUP(x,y) == GROUP_COMMUNE)
-	ok_dial_box ("fire.mes", BAD, _("It's at a commune."));
-      else if (MP_GROUP(x,y) == GROUP_TIP)
-	ok_dial_box ("fire.mes", BAD, _("It's at a tip."));
-      else if (MP_GROUP(x,y) == GROUP_PORT)
-	ok_dial_box ("fire.mes", BAD, _("It's at a port."));
-      else if (MP_GROUP(x,y) == GROUP_INDUSTRY_H)
-	ok_dial_box ("fire.mes", BAD, _("It's at a steel works."));
-      else if (MP_GROUP(x,y) == GROUP_RECYCLE)
-	ok_dial_box ("fire.mes", BAD, _("It's at a recycle centre."));
-      else if (MP_GROUP(x,y) == GROUP_HEALTH)
-	ok_dial_box ("fire.mes", BAD, _("It's at a health centre."));
-      else if (MP_GROUP(x,y) == GROUP_ROCKET)
-	ok_dial_box ("fire.mes", BAD, _("It's at a rocket site."));
-      else if (MP_GROUP(x,y) == GROUP_WINDMILL)
-	ok_dial_box ("fire.mes", BAD, _("It's at a windmill."));
-      else if (MP_GROUP(x,y) == GROUP_SCHOOL)
-	ok_dial_box ("fire.mes", BAD, _("It's at a school."));
-      else if (MP_GROUP(x,y) == GROUP_BLACKSMITH)
-	ok_dial_box ("fire.mes", BAD, _("It's at a blacksmith."));
-      else if (MP_GROUP(x,y) == GROUP_MILL)
-	ok_dial_box ("fire.mes", BAD, _("It's at a mill."));
-      else if (MP_GROUP(x,y) == GROUP_POTTERY)
-	ok_dial_box ("fire.mes", BAD, _("It's at a pottery."));
-      else if (MP_GROUP(x,y) == GROUP_FIRESTATION)
-	ok_dial_box ("fire.mes", BAD, _("It's at a fire station!!!."));
-      else if (MP_GROUP(x,y) == GROUP_CRICKET)
-	ok_dial_box ("fire.mes", BAD, _("It's at a sports field!!!."));
-      else if (MP_GROUP(x,y) == GROUP_SHANTY)
-	ok_dial_box ("fire.mes", BAD, _("It's at a shanty town."));
-      else
-	ok_dial_box ("fire.mes", BAD, _("UNKNOWN!"));
-    }
-  fire_area (x, y);
+    fire_area(x, y);
 }
 
-void do_daily_ecology ()
+void do_daily_ecology()
 {
     for (int x = 0; x < WORLD_SIDE_LEN; x++)
         for (int y = 0; y < WORLD_SIDE_LEN; y++) {
             /* approximately 3 monthes needed to turn bulldoze area into green */
-            if (MP_GROUP(x,y) == GROUP_DESERT && HAS_UGWATER(x,y) 
-                    && rand() %300 == 1)
+            if (MP_GROUP(x, y) == GROUP_DESERT && HAS_UGWATER(x, y)
+                && rand() % 300 == 1)
                 do_bulldoze_area(CST_GREEN, x, y);
         }
 }
@@ -717,46 +674,40 @@
    // return the x y coords encoded as x+y*WORLD_SIDE_LEN
    // return -1 if we don't find one.
  */
-int
-spiral_find_group (int startx, int starty, int group)
+int spiral_find_group(int startx, int starty, int group)
 {
-  int i, j, x, y;
-  x = startx;
-  y = starty;
-  /* let's just do a complete spiral for now, work out the bounds later */
-  for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++)
-    {
-      for (j = 0; j < i; j++)
-	{
-	  x--;
-	  if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-	    if (MP_GROUP(x,y) == group)
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      for (j = 0; j < i; j++)
-	{
-	  y--;
-	  if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-	    if (MP_GROUP(x,y) == group)
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      i++;
-      for (j = 0; j < i; j++)
-	{
-	  x++;
-	  if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-	    if (MP_GROUP(x,y) == group)
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      for (j = 0; j < i; j++)
-	{
-	  y++;
-	  if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
-	    if (MP_GROUP(x,y) == group)
-	      return (x + y * WORLD_SIDE_LEN);
-	}
+    int i, j, x, y;
+    x = startx;
+    y = starty;
+    /* let's just do a complete spiral for now, work out the bounds later */
+    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
+        for (j = 0; j < i; j++) {
+            x--;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y--;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        i++;
+        for (j = 0; j < i; j++) {
+            x++;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y++;
+            if (x > 0 && x < WORLD_SIDE_LEN && y > 0 && y < WORLD_SIDE_LEN)
+                if (MP_GROUP(x, y) == group)
+                    return (x + y * WORLD_SIDE_LEN);
+        }
     }
-  return (-1);
+    return (-1);
 }
 
 /*
@@ -764,121 +715,101 @@
    // return the x y coords encoded as x+y*WORLD_SIDE_LEN
    // return -1 if we don't find one.
  */
-int
-spiral_find_2x2 (int startx, int starty)
+int spiral_find_2x2(int startx, int starty)
 {
-  int i, j, x, y;
-  x = startx;
-  y = starty;
-  /* let's just do a complete spiral for now, work out the bounds later */
-  for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++)
-    {
-      for (j = 0; j < i; j++)
-	{
-	  x--;
-	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
-	      && y < WORLD_SIDE_LEN - 2)
-	    if (GROUP_IS_BARE(MP_GROUP(x,y))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
-		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)) )
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      for (j = 0; j < i; j++)
-	{
-	  y--;
-	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
-	      && y < WORLD_SIDE_LEN - 2)
-	    if (GROUP_IS_BARE(MP_GROUP(x,y))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
-		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      i++;
-      for (j = 0; j < i; j++)
-	{
-	  x++;
-	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
-	      && y < WORLD_SIDE_LEN - 2)
-	    if (GROUP_IS_BARE(MP_GROUP(x,y))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
-		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
-	      return (x + y * WORLD_SIDE_LEN);
-	}
-      for (j = 0; j < i; j++)
-	{
-	  y++;
-	  if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1
-	      && y < WORLD_SIDE_LEN - 2)
-	    if (GROUP_IS_BARE(MP_GROUP(x,y))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y))
-		&& GROUP_IS_BARE(MP_GROUP(x,y + 1))
-		&& GROUP_IS_BARE(MP_GROUP(x + 1,y + 1)))
-	      return (x + y * WORLD_SIDE_LEN);
-	}
+    int i, j, x, y;
+    x = startx;
+    y = starty;
+    /* let's just do a complete spiral for now, work out the bounds later */
+    for (i = 1; i < (WORLD_SIDE_LEN + WORLD_SIDE_LEN); i++) {
+        for (j = 0; j < i; j++) {
+            x--;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y--;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        i++;
+        for (j = 0; j < i; j++) {
+            x++;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
+        for (j = 0; j < i; j++) {
+            y++;
+            if (x > 1 && x < WORLD_SIDE_LEN - 2 && y > 1 && y < WORLD_SIDE_LEN - 2)
+                if (GROUP_IS_BARE(MP_GROUP(x, y))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y))
+                    && GROUP_IS_BARE(MP_GROUP(x, y + 1))
+                    && GROUP_IS_BARE(MP_GROUP(x + 1, y + 1)))
+                    return (x + y * WORLD_SIDE_LEN);
+        }
     }
-  return (-1);
+    return (-1);
 }
 
-void
-connect_rivers (void)
+void connect_rivers(void)
 {
-  int x, y, count;
-  count = 1;
-  while (count > 0)
-    {
-      count = 0;
-      for (y = 0; y < WORLD_SIDE_LEN; y++)
-	for (x = 0; x < WORLD_SIDE_LEN; x++)
-	  {
-	    if (is_real_river (x, y) == 1)
-	      {
-		if (is_real_river (x - 1, y) == -1)
-		  {
-		    MP_INFO(x - 1,y).flags |= FLAG_IS_RIVER;
-		    count++;
-		  }
-		if (is_real_river (x, y - 1) == -1)
-		  {
-		    MP_INFO(x,y - 1).flags |= FLAG_IS_RIVER;
-		    count++;
-		  }
-		if (is_real_river (x + 1, y) == -1)
-		  {
-		    MP_INFO(x + 1,y).flags |= FLAG_IS_RIVER;
-		    count++;
-		  }
-		if (is_real_river (x, y + 1) == -1)
-		  {
-		    MP_INFO(x,y + 1).flags |= FLAG_IS_RIVER;
-		    count++;
-		  }
-	      }
-	  }
+    int x, y, count;
+    count = 1;
+    while (count > 0) {
+        count = 0;
+        for (y = 0; y < WORLD_SIDE_LEN; y++)
+            for (x = 0; x < WORLD_SIDE_LEN; x++) {
+                if (is_real_river(x, y) == 1) {
+                    if (is_real_river(x - 1, y) == -1) {
+                        MP_INFO(x - 1, y).flags |= FLAG_IS_RIVER;
+                        count++;
+                    }
+                    if (is_real_river(x, y - 1) == -1) {
+                        MP_INFO(x, y - 1).flags |= FLAG_IS_RIVER;
+                        count++;
+                    }
+                    if (is_real_river(x + 1, y) == -1) {
+                        MP_INFO(x + 1, y).flags |= FLAG_IS_RIVER;
+                        count++;
+                    }
+                    if (is_real_river(x, y + 1) == -1) {
+                        MP_INFO(x, y + 1).flags |= FLAG_IS_RIVER;
+                        count++;
+                    }
+                }
+            }
     }
 }
 
-int
-is_real_river (int x, int y)
+int is_real_river(int x, int y)
 {
-  /* returns zero if not water at all or if out of bounds. */
-  if (x < 0 || x >= WORLD_SIDE_LEN || y < 0 || y >= WORLD_SIDE_LEN)
-    return (0);
-  if (MP_GROUP(x,y) != GROUP_WATER)
-    return (0);
-  if (MP_INFO(x,y).flags & FLAG_IS_RIVER)
-    return (1);
-  return (-1);
+    /* returns zero if not water at all or if out of bounds. */
+    if (x < 0 || x >= WORLD_SIDE_LEN || y < 0 || y >= WORLD_SIDE_LEN)
+        return (0);
+    if (MP_GROUP(x, y) != GROUP_WATER)
+        return (0);
+    if (MP_INFO(x, y).flags & FLAG_IS_RIVER)
+        return (1);
+    return (-1);
 }
 
 /* Feature: coal survey should vary in price and accuracy with technology */
-void 
-do_coal_survey (void)
+void do_coal_survey(void)
 {
     if (coal_survey_done == 0) {
-	adjust_money(-1000000);
-	coal_survey_done = 1;
+        adjust_money(-1000000);
+        coal_survey_done = 1;
     }
 }

Modified: trunk/src/lincity/engine.h
===================================================================
--- trunk/src/lincity/engine.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/engine.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -6,16 +6,16 @@
 #ifndef __engine_h__
 #define __engine_h__
 
-int place_item (int x, int y, short type);
-int bulldoze_item (int x, int y);
-void do_coal_survey (void);
-void do_bulldoze_area (short fill, int xx, int yy);
-void launch_rocket (int x, int y);
-void connect_rivers (void);
+int place_item(int x, int y, short type);
+int bulldoze_item(int x, int y);
+void do_coal_survey(void);
+void do_bulldoze_area(short fill, int xx, int yy);
+void launch_rocket(int x, int y);
+void connect_rivers(void);
 int adjust_money(int value);
-void fire_area (int x, int y);
-void do_daily_ecology (void);
+void fire_area(int x, int y);
+void do_daily_ecology(void);
 
 extern long real_time;
 
-#endif	/* __engine_h__ */
+#endif /* __engine_h__ */

Modified: trunk/src/lincity/fileutil.cpp
===================================================================
--- trunk/src/lincity/fileutil.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/fileutil.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -1,12 +1,12 @@
  /* ---------------------------------------------------------------------- *
- * fileutil.c
- * This file is part of lincity.
- * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
- * ---------------------------------------------------------------------- */
+  * fileutil.c
+  * This file is part of lincity.
+  * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
+  * ---------------------------------------------------------------------- */
 #include <config.h>
 #include <stdio.h>
 #include <stdlib.h>
-#include <stdarg.h> /* XXX: GCS FIX: What does configure need to know? */
+#include <stdarg.h>             /* XXX: GCS FIX: What does configure need to know? */
 #include "lcintl.h"
 #include <string.h>
 //#include "ldsvgui.h"
@@ -18,7 +18,7 @@
 /* this is for OS/2 - RVI */
 #ifdef __EMX__
 #include <sys/select.h>
-#include <X11/Xlibint.h>      /* required for __XOS2RedirRoot */
+#include <X11/Xlibint.h>        /* required for __XOS2RedirRoot */
 #define chown(x,y,z)
 #define OS2_DEFAULT_LIBDIR "/XFree86/lib/X11/lincity"
 #endif
@@ -103,15 +103,14 @@
 #endif
 
 #define DEBUG_PRINTF_TO_FILE 0
-void debug_printf (char* fmt, ...);
+void debug_printf(char *fmt, ...);
 
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
  * ---------------------------------------------------------------------- */
-void dump_screen (void);
-void verify_package (void);
-static const char *guess_category_value (int category, 
-					 const char *categoryname);
+void dump_screen(void);
+void verify_package(void);
+static const char *guess_category_value(int category, const char *categoryname);
 
 /* ---------------------------------------------------------------------- *
  * Public Global Variables
@@ -154,154 +153,141 @@
  * Public Functions
  * ---------------------------------------------------------------------- */
 #if defined (__BORLANDC__)
-int
-_chdir (const char *dirname)
+int _chdir(const char *dirname)
 {
-    return chdir (dirname);
+    return chdir(dirname);
 }
 
-int 
-_access (const char *path, int mode)
+int _access(const char *path, int mode)
 {
-    return access (path, mode)
+    return access(path, mode)
 }
 #endif
 
 /* Executes a system command */
-int
-execute_command (char *cmd, char *p1, char *p2, char *p3)
+int execute_command(char *cmd, char *p1, char *p2, char *p3)
 {
-  char *sys_cmd = (char *) malloc (strlen (cmd) + strlen (p1) + strlen (p2)
-				   + strlen (p3) + 4);
-  int ret_value;
+    char *sys_cmd = (char *)malloc(strlen(cmd) + strlen(p1) + strlen(p2)
+                                   + strlen(p3) + 4);
+    int ret_value;
 
-  if (sys_cmd == 0) {
-    malloc_failure ();
-  }
-  sprintf (sys_cmd, "%s %s %s %s", cmd, p1, p2, p3);
-  ret_value = system (sys_cmd);
+    if (sys_cmd == 0) {
+        malloc_failure();
+    }
+    sprintf(sys_cmd, "%s %s %s %s", cmd, p1, p2, p3);
+    ret_value = system(sys_cmd);
 /* fprintf(stderr, "system(%s)=%i\n", sys_cmd, ret_value); */
-  free (sys_cmd);
-  return ret_value;
+    free(sys_cmd);
+    return ret_value;
 }
 
-void
-copy_file (char *f1, char *f2)
+void copy_file(char *f1, char *f2)
 {
-  int ret_value = execute_command ("cp", f1, f2, "");
-  if (ret_value != 0)
-    {
-      /* GCS FIX:  Need to make do_error into var_args fn? */
-      printf ("Tried to cp %s %s\n", f1, f2);
-      do_error ("Can't copy requested file");
+    int ret_value = execute_command("cp", f1, f2, "");
+    if (ret_value != 0) {
+        /* GCS FIX:  Need to make do_error into var_args fn? */
+        printf("Tried to cp %s %s\n", f1, f2);
+        do_error("Can't copy requested file");
     }
 }
 
 #if 0
-void //unused function
-gunzip_file (char *f1, char *f2)
+void                            //unused function
+gunzip_file(char *f1, char *f2)
 {
-  int ret_value = execute_command ("gzip -c -d", f1, ">", f2);
-  if (ret_value != 0)
-    {
-      /* GCS FIX:  Need to make do_error into var_args fn? */
-      printf ("Tried to gzip -c -d %s > %s\n", f1, f2);
-      do_error ("Can't gunzip requested file");
+    int ret_value = execute_command("gzip -c -d", f1, ">", f2);
+    if (ret_value != 0) {
+        /* GCS FIX:  Need to make do_error into var_args fn? */
+        printf("Tried to gzip -c -d %s > %s\n", f1, f2);
+        do_error("Can't gunzip requested file");
     }
 }
 
-FILE* 
-fopen_read_gzipped (char* fn)
+FILE *fopen_read_gzipped(char *fn)
 {
-    FILE* fp;
+    FILE *fp;
 
-    const char* cmd_str = "gzip -d -c < %s 2> /dev/null";
-    char *cmd = (char*) malloc (strlen (cmd_str) + strlen (fn) + 1);
-    
-    sprintf (cmd, cmd_str, fn);
-    fp=popen(cmd,"r");
-    if (fp==NULL) {
-       fprintf(stderr, "Failed to open pipe cmd: %s\n", cmd);
+    const char *cmd_str = "gzip -d -c < %s 2> /dev/null";
+    char *cmd = (char *)malloc(strlen(cmd_str) + strlen(fn) + 1);
+
+    sprintf(cmd, cmd_str, fn);
+    fp = popen(cmd, "r");
+    if (fp == NULL) {
+        fprintf(stderr, "Failed to open pipe cmd: %s\n", cmd);
     }
     free(cmd);
 
     return fp;
 }
 
-void 
-fclose_read_gzipped (FILE* fp)
+void fclose_read_gzipped(FILE * fp)
 {
-    pclose (fp);
+    pclose(fp);
 }
 #endif
 
-int
-directory_exists (char *dir)
+int directory_exists(char *dir)
 {
 #if defined (WIN32)
     struct stat s;
     if (stat(dir, &s) != 0 || !(s.st_mode & S_IFDIR)) {
-	return 0;
+        return 0;
     }
 #else /* UNIX */
     DIR *dp;
-    if ((dp = opendir (dir)) == NULL) {
-	return 0;
+    if ((dp = opendir(dir)) == NULL) {
+        return 0;
     }
-    closedir (dp);
+    closedir(dp);
 #endif
     return 1;
 }
 
-int
-file_exists (char *filename)
+int file_exists(char *filename)
 {
-    FILE* fp;
-    fp = fopen (filename,"rb");
+    FILE *fp;
+    fp = fopen(filename, "rb");
     if (fp == NULL) {
-	return 0;
+        return 0;
     }
-    fclose (fp);
+    fclose(fp);
     return 1;
 }
 
 #if defined (WIN32)
-void
-find_libdir (void)
+void find_libdir(void)
 {
     const char searchfile[] = "Colour.pal";
     /* default_dir will be something like "C:\\LINCITY1.11" */
     const char default_dir[] = "C:\\LINCITY" PACKAGE_VERSION;
-//    const char default_dir[] = "D:\\LINCITY";	/* For GCS's use */
+//    const char default_dir[] = "D:\\LINCITY"; /* For GCS's use */
 
     /* Check 1: environment variable */
-    _searchenv (searchfile, "LINCITY_HOME", LIBDIR);
+    _searchenv(searchfile, "LINCITY_HOME", LIBDIR);
     if (*LIBDIR != '\0') {
-	int endofpath_offset = strlen (LIBDIR) - strlen (searchfile) - 1;
-	LIBDIR[endofpath_offset] = '\0';
-	return;
+        int endofpath_offset = strlen(LIBDIR) - strlen(searchfile) - 1;
+        LIBDIR[endofpath_offset] = '\0';
+        return;
     }
 
     /* Check 2: default location */
-    if ((_access (default_dir, 0)) != -1) {
-	strcpy (LIBDIR, default_dir);
-	return;
+    if ((_access(default_dir, 0)) != -1) {
+        strcpy(LIBDIR, default_dir);
+        return;
     }
 
     /* Finally give up */
-    HandleError (_("Error. Can't find LINCITY_HOME"), FATAL);
+    HandleError(_("Error. Can't find LINCITY_HOME"), FATAL);
 }
 
 #elif defined (__EMX__)
-void
-find_libdir (void)
+void find_libdir(void)
 {
     strcpy(LIBDIR, __XOS2RedirRoot(OS2_DEFAULT_LIBDIR));
 }
 
 #else /* Unix with configure */
-void
-find_libdir (void)
+void find_libdir(void)
 {
     const char searchfile[] = "colour.pal";
     char *home_dir, *cwd;
@@ -309,80 +295,75 @@
     char filename_buf[LC_PATH_MAX];
 
     /* Check 1: environment variable */
-    home_dir = getenv ("LINCITY_HOME");
+    home_dir = getenv("LINCITY_HOME");
     if (home_dir) {
-	snprintf (filename_buf, LC_PATH_MAX, "%s%c%s", 
-		  home_dir, PATH_SLASH, searchfile);
-	if (file_exists(filename_buf)) {
-	    strncpy (LIBDIR, home_dir, LC_PATH_MAX);
-	    return;
-	}
+        snprintf(filename_buf, LC_PATH_MAX, "%s%c%s", home_dir, PATH_SLASH, searchfile);
+        if (file_exists(filename_buf)) {
+            strncpy(LIBDIR, home_dir, LC_PATH_MAX);
+            return;
+        }
     }
 
     /* Check 2: current working directory */
-    cwd = getcwd (cwd_buf, LC_PATH_MAX);
+    cwd = getcwd(cwd_buf, LC_PATH_MAX);
     if (cwd) {
-	snprintf (filename_buf, LC_PATH_MAX, "%s%c%s", 
-		  cwd_buf, PATH_SLASH, searchfile);
-	if (file_exists(filename_buf)) {
-	    strncpy (LIBDIR, cwd_buf, LC_PATH_MAX);
-	    return;
-	}
+        snprintf(filename_buf, LC_PATH_MAX, "%s%c%s", cwd_buf, PATH_SLASH, searchfile);
+        if (file_exists(filename_buf)) {
+            strncpy(LIBDIR, cwd_buf, LC_PATH_MAX);
+            return;
+        }
     }
 
-    snprintf (filename_buf, LC_PATH_MAX, "%s%c%s", 
-	      DEFAULT_LIBDIR, PATH_SLASH, searchfile);
+    snprintf(filename_buf, LC_PATH_MAX, "%s%c%s", DEFAULT_LIBDIR, PATH_SLASH, searchfile);
     if (file_exists(filename_buf)) {
-	strncpy (LIBDIR, DEFAULT_LIBDIR, LC_PATH_MAX);
-	return;
+        strncpy(LIBDIR, DEFAULT_LIBDIR, LC_PATH_MAX);
+        return;
     }
 
     /* Finally give up */
-    HandleError (_("Error. Can't find LINCITY_HOME"), FATAL);
+    HandleError(_("Error. Can't find LINCITY_HOME"), FATAL);
 }
 #endif
 
-
 /* GCS:  This function comes from dcgettext.c in the gettext package.      */
 /* Guess value of current locale from value of the environment variables.  */
 /* GCS Feb 23, 2003.  This was updated in gettext, but I'm going with the  */
 /* old version here. */
-static const char *
-guess_category_value (int category, const char *categoryname)
+static const char *guess_category_value(int category, const char *categoryname)
 {
-    (void) category;
+    (void)category;
     const char *retval;
 
     /* The highest priority value is the `LANGUAGE' environment
        variable.  This is a GNU extension.  */
-    retval = getenv ("LANGUAGE");
+    retval = getenv("LANGUAGE");
     if (retval != NULL && retval[0] != '\0')
-	return retval;
+        return retval;
 
     /* `LANGUAGE' is not set.  So we have to proceed with the POSIX
        methods of looking to `LC_ALL', `LC_xxx', and `LANG'.  On some
        systems this can be done by the `setlocale' function itself.  */
 #if defined HAVE_SETLOCALE && defined HAVE_LC_MESSAGES && defined HAVE_LOCALE_NULL
-    retval = setlocale (category, NULL);
+    retval = setlocale(category, NULL);
     if (retval != NULL)
-      return retval;
+        return retval;
     else
-      return "C";
+        return "C";
 #else
     /* Setting of LC_ALL overwrites all other.  */
-    retval = getenv ("LC_ALL");
+    retval = getenv("LC_ALL");
     if (retval != NULL && retval[0] != '\0')
-	return retval;
+        return retval;
 
     /* Next comes the name of the desired category.  */
-    retval = getenv (categoryname);
+    retval = getenv(categoryname);
     if (retval != NULL && retval[0] != '\0')
-	return retval;
+        return retval;
 
     /* Last possibility is the LANG environment variable.  */
-    retval = getenv ("LANG");
+    retval = getenv("LANG");
     if (retval != NULL && retval[0] != '\0')
-	return retval;
+        return retval;
 
     /* We use C as the default domain.  POSIX says this is implementation
        defined.  */
@@ -392,179 +373,168 @@
 
 /* GCS:  This function is modified from gettext.  It finds the language 
    portion of the locale. */
-static void 
-lincity_nl_find_language (char *name)
+static void lincity_nl_find_language(char *name)
 {
-  while (name[0] != '\0' && name[0] != '_' && name[0] != '@'
-	 && name[0] != '+' && name[0] != ',')
-    ++name;
+    while (name[0] != '\0' && name[0] != '_' && name[0] != '@' && name[0] != '+' && name[0] != ',')
+        ++name;
 
-  *name = '\0';
+    *name = '\0';
 }
 
-void
-find_localized_paths (void)
+void find_localized_paths(void)
 {
-  int messages_done = 0;
-  int help_done = 0;
+    int messages_done = 0;
+    int help_done = 0;
 
-  const char* intl_suffix = "";
-  char intl_lang[128];
+    const char *intl_suffix = "";
+    char intl_lang[128];
 
-  /* First, try the locale "as is" */
+    /* First, try the locale "as is" */
 #if defined (ENABLE_NLS) && defined (HAVE_LC_MESSAGES)
-  intl_suffix = guess_category_value(LC_MESSAGES,"LC_MESSAGES");
+    intl_suffix = guess_category_value(LC_MESSAGES, "LC_MESSAGES");
 #else
-  intl_suffix = guess_category_value(0,"LC_MESSAGES");
+    intl_suffix = guess_category_value(0, "LC_MESSAGES");
 #endif
-  debug_printf ("GUESS 1 -- intl_suffix is %s\n", intl_suffix);
-  if (strcmp(intl_suffix,"C") && strcmp(intl_suffix,"")) {
-    snprintf (message_path, sizeof(message_path), "%s%c%s%c%s%c", LIBDIR,
-	      PATH_SLASH, "messages", PATH_SLASH, intl_suffix, PATH_SLASH);
-    debug_printf ("Trying Message Path %s\n", message_path);
-    if (directory_exists(message_path)) {
-      debug_printf ("Set Message Path %s\n", message_path);
-      messages_done = 1;
+    debug_printf("GUESS 1 -- intl_suffix is %s\n", intl_suffix);
+    if (strcmp(intl_suffix, "C") && strcmp(intl_suffix, "")) {
+        snprintf(message_path, sizeof(message_path), "%s%c%s%c%s%c", LIBDIR,
+                 PATH_SLASH, "messages", PATH_SLASH, intl_suffix, PATH_SLASH);
+        debug_printf("Trying Message Path %s\n", message_path);
+        if (directory_exists(message_path)) {
+            debug_printf("Set Message Path %s\n", message_path);
+            messages_done = 1;
+        }
+        snprintf(help_path, sizeof(help_path), "%s%c%s%c%s%c", LIBDIR, PATH_SLASH,
+                 "help", PATH_SLASH, intl_suffix, PATH_SLASH);
+        debug_printf("Trying Help Path %s\n", help_path);
+        if (directory_exists(help_path)) {
+            debug_printf("Set Help Path %s\n", help_path);
+            help_done = 1;
+        }
     }
-    snprintf (help_path, sizeof(help_path), "%s%c%s%c%s%c", LIBDIR, PATH_SLASH,
-	      "help", PATH_SLASH, intl_suffix, PATH_SLASH);
-    debug_printf ("Trying Help Path %s\n", help_path);
-    if (directory_exists(help_path)) {
-      debug_printf ("Set Help Path %s\n", help_path);
-      help_done = 1;
+    if (messages_done && help_done)
+        return;
+
+    /* Next, try stripping off the country suffix */
+    strncpy(intl_lang, intl_suffix, 128);
+    intl_lang[127] = '\0';
+    lincity_nl_find_language(intl_lang);
+    intl_suffix = intl_lang;
+    debug_printf("GUESS 2 -- intl_suffix is %s\n", intl_suffix);
+    if (strcmp(intl_suffix, "C") && strcmp(intl_suffix, "")) {
+        if (!messages_done) {
+            sprintf(message_path, "%s%c%s%c%s%c", LIBDIR, PATH_SLASH, "messages", PATH_SLASH, intl_suffix, PATH_SLASH);
+            debug_printf("Trying Message Path %s\n", message_path);
+            if (directory_exists(message_path)) {
+                debug_printf("Set Message Path %s\n", message_path);
+                messages_done = 1;
+            }
+        }
+        if (!help_done) {
+            sprintf(help_path, "%s%c%s%c%s%c", LIBDIR, PATH_SLASH, "help", PATH_SLASH, intl_suffix, PATH_SLASH);
+            debug_printf("Trying Help Path %s\n", help_path);
+            if (directory_exists(help_path)) {
+                debug_printf("Set Help Path %s\n", help_path);
+                help_done = 1;
+            }
+        }
     }
-  }
-  if (messages_done && help_done) return;
+    if (messages_done && help_done)
+        return;
 
-  /* Next, try stripping off the country suffix */
-  strncpy (intl_lang, intl_suffix, 128);
-  intl_lang[127] = '\0';
-  lincity_nl_find_language (intl_lang);
-  intl_suffix = intl_lang;
-  debug_printf ("GUESS 2 -- intl_suffix is %s\n", intl_suffix);
-  if (strcmp(intl_suffix,"C") && strcmp(intl_suffix,"")) {
+    /* Finally, settle for default English messages */
     if (!messages_done) {
-      sprintf (message_path, "%s%c%s%c%s%c", LIBDIR, PATH_SLASH, "messages",
-	       PATH_SLASH, intl_suffix, PATH_SLASH);
-      debug_printf ("Trying Message Path %s\n", message_path);
-      if (directory_exists(message_path)) {
-	debug_printf ("Set Message Path %s\n", message_path);
-	messages_done = 1;
-      }
+        sprintf(message_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "messages", PATH_SLASH);
+        debug_printf("Settling for message Path %s\n", message_path);
     }
     if (!help_done) {
-      sprintf (help_path, "%s%c%s%c%s%c", LIBDIR, PATH_SLASH, "help",
-	       PATH_SLASH, intl_suffix, PATH_SLASH);
-      debug_printf ("Trying Help Path %s\n", help_path);
-      if (directory_exists(help_path)) {
-	debug_printf ("Set Help Path %s\n", help_path);
-	help_done = 1;
-      }
+        sprintf(help_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "help", PATH_SLASH);
+        debug_printf("Settling for help Path %s\n", help_path);
     }
-  }
-  if (messages_done && help_done) return;
-    
-  /* Finally, settle for default English messages */
-  if (!messages_done) {
-    sprintf (message_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "messages",
-	     PATH_SLASH);
-    debug_printf ("Settling for message Path %s\n", message_path);
-  }
-  if (!help_done) {
-    sprintf (help_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "help",
-	     PATH_SLASH);
-    debug_printf ("Settling for help Path %s\n", help_path);
-  }
 }
 
-void
-init_path_strings (void)
+void init_path_strings(void)
 {
-    char* homedir = NULL;
+    char *homedir = NULL;
 
-    find_libdir ();
+    find_libdir();
 
 #if defined (WIN32)
     homedir = LIBDIR;
 #elif defined (__EMX__)
-    homedir = getenv ("HOME");
+    homedir = getenv("HOME");
 #else
-    homedir = getenv ("HOME");
+    homedir = getenv("HOME");
 #endif
 
     /* Various dirs and files */
-    lc_save_dir_len = strlen (homedir) + strlen (LC_SAVE_DIR) + 1;
-    if ((lc_save_dir = (char *) malloc (lc_save_dir_len + 1)) == 0)
-	malloc_failure ();
-    sprintf (lc_save_dir, "%s%c%s", homedir, PATH_SLASH, LC_SAVE_DIR);
-    sprintf (colour_pal_file, "%s%c%s", LIBDIR, PATH_SLASH, "colour.pal");
-    sprintf (opening_path, "%s%c%s", LIBDIR, PATH_SLASH, "opening");
+    lc_save_dir_len = strlen(homedir) + strlen(LC_SAVE_DIR) + 1;
+    if ((lc_save_dir = (char *)malloc(lc_save_dir_len + 1)) == 0)
+        malloc_failure();
+    sprintf(lc_save_dir, "%s%c%s", homedir, PATH_SLASH, LC_SAVE_DIR);
+    sprintf(colour_pal_file, "%s%c%s", LIBDIR, PATH_SLASH, "colour.pal");
+    sprintf(opening_path, "%s%c%s", LIBDIR, PATH_SLASH, "opening");
 #if defined (WIN32)
-    sprintf (opening_pic, "%s%c%s",opening_path,PATH_SLASH,"open.tga");
+    sprintf(opening_pic, "%s%c%s", opening_path, PATH_SLASH, "open.tga");
 #else
-    sprintf (opening_pic, "%s%c%s",opening_path,PATH_SLASH,"open.tga.gz");
+    sprintf(opening_pic, "%s%c%s", opening_path, PATH_SLASH, "open.tga.gz");
 #endif
-    sprintf (graphic_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "icons",
-	     PATH_SLASH);
-    sprintf (lincityrc_file, "%s%c%s", homedir, PATH_SLASH, 
-	LINCITYRC_FILENAME);
+    sprintf(graphic_path, "%s%c%s%c", LIBDIR, PATH_SLASH, "icons", PATH_SLASH);
+    sprintf(lincityrc_file, "%s%c%s", homedir, PATH_SLASH, LINCITYRC_FILENAME);
 
     /* Paths for message & help files, etc */
-    find_localized_paths ();
+    find_localized_paths();
 
     /* Font stuff */
-    sprintf (fontfile, "%s%c%s", opening_path, PATH_SLASH,
-	     "iso8859-1-8x8.raw");
+    sprintf(fontfile, "%s%c%s", opening_path, PATH_SLASH, "iso8859-1-8x8.raw");
 #if defined (WIN32)
     /* GCS: Use windows font for extra speed */
-    strcpy (windowsfontfile, LIBDIR);
+    strcpy(windowsfontfile, LIBDIR);
 #if defined (commentout)
     if (!pix_double)
-	strcat (windowsfontfile, "\\opening\\iso8859-1-8x8.fnt");
+        strcat(windowsfontfile, "\\opening\\iso8859-1-8x8.fnt");
     else
-	strcat (windowsfontfile, "\\opening\\iso8859-1-9x15.fnt");
+        strcat(windowsfontfile, "\\opening\\iso8859-1-9x15.fnt");
 #endif
     if (!pix_double)
-	strcat (windowsfontfile, "\\opening\\winfont_8x8.fnt");
+        strcat(windowsfontfile, "\\opening\\winfont_8x8.fnt");
     else
-	strcat (windowsfontfile, "\\opening\\winfont_16x16.fnt");
+        strcat(windowsfontfile, "\\opening\\winfont_16x16.fnt");
 #endif
 
     /* Temp file for results */
-    lc_temp_filename = (char *) malloc (lc_save_dir_len + 16);
+    lc_temp_filename = (char *)malloc(lc_save_dir_len + 16);
     if (lc_temp_filename == 0) {
-	malloc_failure ();
+        malloc_failure();
     }
-    sprintf (lc_temp_filename, "%s%c%s", lc_save_dir, PATH_SLASH, "tmp-file");
+    sprintf(lc_temp_filename, "%s%c%s", lc_save_dir, PATH_SLASH, "tmp-file");
 
     /* Path for localization */
 #if defined (ENABLE_NLS)
 #if defined (WIN32)
-    sprintf (lc_textdomain_directory, "%s%c%s", LIBDIR, PATH_SLASH, "locale");
+    sprintf(lc_textdomain_directory, "%s%c%s", LIBDIR, PATH_SLASH, "locale");
 #else
-    strcpy (lc_textdomain_directory, LOCALEDIR);
+    strcpy(lc_textdomain_directory, LOCALEDIR);
 #endif
-    char* dm = NULL;
-    char* td = NULL;    
-    dm = bindtextdomain (PACKAGE, lc_textdomain_directory);
-    debug_printf ("Bound textdomain directory is %s\n", dm);
-    td = textdomain (PACKAGE);
-    debug_printf ("Textdomain is %s\n", td);
+    char *dm = NULL;
+    char *td = NULL;
+    dm = bindtextdomain(PACKAGE, lc_textdomain_directory);
+    debug_printf("Bound textdomain directory is %s\n", dm);
+    td = textdomain(PACKAGE);
+    debug_printf("Textdomain is %s\n", td);
 #endif
 }
 
-void
-verify_package (void)
+void verify_package(void)
 {
-    FILE *fp = fopen (colour_pal_file,"rb");
+    FILE *fp = fopen(colour_pal_file, "rb");
     if (!fp) {
-	do_error (_("Error verifying package. Can't find colour.pal."));
+        do_error(_("Error verifying package. Can't find colour.pal."));
     }
-    fclose (fp);
+    fclose(fp);
 }
 
-void
-make_savedir (void)
+void make_savedir(void)
 {
 #if !defined (WIN32)
     DIR *dp;
@@ -572,24 +542,23 @@
 
 #if defined (commentout)
     if (make_dir_ok_flag == 0)
-	return;
+        return;
 #endif
 
 #if defined (WIN32)
-    if (_mkdir (lc_save_dir) == -1 && errno != EEXIST) {
-	printf (_("Couldn't create the save directory '%s'\n"), lc_save_dir);
-	exit (-1);
+    if (_mkdir(lc_save_dir) == -1 && errno != EEXIST) {
+        printf(_("Couldn't create the save directory '%s'\n"), lc_save_dir);
+        exit(-1);
     }
 #else
-    mkdir (lc_save_dir, 0755);
-    chown (lc_save_dir, getuid (), getgid ());
-    if ((dp = opendir (lc_save_dir)) == NULL)
-    {
-	/* change this to a screen message. */
-	printf (_("Couldn't create the save directory '%s'\n"), lc_save_dir);
-	exit (1);
+    mkdir(lc_save_dir, 0755);
+    chown(lc_save_dir, getuid(), getgid());
+    if ((dp = opendir(lc_save_dir)) == NULL) {
+        /* change this to a screen message. */
+        printf(_("Couldn't create the save directory '%s'\n"), lc_save_dir);
+        exit(1);
     }
-    closedir (dp);
+    closedir(dp);
 #endif
 
 #if defined (commentout)
@@ -597,70 +566,65 @@
 #endif
 }
 
-void
-check_savedir (void)
+void check_savedir(void)
 {
 #if defined (commentout)
     int i = 0, j, k, r, l;
 #endif
 
-    if (!directory_exists (lc_save_dir)) {
-	make_savedir ();
+    if (!directory_exists(lc_save_dir)) {
+        make_savedir();
 #if defined (commentout)
-	l = lc_save_dir_len;
-	if (l > 160) {
-	    i = l - 160;
-	    l = 160;
-	}
-	askdir_lines = l / 40 + ((l % 40) ? 1 : 0);
-	r = l / askdir_lines + ((l % askdir_lines) ? 1 : 0);
-	for (j = 0; j < askdir_lines; j++) {
-	    if ((askdir_path[j] = (char *) malloc (r + 1)) == 0)
-		malloc_failure ();
-	    for (k = 0; k < r; k++, i++)
-		*(askdir_path[j] + k) = lc_save_dir[i];
-	    *(askdir_path[j] + k) = 0;
-	}
-	return;
+        l = lc_save_dir_len;
+        if (l > 160) {
+            i = l - 160;
+            l = 160;
+        }
+        askdir_lines = l / 40 + ((l % 40) ? 1 : 0);
+        r = l / askdir_lines + ((l % askdir_lines) ? 1 : 0);
+        for (j = 0; j < askdir_lines; j++) {
+            if ((askdir_path[j] = (char *)malloc(r + 1)) == 0)
+                malloc_failure();
+            for (k = 0; k < r; k++, i++)
+                *(askdir_path[j] + k) = lc_save_dir[i];
+            *(askdir_path[j] + k) = 0;
+        }
+        return;
 #endif
     }
 #if defined (commentout)
-    make_dir_ok_flag = 0;		/* don't load the ask-dir */
+    make_dir_ok_flag = 0;       /* don't load the ask-dir */
 #endif
 }
 
-void
-malloc_failure (void)
+void malloc_failure(void)
 {
-  printf (_("Out of memory: malloc failure\n"));
-  exit (1);
+    printf(_("Out of memory: malloc failure\n"));
+    exit(1);
 }
 
-char*
-load_graphic(char *s)
+char *load_graphic(char *s)
 {
-    int x,l;
-    char ss[LC_PATH_MAX],*graphic;
+    int x, l;
+    char ss[LC_PATH_MAX], *graphic;
     FILE *inf;
-    strcpy(ss,graphic_path);
-    strcat(ss,s);
-    if ((inf=fopen(ss,"rb"))==NULL)
-    {
-	strcat(ss," -- UNABLE TO LOAD");
-	do_error(ss);
+    strcpy(ss, graphic_path);
+    strcat(ss, s);
+    if ((inf = fopen(ss, "rb")) == NULL) {
+        strcat(ss, " -- UNABLE TO LOAD");
+        do_error(ss);
     }
-    fseek(inf,0L,SEEK_END);
-    l=ftell(inf);
-    fseek(inf,0L,SEEK_SET);
-    graphic=(char *)malloc(l);
-    for (x=0;x<l;x++)
-	*(graphic+x)=fgetc(inf);
+    fseek(inf, 0L, SEEK_END);
+    l = ftell(inf);
+    fseek(inf, 0L, SEEK_SET);
+    graphic = (char *)malloc(l);
+    for (x = 0; x < l; x++)
+        *(graphic + x) = fgetc(inf);
     fclose(inf);
-    return(graphic);
+    return (graphic);
 }
 
-void
-load_lincityrc (void)
+void load_lincityrc(void)
 {
     //FIXME: this whole function should be moved to oldgui/*, because it contains only things concerning the old gui 
 #if 0
@@ -668,191 +632,159 @@
     int arg;
     char buf[128];
 
-    if ((fp = fopen (lincityrc_file, "r")) == 0) {
-	save_lincityrc();
-	return;
+    if ((fp = fopen(lincityrc_file, "r")) == 0) {
+        save_lincityrc();
+        return;
     }
     //FIXME: this whole function should be moved to oldgui/*, because it contains only things concerning the old gui 
 
-    while (fgets (buf,128,fp)) {
-	if (sscanf(buf,"overwrite_transport=%d",&arg)==1) {
-	    overwrite_transport_flag = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"no_init_help=%d",&arg)==1) {
-	// Careful here ... 
-	    no_init_help = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"skip_splash_screen=%d",&arg)==1) {
-	    skip_splash_screen = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"suppress_firsttime_module_help=%d",&arg)==1) {
-	    suppress_firsttime_module_help = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"suppress_popups=%d",&arg)==1) {
-	    suppress_popups = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"time_multiplex_stats=%d",&arg)==1) {
-	    time_multiplex_stats = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"x_confine_pointer=%d",&arg)==1) {
-	    confine_flag = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"pix_double=%d",&arg)==1) {
-	    pix_double = !!arg;
-	    continue;
-	}
-	if (sscanf(buf,"borderx=%d",&arg)==1) {
-	    if (borderx >= 0) {
-		borderx = arg;
-	    }
-	    continue;
-	}
-	if (sscanf(buf,"bordery=%d",&arg)==1) {
-	    if (bordery >= 0) {
-		bordery = arg;
-	    }
-	    continue;
-	}
+    while (fgets(buf, 128, fp)) {
+        if (sscanf(buf, "overwrite_transport=%d", &arg) == 1) {
+            overwrite_transport_flag = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "no_init_help=%d", &arg) == 1) {
+            // Careful here ... 
+            no_init_help = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "skip_splash_screen=%d", &arg) == 1) {
+            skip_splash_screen = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "suppress_firsttime_module_help=%d", &arg) == 1) {
+            suppress_firsttime_module_help = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "suppress_popups=%d", &arg) == 1) {
+            suppress_popups = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "time_multiplex_stats=%d", &arg) == 1) {
+            time_multiplex_stats = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "x_confine_pointer=%d", &arg) == 1) {
+            confine_flag = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "pix_double=%d", &arg) == 1) {
+            pix_double = !!arg;
+            continue;
+        }
+        if (sscanf(buf, "borderx=%d", &arg) == 1) {
+            if (borderx >= 0) {
+                borderx = arg;
+            }
+            continue;
+        }
+        if (sscanf(buf, "bordery=%d", &arg) == 1) {
+            if (bordery >= 0) {
+                bordery = arg;
+            }
+            continue;
+        }
     }
-    fclose (fp);
+    fclose(fp);
 #endif
 }
 
-void
-save_lincityrc (void)
+void save_lincityrc(void)
 {
     //FIXME: this whole function should be moved to oldgui/*, because it contains only things concerning the old gui 
-    
+
 #if 0
     FILE *fp;
 
-    if ((fp = fopen (lincityrc_file, "w")) == 0) {
-	return;
+    if ((fp = fopen(lincityrc_file, "w")) == 0) {
+        return;
     }
 
-    fprintf (fp, 
-	"# Set this if you want to be able to overwrite one\n"
-	"# kind of transport with another.\n"
-	"overwrite_transport=%d\n\n",
-	overwrite_transport_flag);
-    fprintf (fp, 
-	"# Set this if you don't want the opening help screen.\n"
-	"no_init_help=%d\n\n",
-	no_init_help
-	);
-    fprintf (fp,
-	"# Set this if you don't want the opening splash screen.\n"
-	"skip_splash_screen=%d\n\n",
-	skip_splash_screen
-	);
-    fprintf (fp,
-	"# Set this if you don't want help the first time you\n"
-	"# click to place an item.\n"
-	"suppress_firsttime_module_help=%d\n\n", 
-	suppress_firsttime_module_help
-	);
-    fprintf (fp,
-	"# Set this if don't want modal dialog boxes which you\n"
-	"# are required to click OK.  Instead, report the dialog\n"
-	"# box information to the message area.\n"
-	"suppress_popups=%d\n\n",
-	suppress_popups
-	);
-    fprintf (fp,
-	"# Set this if want the different statistic windows to cycle\n"
-	"# through the right panel.\n"
-	"time_multiplex_stats=%d\n\n",
-	time_multiplex_stats
-	);
-    fprintf (fp,
-	"# (X Windows and WIN32 only) Set this if you want pix doubling,\n"
-	"# where each pixel is drawn as a 2x2 square.\n"
-	"pix_double=%d\n\n",
-	pix_double
-	);
-    fprintf (fp,
-	"# (X Windows and WIN32 only) Set this if you want a blank area\n"
-	"# around the playing area.\n"
-	"borderx=%d\n"
-	"bordery=%d\n\n",
-	borderx,
-	bordery
-	);
-    fprintf (fp,
-	"# (X Windows only) Set this if you want to confine the pointer\n"
-	"# to within the window.\n"
-	"x_confine_pointer=%d\n\n",
-	confine_flag
-	);
-    fclose (fp);
+    fprintf(fp,
+            "# Set this if you want to be able to overwrite one\n"
+            "# kind of transport with another.\n" "overwrite_transport=%d\n\n", overwrite_transport_flag);
+    fprintf(fp, "# Set this if you don't want the opening help screen.\n" "no_init_help=%d\n\n", no_init_help);
+    fprintf(fp,
+            "# Set this if you don't want the opening splash screen.\n"
+            "skip_splash_screen=%d\n\n", skip_splash_screen);
+    fprintf(fp,
+            "# Set this if you don't want help the first time you\n"
+            "# click to place an item.\n" "suppress_firsttime_module_help=%d\n\n", suppress_firsttime_module_help);
+    fprintf(fp,
+            "# Set this if don't want modal dialog boxes which you\n"
+            "# are required to click OK.  Instead, report the dialog\n"
+            "# box information to the message area.\n" "suppress_popups=%d\n\n", suppress_popups);
+    fprintf(fp,
+            "# Set this if want the different statistic windows to cycle\n"
+            "# through the right panel.\n" "time_multiplex_stats=%d\n\n", time_multiplex_stats);
+    fprintf(fp,
+            "# (X Windows and WIN32 only) Set this if you want pix doubling,\n"
+            "# where each pixel is drawn as a 2x2 square.\n" "pix_double=%d\n\n", pix_double);
+    fprintf(fp,
+            "# (X Windows and WIN32 only) Set this if you want a blank area\n"
+            "# around the playing area.\n" "borderx=%d\n" "bordery=%d\n\n", borderx, bordery);
+    fprintf(fp,
+            "# (X Windows only) Set this if you want to confine the pointer\n"
+            "# to within the window.\n" "x_confine_pointer=%d\n\n", confine_flag);
+    fclose(fp);
 #endif
 }
 
-void
-undosify_string (char *s)
+void undosify_string(char *s)
 {
     /* Convert '\r\n' to '\n' in string */
     char prev_char = 0;
     char *p = s, *q = s;
     while (*p) {
-	if (*p != '\r') {
-	    if (prev_char == '\r' && *p != '\n') {
-		*q++ = '\n';
-	    }
-	    *q++ = *p;
-	}
-	prev_char = *p;
+        if (*p != '\r') {
+            if (prev_char == '\r' && *p != '\n') {
+                *q++ = '\n';
+            }
+            *q++ = *p;
+        }
+        prev_char = *p;
         p++;
     }
     if (prev_char == '\r') {
-	*q++ = '\n';
+        *q++ = '\n';
     }
     *q = '\0';
 }
 
-void
-debug_printf (char* fmt, ...)
+void debug_printf(char *fmt, ...)
 {
-    (void) fmt;
+    (void)fmt;
 #if (DEBUG_PRINTF_TO_FILE)
     static int initialized = 0;
-    char* filename = "debug.txt";
-    FILE* fp;
+    char *filename = "debug.txt";
+    FILE *fp;
 #endif
     va_list argptr;
-    (void) argptr;
+    (void)argptr;
 
 #if (DEBUG_PRINTF_TO_FILE)
-    va_start (argptr, fmt);
+    va_start(argptr, fmt);
     fp = fopen(filename, "a");
     if (!initialized) {
-	initialized = 1;
-	fprintf (fp, "=========================\n");
+        initialized = 1;
+        fprintf(fp, "=========================\n");
     }
-    vfprintf (fp, fmt, argptr);
+    vfprintf(fp, fmt, argptr);
 #endif
 
     /* FIXME: maybe uncomment this 
-    if (command_line_debug) {
-#if (!DEBUG_PRINTF_TO_FILE)
-      va_start (argptr, fmt);
-#endif
-      vprintf (fmt, argptr);
-#if (!DEBUG_PRINTF_TO_FILE)
-      va_end (argptr);
-#endif
-    }
-    */
+       if (command_line_debug) {
+       #if (!DEBUG_PRINTF_TO_FILE)
+       va_start (argptr, fmt);
+       #endif
+       vprintf (fmt, argptr);
+       #if (!DEBUG_PRINTF_TO_FILE)
+       va_end (argptr);
+       #endif
+       }
+     */
 #if (DEBUG_PRINTF_TO_FILE)
-    va_end (argptr);
-    fclose (fp);
+    va_end(argptr);
+    fclose(fp);
 #endif
 }
-

Modified: trunk/src/lincity/fileutil.h
===================================================================
--- trunk/src/lincity/fileutil.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/fileutil.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -12,11 +12,11 @@
 //extern int make_dir_ok_flag;
 
 /* Try to find the maximum file name from OS */
-#if defined (_POSIX_PATH_MAX)          /* Posix */
+#if defined (_POSIX_PATH_MAX)   /* Posix */
 #define LC_PATH_MAX _POSIX_PATH_MAX
-#elif defined (_MAX_PATH)              /* Win32 */
+#elif defined (_MAX_PATH)       /* Win32 */
 #define LC_PATH_MAX _MAX_PATH
-#elif defined (PATH_MAX)               /* X Windows */
+#elif defined (PATH_MAX)        /* X Windows */
 #define LC_PATH_MAX PATH_MAX
 #else
 #define LC_PATH_MAX 4096
@@ -34,13 +34,13 @@
 extern char given_scene[LC_PATH_MAX];
 
 //void gunzip_file (char *f1, char *f2); //unused function
-int file_exists (char *filename);
-int directory_exists (char *dir);
-char* load_graphic(char *s);
+int file_exists(char *filename);
+int directory_exists(char *dir);
+char *load_graphic(char *s);
 void undosify_string(char *s);
-void load_lincityrc (void);
-void save_lincityrc (void);
+void load_lincityrc(void);
+void save_lincityrc(void);
 
-void debug_printf (char* fmt, ...);
+void debug_printf(char *fmt, ...);
 
-#endif	/* __fileutil_h__ */
+#endif /* __fileutil_h__ */

Modified: trunk/src/lincity/getopt.cpp
===================================================================
--- trunk/src/lincity/getopt.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/getopt.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -29,8 +29,8 @@
  *                 John Q. Walker II, Ph.D. (JOHHQ at RALVM6) 
  *                 Internet: johnq at ralvm6.vnet.ibm.com 
  * 
- *****************************************************************************/ 
- 
+ *****************************************************************************/
+
 /****************************************************************************** 
  * getopt() 
  * 
@@ -66,112 +66,105 @@
  * Options are marked by either a minus sign (-) or a slash (/). 
  * 
  * No errors are defined. 
- *****************************************************************************/ 
- 
-#include <stdio.h>                  /* for EOF */ 
-#include <string.h>                 /* for strchr() */ 
- 
- 
-/* static (global) variables that are specified as exported by getopt() */ 
-char *optarg = NULL;    /* pointer to the start of the option argument  */ 
-int   optind = 1;       /* number of the next argv[] to be evaluated    */ 
-int   opterr = 1;       /* non-zero if a question mark should be returned 
-                           when a non-valid option character is detected */ 
- 
-/* handle possible future character set concerns by putting this in a macro */ 
-#define _next_char(string)  (char)(*(string+1)) 
- 
-int getopt(int argc, char *argv[], char *opstring) 
-{ 
-    static char *pIndexPosition = NULL; /* place inside current argv string */ 
-    char *pArgString = NULL;        /* where to start from next */ 
-    char *pOptString;               /* the string in our program */ 
- 
- 
-    if (pIndexPosition != NULL) { 
-        /* we last left off inside an argv string */ 
-        if (*(++pIndexPosition)) { 
-            /* there is more to come in the most recent argv */ 
-            pArgString = pIndexPosition; 
-        } 
-    } 
- 
-    if (pArgString == NULL) { 
-        /* we didn't leave off in the middle of an argv string */ 
-        if (optind >= argc) { 
-            /* more command-line arguments than the argument count */ 
-            pIndexPosition = NULL;  /* not in the middle of anything */ 
-            return EOF;             /* used up all command-line arguments */ 
-        } 
- 
+ *****************************************************************************/
+
+#include <stdio.h>              /* for EOF */
+#include <string.h>             /* for strchr() */
+
+/* static (global) variables that are specified as exported by getopt() */
+char *optarg = NULL;            /* pointer to the start of the option argument  */
+int optind = 1;                 /* number of the next argv[] to be evaluated    */
+int opterr = 1;                 /* non-zero if a question mark should be returned 
+                                   when a non-valid option character is detected */
+
+/* handle possible future character set concerns by putting this in a macro */
+#define _next_char(string)  (char)(*(string+1))
+
+int getopt(int argc, char *argv[], char *opstring)
+{
+    static char *pIndexPosition = NULL; /* place inside current argv string */
+    char *pArgString = NULL;    /* where to start from next */
+    char *pOptString;           /* the string in our program */
+
+    if (pIndexPosition != NULL) {
+        /* we last left off inside an argv string */
+        if (*(++pIndexPosition)) {
+            /* there is more to come in the most recent argv */
+            pArgString = pIndexPosition;
+        }
+    }
+
+    if (pArgString == NULL) {
+        /* we didn't leave off in the middle of an argv string */
+        if (optind >= argc) {
+            /* more command-line arguments than the argument count */
+            pIndexPosition = NULL;      /* not in the middle of anything */
+            return EOF;         /* used up all command-line arguments */
+        }
+
         /*--------------------------------------------------------------------- 
          * If the next argv[] is not an option, there can be no more options. 
-         *-------------------------------------------------------------------*/ 
-        pArgString = argv[optind++]; /* set this to the next argument ptr */ 
- 
-        if (('/' != *pArgString) && /* doesn't start with a slash or a dash? */ 
-            ('-' != *pArgString)) { 
-            --optind;               /* point to current arg once we're done */ 
-            optarg = NULL;          /* no argument follows the option */ 
-            pIndexPosition = NULL;  /* not in the middle of anything */ 
-            return EOF;             /* used up all the command-line flags */ 
-        } 
- 
-        /* check for special end-of-flags markers */ 
-        if ((strcmp(pArgString, "-") == 0) || 
-            (strcmp(pArgString, "--") == 0)) { 
-            optarg = NULL;          /* no argument follows the option */ 
-            pIndexPosition = NULL;  /* not in the middle of anything */ 
-            return EOF;             /* encountered the special flag */ 
-        } 
- 
-        pArgString++;               /* look past the / or - */ 
-    } 
- 
-    if (':' == *pArgString) {       /* is it a colon? */ 
+         *-------------------------------------------------------------------*/
+        pArgString = argv[optind++];    /* set this to the next argument ptr */
+
+        if (('/' != *pArgString) &&     /* doesn't start with a slash or a dash? */
+            ('-' != *pArgString)) {
+            --optind;           /* point to current arg once we're done */
+            optarg = NULL;      /* no argument follows the option */
+            pIndexPosition = NULL;      /* not in the middle of anything */
+            return EOF;         /* used up all the command-line flags */
+        }
+
+        /* check for special end-of-flags markers */
+        if ((strcmp(pArgString, "-") == 0) || (strcmp(pArgString, "--") == 0)) {
+            optarg = NULL;      /* no argument follows the option */
+            pIndexPosition = NULL;      /* not in the middle of anything */
+            return EOF;         /* encountered the special flag */
+        }
+
+        pArgString++;           /* look past the / or - */
+    }
+
+    if (':' == *pArgString) {   /* is it a colon? */
         /*--------------------------------------------------------------------- 
          * Rare case: if opterr is non-zero, return a question mark; 
          * otherwise, just return the colon we're on. 
-         *-------------------------------------------------------------------*/ 
-        return (opterr ? (int)'?' : (int)':'); 
-    } 
-    else if ((pOptString = strchr(opstring, *pArgString)) == 0) { 
+         *-------------------------------------------------------------------*/
+        return (opterr ? (int)'?' : (int)':');
+    } else if ((pOptString = strchr(opstring, *pArgString)) == 0) {
         /*--------------------------------------------------------------------- 
          * The letter on the command-line wasn't any good. 
-         *-------------------------------------------------------------------*/ 
-        optarg = NULL;              /* no argument follows the option */ 
-        pIndexPosition = NULL;      /* not in the middle of anything */ 
-        return (opterr ? (int)'?' : (int)*pArgString); 
-    } 
-    else { 
+         *-------------------------------------------------------------------*/
+        optarg = NULL;          /* no argument follows the option */
+        pIndexPosition = NULL;  /* not in the middle of anything */
+        return (opterr ? (int)'?' : (int)*pArgString);
+    } else {
         /*--------------------------------------------------------------------- 
          * The letter on the command-line matches one we expect to see 
-         *-------------------------------------------------------------------*/ 
-        if (':' == _next_char(pOptString)) { /* is the next letter a colon? */ 
-            /* It is a colon.  Look for an argument string. */ 
-            if ('\0' != _next_char(pArgString)) {  /* argument in this argv? */ 
-                optarg = &pArgString[1];   /* Yes, it is */ 
-            } 
-            else { 
+         *-------------------------------------------------------------------*/
+        if (':' == _next_char(pOptString)) {    /* is the next letter a colon? */
+            /* It is a colon.  Look for an argument string. */
+            if ('\0' != _next_char(pArgString)) {       /* argument in this argv? */
+                optarg = &pArgString[1];        /* Yes, it is */
+            } else {
                 /*------------------------------------------------------------- 
                  * The argument string must be in the next argv. 
                  * But, what if there is none (bad input from the user)? 
                  * In that case, return the letter, and optarg as NULL. 
-                 *-----------------------------------------------------------*/ 
-                if (optind < argc) 
-                    optarg = argv[optind++]; 
-                else { 
-                    optarg = NULL; 
-                    return (opterr ? (int)'?' : (int)*pArgString); 
-                } 
-            } 
-            pIndexPosition = NULL;  /* not in the middle of anything */ 
-        } 
-        else { 
-            /* it's not a colon, so just return the letter */ 
-            optarg = NULL;          /* no argument follows the option */ 
-            pIndexPosition = pArgString;    /* point to the letter we're on */ 
-        } 
-        return (int)*pArgString;    /* return the letter that matched */ 
-    } 
-} 
+                 *-----------------------------------------------------------*/
+                if (optind < argc)
+                    optarg = argv[optind++];
+                else {
+                    optarg = NULL;
+                    return (opterr ? (int)'?' : (int)*pArgString);
+                }
+            }
+            pIndexPosition = NULL;      /* not in the middle of anything */
+        } else {
+            /* it's not a colon, so just return the letter */
+            optarg = NULL;      /* no argument follows the option */
+            pIndexPosition = pArgString;        /* point to the letter we're on */
+        }
+        return (int)*pArgString;        /* return the letter that matched */
+    }
+}

Modified: trunk/src/lincity/lc_common.h
===================================================================
--- trunk/src/lincity/lc_common.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lc_common.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -31,4 +31,4 @@
 #include "lcsdl.h"
 #endif
 
-#endif	/* __common_h__ */
+#endif /* __common_h__ */

Modified: trunk/src/lincity/lc_locale.cpp
===================================================================
--- trunk/src/lincity/lc_locale.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lc_locale.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -1,35 +1,34 @@
 #include "lc_locale.h"
 #include <stdlib.h>
 
-void
-lincity_set_locale (void)
+void lincity_set_locale(void)
 {
-    char* locale = NULL;
-    char* localem = NULL;
+    char *locale = NULL;
+    char *localem = NULL;
 #if defined (WIN32)
 #define MAX_LANG_BUF 1024
-    char* language = NULL;
+    char *language = NULL;
     char language_buf[MAX_LANG_BUF];
 #endif
 
 #if defined (ENABLE_NLS)
 #if defined (WIN32)
     /* Some special stoopid way of setting locale for microsoft gettext */
-    language = getenv ("LANGUAGE");
+    language = getenv("LANGUAGE");
     if (language) {
-	debug_printf ("Environment variable LANGUAGE is %s\n", language);
-	snprintf (language_buf, MAX_LANG_BUF, "LANGUAGE=%s", language);
-	gettext_putenv(language_buf);
+        debug_printf("Environment variable LANGUAGE is %s\n", language);
+        snprintf(language_buf, MAX_LANG_BUF, "LANGUAGE=%s", language);
+        gettext_putenv(language_buf);
     } else {
-	debug_printf ("Environment variable LANGUAGE not set.\n");
+        debug_printf("Environment variable LANGUAGE not set.\n");
     }
 #else
-    locale = setlocale (LC_ALL, "");
-    debug_printf ("Setting entire locale to %s\n", locale);
-    locale = setlocale (LC_MESSAGES, "");
-    debug_printf ("Setting messages locale to %s\n", locale);
-    localem = setlocale (LC_MESSAGES, NULL);
-    debug_printf ("Query locale is %s\n", localem);
+    locale = setlocale(LC_ALL, "");
+    debug_printf("Setting entire locale to %s\n", locale);
+    locale = setlocale(LC_MESSAGES, "");
+    debug_printf("Setting messages locale to %s\n", locale);
+    localem = setlocale(LC_MESSAGES, NULL);
+    debug_printf("Query locale is %s\n", localem);
 #endif
 #endif /* ENABLE_NLS */
     return;

Modified: trunk/src/lincity/lc_locale.h
===================================================================
--- trunk/src/lincity/lc_locale.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lc_locale.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -1,7 +1,6 @@
 #ifndef __LC_LOCALE_H__
 #define __LC_LOCALE_H__
 
-void lincity_set_locale (void);
+void lincity_set_locale(void);
 
-
 #endif

Modified: trunk/src/lincity/lcconfig.h
===================================================================
--- trunk/src/lincity/lcconfig.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lcconfig.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -18,4 +18,4 @@
 #pragma message(__FILE__ ": deprecated header")
 #endif
 
-#endif	/* __lcconfig_h__ */
+#endif /* __lcconfig_h__ */

Modified: trunk/src/lincity/lclib.cpp
===================================================================
--- trunk/src/lincity/lclib.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lclib.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -13,128 +13,147 @@
 #include "lcintl.h"
 #include "lin-city.h"
 
-char *months[] =
-{N_("Jan"), N_("Feb"), N_("Mar"), N_("Apr"),
-N_("May"), N_("Jun"), N_("Jul"), N_("Aug"),
-N_("Sep"), N_("Oct"), N_("Nov"), N_("Dec")};
+char *months[] = { N_("Jan"), N_("Feb"), N_("Mar"), N_("Apr"),
+    N_("May"), N_("Jun"), N_("Jul"), N_("Aug"),
+    N_("Sep"), N_("Oct"), N_("Nov"), N_("Dec")
+};
 
-
-const char* 
-current_month (int current_time)
+const char *current_month(int current_time)
 {
     static bool doinit = true;
     if (doinit) {
-	doinit = false;
-	for (int i = 0; i < 12; ++i) {
-	    months[i] = strdup(_(months[i]));
-	}
+        doinit = false;
+        for (int i = 0; i < 12; ++i) {
+            months[i] = strdup(_(months[i]));
+        }
     }
     return months[(current_time % NUMOF_DAYS_IN_YEAR) / NUMOF_DAYS_IN_MONTH];
 }
 
-int 
-current_year (int current_time)
+int current_year(int current_time)
 {
     return current_time / NUMOF_DAYS_IN_YEAR;
 }
 
-void 
-format_number5 (char* str, int num)
+void format_number5(char *str, int num)
 {
     int num_sign = num >= 0 ? 1 : -1;
     if (num_sign == 1) {
-	if (num < 99999) {
-	    sprintf (str, "%5d", num);
-	} else if (num < 9999999) {
-	    sprintf (str, "%4dK", num / 1000);
-	} else {
-	    sprintf (str, "%4dM", num / 1000000);
-	}
+        if (num < 99999) {
+            sprintf(str, "%5d", num);
+        } else if (num < 9999999) {
+            sprintf(str, "%4dK", num / 1000);
+        } else {
+            sprintf(str, "%4dM", num / 1000000);
+        }
     } else {
-	int num_absval = num_sign * num;
-	if (num_absval < 9999) {
-	    sprintf (str, "%5d", num);
-	} else if (num_absval < 999999) {
-	    sprintf (str, "%4dK", num_sign * (num_absval / 1000));
-	} else {
-	    sprintf (str, "%4dM", num_sign * (num_absval / 1000000));
-	}
+        int num_absval = num_sign * num;
+        if (num_absval < 9999) {
+            sprintf(str, "%5d", num);
+        } else if (num_absval < 999999) {
+            sprintf(str, "%4dK", num_sign * (num_absval / 1000));
+        } else {
+            sprintf(str, "%4dM", num_sign * (num_absval / 1000000));
+        }
     }
 }
 
-void 
-num_to_ansi(char * s, size_t size, long num) 
+void num_to_ansi(char *s, size_t size, long num)
 {
-  int triplets = 0;
-  float numf = (float)num;  
+    int triplets = 0;
+    float numf = (float)num;
 
-  while (numf > 1000 || numf < -1000) {
-    numf /= 1000;
-    triplets++;
-  }
+    while (numf > 1000 || numf < -1000) {
+        numf /= 1000;
+        triplets++;
+    }
 
-  switch(triplets) 
-    {
-    case 0: triplets = ' '; break;
-    case 1: triplets = 'k'; break; // kila
-    case 2: triplets = 'm'; break; // mega
-    case 3: triplets = 'g'; break; // giga 
-    case 4: triplets = 't'; break; // tera 
-    case 5: triplets = 'p'; break; // peta
-    default: triplets = '?'; break;
+    switch (triplets) {
+    case 0:
+        triplets = ' ';
+        break;
+    case 1:
+        triplets = 'k';
+        break;                  // kila
+    case 2:
+        triplets = 'm';
+        break;                  // mega
+    case 3:
+        triplets = 'g';
+        break;                  // giga 
+    case 4:
+        triplets = 't';
+        break;                  // tera 
+    case 5:
+        triplets = 'p';
+        break;                  // peta
+    default:
+        triplets = '?';
+        break;
     }
-      
-  if (size == 4) { /* to make up for format_pos_number4.  Eeewwwwwww. */ 
-      if (numf < 10) { 
-	  snprintf(s, size + 1, "%1.1f%c", numf, triplets);
-      } else {
-	  snprintf(s,size + 1, "%3.0f%c", numf, triplets);
-      }
-  } else {
-      if (triplets == ' ') {
-	  snprintf(s, size, "%3.1f", numf);
-      } else {
-	  snprintf(s, size, "%3.1f%c", numf, triplets);
-      }
-  }
+
+    if (size == 4) {            /* to make up for format_pos_number4.  Eeewwwwwww. */
+        if (numf < 10) {
+            snprintf(s, size + 1, "%1.1f%c", numf, triplets);
+        } else {
+            snprintf(s, size + 1, "%3.0f%c", numf, triplets);
+        }
+    } else {
+        if (triplets == ' ') {
+            snprintf(s, size, "%3.1f", numf);
+        } else {
+            snprintf(s, size, "%3.1f%c", numf, triplets);
+        }
+    }
 }
 
-void 
-num_to_ansi_unit(char * s, size_t size, long num, char unit) 
+void num_to_ansi_unit(char *s, size_t size, long num, char unit)
 {
-  int triplets = 0;
-  float numf = (float)num;
+    int triplets = 0;
+    float numf = (float)num;
 
-  while (numf > 1000) {
-    numf /= 1000;
-    triplets++;
-  }
+    while (numf > 1000) {
+        numf /= 1000;
+        triplets++;
+    }
 
-  switch(triplets) 
-    {
-    case 0: triplets = ' '; break;
-    case 1: triplets = 'k'; break; // kila
-    case 2: triplets = 'M'; break; // mega
-    case 3: triplets = 'G'; break; // giga 
-    case 4: triplets = 'T'; break; // tera 
-    case 5: triplets = 'P'; break; // peta
-    default: triplets = '?'; break;
+    switch (triplets) {
+    case 0:
+        triplets = ' ';
+        break;
+    case 1:
+        triplets = 'k';
+        break;                  // kila
+    case 2:
+        triplets = 'M';
+        break;                  // mega
+    case 3:
+        triplets = 'G';
+        break;                  // giga 
+    case 4:
+        triplets = 'T';
+        break;                  // tera 
+    case 5:
+        triplets = 'P';
+        break;                  // peta
+    default:
+        triplets = '?';
+        break;
     }
-      
-  if (size == 4)  /* to make up for format_pos_number4 */
-    if (numf < 10) 
-      snprintf(s, size, "%4.1f%c%c", numf, triplets, unit);
-    else 
-      snprintf(s,size, "%4.0f%c%c", numf, triplets, unit);
-  else
-    snprintf(s, size, "%5.1f%c%c", numf, triplets, unit);
+
+    if (size == 4)              /* to make up for format_pos_number4 */
+        if (numf < 10)
+            snprintf(s, size, "%4.1f%c%c", numf, triplets, unit);
+        else
+            snprintf(s, size, "%4.0f%c%c", numf, triplets, unit);
+    else
+        snprintf(s, size, "%5.1f%c%c", numf, triplets, unit);
 }
 
 /* commify: take a number and convert it to a string grouped into triplets
    with commas; returns number of characters written, excluding trailing zero
 */
-int 
-commify (char *str, size_t size, int argnum)
+int commify(char *str, size_t size, int argnum)
 {
     size_t count = 0;
     int i = 0;
@@ -142,87 +161,78 @@
     int num = argnum;
     int kludge = 1;
 
-    if (num < 0) 
-	count += snprintf(str, size, "-");
+    if (num < 0)
+        count += snprintf(str, size, "-");
 
     num = abs(argnum);
-    
-    for (; num >= 1000; num /= 1000, triad++, kludge *= 1000);
 
+    for (; num >= 1000; num /= 1000, triad++, kludge *= 1000) ;
+
     num = abs(argnum);
 
     for (; triad > 0; i++, triad--) {
 
-	if (i == 0) 
-	    if (triad == 1)
-		count += snprintf(str + count, size - count, "%d", num);
-	    else
-		count += snprintf(str + count, size - count, "%d,", 
-				  num ? num / kludge : num);
-	else if (triad == 1)
-	    count += snprintf(str + count, size - count, "%03d", 
-			      num ? num / kludge : num);
-	else
-	    count += snprintf(str + count, size - count, "%03d,",
-			      num ? num / kludge : num);
+        if (i == 0)
+            if (triad == 1)
+                count += snprintf(str + count, size - count, "%d", num);
+            else
+                count += snprintf(str + count, size - count, "%d,", num ? num / kludge : num);
+        else if (triad == 1)
+            count += snprintf(str + count, size - count, "%03d", num ? num / kludge : num);
+        else
+            count += snprintf(str + count, size - count, "%03d,", num ? num / kludge : num);
 
-	if (num) /* don't divide by zero */
-	    num %= kludge;
+        if (num)                /* don't divide by zero */
+            num %= kludge;
 
-	kludge /= 1000;
+        kludge /= 1000;
     }
 
     return count;
 }
 
 /* GCS - make sure that the string has length at least size-1 */
-void
-pad_with_blanks (char* str, int size)
+void pad_with_blanks(char *str, int size)
 {
-  while (*str) {
-    size--;
-    str++;
-  }
-  while (size-- > 1) {
-    *str++ = ' ';
-  }
-  *str = '\0';
+    while (*str) {
+        size--;
+        str++;
+    }
+    while (size-- > 1) {
+        *str++ = ' ';
+    }
+    *str = '\0';
 }
 
-void 
-format_pos_number4 (char* str, int num)
+void format_pos_number4(char *str, int num)
 {
-  num_to_ansi(str, 4, num);
+    num_to_ansi(str, 4, num);
 }
 
-void 
-format_power(char * str, size_t size, long power)
+void format_power(char *str, size_t size, long power)
 {
-  /* Lincity power unit is 1kW */
-  num_to_ansi_unit(str, size, power*1000, 'W');
+    /* Lincity power unit is 1kW */
+    num_to_ansi_unit(str, size, power * 1000, 'W');
 }
 
-int
-min_int (int i1, int i2)
+int min_int(int i1, int i2)
 {
-  return i1 < i2 ? i1 : i2;
+    return i1 < i2 ? i1 : i2;
 }
 
-int
-max_int (int i1, int i2)
+int max_int(int i1, int i2)
 {
-  return i1 > i2 ? i1 : i2;
+    return i1 > i2 ? i1 : i2;
 }
 
-void * 
-lcalloc (size_t size) 
+void *lcalloc(size_t size)
 {
-  void * tmp;
-  tmp = malloc(size);
-  if (tmp == NULL) {
-    printf("couldn't malloc %d bytes!  Dying.\n",size);
-    exit(-1);
-  }
-  
-  return tmp;
+    void *tmp;
+    tmp = malloc(size);
+    if (tmp == NULL) {
+        printf("couldn't malloc %d bytes!  Dying.\n", size);
+        exit(-1);
+    }
+
+    return tmp;
 }

Modified: trunk/src/lincity/lclib.h
===================================================================
--- trunk/src/lincity/lclib.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lclib.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -11,19 +11,17 @@
 // FIXME: is this necessary to export this?
 extern char *months[];
 
+const char *current_month(int current_time);
+int current_year(int current_time);
+void format_number5(char *str, int num);
+void format_pos_number4(char *str, int num);
+void format_power(char *str, size_t size, long power);
+void *lcalloc(size_t size);
+int commify(char *str, size_t size, int argnum);
+void pad_with_blanks(char *str, int size);
+void num_to_ansi(char *s, size_t size, long num);
 
-const char * current_month(int current_time);
-int current_year (int current_time);
-void format_number5 (char* str, int num);
-void format_pos_number4 (char* str, int num);
-void format_power(char * str, size_t size, long power);
-void * lcalloc (size_t size);
-int commify(char * str, size_t size, int argnum);
-void pad_with_blanks (char* str, int size);
-void num_to_ansi(char * s, size_t size, long num);
+int min_int(int i1, int i2);
+int max_int(int i1, int i2);
 
-int min_int (int i1, int i2);
-int max_int (int i1, int i2);
-
 #endif
-

Modified: trunk/src/lincity/lcstring.h
===================================================================
--- trunk/src/lincity/lcstring.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lcstring.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -17,4 +17,4 @@
 #pragma message(__FILE__ ": deprecated header")
 #endif
 
-#endif	/* __lcstring_h__ */
+#endif /* __lcstring_h__ */

Modified: trunk/src/lincity/lctypes.h
===================================================================
--- trunk/src/lincity/lctypes.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lctypes.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -103,7 +103,6 @@
 #define CST_POWERS_COAL_FULL_G  "powerscoal-full.csi"
 #define LCT_POWERS_COAL_FULL_G  "powerscoal-full"
 
-
 #define CST_BURNT		49
 #define CST_BURNT_G		"burnt_land.csi"
 #define LCT_BURNT_G		"burnt_land"
@@ -141,7 +140,6 @@
 #define CST_RESIDENCE_HH_G      "reshihi.csi"
 #define LCT_RESIDENCE_HH_G      "reshihi"
 
-
 #define CST_MARKET_EMPTY	71
 #define CST_MARKET_EMPTY_G	"market-empty.csi"
 #define LCT_MARKET_EMPTY_G	"market-empty"
@@ -155,7 +153,6 @@
 #define CST_MARKET_FULL_G       "market-full.csi"
 #define LCT_MARKET_FULL_G       "market-full"
 
-
 #define CST_RECYCLE		79
 #define CST_RECYCLE_G		"recycle-centre.csi"
 #define LCT_RECYCLE_G		"recycle-centre"
@@ -220,7 +217,6 @@
 #define CST_MONUMENT_5_G        "monument5.csi"
 #define LCT_MONUMENT_5_G        "monument5"
 
-
 #define CST_COALMINE_EMPTY	100
 #define CST_COALMINE_EMPTY_G	"coalmine-empty.csi"
 #define LCT_COALMINE_EMPTY_G	"coalmine-empty"
@@ -296,7 +292,6 @@
 #define CST_FIRE_DONE4_G       "firedone4.csi"
 #define LCT_FIRE_DONE4_G       "firedone4"
 
-
 #define CST_ROAD_LR            130
 #define CST_ROAD_LR_G          "roadlr.csi"
 #define LCT_ROAD_LR_G          "roadlr"
@@ -331,7 +326,6 @@
 #define CST_ROAD_LUDR_G        "roadludr.csi"
 #define LCT_ROAD_LUDR_G        "roadludr"
 
-
 #define CST_OREMINE_5           146
 #define CST_OREMINE_5_G         "oremine5.csi"
 #define LCT_OREMINE_5_G         "oremine5"
@@ -358,7 +352,6 @@
 #define CST_OREMINE_4_G		"oremine4.csi"
 #define LCT_OREMINE_4_G		"oremine4"
 
-
 #define CST_HEALTH		155
 #define CST_HEALTH_G		"health.csi"
 #define LCT_HEALTH_G		"health"
@@ -393,7 +386,6 @@
 #define CST_MILL_6_G            "mill6.csi"
 #define LCT_MILL_6_G            "mill6"
 
-
 #define CST_ROCKET_1		180
 #define CST_ROCKET_1_G          "rocket1.csi"
 #define LCT_ROCKET_1_G          "rocket1"
@@ -459,7 +451,6 @@
 #define CST_WINDMILL_3_W_G      "windmill3w.csi"
 #define LCT_WINDMILL_3_W_G      "windmill3w"
 
-
 #define CST_BLACKSMITH_0          202
 #define CST_BLACKSMITH_0_G        "blacksmith0.csi"
 #define LCT_BLACKSMITH_0_G        "blacksmith0"
@@ -650,7 +641,6 @@
 #define CST_TIP_8_G             "tip8.csi"
 #define LCT_TIP_8_G             "tip8"
 
-
 #define CST_COMMUNE_1           270
 #define CST_COMMUNE_1_G         "commune1.csi"
 #define LCT_COMMUNE_1_G         "commune1"
@@ -694,7 +684,6 @@
 #define CST_COMMUNE_14_G        "commune14.csi"
 #define LCT_COMMUNE_14_G        "commune14"
 
-
 #define CST_INDUSTRY_H_C        290
 #define CST_INDUSTRY_H_C_G      "industryhc.csi"
 #define LCT_INDUSTRY_H_C_G      "industryhc"

Modified: trunk/src/lincity/ldsvguts.cpp
===================================================================
--- trunk/src/lincity/ldsvguts.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/ldsvguts.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -95,8 +95,8 @@
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
  * ---------------------------------------------------------------------- */
-void dump_screen (void);
-int verify_city (char *cname);
+void dump_screen(void);
+int verify_city(char *cname);
 
 /* ---------------------------------------------------------------------- *
  * Private Global Variables
@@ -107,228 +107,216 @@
 /* ---------------------------------------------------------------------- *
  * Public functions
  * ---------------------------------------------------------------------- */
-void
-remove_scene (char *cname)
+void remove_scene(char *cname)
 {
     char *s;
     int l;
-    if ((l = strlen (cname)) < 2)	/* Thanks to Chris J. Kiick */
-	return;
+    if ((l = strlen(cname)) < 2)        /* Thanks to Chris J. Kiick */
+        return;
 
-    if ((s = (char *) malloc (lc_save_dir_len + l + 16)) == 0)
-	malloc_failure ();
-    sprintf (s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
-    remove (s);
-    free (s);
+    if ((s = (char *)malloc(lc_save_dir_len + l + 16)) == 0)
+        malloc_failure();
+    sprintf(s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
+    remove(s);
+    free(s);
 }
 
-void
-save_city_raw (char *cname)
+void save_city_raw(char *cname)
 {
     int x, y, z, q, n, p;
     gzFile ofile = gzopen(cname, "wb");
     if (ofile == NULL) {
-	printf (_("Save file <%s> - "), cname);
-	do_error (_("Can't open save file!"));
+        printf(_("Save file <%s> - "), cname);
+        do_error(_("Can't open save file!"));
     }
     /* save without waterwell are in NG 1.1 format, eg scenario good_time is ver 98 when loaded */
     if (ldsv_version < VERSION_INT)
-    	ldsv_version = VERSION_INT;
+        ldsv_version = VERSION_INT;
 
-    gzprintf (ofile, "%d\n", ldsv_version);
-    q = sizeof (Map_Point_Info);
-    prog_box (_("Saving scene"), 0);
-    check_endian ();
+    gzprintf(ofile, "%d\n", ldsv_version);
+    q = sizeof(Map_Point_Info);
+    prog_box(_("Saving scene"), 0);
+    check_endian();
     for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).population) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).flags) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(unsigned short); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).coal_reserve) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(unsigned short); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).ore_reserve) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_1) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_2) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_3) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_4) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_5) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_6) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		n = *(((unsigned char *) &MP_INFO(x,y).int_7) + z);
-		gzprintf (ofile, "%d\n", n);
-	    }
-	    gzprintf (ofile, "%d\n", (int) MP_POL(x,y));
-	    gzprintf (ofile, "%d\n", (int) MP_TYPE(x,y));
-	}
-	prog_box ("", (90 * x) / WORLD_SIDE_LEN);
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).population) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).flags) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(unsigned short); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).coal_reserve) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(unsigned short); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).ore_reserve) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_1) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_2) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_3) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_4) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_5) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_6) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                n = *(((unsigned char *)&MP_INFO(x, y).int_7) + z);
+                gzprintf(ofile, "%d\n", n);
+            }
+            gzprintf(ofile, "%d\n", (int)MP_POL(x, y));
+            gzprintf(ofile, "%d\n", (int)MP_TYPE(x, y));
+        }
+        prog_box("", (90 * x) / WORLD_SIDE_LEN);
     }
-    check_endian ();		/* we have to put the byte order back. */
+    check_endian();             /* we have to put the byte order back. */
 
-    gzprintf (ofile, "%d\n", main_screen_originx);
-    gzprintf (ofile, "%d\n", main_screen_originy);
-    gzprintf (ofile, "%d\n", total_time);
-    for (x = 0; x < MAX_NUMOF_SUBSTATIONS; x++)
-    {
-	gzprintf (ofile, "%d\n", substationx[x]);
-	gzprintf (ofile, "%d\n", substationy[x]);
+    gzprintf(ofile, "%d\n", main_screen_originx);
+    gzprintf(ofile, "%d\n", main_screen_originy);
+    gzprintf(ofile, "%d\n", total_time);
+    for (x = 0; x < MAX_NUMOF_SUBSTATIONS; x++) {
+        gzprintf(ofile, "%d\n", substationx[x]);
+        gzprintf(ofile, "%d\n", substationy[x]);
     }
-    prog_box ("", 92);
-    gzprintf (ofile, "%d\n", numof_substations);
-    for (x = 0; x < MAX_NUMOF_MARKETS; x++)
-    {
-	gzprintf (ofile, "%d\n", marketx[x]);
-	gzprintf (ofile, "%d\n", markety[x]);
+    prog_box("", 92);
+    gzprintf(ofile, "%d\n", numof_substations);
+    for (x = 0; x < MAX_NUMOF_MARKETS; x++) {
+        gzprintf(ofile, "%d\n", marketx[x]);
+        gzprintf(ofile, "%d\n", markety[x]);
     }
-    prog_box ("", 94);
-    gzprintf (ofile, "%d\n", numof_markets);
-    gzprintf (ofile, "%d\n", people_pool);
-    gzprintf (ofile, "%d\n", total_money);
-    gzprintf (ofile, "%d\n", income_tax_rate);
-    gzprintf (ofile, "%d\n", coal_tax_rate);
-    gzprintf (ofile, "%d\n", dole_rate);
-    gzprintf (ofile, "%d\n", transport_cost_rate);
-    gzprintf (ofile, "%d\n", goods_tax_rate);
-    gzprintf (ofile, "%d\n", export_tax);
-    gzprintf (ofile, "%d\n", export_tax_rate);
-    gzprintf (ofile, "%d\n", import_cost);
-    gzprintf (ofile, "%d\n", import_cost_rate);
-    gzprintf (ofile, "%d\n", tech_level);
-    gzprintf (ofile, "%d\n", tpopulation);
-    gzprintf (ofile, "%d\n", tstarving_population);
-    gzprintf (ofile, "%d\n", tunemployed_population);
-    gzprintf (ofile, "%d\n", 0); /* waste_goods is obsolete */
-    gzprintf (ofile, "%d\n", power_made);
-    gzprintf (ofile, "%d\n", power_used);
-    gzprintf (ofile, "%d\n", coal_made);
-    gzprintf (ofile, "%d\n", coal_used);
-    gzprintf (ofile, "%d\n", goods_made);
-    gzprintf (ofile, "%d\n", goods_used);
-    gzprintf (ofile, "%d\n", ore_made);
-    gzprintf (ofile, "%d\n", ore_used);
-    gzprintf (ofile, "%d\n", 0); /* Removed diff_old_population, version 1.12 */
+    prog_box("", 94);
+    gzprintf(ofile, "%d\n", numof_markets);
+    gzprintf(ofile, "%d\n", people_pool);
+    gzprintf(ofile, "%d\n", total_money);
+    gzprintf(ofile, "%d\n", income_tax_rate);
+    gzprintf(ofile, "%d\n", coal_tax_rate);
+    gzprintf(ofile, "%d\n", dole_rate);
+    gzprintf(ofile, "%d\n", transport_cost_rate);
+    gzprintf(ofile, "%d\n", goods_tax_rate);
+    gzprintf(ofile, "%d\n", export_tax);
+    gzprintf(ofile, "%d\n", export_tax_rate);
+    gzprintf(ofile, "%d\n", import_cost);
+    gzprintf(ofile, "%d\n", import_cost_rate);
+    gzprintf(ofile, "%d\n", tech_level);
+    gzprintf(ofile, "%d\n", tpopulation);
+    gzprintf(ofile, "%d\n", tstarving_population);
+    gzprintf(ofile, "%d\n", tunemployed_population);
+    gzprintf(ofile, "%d\n", 0); /* waste_goods is obsolete */
+    gzprintf(ofile, "%d\n", power_made);
+    gzprintf(ofile, "%d\n", power_used);
+    gzprintf(ofile, "%d\n", coal_made);
+    gzprintf(ofile, "%d\n", coal_used);
+    gzprintf(ofile, "%d\n", goods_made);
+    gzprintf(ofile, "%d\n", goods_used);
+    gzprintf(ofile, "%d\n", ore_made);
+    gzprintf(ofile, "%d\n", ore_used);
+    gzprintf(ofile, "%d\n", 0); /* Removed diff_old_population, version 1.12 */
 
-    prog_box ("", 96);
+    prog_box("", 96);
     /* Changed, version 1.12 */
-    gzprintf (ofile, "%d\n", monthgraph_size);
+    gzprintf(ofile, "%d\n", monthgraph_size);
     for (x = 0; x < monthgraph_size; x++) {
-	gzprintf (ofile, "%d\n", monthgraph_pop[x]);
-	gzprintf (ofile, "%d\n", monthgraph_starve[x]);
-	gzprintf (ofile, "%d\n", monthgraph_nojobs[x]);
-	gzprintf (ofile, "%d\n", monthgraph_ppool[x]);
+        gzprintf(ofile, "%d\n", monthgraph_pop[x]);
+        gzprintf(ofile, "%d\n", monthgraph_starve[x]);
+        gzprintf(ofile, "%d\n", monthgraph_nojobs[x]);
+        gzprintf(ofile, "%d\n", monthgraph_ppool[x]);
     }
-    prog_box ("", 98);
-    gzprintf (ofile, "%d\n", rockets_launched);
-    gzprintf (ofile, "%d\n", rockets_launched_success);
-    gzprintf (ofile, "%d\n", coal_survey_done);
+    prog_box("", 98);
+    gzprintf(ofile, "%d\n", rockets_launched);
+    gzprintf(ofile, "%d\n", rockets_launched_success);
+    gzprintf(ofile, "%d\n", coal_survey_done);
     for (x = 0; x < PBAR_DATA_SIZE; x++)
-	for (p = 0; p < NUM_PBARS; p++)
-	    gzprintf(ofile, "%d\n", pbars[p].data[x]);
+        for (p = 0; p < NUM_PBARS; p++)
+            gzprintf(ofile, "%d\n", pbars[p].data[x]);
 
-    prog_box ("", 99);
+    prog_box("", 99);
 
     for (p = 0; p < NUM_PBARS; p++) {
-	gzprintf(ofile, "%d\n", pbars[p].oldtot);
-	gzprintf(ofile, "%d\n", pbars[p].diff);
+        gzprintf(ofile, "%d\n", pbars[p].oldtot);
+        gzprintf(ofile, "%d\n", pbars[p].diff);
     }
 
-    gzprintf (ofile, "%d\n", cheat_flag);
-    gzprintf (ofile, "%d\n", total_pollution_deaths);
-    gzprintf (ofile, "%f\n", pollution_deaths_history);
-    gzprintf (ofile, "%d\n", total_starve_deaths);
-    gzprintf (ofile, "%f\n", starve_deaths_history);
-    gzprintf (ofile, "%d\n", total_unemployed_years);
-    gzprintf (ofile, "%f\n", unemployed_history);
-    gzprintf (ofile, "%d\n", max_pop_ever);
-    gzprintf (ofile, "%d\n", total_evacuated);
-    gzprintf (ofile, "%d\n", total_births);
+    gzprintf(ofile, "%d\n", cheat_flag);
+    gzprintf(ofile, "%d\n", total_pollution_deaths);
+    gzprintf(ofile, "%f\n", pollution_deaths_history);
+    gzprintf(ofile, "%d\n", total_starve_deaths);
+    gzprintf(ofile, "%f\n", starve_deaths_history);
+    gzprintf(ofile, "%d\n", total_unemployed_years);
+    gzprintf(ofile, "%f\n", unemployed_history);
+    gzprintf(ofile, "%d\n", max_pop_ever);
+    gzprintf(ofile, "%d\n", total_evacuated);
+    gzprintf(ofile, "%d\n", total_births);
     for (x = 0; x < NUMOF_MODULES; x++)
-	gzprintf (ofile, "%d\n", module_help_flag[x]);
-    gzprintf (ofile, "%d\n", 0);	/* dummy values */
+        gzprintf(ofile, "%d\n", module_help_flag[x]);
+    gzprintf(ofile, "%d\n", 0); /* dummy values */
 
-    gzprintf (ofile, "%d\n", 0);	/* backward compatibility */
+    gzprintf(ofile, "%d\n", 0); /* backward compatibility */
 
-    if (strlen (given_scene) > 1)
-	gzprintf (ofile, "%s\n", given_scene);
+    if (strlen(given_scene) > 1)
+        gzprintf(ofile, "%s\n", given_scene);
     else
-	gzprintf (ofile, "dummy\n");	/* 1 */
+        gzprintf(ofile, "dummy\n");     /* 1 */
 
-    gzprintf (ofile, "%d\n", highest_tech_level);	/* 2 */
+    gzprintf(ofile, "%d\n", highest_tech_level);        /* 2 */
 
-    gzprintf (ofile, "sust %d %d %d %d %d %d %d %d %d %d\n"
-	     ,sust_dig_ore_coal_count, sust_port_count
-	     ,sust_old_money_count, sust_old_population_count
-	     ,sust_old_tech_count, sust_fire_count
-	     ,sust_old_money, sust_old_population, sust_old_tech
-	     ,sustain_flag);	/* 3 */
+    gzprintf(ofile, "sust %d %d %d %d %d %d %d %d %d %d\n", sust_dig_ore_coal_count, sust_port_count, sust_old_money_count, sust_old_population_count, sust_old_tech_count, sust_fire_count, sust_old_money, sust_old_population, sust_old_tech, sustain_flag); /* 3 */
 
     if (use_waterwell == true) {
     } else {
-	    gzprintf (ofile, "dummy\n");	/* 4 */
+        gzprintf(ofile, "dummy\n");     /* 4 */
     }
-    gzprintf (ofile, "dummy\n");	/* 5 */
+    gzprintf(ofile, "dummy\n"); /* 5 */
 
-    gzprintf (ofile, "dummy\n");	/* 6 */
+    gzprintf(ofile, "dummy\n"); /* 6 */
 
-    gzprintf (ofile, "dummy\n");	/* 7 */
+    gzprintf(ofile, "dummy\n"); /* 7 */
 
-    gzprintf (ofile, "dummy\n");	/* 8 */
+    gzprintf(ofile, "dummy\n"); /* 8 */
 
-    gzprintf (ofile, "dummy\n");	/* 9 */
+    gzprintf(ofile, "dummy\n"); /* 9 */
 
-    gzprintf (ofile, "dummy\n");	/* 10 */
+    gzprintf(ofile, "dummy\n"); /* 10 */
 
-    gzclose (ofile);
-    prog_box ("", 100);
+    gzclose(ofile);
+    prog_box("", 100);
 }
 
-
-void
-save_city (char *cname)
+void save_city(char *cname)
 {
     char *s;
     int l;
 
-    if ((l = strlen (cname)) < 2)
-	return;
-    if ((s = (char *) malloc (lc_save_dir_len + l + 16)) == 0)
-	malloc_failure ();
+    if ((l = strlen(cname)) < 2)
+        return;
+    if ((s = (char *)malloc(lc_save_dir_len + l + 16)) == 0)
+        malloc_failure();
 
-    sprintf (s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
+    sprintf(s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
 
-    save_city_raw (s);
-    free (s);
+    save_city_raw(s);
+    free(s);
 }
 
-void
-load_city (char *cname)
+void load_city(char *cname)
 {
     unsigned long q;
     int i, x, y, z, n, p;
@@ -337,28 +325,28 @@
     int dummy;
     gzFile gzfile;
     char s[256];
-    gzfile = gzopen( cname, "rb" ); 
-    if ( gzfile == NULL) {
-	    printf (_("Can't open <%s> (gzipped)"), cname);
-	    do_error ("Can't open it!");
+    gzfile = gzopen(cname, "rb");
+    if (gzfile == NULL) {
+        printf(_("Can't open <%s> (gzipped)"), cname);
+        do_error("Can't open it!");
     }
     /* Add version to shared global variables for playing/saving games without waterwell */
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &ldsv_version);
+    sscanf(gzgets(gzfile, s, 256), "%d", &ldsv_version);
     if (ldsv_version < MIN_LOAD_VERSION) {
-	    ok_dial_box ("too-old.mes", BAD, 0L);
-	    gzclose( gzfile );
-	return;
+        ok_dial_box("too-old.mes", BAD, 0L);
+        gzclose(gzfile);
+        return;
     }
 
-    fprintf(stderr," ldsv_version = %i \n", ldsv_version);
+    fprintf(stderr, " ldsv_version = %i \n", ldsv_version);
     if (ldsv_version < MIN_WATERWELL_VERSION) {
-	/* ok_dial_box ("no-waterwell.mes", GOOD, 0L);*/
-	use_waterwell=false;
+        /* ok_dial_box ("no-waterwell.mes", GOOD, 0L); */
+        use_waterwell = false;
     } else {
-    	use_waterwell=true; 
-	/* needed until it is written in the saved file
-	 * in case of load after having played an old game
-	 */
+        use_waterwell = true;
+        /* needed until it is written in the saved file
+         * in case of load after having played an old game
+         */
     }
 
     init_pbars();
@@ -366,258 +354,248 @@
     pbar_data_size = PBAR_DATA_SIZE;
 
     init_inventory();
-    
+
     print_time_for_year();
-    q = (unsigned long) sizeof (Map_Point_Info);
-    prog_box (_("Loading scene"), 0);
+    q = (unsigned long)sizeof(Map_Point_Info);
+    prog_box(_("Loading scene"), 0);
 
     for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).population) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).flags) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(unsigned short); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).coal_reserve) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(unsigned short); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).ore_reserve) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_1) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_2) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_3) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_4) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_5) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_6) + z) = n;
-	    }
-	    for (z = 0; z < sizeof(int); z++) {
-		sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-		*(((unsigned char *) &MP_INFO(x,y).int_7) + z) = n;
-	    }
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-	    MP_POL(x,y) = (unsigned short) n;
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &n);
-	    MP_TYPE(x,y) = (short) n;
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).population) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).flags) + z) = n;
+            }
+            for (z = 0; z < sizeof(unsigned short); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).coal_reserve) + z) = n;
+            }
+            for (z = 0; z < sizeof(unsigned short); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).ore_reserve) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_1) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_2) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_3) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_4) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_5) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_6) + z) = n;
+            }
+            for (z = 0; z < sizeof(int); z++) {
+                sscanf(gzgets(gzfile, s, 256), "%d", &n);
+                *(((unsigned char *)&MP_INFO(x, y).int_7) + z) = n;
+            }
+            sscanf(gzgets(gzfile, s, 256), "%d", &n);
+            MP_POL(x, y) = (unsigned short)n;
+            sscanf(gzgets(gzfile, s, 256), "%d", &n);
+            MP_TYPE(x, y) = (short)n;
 
-	    if (get_group_of_type(MP_TYPE(x,y)) == GROUP_MARKET)
-		inventory(x,y);
-	}
-	if (((93 * x) / WORLD_SIDE_LEN) % 3 == 0)
-	    prog_box ("", (93 * x) / WORLD_SIDE_LEN);
+            if (get_group_of_type(MP_TYPE(x, y)) == GROUP_MARKET)
+                inventory(x, y);
+        }
+        if (((93 * x) / WORLD_SIDE_LEN) % 3 == 0)
+            prog_box("", (93 * x) / WORLD_SIDE_LEN);
     }
-    check_endian ();
-    set_map_groups ();
+    check_endian();
+    set_map_groups();
 
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &main_screen_originx);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &main_screen_originy);
+    sscanf(gzgets(gzfile, s, 256), "%d", &main_screen_originx);
+    sscanf(gzgets(gzfile, s, 256), "%d", &main_screen_originy);
     if (main_screen_originx > WORLD_SIDE_LEN - getMainWindowWidth() / 16 - 1)
-	main_screen_originx = WORLD_SIDE_LEN - getMainWindowWidth() / 16 - 1;
+        main_screen_originx = WORLD_SIDE_LEN - getMainWindowWidth() / 16 - 1;
 
     if (main_screen_originy > WORLD_SIDE_LEN - getMainWindowHeight() / 16 - 1)
-	main_screen_originy = WORLD_SIDE_LEN - getMainWindowHeight() / 16 - 1;
+        main_screen_originy = WORLD_SIDE_LEN - getMainWindowHeight() / 16 - 1;
 
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_time);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_time);
     if (ldsv_version <= MM_MS_C_VER)
-	i = OLD_MAX_NUMOF_SUBSTATIONS;
+        i = OLD_MAX_NUMOF_SUBSTATIONS;
     else
-	i = MAX_NUMOF_SUBSTATIONS;
-    for (x = 0; x < i; x++)
-    {
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &substationx[x]);
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &substationy[x]);
+        i = MAX_NUMOF_SUBSTATIONS;
+    for (x = 0; x < i; x++) {
+        sscanf(gzgets(gzfile, s, 256), "%d", &substationx[x]);
+        sscanf(gzgets(gzfile, s, 256), "%d", &substationy[x]);
     }
-    prog_box ("", 92);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &numof_substations);
+    prog_box("", 92);
+    sscanf(gzgets(gzfile, s, 256), "%d", &numof_substations);
     if (ldsv_version <= MM_MS_C_VER)
-	i = OLD_MAX_NUMOF_MARKETS;
+        i = OLD_MAX_NUMOF_MARKETS;
     else
-	i = MAX_NUMOF_MARKETS;
-    for (x = 0; x < i; x++)
-    {
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &marketx[x]);
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &markety[x]);
+        i = MAX_NUMOF_MARKETS;
+    for (x = 0; x < i; x++) {
+        sscanf(gzgets(gzfile, s, 256), "%d", &marketx[x]);
+        sscanf(gzgets(gzfile, s, 256), "%d", &markety[x]);
     }
-    prog_box ("", 94);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &numof_markets);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &people_pool);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_money);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &income_tax_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &coal_tax_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &dole_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &transport_cost_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &goods_tax_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &export_tax);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &export_tax_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &import_cost);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &import_cost_rate);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &tech_level);
+    prog_box("", 94);
+    sscanf(gzgets(gzfile, s, 256), "%d", &numof_markets);
+    sscanf(gzgets(gzfile, s, 256), "%d", &people_pool);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_money);
+    sscanf(gzgets(gzfile, s, 256), "%d", &income_tax_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &coal_tax_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &dole_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &transport_cost_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &goods_tax_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &export_tax);
+    sscanf(gzgets(gzfile, s, 256), "%d", &export_tax_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &import_cost);
+    sscanf(gzgets(gzfile, s, 256), "%d", &import_cost_rate);
+    sscanf(gzgets(gzfile, s, 256), "%d", &tech_level);
     if (tech_level > MODERN_WINDMILL_TECH)
-	modern_windmill_flag = 1;
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &tpopulation);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &tstarving_population);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &tunemployed_population);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &x);  /* waste_goods obsolete */
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &power_made);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &power_used);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &coal_made);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &coal_used);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &goods_made);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &goods_used);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &ore_made);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &ore_used);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diff_old_population */
+        modern_windmill_flag = 1;
+    sscanf(gzgets(gzfile, s, 256), "%d", &tpopulation);
+    sscanf(gzgets(gzfile, s, 256), "%d", &tstarving_population);
+    sscanf(gzgets(gzfile, s, 256), "%d", &tunemployed_population);
+    sscanf(gzgets(gzfile, s, 256), "%d", &x);   /* waste_goods obsolete */
+    sscanf(gzgets(gzfile, s, 256), "%d", &power_made);
+    sscanf(gzgets(gzfile, s, 256), "%d", &power_used);
+    sscanf(gzgets(gzfile, s, 256), "%d", &coal_made);
+    sscanf(gzgets(gzfile, s, 256), "%d", &coal_used);
+    sscanf(gzgets(gzfile, s, 256), "%d", &goods_made);
+    sscanf(gzgets(gzfile, s, 256), "%d", &goods_used);
+    sscanf(gzgets(gzfile, s, 256), "%d", &ore_made);
+    sscanf(gzgets(gzfile, s, 256), "%d", &ore_used);
+    sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diff_old_population */
 
     /* Update variables calculated from those above */
     housed_population = tpopulation / NUMOF_DAYS_IN_MONTH;
 
-    prog_box ("", 96);
+    prog_box("", 96);
     /* Get size of monthgraph array */
     if (ldsv_version <= MG_C_VER) {
-	i = 120;
+        i = 120;
     } else {
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &i);
+        sscanf(gzgets(gzfile, s, 256), "%d", &i);
     }
     for (x = 0; x < i; x++) {
-	/* If more entries in file than will fit on screen, 
-	   then we need to skip past them. */
-	if (x >= monthgraph_size) {
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &monthgraph_pop[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &monthgraph_starve[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &monthgraph_nojobs[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &monthgraph_ppool[x] */
-	} else {
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &monthgraph_pop[x]);
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &monthgraph_starve[x]);
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &monthgraph_nojobs[x]);
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &monthgraph_ppool[x]);
-	}
-	/* If our save file is old, skip past obsolete diffgraph entries */
-	if (ldsv_version <= MG_C_VER) {
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_power[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_coal[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_goods[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_ore[x] */
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &dummy); /* &diffgraph_population[x] */
-	}
+        /* If more entries in file than will fit on screen, 
+           then we need to skip past them. */
+        if (x >= monthgraph_size) {
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &monthgraph_pop[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &monthgraph_starve[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &monthgraph_nojobs[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &monthgraph_ppool[x] */
+        } else {
+            sscanf(gzgets(gzfile, s, 256), "%d", &monthgraph_pop[x]);
+            sscanf(gzgets(gzfile, s, 256), "%d", &monthgraph_starve[x]);
+            sscanf(gzgets(gzfile, s, 256), "%d", &monthgraph_nojobs[x]);
+            sscanf(gzgets(gzfile, s, 256), "%d", &monthgraph_ppool[x]);
+        }
+        /* If our save file is old, skip past obsolete diffgraph entries */
+        if (ldsv_version <= MG_C_VER) {
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diffgraph_power[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diffgraph_coal[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diffgraph_goods[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diffgraph_ore[x] */
+            sscanf(gzgets(gzfile, s, 256), "%d", &dummy);       /* &diffgraph_population[x] */
+        }
     }
     /* If screen bigger than number of entries in file, pad with zeroes */
     while (x < monthgraph_size) {
-	monthgraph_pop[x] = 0;
-	monthgraph_starve[x] = 0;
-	monthgraph_nojobs[x] = 0;
-	monthgraph_ppool[x] = 0;
-	x++;
+        monthgraph_pop[x] = 0;
+        monthgraph_starve[x] = 0;
+        monthgraph_nojobs[x] = 0;
+        monthgraph_ppool[x] = 0;
+        x++;
     }
-    prog_box ("", 98);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &rockets_launched);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &rockets_launched_success);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &coal_survey_done);
-    
+    prog_box("", 98);
+    sscanf(gzgets(gzfile, s, 256), "%d", &rockets_launched);
+    sscanf(gzgets(gzfile, s, 256), "%d", &rockets_launched_success);
+    sscanf(gzgets(gzfile, s, 256), "%d", &coal_survey_done);
+
     for (x = 0; x < pbar_data_size; x++) {
-	for (p = 0; p < num_pbars; p++) {
-	    sscanf( gzgets( gzfile, s, 256 ), "%d", &(pbar_tmp));
-	    update_pbar(p,pbar_tmp,1);
+        for (p = 0; p < num_pbars; p++) {
+            sscanf(gzgets(gzfile, s, 256), "%d", &(pbar_tmp));
+            update_pbar(p, pbar_tmp, 1);
 /*	    sscanf( gzgets( gzfile, s, 256 ), "%d", &(pbars[p].data[x])); */
-	}
+        }
     }
 
     for (p = 0; p < num_pbars; p++)
-	pbars[p].data_size = pbar_data_size;
+        pbars[p].data_size = pbar_data_size;
 
-    prog_box ("", 99);
+    prog_box("", 99);
 
     for (p = 0; p < num_pbars; p++) {
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &(pbars[p].oldtot));
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &(pbars[p].diff));
+        sscanf(gzgets(gzfile, s, 256), "%d", &(pbars[p].oldtot));
+        sscanf(gzgets(gzfile, s, 256), "%d", &(pbars[p].diff));
     }
 
-
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &cheat_flag);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_pollution_deaths);
-    sscanf( gzgets( gzfile, s, 256 ), "%f", &pollution_deaths_history);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_starve_deaths);
-    sscanf( gzgets( gzfile, s, 256 ), "%f", &starve_deaths_history);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_unemployed_years);
-    sscanf( gzgets( gzfile, s, 256 ), "%f", &unemployed_history);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &max_pop_ever);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_evacuated);
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &total_births);
+    sscanf(gzgets(gzfile, s, 256), "%d", &cheat_flag);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_pollution_deaths);
+    sscanf(gzgets(gzfile, s, 256), "%f", &pollution_deaths_history);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_starve_deaths);
+    sscanf(gzgets(gzfile, s, 256), "%f", &starve_deaths_history);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_unemployed_years);
+    sscanf(gzgets(gzfile, s, 256), "%f", &unemployed_history);
+    sscanf(gzgets(gzfile, s, 256), "%d", &max_pop_ever);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_evacuated);
+    sscanf(gzgets(gzfile, s, 256), "%d", &total_births);
     for (x = 0; x < NUMOF_MODULES; x++)
-	sscanf( gzgets( gzfile, s, 256 ), "%d", &(module_help_flag[x]));
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &x);	/* just dummy reads */
-    sscanf( gzgets( gzfile, s, 256 ), "%d", &x);	/* for backwards compatibility. */
+        sscanf(gzgets(gzfile, s, 256), "%d", &(module_help_flag[x]));
+    sscanf(gzgets(gzfile, s, 256), "%d", &x);   /* just dummy reads */
+    sscanf(gzgets(gzfile, s, 256), "%d", &x);   /* for backwards compatibility. */
 
     /* 10 dummy strings, for missed out things, have been put in save. */
     /* Input from this point uses them. */
     /* XXX: WCK: Huh? Missed out things? */
 
-    sscanf( gzgets( gzfile, s, 256 ), "%128s", given_scene);
-    if (strncmp (given_scene, "dummy", 5) == 0 || strlen (given_scene) < 3)
-	given_scene[0] = 0;
-    sscanf( gzgets( gzfile, s, 256 ), "%128s", s);
-    if (strncmp (given_scene, "dummy", 5) != 0)
-	sscanf (s, "%d", &highest_tech_level);
+    sscanf(gzgets(gzfile, s, 256), "%128s", given_scene);
+    if (strncmp(given_scene, "dummy", 5) == 0 || strlen(given_scene) < 3)
+        given_scene[0] = 0;
+    sscanf(gzgets(gzfile, s, 256), "%128s", s);
+    if (strncmp(given_scene, "dummy", 5) != 0)
+        sscanf(s, "%d", &highest_tech_level);
     else
-	highest_tech_level = 0;
-    gzgets( gzfile, s, 80 );		/* this is the CR */
+        highest_tech_level = 0;
+    gzgets(gzfile, s, 80);      /* this is the CR */
 
-    if (sscanf (s, "sust %d %d %d %d %d %d %d %d %d %d"
-		,&sust_dig_ore_coal_count, &sust_port_count
-		,&sust_old_money_count, &sust_old_population_count
-		,&sust_old_tech_count, &sust_fire_count
-		,&sust_old_money, &sust_old_population, &sust_old_tech
-		,&sustain_flag) == 10)
-    {
-	sust_dig_ore_coal_tip_flag = sust_port_flag = 1;
-	/* GCS FIX: Check after loading file if screen is drawn OK */
-	/* draw_sustainable_window (); */
-    }
-    else
-	sustain_flag = sust_dig_ore_coal_count = sust_port_count
-		= sust_old_money_count = sust_old_population_count
-		= sust_old_tech_count = sust_fire_count
-		= sust_old_money = sust_old_population = sust_old_tech = 0;
+    if (sscanf
+        (s, "sust %d %d %d %d %d %d %d %d %d %d", &sust_dig_ore_coal_count, &sust_port_count, &sust_old_money_count,
+         &sust_old_population_count, &sust_old_tech_count, &sust_fire_count, &sust_old_money, &sust_old_population,
+         &sust_old_tech, &sustain_flag) == 10) {
+        sust_dig_ore_coal_tip_flag = sust_port_flag = 1;
+        /* GCS FIX: Check after loading file if screen is drawn OK */
+        /* draw_sustainable_window (); */
+    } else
+        sustain_flag = sust_dig_ore_coal_count = sust_port_count
+            = sust_old_money_count = sust_old_population_count
+            = sust_old_tech_count = sust_fire_count = sust_old_money = sust_old_population = sust_old_tech = 0;
     if (use_waterwell == true) {
     }
-    gzclose( gzfile );
+    gzclose(gzfile);
 
-    numof_shanties = count_groups (GROUP_SHANTY);
-    numof_communes = count_groups (GROUP_COMMUNE);
-    prog_box ("", 100);
+    numof_shanties = count_groups(GROUP_SHANTY);
+    numof_communes = count_groups(GROUP_COMMUNE);
+    prog_box("", 100);
 
     /* set up the university intake. */
-    x = count_groups (GROUP_UNIVERSITY);
+    x = count_groups(GROUP_UNIVERSITY);
     if (x > 0) {
-	university_intake_rate
-		= (count_groups (GROUP_SCHOOL) * 20) / x;
-	if (university_intake_rate > 100)
-	    university_intake_rate = 100;
-    }
-    else
-	university_intake_rate = 50;
+        university_intake_rate = (count_groups(GROUP_SCHOOL) * 20) / x;
+        if (university_intake_rate > 100)
+            university_intake_rate = 100;
+    } else
+        university_intake_rate = 50;
 
     /*Al1 : What is this ? This does nothing, the value are saved in MP_INFO.int_ 
      * for (x = 0; x < WORLD_SIDE_LEN; x++)
@@ -625,210 +603,194 @@
      *     update_tech_dep (x, y);
      */
 
-    unhighlight_module_button (selected_module);
-    selected_module = sbut[7];	/* 7 is track.  Watch out though! */
-    highlight_module_button (selected_module);
-    set_selected_module (CST_TRACK_LR);
+    unhighlight_module_button(selected_module);
+    selected_module = sbut[7];  /* 7 is track.  Watch out though! */
+    highlight_module_button(selected_module);
+    set_selected_module(CST_TRACK_LR);
 
-    print_total_money ();
-    reset_animation_times ();
+    print_total_money();
+    reset_animation_times();
     /* update tech dep for compatibility with old games */
     for (x = 0; x < WORLD_SIDE_LEN; x++)
-	for (y = 0; y < WORLD_SIDE_LEN; y++) {
-            switch (MP_GROUP(x,y)) {
-            case (GROUP_WINDMILL): 	 
-                MP_INFO(x,y).int_1 = (int)(WINDMILL_POWER 	 
-                        + (((double) MP_INFO(x,y).int_2 * WINDMILL_POWER)
-                                / MAX_TECH_LEVEL));
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            switch (MP_GROUP(x, y)) {
+            case (GROUP_WINDMILL):
+                MP_INFO(x, y).int_1 = (int)(WINDMILL_POWER + (((double)MP_INFO(x, y).int_2 * WINDMILL_POWER)
+                                                              / MAX_TECH_LEVEL));
                 break;
-            case (GROUP_COAL_POWER): 	 
-                MP_INFO(x,y).int_1 = (int)(POWERS_COAL_OUTPUT 	 
-                        + (((double) MP_INFO(x,y).int_4 * POWERS_COAL_OUTPUT) 
-                                / MAX_TECH_LEVEL)); 	 
-                break; 	 
-            case (GROUP_SOLAR_POWER): 	 
-                MP_INFO(x,y).int_1 = (int)(POWERS_SOLAR_OUTPUT 	 
-                        + (((double) MP_INFO(x,y).int_2 * POWERS_SOLAR_OUTPUT) 	 
-                                / MAX_TECH_LEVEL)); 	 
-                break; 	 
+            case (GROUP_COAL_POWER):
+                MP_INFO(x, y).int_1 = (int)(POWERS_COAL_OUTPUT + (((double)MP_INFO(x, y).int_4 * POWERS_COAL_OUTPUT)
+                                                                  / MAX_TECH_LEVEL));
+                break;
+            case (GROUP_SOLAR_POWER):
+                MP_INFO(x, y).int_1 = (int)(POWERS_SOLAR_OUTPUT + (((double)MP_INFO(x, y).int_2 * POWERS_SOLAR_OUTPUT)
+                                                                   / MAX_TECH_LEVEL));
+                break;
             }
-    }
- 
-    map_power_grid(true); /* WCK:  Is this safe to do here?
-                           * AL1: No, in NG_1.1
-                           * In case of error message with ok_dial_box
-                           *    the dialog cannot appear because the screen
-                           *    is not set up => crash.
-                           * FIXME: move all initialisation elsewhere, in 
-                           *    engine.cpp or simulate.cpp.
-                           */
-                                
+        }
+
+    map_power_grid(true);       /* WCK:  Is this safe to do here?
+                                 * AL1: No, in NG_1.1
+                                 * In case of error message with ok_dial_box
+                                 *    the dialog cannot appear because the screen
+                                 *    is not set up => crash.
+                                 * FIXME: move all initialisation elsewhere, in 
+                                 *    engine.cpp or simulate.cpp.
+                                 */
+
 }
 
-void
-load_saved_city (char *s)
+void load_saved_city(char *s)
 {
-    char *cname = (char *) malloc (strlen (lc_save_dir) + strlen (s) + 2);
-    sprintf (cname, "%s%c%s", lc_save_dir, PATH_SLASH, s);
-    load_city (cname);
-    free (cname);
+    char *cname = (char *)malloc(strlen(lc_save_dir) + strlen(s) + 2);
+    sprintf(cname, "%s%c%s", lc_save_dir, PATH_SLASH, s);
+    load_city(cname);
+    free(cname);
 }
 
-void
-reset_animation_times (void)
+void reset_animation_times(void)
 {
     int x, y;
     for (y = 0; y < WORLD_SIDE_LEN; y++)
-	for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	    if (MP_GROUP_IS_RESIDENCE(x,y))
-		MP_INFO(x,y).int_3 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_WINDMILL)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_BLACKSMITH)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_MILL)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_POTTERY)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_CRICKET)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_FIRESTATION)
-		MP_INFO(x,y).int_4 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_FIRE)
-	    {
-		MP_INFO(x,y).int_1 = 0;
-		MP_INFO(x,y).int_3 = 0;
-	    }
-	    else if (MP_GROUP(x,y) == GROUP_COMMUNE)
-		MP_INFO(x,y).int_1 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_ROCKET)
-		MP_INFO(x,y).int_5 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_INDUSTRY_H)
-		MP_INFO(x,y).int_6 = 0;
-	    else if (MP_GROUP(x,y) == GROUP_INDUSTRY_L)
-		MP_INFO(x,y).int_7 = 0;
-	}
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            if (MP_GROUP_IS_RESIDENCE(x, y))
+                MP_INFO(x, y).int_3 = 0;
+            else if (MP_GROUP(x, y) == GROUP_WINDMILL)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_BLACKSMITH)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_MILL)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_POTTERY)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_CRICKET)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_FIRESTATION)
+                MP_INFO(x, y).int_4 = 0;
+            else if (MP_GROUP(x, y) == GROUP_FIRE) {
+                MP_INFO(x, y).int_1 = 0;
+                MP_INFO(x, y).int_3 = 0;
+            } else if (MP_GROUP(x, y) == GROUP_COMMUNE)
+                MP_INFO(x, y).int_1 = 0;
+            else if (MP_GROUP(x, y) == GROUP_ROCKET)
+                MP_INFO(x, y).int_5 = 0;
+            else if (MP_GROUP(x, y) == GROUP_INDUSTRY_H)
+                MP_INFO(x, y).int_6 = 0;
+            else if (MP_GROUP(x, y) == GROUP_INDUSTRY_L)
+                MP_INFO(x, y).int_7 = 0;
+        }
 }
 
-/* Returns 1 if the city is proper version */ /* AL1 unused in NG 1.1 */
-int 
-verify_city (char *cname)
+                                              /* Returns 1 if the city is proper version *//* AL1 unused in NG 1.1 */
+int verify_city(char *cname)
 {
     gzFile fp;
-    char* s;
+    char *s;
     char str[256];
     int v;
 
     if (strlen(cname) == 0) {
-	return 0;
+        return 0;
     }
-    if ((s = (char *) malloc (lc_save_dir_len + strlen(cname) + 2)) == 0)
-	malloc_failure ();
-    sprintf (s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
+    if ((s = (char *)malloc(lc_save_dir_len + strlen(cname) + 2)) == 0)
+        malloc_failure();
+    sprintf(s, "%s%c%s", lc_save_dir, PATH_SLASH, cname);
     if (!file_exists(s)) {
-	free (s);
-	return 0;
+        free(s);
+        return 0;
     }
-    fp = gzopen( s, "r" );
+    fp = gzopen(s, "r");
     if (fp == NULL) {
-	v = 0;
-    } else if (1 != sscanf ( gzgets( fp, str, 256 ) , "%d", &v)) {
-	v = 0;
+        v = 0;
+    } else if (1 != sscanf(gzgets(fp, str, 256), "%d", &v)) {
+        v = 0;
     }
     gzclose(fp);
-    free (s);
+    free(s);
     return v == VERSION_INT;
 }
 
 #ifdef MP_SANITY_CHECK
-void
-sanity_check (void)
+void sanity_check(void)
 {
     static int flag = 0;
     int x, y, xx, yy;
     for (x = 0; x < WORLD_SIDE_LEN; x++)
-	for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	    if (MP_TYPE(x,y) == CST_USED) {
-		xx = MP_INFO(x,y).int_1;
-		yy = MP_INFO(x,y).int_2;
-		if (xx < (x - 4) || yy < (y - 4) || xx > x || yy > y ||
-		    xx < 0 || xx > WORLD_SIDE_LEN ||
-		    yy < 0 || yy > WORLD_SIDE_LEN) {
-		    printf ("Sanity failed at %d %d, points to %d %d\n", x, y, xx, yy);
-		    if (flag == 0)
-			yn_dial_box ("MP sanity check error",
-				     "Please mail  lincity-users at lists.sourceforge.net",
-				     "telling me what you just did.",
-				     "Do you think I'll find this bug?");
-		    flag = 1;
-		}
-	    }
-	}
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            if (MP_TYPE(x, y) == CST_USED) {
+                xx = MP_INFO(x, y).int_1;
+                yy = MP_INFO(x, y).int_2;
+                if (xx < (x - 4) || yy < (y - 4) || xx > x || yy > y ||
+                    xx < 0 || xx > WORLD_SIDE_LEN || yy < 0 || yy > WORLD_SIDE_LEN) {
+                    printf("Sanity failed at %d %d, points to %d %d\n", x, y, xx, yy);
+                    if (flag == 0)
+                        yn_dial_box("MP sanity check error",
+                                    "Please mail  lincity-users at lists.sourceforge.net",
+                                    "telling me what you just did.", "Do you think I'll find this bug?");
+                    flag = 1;
+                }
+            }
+        }
 }
 #endif
 
-
-void
-check_endian (void)
+void check_endian(void)
 {
     static int flag = 0;
     char *cs;
     int t, x, y;
     t = 0;
-    cs = (char *) &t;
+    cs = (char *)&t;
     *cs = 1;
-    if (t == 1)			/* little endian */
-	return;
+    if (t == 1)                 /* little endian */
+        return;
     if (flag == 0) {
-	flag = 1;
+        flag = 1;
     }
     for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	    eswap32 (&(MP_INFO(x,y).population));
-	    eswap32 (&(MP_INFO(x,y).flags));
-	    if (sizeof (short) == 2) {
-		eswap16 (&(MP_INFO(x,y).coal_reserve));
-		eswap16 (&(MP_INFO(x,y).ore_reserve));
-	    } else if (sizeof (short) == 4) {
-		eswap32 ((int *) &(MP_INFO(x,y).coal_reserve));
-		eswap32 ((int *) &(MP_INFO(x,y).ore_reserve));
-	    } else {
-		printf ("Strange size (%d) for short, please mail me.\n",
-			sizeof (short));
-	    }
-	    eswap32 (&(MP_INFO(x,y).int_1));
-	    eswap32 (&(MP_INFO(x,y).int_2));
-	    eswap32 (&(MP_INFO(x,y).int_3));
-	    eswap32 (&(MP_INFO(x,y).int_4));
-	    eswap32 (&(MP_INFO(x,y).int_5));
-	    eswap32 (&(MP_INFO(x,y).int_6));
-	    eswap32 (&(MP_INFO(x,y).int_7));
-	}
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            eswap32(&(MP_INFO(x, y).population));
+            eswap32(&(MP_INFO(x, y).flags));
+            if (sizeof(short) == 2) {
+                eswap16(&(MP_INFO(x, y).coal_reserve));
+                eswap16(&(MP_INFO(x, y).ore_reserve));
+            } else if (sizeof(short) == 4) {
+                eswap32((int *)&(MP_INFO(x, y).coal_reserve));
+                eswap32((int *)&(MP_INFO(x, y).ore_reserve));
+            } else {
+                printf("Strange size (%d) for short, please mail me.\n", sizeof(short));
+            }
+            eswap32(&(MP_INFO(x, y).int_1));
+            eswap32(&(MP_INFO(x, y).int_2));
+            eswap32(&(MP_INFO(x, y).int_3));
+            eswap32(&(MP_INFO(x, y).int_4));
+            eswap32(&(MP_INFO(x, y).int_5));
+            eswap32(&(MP_INFO(x, y).int_6));
+            eswap32(&(MP_INFO(x, y).int_7));
+        }
     }
 }
 
-void
-eswap32 (int *i)
+void eswap32(int *i)
 {
-  char *cs, c1, c2, c3, c4;
-  cs = (char *) i;
-  c1 = *cs;
-  c2 = *(cs + 1);
-  c3 = *(cs + 2);
-  c4 = *(cs + 3);
-  *(cs++) = c4;
-  *(cs++) = c3;
-  *(cs++) = c2;
-  *cs = c1;
+    char *cs, c1, c2, c3, c4;
+    cs = (char *)i;
+    c1 = *cs;
+    c2 = *(cs + 1);
+    c3 = *(cs + 2);
+    c4 = *(cs + 3);
+    *(cs++) = c4;
+    *(cs++) = c3;
+    *(cs++) = c2;
+    *cs = c1;
 }
 
-void
-eswap16 (unsigned short *i)
+void eswap16(unsigned short *i)
 {
-  char *cs, c1, c2;
-  cs = (char *) i;
-  c1 = *cs;
-  c2 = *(cs + 1);
-  *(cs++) = c2;
-  *cs = c1;
+    char *cs, c1, c2;
+    cs = (char *)i;
+    c1 = *cs;
+    c2 = *(cs + 1);
+    *(cs++) = c2;
+    *cs = c1;
 }

Modified: trunk/src/lincity/ldsvguts.h
===================================================================
--- trunk/src/lincity/ldsvguts.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/ldsvguts.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,7 +9,7 @@
 #ifndef __ldsvguts_h__
 #define __ldsvguts_h__
 
-void load_saved_city (char *s);
-void sanity_check (void);
+void load_saved_city(char *s);
+void sanity_check(void);
 
-#endif	/* __ldsvguts_h__ */
+#endif /* __ldsvguts_h__ */

Modified: trunk/src/lincity/lin-city.h
===================================================================
--- trunk/src/lincity/lin-city.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lin-city.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -168,13 +168,13 @@
 #define FLAG_CRICKET_COVER      (0x400000)
 #define FLAG_IS_RIVER           (0x800000)
 #define FLAG_HAD_POWER          (0x1000000)
-#define FLAG_MULTI_TRANSPORT    (0x2000000)   /* Is it a multitransport? */ /* AL1: unused in NG 1.1 */
-#define FLAG_MULTI_TRANS_PREV   (0x4000000)	  /* AL1: unused in NG 1.1 */
+#define FLAG_MULTI_TRANSPORT    (0x2000000)   /* Is it a multitransport? */     /* AL1: unused in NG 1.1 */
+#define FLAG_MULTI_TRANS_PREV   (0x4000000)     /* AL1: unused in NG 1.1 */
 #define FLAG_POWER_LINE         (0x8000000)
 #define FLAG_WATERWELL_COVER    (0x10000000)
 #define FLAG_HAS_UNDERGROUND_WATER (0x20000000)
 #define FLAG_ASKED_FOR_POWER       (0x40000000)
-#define FLAG_GOT_POWER             (0x80000000) /* 2^31 = last flag*/
+#define FLAG_GOT_POWER             (0x80000000) /* 2^31 = last flag */
 
 /* XXX: It would appear that the following T_ are used exactly two times each,
    in market.c.  */
@@ -225,8 +225,8 @@
 #endif
 #define RESULTS_FILENAME "results"
 
-#define MAX_ICON_LEN 4096	/* AL1 unused in NG */
-#define WORLD_SIDE_LEN 100	/* Minimap size is hardcoded 200 pixel => some job to do ...*/
+#define MAX_ICON_LEN 4096       /* AL1 unused in NG */
+#define WORLD_SIDE_LEN 100      /* Minimap size is hardcoded 200 pixel => some job to do ... */
 #define NUMOF_DAYS_IN_MONTH 100
 #define NUMOF_DAYS_IN_YEAR (NUMOF_DAYS_IN_MONTH*12)
 #define FAST_TIME_FOR_YEAR 1
@@ -292,7 +292,6 @@
 #define INDUSTRY_L_POL_PER_GOOD 0.05
 #define INDUSTRY_L_POLLUTION    10
 
-
 #define MAX_ORE_AT_INDUSTRY_H 10000
 #define MAX_COAL_AT_INDUSTRY_H 1000
 #define MAX_MADE_AT_INDUSTRY_H MAX_ORE_AT_INDUSTRY_H/16
@@ -309,7 +308,7 @@
 #define ROAD_POLLUTION          1
 #define DAYS_PER_ROAD_POLLUTION 20
 #define UNNAT_DEATHS_COST       500
-#define POL_DIV                 64	/* GCS -- from engine.c */
+#define POL_DIV                 64      /* GCS -- from engine.c */
 
 #define FINANCE_X 91
 #define FINANCE_W 120
@@ -766,7 +765,7 @@
 #define GROUP_MARKET_FIREC 80
 
 #define GROUP_TRACK	   7
-#define GROUP_TRACK_COLOUR 32	/* 32 is a brown */
+#define GROUP_TRACK_COLOUR 32   /* 32 is a brown */
 #define GROUP_TRACK_COST   1
 #define GROUP_TRACK_COST_MUL 25
 #define GROUP_TRACK_BUL_COST   10
@@ -855,7 +854,7 @@
 #define GROUP_PORT_FIREC 50
 
 #define GROUP_INDUSTRY_H   18
-#define GROUP_INDUSTRY_H_COLOUR (7)	/* colour 7 is an orange, sort of */
+#define GROUP_INDUSTRY_H_COLOUR (7)     /* colour 7 is an orange, sort of */
 #define GROUP_INDUSTRY_H_COST 50000
 #define GROUP_INDUSTRY_H_COST_MUL 20
 #define GROUP_INDUSTRY_H_BUL_COST 70000
@@ -886,7 +885,7 @@
 #define GROUP_WATER_COST_MUL 2
 #define GROUP_WATER_BUL_COST      1000000
 #define GROUP_WATER_TECH      0
-#define GROUP_RIVER (GROUP_WATER)	/* oops -- GCS: Why oops? */
+#define GROUP_RIVER (GROUP_WATER)       /* oops -- GCS: Why oops? */
 #define GROUP_WATER_FIREC 0
 
 #define GROUP_HEALTH       22
@@ -972,18 +971,18 @@
 
 #define GROUP_BURNT        32
 #define GROUP_BURNT_COLOUR    (red(30))
-#define GROUP_BURNT_COST   0        /* Unused */
-#define GROUP_BURNT_COST_MUL   1    /* Unused */
+#define GROUP_BURNT_COST   0    /* Unused */
+#define GROUP_BURNT_COST_MUL   1        /* Unused */
 #define GROUP_BURNT_BUL_COST  1000
-#define GROUP_BURNT_TECH   0        /* Unused */
+#define GROUP_BURNT_TECH   0    /* Unused */
 #define GROUP_BURNT_FIREC  0
 
 #define GROUP_SHANTY        33
 #define GROUP_SHANTY_COLOUR    (red(22))
-#define GROUP_SHANTY_COST   0        /* Unused */
-#define GROUP_SHANTY_COST_MUL   1    /* Unused */
+#define GROUP_SHANTY_COST   0   /* Unused */
+#define GROUP_SHANTY_COST_MUL   1       /* Unused */
 #define GROUP_SHANTY_BUL_COST  100000
-#define GROUP_SHANTY_TECH   0        /* Unused */
+#define GROUP_SHANTY_TECH   0   /* Unused */
 #define GROUP_SHANTY_FIREC     25
 
 #define SHANTY_MIN_PP     150
@@ -998,19 +997,19 @@
 
 #define GROUP_FIRE        34
 #define GROUP_FIRE_COLOUR    (red(30))
-#define GROUP_FIRE_COST   0        /* Unused */
-#define GROUP_FIRE_COST_MUL   1    /* Unused */
+#define GROUP_FIRE_COST   0     /* Unused */
+#define GROUP_FIRE_COST_MUL   1 /* Unused */
 #define GROUP_FIRE_BUL_COST  1000
-#define GROUP_FIRE_TECH   0        /* Unused */
+#define GROUP_FIRE_TECH   0     /* Unused */
 #define GROUP_FIRE_FIREC  0
 
 #define GROUP_USED        35
-#define GROUP_USED_COLOUR (green(12))  /* Unused */
-#define GROUP_USED_COST   0            /* Unused */
-#define GROUP_USED_COST_MUL  1         /* Unused */
-#define GROUP_USED_BUL_COST  0         /* Unused */
-#define GROUP_USED_TECH   0            /* Unused */
-#define GROUP_USED_FIREC  0            /* Unused */
+#define GROUP_USED_COLOUR (green(12))   /* Unused */
+#define GROUP_USED_COST   0     /* Unused */
+#define GROUP_USED_COST_MUL  1  /* Unused */
+#define GROUP_USED_BUL_COST  0  /* Unused */
+#define GROUP_USED_TECH   0     /* Unused */
+#define GROUP_USED_FIREC  0     /* Unused */
 
 #define GROUP_RESIDENCE_ML 36
 #define GROUP_RESIDENCE_ML_COLOUR (cyan(24))
@@ -1033,7 +1032,7 @@
 #define GROUP_RESIDENCE_LH_COST 800
 #define GROUP_RESIDENCE_LH_COST_MUL 25
 #define GROUP_RESIDENCE_LH_BUL_COST 1000
-#define GROUP_RESIDENCE_LH_TECH 0          /* ?? */
+#define GROUP_RESIDENCE_LH_TECH 0       /* ?? */
 #define GROUP_RESIDENCE_LH_FIREC 75
 
 #define GROUP_RESIDENCE_MH 39
@@ -1060,7 +1059,7 @@
 #define GROUP_WATERWELL_TECH      0
 #define GROUP_WATERWELL_FIREC 0
 
-#define GROUP_DESERT 	  42 
+#define GROUP_DESERT 	  42
 #define GROUP_DESERT_COLOUR  (yellow(18))
 #define GROUP_DESERT_COST    0
 #define GROUP_DESERT_COST_MUL 1
@@ -1092,7 +1091,6 @@
 #define GROUP_TREE3_TECH    0
 #define GROUP_TREE3_FIREC   0
 
-
 #define GROUP_IS_TRANSPORT(group) \
             ((group == GROUP_TRACK) || \
              (group == GROUP_ROAD) || \
@@ -1126,197 +1124,191 @@
 #define cyan(x) (192 + x)
 #define white(x) (224 + x)
 
-
-struct map_point_info_struct
-{
-  int population;
-  int flags;
-  unsigned short coal_reserve;
-  unsigned short ore_reserve;
-  int int_1;
-  int int_2;
-  int int_3;
-  int int_4;
-  int int_5;
-  int int_6;
-  int int_7;
+struct map_point_info_struct {
+    int population;
+    int flags;
+    unsigned short coal_reserve;
+    unsigned short ore_reserve;
+    int int_1;
+    int int_2;
+    int int_3;
+    int int_4;
+    int int_5;
+    int int_6;
+    int int_7;
 };
 typedef struct map_point_info_struct Map_Point_Info;
 
-
 /* Set these flags to true when they need to be updated on the screen */
-struct update_scoreboard_struct
-{
-  int mps;
-  int mini;
-  int date;
-  int money;
-  int monthly;
-  int yearly_1;
-  int yearly_2;
-  long int message_area;
+struct update_scoreboard_struct {
+    int mps;
+    int mini;
+    int date;
+    int money;
+    int monthly;
+    int yearly_1;
+    int yearly_2;
+    long int message_area;
 };
 typedef struct update_scoreboard_struct Update_Scoreboard;
 
-
 /*
   main functions
   **************
 */
-extern int lincity_main (int, char **);
-extern void client_main_loop (void);
-extern void do_error (const char *);
-extern void do_save_city (void);
-extern void remove_scene (char *);
-extern void save_city (char *);
-extern void do_load_city (void);
-extern void load_opening_city (char *);
-extern void load_city (char *);
-extern void reset_animation_times (void);
-extern void coal_reserve_setup (void);
-extern void ore_reserve_setup (void);
-extern void setup_river (void);
-extern void setup_river2 (int, int, int);
-extern void check_savedir (void);
-extern void make_savedir (void);
-extern void draw_save_dir (int);
-extern void input_save_filename (char *);
-extern void load_start_image (void);
-extern void start_image_text (void);
-extern void si_scroll_text (void);
-extern char si_next_char (FILE *);
-extern void get_real_time (void);
-extern void debug_writeval (int);
-extern int cheat (void);
-extern void print_cheat (void);
-extern void unprint_cheat (void);
-extern void order_select_buttons (void);
-extern void lincityrc (void);
-extern void check_for_old_save_dir (void);
-extern int count_groups (int);
-extern int compile_results (void);
-extern void print_results (void);
-extern void mail_results (void);
-extern void window_results (void);
-extern void init_path_strings (void);
-extern void lc_usleep (unsigned long);
-extern void dump_tcore (void);
+extern int lincity_main(int, char **);
+extern void client_main_loop(void);
+extern void do_error(const char *);
+extern void do_save_city(void);
+extern void remove_scene(char *);
+extern void save_city(char *);
+extern void do_load_city(void);
+extern void load_opening_city(char *);
+extern void load_city(char *);
+extern void reset_animation_times(void);
+extern void coal_reserve_setup(void);
+extern void ore_reserve_setup(void);
+extern void setup_river(void);
+extern void setup_river2(int, int, int);
+extern void check_savedir(void);
+extern void make_savedir(void);
+extern void draw_save_dir(int);
+extern void input_save_filename(char *);
+extern void load_start_image(void);
+extern void start_image_text(void);
+extern void si_scroll_text(void);
+extern char si_next_char(FILE *);
+extern void get_real_time(void);
+extern void debug_writeval(int);
+extern int cheat(void);
+extern void print_cheat(void);
+extern void unprint_cheat(void);
+extern void order_select_buttons(void);
+extern void lincityrc(void);
+extern void check_for_old_save_dir(void);
+extern int count_groups(int);
+extern int compile_results(void);
+extern void print_results(void);
+extern void mail_results(void);
+extern void window_results(void);
+extern void init_path_strings(void);
+extern void lc_usleep(unsigned long);
+extern void dump_tcore(void);
 #ifndef LC_X11
-extern void parse_args (int, char **);
+extern void parse_args(int, char **);
 #endif
-extern void sustainability_test (void);
-extern int sust_fire_cover (void);
-extern void check_endian (void);
-extern void eswap32 (int *);
-extern void eswap16 (unsigned short *);
-extern void malloc_failure (void);
+extern void sustainability_test(void);
+extern int sust_fire_cover(void);
+extern void check_endian(void);
+extern void eswap32(int *);
+extern void eswap16(unsigned short *);
+extern void malloc_failure(void);
 
 /*
   fileutil
   ********
 */
-void malloc_failure (void);
+void malloc_failure(void);
 //FILE* fopen_read_gzipped (char* fn);
 //void fclose_read_gzipped (FILE* fp);
-void verify_package (void);
+void verify_package(void);
 
 /*
   ldsvgui
   *******
 */
-void load_opening_city (char *s);
-void check_savedir (void);
+void load_opening_city(char *s);
+void check_savedir(void);
 
 /*
   opening
   *******
 */
-void load_start_image (void);
+void load_start_image(void);
 
-
 /*
   type init functions
   *******************
 */
-extern void init_types (void);
-extern void init_type_graphics (void);
-void init_costs (void);
-int get_selected_type_cost (short selected_type);
-extern char *load_graphic (char *);
+extern void init_types(void);
+extern void init_type_graphics(void);
+void init_costs(void);
+int get_selected_type_cost(short selected_type);
+extern char *load_graphic(char *);
 
 /*
   screen functions
   ****************
 */
 #ifdef CS_PROFILE
-extern void FPgl_write (int, int, char *);
-extern void FPgl_getbox (int, int, int, int, void *);
-extern void FPgl_putbox (int, int, int, int, void *);
-extern void FPgl_fillbox (int, int, int, int, int);
-extern void FPgl_hline (int, int, int, int);
-extern void FPgl_line (int, int, int, int, int);
-extern void FPgl_setpixel (int, int, int);
+extern void FPgl_write(int, int, char *);
+extern void FPgl_getbox(int, int, int, int, void *);
+extern void FPgl_putbox(int, int, int, int, void *);
+extern void FPgl_fillbox(int, int, int, int, int);
+extern void FPgl_hline(int, int, int, int);
+extern void FPgl_line(int, int, int, int, int);
+extern void FPgl_setpixel(int, int, int);
 #endif
-extern void check_power_line_graphics (void);
-extern void check_water_graphics (void);
-extern void check_track_graphics (void);
-extern void check_rail_graphics (void);
-extern void check_road_graphics (void);
-extern int select_power_line_type (int, int, int, int);
-extern int select_water_type (int, int, int, int);
-extern int select_track_type (int, int, int, int);
-extern int select_rail_type (int, int, int, int);
-extern int select_road_type (int, int, int, int);
-extern void update_select_buttons (void);
-extern void draw_main_window_box (int);
-extern void draw_select_button_graphic (int, char *);
-extern void setcustompalette (void);
-extern void clip_main_window (void);
-extern void unclip_main_window (void);
-extern void initfont (void);
-extern void load_scroll_buttons (void);
-extern void draw_scroll_buttons (void);
-extern void update_mini_screen (void);
-extern void draw_mini_screen (void);
-extern void draw_big_mini_screen (void);
-extern void draw_mini_screen_pollution (void);
-extern void draw_mini_screen_fire_cover (void);
-extern void draw_mini_screen_cricket_cover (void);
-extern void draw_mini_screen_health_cover (void);
-extern void draw_mini_screen_ub40 (void);
-extern void draw_mini_screen_starve (void);
-extern void draw_mini_screen_coal (void);
-extern void draw_mini_screen_power (void);
-extern void draw_mini_screen_ocost (void);
-extern void draw_mini_screen_port (void);
-extern void draw_mini_screen_cursor (void);
-extern void print_stats (void);
-extern void print_total_money (void);
-int ask_launch_rocket_now (int x, int y);
-void print_date (void);
-extern void draw_market_cb (void);
-extern void clicked_market_cb (int, int);
-extern void close_market_cb (void);
-extern void draw_port_cb (void);
-extern void clicked_port_cb (int, int);
-extern void close_port_cb (void);
-extern int yn_dial_box (const char *, const char *, const char *, const char *);
-extern void ok_dial_box (const char *, int, const char *);
-extern int inv_sbut (int);
-extern void call_select_change_up (int);
-extern void beg_space_pad (const char *, int);
-extern void draw_up_pbar (int, int, int, int);
-extern void draw_down_pbar (int, int, int, int);
-extern void do_pbar_population (int);
-extern void do_pbar_tech (int);
-extern void do_pbar_food (int);
-extern void do_pbar_jobs (int);
-extern void do_pbar_coal (int);
-extern void do_pbar_goods (int);
-extern void do_pbar_ore (int);
-extern void do_pbar_steel (int);
-extern void do_pbar_money (int);
-extern void prog_box (const char *, int);
+extern void check_power_line_graphics(void);
+extern void check_water_graphics(void);
+extern void check_track_graphics(void);
+extern void check_rail_graphics(void);
+extern void check_road_graphics(void);
+extern int select_power_line_type(int, int, int, int);
+extern int select_water_type(int, int, int, int);
+extern int select_track_type(int, int, int, int);
+extern int select_rail_type(int, int, int, int);
+extern int select_road_type(int, int, int, int);
+extern void update_select_buttons(void);
+extern void draw_main_window_box(int);
+extern void draw_select_button_graphic(int, char *);
+extern void setcustompalette(void);
+extern void clip_main_window(void);
+extern void unclip_main_window(void);
+extern void initfont(void);
+extern void load_scroll_buttons(void);
+extern void draw_scroll_buttons(void);
+extern void update_mini_screen(void);
+extern void draw_mini_screen(void);
+extern void draw_big_mini_screen(void);
+extern void draw_mini_screen_pollution(void);
+extern void draw_mini_screen_fire_cover(void);
+extern void draw_mini_screen_cricket_cover(void);
+extern void draw_mini_screen_health_cover(void);
+extern void draw_mini_screen_ub40(void);
+extern void draw_mini_screen_starve(void);
+extern void draw_mini_screen_coal(void);
+extern void draw_mini_screen_power(void);
+extern void draw_mini_screen_ocost(void);
+extern void draw_mini_screen_port(void);
+extern void draw_mini_screen_cursor(void);
+extern void print_stats(void);
+extern void print_total_money(void);
+int ask_launch_rocket_now(int x, int y);
+void print_date(void);
+extern void draw_market_cb(void);
+extern void clicked_market_cb(int, int);
+extern void close_market_cb(void);
+extern void draw_port_cb(void);
+extern void clicked_port_cb(int, int);
+extern void close_port_cb(void);
+extern int yn_dial_box(const char *, const char *, const char *, const char *);
+extern void ok_dial_box(const char *, int, const char *);
+extern int inv_sbut(int);
+extern void call_select_change_up(int);
+extern void beg_space_pad(const char *, int);
+extern void draw_up_pbar(int, int, int, int);
+extern void draw_down_pbar(int, int, int, int);
+extern void do_pbar_population(int);
+extern void do_pbar_tech(int);
+extern void do_pbar_food(int);
+extern void do_pbar_jobs(int);
+extern void do_pbar_coal(int);
+extern void do_pbar_goods(int);
+extern void do_pbar_ore(int);
+extern void do_pbar_steel(int);
+extern void do_pbar_money(int);
+extern void prog_box(const char *, int);
 /*
   mouse functions -- are now in mouse.h, where they should be!
   ***************
@@ -1326,134 +1318,134 @@
   engine functions
   ****************
 */
-void initialize_tax_rates (void);
-void set_mappoint (int x, int y, short selected_type);
-void set_mappoint_used (int, int, int, int);
-int no_credit_build (int selected_type);
-void set_mappoint_ints (int fromx, int fromy, int x, int y);
-void new_city (int* originx, int* originy, int random_village);
-extern void engine_do_time_step (void);
-extern void do_residence (int, int);
-extern void debug_print (int);
-extern void do_power_source (int, int);
-extern void do_power_source_coal (int, int);
-extern void do_industry_l (int, int);
-extern void do_industry_h (int, int);
-extern void do_power_substation (int, int);
-extern int get_power (int, int, int, int);
-extern int add_a_substation (int, int);
-extern void remove_a_substation (int, int);
-extern void do_organic_farm (int, int);
-void init_mappoint_array (void);
-extern void shuffle_mappoint_array (void);
-extern void shuffle_substations (void);
-extern void do_coalmine (int, int);
-extern void do_oremine (int, int);
-extern void do_commune (int, int);
-extern void do_port (int, int);
+void initialize_tax_rates(void);
+void set_mappoint(int x, int y, short selected_type);
+void set_mappoint_used(int, int, int, int);
+int no_credit_build(int selected_type);
+void set_mappoint_ints(int fromx, int fromy, int x, int y);
+void new_city(int *originx, int *originy, int random_village);
+extern void engine_do_time_step(void);
+extern void do_residence(int, int);
+extern void debug_print(int);
+extern void do_power_source(int, int);
+extern void do_power_source_coal(int, int);
+extern void do_industry_l(int, int);
+extern void do_industry_h(int, int);
+extern void do_power_substation(int, int);
+extern int get_power(int, int, int, int);
+extern int add_a_substation(int, int);
+extern void remove_a_substation(int, int);
+extern void do_organic_farm(int, int);
+void init_mappoint_array(void);
+extern void shuffle_mappoint_array(void);
+extern void shuffle_substations(void);
+extern void do_coalmine(int, int);
+extern void do_oremine(int, int);
+extern void do_commune(int, int);
+extern void do_port(int, int);
 
-extern void do_pollution (void);
-extern void do_parkland (int, int);
-extern void do_university (int, int);
-extern void do_recycle (int, int);
-extern void do_health_centre (int, int);
-extern void do_rocket_pad (int, int);
-extern void launch_rocket (int x, int y);
-extern void do_windmill (int, int);
-extern void do_monument (int, int);
-extern void do_school (int, int);
-extern void do_blacksmith (int, int);
-extern void do_mill (int, int);
-extern void do_pottery (int, int);
-extern void do_firestation (int, int);
-extern void do_cricket (int, int);
-extern void clear_fire_health_and_cricket_cover (void);
-extern void do_fire_health_and_cricket_cover (void);
-extern void do_fire_cover (int, int);
-extern void do_health_cover (int, int);
-extern void do_cricket_cover (int, int);
-extern void do_random_fire (int, int, int);
-extern void do_fire (int, int);
-extern int spiral_find_group (int, int, int);
-extern int spiral_find_2x2 (int, int);
-extern void add_a_shanty (void);
-extern void remove_a_shanty (int, int);
-extern void update_shanty (void);
-extern void do_shanty (int, int);
-extern void do_tip (int, int);
-extern void update_tech_dep (int, int);
-extern void do_waterwell_cover (int, int);
+extern void do_pollution(void);
+extern void do_parkland(int, int);
+extern void do_university(int, int);
+extern void do_recycle(int, int);
+extern void do_health_centre(int, int);
+extern void do_rocket_pad(int, int);
+extern void launch_rocket(int x, int y);
+extern void do_windmill(int, int);
+extern void do_monument(int, int);
+extern void do_school(int, int);
+extern void do_blacksmith(int, int);
+extern void do_mill(int, int);
+extern void do_pottery(int, int);
+extern void do_firestation(int, int);
+extern void do_cricket(int, int);
+extern void clear_fire_health_and_cricket_cover(void);
+extern void do_fire_health_and_cricket_cover(void);
+extern void do_fire_cover(int, int);
+extern void do_health_cover(int, int);
+extern void do_cricket_cover(int, int);
+extern void do_random_fire(int, int, int);
+extern void do_fire(int, int);
+extern int spiral_find_group(int, int, int);
+extern int spiral_find_2x2(int, int);
+extern void add_a_shanty(void);
+extern void remove_a_shanty(int, int);
+extern void update_shanty(void);
+extern void do_shanty(int, int);
+extern void do_tip(int, int);
+extern void update_tech_dep(int, int);
+extern void do_waterwell_cover(int, int);
 /*
    transport functions
    *******************
 */
-void connect_transport (int originx, int originy, int w, int h);
-extern void do_power_line (int, int);
-extern void do_track (int, int);
-extern void do_rail (int, int);
-extern void do_road (int, int);
-extern void general_transport (Map_Point_Info *, int *, int, int *);
+void connect_transport(int originx, int originy, int w, int h);
+extern void do_power_line(int, int);
+extern void do_track(int, int);
+extern void do_rail(int, int);
+extern void do_road(int, int);
+extern void general_transport(Map_Point_Info *, int *, int, int *);
 
 /*
    market functions
    ****************
 */
-extern int get_food (int, int, int);
-extern int put_food (int, int, int);
-extern int get_jobs (int, int, int);
-extern int put_jobs (int, int, int);
-extern int get_goods (int, int, int);
-extern int put_goods (int, int, int);
-extern int get_ore (int, int, int);
-extern int put_ore (int, int, int);
-extern int get_coal (int, int, int);
-extern int put_coal (int, int, int);
-extern int add_a_market (int, int);
-extern void remove_a_market (int, int);
-extern void do_market (int, int);
-extern void shuffle_markets (void);
-extern int deal_with_transport (int, int, int, int);
-extern int get_steel (int, int, int);
-extern int put_steel (int, int, int);
-extern int get_waste (int, int, int);
-extern int put_waste (int, int, int);
-extern int get_stuff (int, int, int, int);
-extern int get_stuff2 (Map_Point_Info *, int, int);
-extern int get_stuff3 (Map_Point_Info *, int, int);
-extern int get_stuff4 (Map_Point_Info *, int, int);
-extern int put_stuff (int, int, int, int);
-extern int put_stuff2 (Map_Point_Info *, short *, int, int);
-extern int put_stuff3 (Map_Point_Info *, short *, int, int);
-extern int put_stuff4 (Map_Point_Info *, short *, int, int);
+extern int get_food(int, int, int);
+extern int put_food(int, int, int);
+extern int get_jobs(int, int, int);
+extern int put_jobs(int, int, int);
+extern int get_goods(int, int, int);
+extern int put_goods(int, int, int);
+extern int get_ore(int, int, int);
+extern int put_ore(int, int, int);
+extern int get_coal(int, int, int);
+extern int put_coal(int, int, int);
+extern int add_a_market(int, int);
+extern void remove_a_market(int, int);
+extern void do_market(int, int);
+extern void shuffle_markets(void);
+extern int deal_with_transport(int, int, int, int);
+extern int get_steel(int, int, int);
+extern int put_steel(int, int, int);
+extern int get_waste(int, int, int);
+extern int put_waste(int, int, int);
+extern int get_stuff(int, int, int, int);
+extern int get_stuff2(Map_Point_Info *, int, int);
+extern int get_stuff3(Map_Point_Info *, int, int);
+extern int get_stuff4(Map_Point_Info *, int, int);
+extern int put_stuff(int, int, int, int);
+extern int put_stuff2(Map_Point_Info *, short *, int, int);
+extern int put_stuff3(Map_Point_Info *, short *, int, int);
+extern int put_stuff4(Map_Point_Info *, short *, int, int);
 
 #if defined SDL
 #warning "SDL defined"
 #include <SDL/SDL.h>
 
-extern void sdl_gl_write (int, int, char *);
-extern void sdl_gl_getbox (int, int, int, int, void *);
-extern void sdl_gl_putbox (int, int, int, int, void *);
-extern void sdl_gl_fillbox (int, int, int, int, Uint32 col);
+extern void sdl_gl_write(int, int, char *);
+extern void sdl_gl_getbox(int, int, int, int, void *);
+extern void sdl_gl_putbox(int, int, int, int, void *);
+extern void sdl_gl_fillbox(int, int, int, int, Uint32 col);
 
-extern void sdl_gl_hline (int x1, int y1, int x2, Uint32 col);
-extern void sdl_gl_vline (int x1, int y1, int y2, Uint32 col);
-extern void sdl_gl_line (int x1, int y1, int x2, int y2, Uint32 col);
+extern void sdl_gl_hline(int x1, int y1, int x2, Uint32 col);
+extern void sdl_gl_vline(int x1, int y1, int y2, Uint32 col);
+extern void sdl_gl_line(int x1, int y1, int x2, int y2, Uint32 col);
 
-extern void sdl_gl_setpixel (int x, int y, Uint32 col);
-extern void sdl_gl_setfontcolors (Uint32 bg, Uint32 fg);
-extern void sdl_gl_setfont (int, int, void *);
-extern void sdl_gl_enableclipping (void);
-extern void sdl_gl_setclippingwindow (int, int, int, int);
-extern void sdl_gl_disableclipping (void);
+extern void sdl_gl_setpixel(int x, int y, Uint32 col);
+extern void sdl_gl_setfontcolors(Uint32 bg, Uint32 fg);
+extern void sdl_gl_setfont(int, int, void *);
+extern void sdl_gl_enableclipping(void);
+extern void sdl_gl_setclippingwindow(int, int, int, int);
+extern void sdl_gl_disableclipping(void);
 
-extern void sdl_blit (int x, int y, int w, int h, SDL_Surface *);
+extern void sdl_blit(int x, int y, int w, int h, SDL_Surface *);
 
 /* Wait for a key or some other event */
-extern int sdl_wait_for_key (void);
-extern int sdl_update_wait_for_key (void);
+extern int sdl_wait_for_key(void);
+extern int sdl_update_wait_for_key(void);
 
-extern int sdl_check_key (void);
-extern int sdl_update_check_key (void);
+extern int sdl_check_key(void);
+extern int sdl_update_check_key(void);
 
 #define sdl_map_rgb(r,g,b) SDL_MapRGB(display.surface->format, r, g, b)
 
@@ -1461,7 +1453,7 @@
 
 #define sdl_flip() SDL_Flip(display.surface)
 
-extern void sdl_clear (Uint32 col);
+extern void sdl_clear(Uint32 col);
 
 #define Fgl_write(a,b,c) sdl_gl_write(a,b,c)
 #define Fgl_getbox(a,b,c,d,e) sdl_gl_getbox(a,b,c,d,e)
@@ -1476,50 +1468,48 @@
 #define Fgl_setclippingwindow(a,b,c,d) sdl_gl_setclippingwindow(a,b,c,d)
 #define Fgl_disableclipping() sdl_gl_disableclipping()
 
-
-
 #elif defined LC_X11
 /* ----- X11 functions ----- */
-extern void Fgl_write (int, int, const char *);
-extern void open_write (int, int, const char *);
-extern void Fgl_getbox (int, int, int, int, void *);
-extern void Fgl_putbox (int, int, int, int, void *);
-extern void Fgl_fillbox (int, int, int, int, int);
-extern void Fgl_hline (int, int, int, int);
-extern void Fgl_line (int, int, int, int, int);
-extern void Fgl_setpixel (int, int, int);
-extern void Fgl_setfontcolors (int, int);
-extern void Fgl_setfont (int, int, void*);
-extern void Fgl_enableclipping (void);
-extern void Fgl_setclippingwindow (int, int, int, int);
-extern void Fgl_disableclipping (void);
+extern void Fgl_write(int, int, const char *);
+extern void open_write(int, int, const char *);
+extern void Fgl_getbox(int, int, int, int, void *);
+extern void Fgl_putbox(int, int, int, int, void *);
+extern void Fgl_fillbox(int, int, int, int, int);
+extern void Fgl_hline(int, int, int, int);
+extern void Fgl_line(int, int, int, int, int);
+extern void Fgl_setpixel(int, int, int);
+extern void Fgl_setfontcolors(int, int);
+extern void Fgl_setfont(int, int, void *);
+extern void Fgl_enableclipping(void);
+extern void Fgl_setclippingwindow(int, int, int, int);
+extern void Fgl_disableclipping(void);
 #ifdef USE_X11_PIXMAPS
 #define USE_PIXMAPS
-extern void init_pixmaps (void);
-extern void init_icon_pixmap (short);
-extern void update_pixmap (int, int, int, int, int, int, int, char *);
+extern void init_pixmaps(void);
+extern void init_icon_pixmap(short);
+extern void update_pixmap(int, int, int, int, int, int, int, char *);
 #endif
 
 #elif defined (WIN32)
 /* ----- Win32 functions ----- */
-extern void gl_setpalettecolor (long, long, long, long);
-extern void Fgl_write (int, int, const char *);
-extern void open_write (int, int, const char *);
-extern void Fgl_getbox (int, int, int, int, void *);
-extern void Fgl_putbox (int, int, int, int, void *);
-extern void Fgl_fillbox (int, int, int, int, int);
-extern void Fgl_hline (int, int, int, int);
-extern void Fgl_line (int, int, int, int, int);
-extern void Fgl_setpixel (int, int, int);
-extern void Fgl_setfontcolors (int, int);
-extern void Fgl_setfont (int, int, void*);
-extern void Fgl_enableclipping (void);
-extern void Fgl_setclippingwindow (int, int, int, int);
-extern void Fgl_disableclipping (void);
-#define USE_PIXMAPS		/* Always */
-extern void init_pixmaps (void);
-extern void init_icon_pixmap (short);
-extern void update_pixmap (int, int, int, int, int, int, int, char *);
+extern void gl_setpalettecolor(long, long, long, long);
+extern void Fgl_write(int, int, const char *);
+extern void open_write(int, int, const char *);
+extern void Fgl_getbox(int, int, int, int, void *);
+extern void Fgl_putbox(int, int, int, int, void *);
+extern void Fgl_fillbox(int, int, int, int, int);
+extern void Fgl_hline(int, int, int, int);
+extern void Fgl_line(int, int, int, int, int);
+extern void Fgl_setpixel(int, int, int);
+extern void Fgl_setfontcolors(int, int);
+extern void Fgl_setfont(int, int, void *);
+extern void Fgl_enableclipping(void);
+extern void Fgl_setclippingwindow(int, int, int, int);
+extern void Fgl_disableclipping(void);
+#define USE_PIXMAPS             /* Always */
+extern void init_pixmaps(void);
+extern void init_icon_pixmap(short);
+extern void update_pixmap(int, int, int, int, int, int, int, char *);
 
 #else
 /* ----- SVGALIB functions ----- */

Modified: trunk/src/lincity/lintypes.cpp
===================================================================
--- trunk/src/lincity/lintypes.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lintypes.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -3,7 +3,7 @@
  * This file is part of lincity.
  * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
  * ---------------------------------------------------------------------- */
-#include <string.h> /* XXX: portability issue?  for strcpy */
+#include <string.h>             /* XXX: portability issue?  for strcpy */
 #include "lcconfig.h"
 #include "lin-city.h"
 #include "engglobs.h"
@@ -16,1574 +16,1413 @@
 
 struct TYPE main_types[NUM_OF_TYPES];
 
-struct GROUP main_groups[NUM_OF_GROUPS] =
-{
+struct GROUP main_groups[NUM_OF_GROUPS] = {
     /* 0 */
-    { N_("Empty"),       /* name */
-      FALSE,            /* need credit? */
-      GROUP_BARE,       /* group number */
-      1,                /* size */
-      (green(12)),      /* color */
-      1,                /* cost multiplier */
-      1,                /* bulldoze cost */
-      0,                /* probability of fire */
-      0,                /* cost */
-      0                 /* tech */
-    },
+    {N_("Empty"),               /* name */
+     FALSE,                     /* need credit? */
+     GROUP_BARE,                /* group number */
+     1,                         /* size */
+     (green(12)),               /* color */
+     1,                         /* cost multiplier */
+     1,                         /* bulldoze cost */
+     0,                         /* probability of fire */
+     0,                         /* cost */
+     0                          /* tech */
+     },
     /* 1 */
-    { N_("Power line"),
-      FALSE,                           /* need credit? */
-      GROUP_POWER_LINE,
-      1,                               /* size */
-      GROUP_POWER_LINE_COLOUR,
-      GROUP_POWER_LINE_COST_MUL,
-      GROUP_POWER_LINE_BUL_COST,
-      GROUP_POWER_LINE_FIREC,
-      GROUP_POWER_LINE_COST,
-      GROUP_POWER_LINE_TECH
-    },
+    {N_("Power line"),
+     FALSE,                     /* need credit? */
+     GROUP_POWER_LINE,
+     1,                         /* size */
+     GROUP_POWER_LINE_COLOUR,
+     GROUP_POWER_LINE_COST_MUL,
+     GROUP_POWER_LINE_BUL_COST,
+     GROUP_POWER_LINE_FIREC,
+     GROUP_POWER_LINE_COST,
+     GROUP_POWER_LINE_TECH},
     /* 2 */
-    { N_("Solar PS"),
-      TRUE,                            /* need credit? */
-      GROUP_SOLAR_POWER,
-      4,                               /* size */
-      GROUP_SOLAR_POWER_COLOUR,
-      GROUP_SOLAR_POWER_COST_MUL,
-      GROUP_SOLAR_POWER_BUL_COST,
-      GROUP_SOLAR_POWER_FIREC,
-      GROUP_SOLAR_POWER_COST,
-      GROUP_SOLAR_POWER_TECH
-    },
+    {N_("Solar PS"),
+     TRUE,                      /* need credit? */
+     GROUP_SOLAR_POWER,
+     4,                         /* size */
+     GROUP_SOLAR_POWER_COLOUR,
+     GROUP_SOLAR_POWER_COST_MUL,
+     GROUP_SOLAR_POWER_BUL_COST,
+     GROUP_SOLAR_POWER_FIREC,
+     GROUP_SOLAR_POWER_COST,
+     GROUP_SOLAR_POWER_TECH},
     /* 3 */
-    { N_("Substation"),
-      FALSE,                           /* need credit? */
-      GROUP_SUBSTATION,
-      2,                               /* size */
-      GROUP_SUBSTATION_COLOUR,
-      GROUP_SUBSTATION_COST_MUL,
-      GROUP_SUBSTATION_BUL_COST,
-      GROUP_SUBSTATION_FIREC,
-      GROUP_SUBSTATION_COST,
-      GROUP_SUBSTATION_TECH
-    },
+    {N_("Substation"),
+     FALSE,                     /* need credit? */
+     GROUP_SUBSTATION,
+     2,                         /* size */
+     GROUP_SUBSTATION_COLOUR,
+     GROUP_SUBSTATION_COST_MUL,
+     GROUP_SUBSTATION_BUL_COST,
+     GROUP_SUBSTATION_FIREC,
+     GROUP_SUBSTATION_COST,
+     GROUP_SUBSTATION_TECH},
     /* 4 */
-    { N_("Residential LL"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_LL,
-      3,                               /* size */
-      GROUP_RESIDENCE_LL_COLOUR,
-      GROUP_RESIDENCE_LL_COST_MUL,
-      GROUP_RESIDENCE_LL_BUL_COST,
-      GROUP_RESIDENCE_LL_FIREC,
-      GROUP_RESIDENCE_LL_COST,
-      GROUP_RESIDENCE_LL_TECH
-    },
+    {N_("Residential LL"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_LL,
+     3,                         /* size */
+     GROUP_RESIDENCE_LL_COLOUR,
+     GROUP_RESIDENCE_LL_COST_MUL,
+     GROUP_RESIDENCE_LL_BUL_COST,
+     GROUP_RESIDENCE_LL_FIREC,
+     GROUP_RESIDENCE_LL_COST,
+     GROUP_RESIDENCE_LL_TECH},
     /* 5 */
-    { N_("Farm"),
-      FALSE,                           /* need credit? */
-      GROUP_ORGANIC_FARM,
-      4,                               /* size */
-      GROUP_ORGANIC_FARM_COLOUR,
-      GROUP_ORGANIC_FARM_COST_MUL,
-      GROUP_ORGANIC_FARM_BUL_COST,
-      GROUP_ORGANIC_FARM_FIREC,
-      GROUP_ORGANIC_FARM_COST,
-      GROUP_ORGANIC_FARM_TECH
-    },
+    {N_("Farm"),
+     FALSE,                     /* need credit? */
+     GROUP_ORGANIC_FARM,
+     4,                         /* size */
+     GROUP_ORGANIC_FARM_COLOUR,
+     GROUP_ORGANIC_FARM_COST_MUL,
+     GROUP_ORGANIC_FARM_BUL_COST,
+     GROUP_ORGANIC_FARM_FIREC,
+     GROUP_ORGANIC_FARM_COST,
+     GROUP_ORGANIC_FARM_TECH},
     /* 6 */
-    { N_("Market"),
-      FALSE,                           /* need credit? */
-      GROUP_MARKET,
-      2,                               /* size */
-      GROUP_MARKET_COLOUR,
-      GROUP_MARKET_COST_MUL,
-      GROUP_MARKET_BUL_COST,
-      GROUP_MARKET_FIREC,
-      GROUP_MARKET_COST,
-      GROUP_MARKET_TECH
-    },
+    {N_("Market"),
+     FALSE,                     /* need credit? */
+     GROUP_MARKET,
+     2,                         /* size */
+     GROUP_MARKET_COLOUR,
+     GROUP_MARKET_COST_MUL,
+     GROUP_MARKET_BUL_COST,
+     GROUP_MARKET_FIREC,
+     GROUP_MARKET_COST,
+     GROUP_MARKET_TECH},
     /* 7 */
-    { N_("Track"),
-      FALSE,                           /* need credit? */
-      GROUP_TRACK,
-      1,                               /* size */
-      GROUP_TRACK_COLOUR,
-      GROUP_TRACK_COST_MUL,
-      GROUP_TRACK_BUL_COST,
-      GROUP_TRACK_FIREC,
-      GROUP_TRACK_COST,
-      GROUP_TRACK_TECH
-    },
+    {N_("Track"),
+     FALSE,                     /* need credit? */
+     GROUP_TRACK,
+     1,                         /* size */
+     GROUP_TRACK_COLOUR,
+     GROUP_TRACK_COST_MUL,
+     GROUP_TRACK_BUL_COST,
+     GROUP_TRACK_FIREC,
+     GROUP_TRACK_COST,
+     GROUP_TRACK_TECH},
     /* 8 */
-    { N_("Coalmine"),
-      FALSE,                           /* need credit? */
-      GROUP_COALMINE,
-      4,                               /* size */
-      GROUP_COALMINE_COLOUR,
-      GROUP_COALMINE_COST_MUL,
-      GROUP_COALMINE_BUL_COST,
-      GROUP_COALMINE_FIREC,
-      GROUP_COALMINE_COST,
-      GROUP_COALMINE_TECH
-    },
+    {N_("Coalmine"),
+     FALSE,                     /* need credit? */
+     GROUP_COALMINE,
+     4,                         /* size */
+     GROUP_COALMINE_COLOUR,
+     GROUP_COALMINE_COST_MUL,
+     GROUP_COALMINE_BUL_COST,
+     GROUP_COALMINE_FIREC,
+     GROUP_COALMINE_COST,
+     GROUP_COALMINE_TECH},
     /* 9 */
-    { N_("Railway"),
-      FALSE,                           /* need credit? */
-      GROUP_RAIL,
-      1,                               /* size */
-      GROUP_RAIL_COLOUR,
-      GROUP_RAIL_COST_MUL,
-      GROUP_RAIL_BUL_COST,
-      GROUP_RAIL_FIREC,
-      GROUP_RAIL_COST,
-      GROUP_RAIL_TECH
-    },
+    {N_("Railway"),
+     FALSE,                     /* need credit? */
+     GROUP_RAIL,
+     1,                         /* size */
+     GROUP_RAIL_COLOUR,
+     GROUP_RAIL_COST_MUL,
+     GROUP_RAIL_BUL_COST,
+     GROUP_RAIL_FIREC,
+     GROUP_RAIL_COST,
+     GROUP_RAIL_TECH},
     /* 10 */
-    { N_("Coal PS"),
-      FALSE,                           /* need credit? */
-      GROUP_COAL_POWER,
-      4,                               /* size */
-      GROUP_COAL_POWER_COLOUR,
-      GROUP_COAL_POWER_COST_MUL,
-      GROUP_COAL_POWER_BUL_COST,
-      GROUP_COAL_POWER_FIREC,
-      GROUP_COAL_POWER_COST,
-      GROUP_COAL_POWER_TECH
-    },
+    {N_("Coal PS"),
+     FALSE,                     /* need credit? */
+     GROUP_COAL_POWER,
+     4,                         /* size */
+     GROUP_COAL_POWER_COLOUR,
+     GROUP_COAL_POWER_COST_MUL,
+     GROUP_COAL_POWER_BUL_COST,
+     GROUP_COAL_POWER_FIREC,
+     GROUP_COAL_POWER_COST,
+     GROUP_COAL_POWER_TECH},
     /* 11 */
-    { N_("Road"),
-      FALSE,                           /* need credit? */
-      GROUP_ROAD,
-      1,                               /* size */
-      GROUP_ROAD_COLOUR,
-      GROUP_ROAD_COST_MUL,
-      GROUP_ROAD_BUL_COST,
-      GROUP_ROAD_FIREC,
-      GROUP_ROAD_COST,
-      GROUP_ROAD_TECH
-    },
+    {N_("Road"),
+     FALSE,                     /* need credit? */
+     GROUP_ROAD,
+     1,                         /* size */
+     GROUP_ROAD_COLOUR,
+     GROUP_ROAD_COST_MUL,
+     GROUP_ROAD_BUL_COST,
+     GROUP_ROAD_FIREC,
+     GROUP_ROAD_COST,
+     GROUP_ROAD_TECH},
     /* 12 */
-    { N_("Lt. Industry"),
-      FALSE,                           /* need credit? */
-      GROUP_INDUSTRY_L,
-      3,                               /* size */
-      GROUP_INDUSTRY_L_COLOUR,
-      GROUP_INDUSTRY_L_COST_MUL,
-      GROUP_INDUSTRY_L_BUL_COST,
-      GROUP_INDUSTRY_L_FIREC,
-      GROUP_INDUSTRY_L_COST,
-      GROUP_INDUSTRY_L_TECH
-    },
+    {N_("Lt. Industry"),
+     FALSE,                     /* need credit? */
+     GROUP_INDUSTRY_L,
+     3,                         /* size */
+     GROUP_INDUSTRY_L_COLOUR,
+     GROUP_INDUSTRY_L_COST_MUL,
+     GROUP_INDUSTRY_L_BUL_COST,
+     GROUP_INDUSTRY_L_FIREC,
+     GROUP_INDUSTRY_L_COST,
+     GROUP_INDUSTRY_L_TECH},
     /* 13 */
-    { N_("University"),
-      FALSE,                           /* need credit? */
-      GROUP_UNIVERSITY,
-      3,                               /* size */
-      GROUP_UNIVERSITY_COLOUR,
-      GROUP_UNIVERSITY_COST_MUL,
-      GROUP_UNIVERSITY_BUL_COST,
-      GROUP_UNIVERSITY_FIREC,
-      GROUP_UNIVERSITY_COST,
-      GROUP_UNIVERSITY_TECH
-    },
+    {N_("University"),
+     FALSE,                     /* need credit? */
+     GROUP_UNIVERSITY,
+     3,                         /* size */
+     GROUP_UNIVERSITY_COLOUR,
+     GROUP_UNIVERSITY_COST_MUL,
+     GROUP_UNIVERSITY_BUL_COST,
+     GROUP_UNIVERSITY_FIREC,
+     GROUP_UNIVERSITY_COST,
+     GROUP_UNIVERSITY_TECH},
     /* 14 */
-    { N_("Commune"),
-      FALSE,                           /* need credit? */
-      GROUP_COMMUNE,
-      4,                               /* size */
-      GROUP_COMMUNE_COLOUR,
-      GROUP_COMMUNE_COST_MUL,
-      GROUP_COMMUNE_BUL_COST,
-      GROUP_COMMUNE_FIREC,
-      GROUP_COMMUNE_COST,
-      GROUP_COMMUNE_TECH
-    },
+    {N_("Commune"),
+     FALSE,                     /* need credit? */
+     GROUP_COMMUNE,
+     4,                         /* size */
+     GROUP_COMMUNE_COLOUR,
+     GROUP_COMMUNE_COST_MUL,
+     GROUP_COMMUNE_BUL_COST,
+     GROUP_COMMUNE_FIREC,
+     GROUP_COMMUNE_COST,
+     GROUP_COMMUNE_TECH},
     /* 15 */
-    { N_("Ore mine"),
-      FALSE,                           /* need credit? */
-      GROUP_OREMINE,
-      4,                               /* size */
-      GROUP_OREMINE_COLOUR,
-      GROUP_OREMINE_COST_MUL,
-      GROUP_OREMINE_BUL_COST,
-      GROUP_OREMINE_FIREC,
-      GROUP_OREMINE_COST,
-      GROUP_OREMINE_TECH
-    },
+    {N_("Ore mine"),
+     FALSE,                     /* need credit? */
+     GROUP_OREMINE,
+     4,                         /* size */
+     GROUP_OREMINE_COLOUR,
+     GROUP_OREMINE_COST_MUL,
+     GROUP_OREMINE_BUL_COST,
+     GROUP_OREMINE_FIREC,
+     GROUP_OREMINE_COST,
+     GROUP_OREMINE_TECH},
     /* 16 */
-    { N_("Rubbish tip"),
-      FALSE,                           /* need credit? */
-      GROUP_TIP,
-      4,                               /* size */
-      GROUP_TIP_COLOUR,
-      GROUP_TIP_COST_MUL,
-      GROUP_TIP_BUL_COST,
-      GROUP_TIP_FIREC,
-      GROUP_TIP_COST,
-      GROUP_TIP_TECH
-    },
+    {N_("Rubbish tip"),
+     FALSE,                     /* need credit? */
+     GROUP_TIP,
+     4,                         /* size */
+     GROUP_TIP_COLOUR,
+     GROUP_TIP_COST_MUL,
+     GROUP_TIP_BUL_COST,
+     GROUP_TIP_FIREC,
+     GROUP_TIP_COST,
+     GROUP_TIP_TECH},
     /* 17 */
-    { N_("Port"),
-      FALSE,                           /* need credit? */
-      GROUP_PORT,
-      4,                               /* size */
-      GROUP_PORT_COLOUR,
-      GROUP_PORT_COST_MUL,
-      GROUP_PORT_BUL_COST,
-      GROUP_PORT_FIREC,
-      GROUP_PORT_COST,
-      GROUP_PORT_TECH
-    },
+    {N_("Port"),
+     FALSE,                     /* need credit? */
+     GROUP_PORT,
+     4,                         /* size */
+     GROUP_PORT_COLOUR,
+     GROUP_PORT_COST_MUL,
+     GROUP_PORT_BUL_COST,
+     GROUP_PORT_FIREC,
+     GROUP_PORT_COST,
+     GROUP_PORT_TECH},
     /* 18 */
-    { N_("Hv. Industry"),
-      FALSE,                           /* need credit? */
-      GROUP_INDUSTRY_H,
-      4,                               /* size */
-      GROUP_INDUSTRY_H_COLOUR,
-      GROUP_INDUSTRY_H_COST_MUL,
-      GROUP_INDUSTRY_H_BUL_COST,
-      GROUP_INDUSTRY_H_FIREC,
-      GROUP_INDUSTRY_H_COST,
-      GROUP_INDUSTRY_H_TECH
-    },
+    {N_("Hv. Industry"),
+     FALSE,                     /* need credit? */
+     GROUP_INDUSTRY_H,
+     4,                         /* size */
+     GROUP_INDUSTRY_H_COLOUR,
+     GROUP_INDUSTRY_H_COST_MUL,
+     GROUP_INDUSTRY_H_BUL_COST,
+     GROUP_INDUSTRY_H_FIREC,
+     GROUP_INDUSTRY_H_COST,
+     GROUP_INDUSTRY_H_TECH},
     /* 19 */
-    { N_("Park"),
-      TRUE,                           /* need credit? */
-      GROUP_PARKLAND,
-      1,                               /* size */
-      GROUP_PARKLAND_COLOUR,
-      GROUP_PARKLAND_COST_MUL,
-      GROUP_PARKLAND_BUL_COST,
-      GROUP_PARKLAND_FIREC,
-      GROUP_PARKLAND_COST,
-      GROUP_PARKLAND_TECH
-    },
+    {N_("Park"),
+     TRUE,                      /* need credit? */
+     GROUP_PARKLAND,
+     1,                         /* size */
+     GROUP_PARKLAND_COLOUR,
+     GROUP_PARKLAND_COST_MUL,
+     GROUP_PARKLAND_BUL_COST,
+     GROUP_PARKLAND_FIREC,
+     GROUP_PARKLAND_COST,
+     GROUP_PARKLAND_TECH},
     /* 20 */
-    { N_("Recycle"),
-      TRUE,                           /* need credit? */
-      GROUP_RECYCLE,
-      2,                               /* size */
-      GROUP_RECYCLE_COLOUR,
-      GROUP_RECYCLE_COST_MUL,
-      GROUP_RECYCLE_BUL_COST,
-      GROUP_RECYCLE_FIREC,
-      GROUP_RECYCLE_COST,
-      GROUP_RECYCLE_TECH
-    },
+    {N_("Recycle"),
+     TRUE,                      /* need credit? */
+     GROUP_RECYCLE,
+     2,                         /* size */
+     GROUP_RECYCLE_COLOUR,
+     GROUP_RECYCLE_COST_MUL,
+     GROUP_RECYCLE_BUL_COST,
+     GROUP_RECYCLE_FIREC,
+     GROUP_RECYCLE_COST,
+     GROUP_RECYCLE_TECH},
     /* 21 */
-    { N_("Water"),
-      FALSE,                           /* need credit? */
-      GROUP_WATER,
-      1,                               /* size */
-      GROUP_WATER_COLOUR,
-      GROUP_WATER_COST_MUL,
-      GROUP_WATER_BUL_COST,
-      GROUP_WATER_FIREC,
-      GROUP_WATER_COST,
-      GROUP_WATER_TECH
-    },
+    {N_("Water"),
+     FALSE,                     /* need credit? */
+     GROUP_WATER,
+     1,                         /* size */
+     GROUP_WATER_COLOUR,
+     GROUP_WATER_COST_MUL,
+     GROUP_WATER_BUL_COST,
+     GROUP_WATER_FIREC,
+     GROUP_WATER_COST,
+     GROUP_WATER_TECH},
     /* 22 */
-    { N_("Health centre"),
-      FALSE,                           /* need credit? */
-      GROUP_HEALTH,
-      2,                               /* size */
-      GROUP_HEALTH_COLOUR,
-      GROUP_HEALTH_COST_MUL,
-      GROUP_HEALTH_BUL_COST,
-      GROUP_HEALTH_FIREC,
-      GROUP_HEALTH_COST,
-      GROUP_HEALTH_TECH
-    },
+    {N_("Health centre"),
+     FALSE,                     /* need credit? */
+     GROUP_HEALTH,
+     2,                         /* size */
+     GROUP_HEALTH_COLOUR,
+     GROUP_HEALTH_COST_MUL,
+     GROUP_HEALTH_BUL_COST,
+     GROUP_HEALTH_FIREC,
+     GROUP_HEALTH_COST,
+     GROUP_HEALTH_TECH},
     /* 23 */
-    { N_("Rocket pad"),
-      TRUE,                            /* need credit? */
-      GROUP_ROCKET,
-      4,                               /* size */
-      GROUP_ROCKET_COLOUR,
-      GROUP_ROCKET_COST_MUL,
-      GROUP_ROCKET_BUL_COST,
-      GROUP_ROCKET_FIREC,
-      GROUP_ROCKET_COST,
-      GROUP_ROCKET_TECH
-    },
+    {N_("Rocket pad"),
+     TRUE,                      /* need credit? */
+     GROUP_ROCKET,
+     4,                         /* size */
+     GROUP_ROCKET_COLOUR,
+     GROUP_ROCKET_COST_MUL,
+     GROUP_ROCKET_BUL_COST,
+     GROUP_ROCKET_FIREC,
+     GROUP_ROCKET_COST,
+     GROUP_ROCKET_TECH},
     /* 24 */
-    { N_("Windmill"),
-      FALSE,                           /* need credit? */
-      GROUP_WINDMILL,
-      2,                               /* size */
-      GROUP_WINDMILL_COLOUR,
-      GROUP_WINDMILL_COST_MUL,
-      GROUP_WINDMILL_BUL_COST,
-      GROUP_WINDMILL_FIREC,
-      GROUP_WINDMILL_COST,
-      GROUP_WINDMILL_TECH
-    },
+    {N_("Windmill"),
+     FALSE,                     /* need credit? */
+     GROUP_WINDMILL,
+     2,                         /* size */
+     GROUP_WINDMILL_COLOUR,
+     GROUP_WINDMILL_COST_MUL,
+     GROUP_WINDMILL_BUL_COST,
+     GROUP_WINDMILL_FIREC,
+     GROUP_WINDMILL_COST,
+     GROUP_WINDMILL_TECH},
     /* 25 */
-    { N_("Monument"),
-      FALSE,                           /* need credit? */
-      GROUP_MONUMENT,
-      2,                               /* size */
-      GROUP_MONUMENT_COLOUR,
-      GROUP_MONUMENT_COST_MUL,
-      GROUP_MONUMENT_BUL_COST,
-      GROUP_MONUMENT_FIREC,
-      GROUP_MONUMENT_COST,
-      GROUP_MONUMENT_TECH
-    },
+    {N_("Monument"),
+     FALSE,                     /* need credit? */
+     GROUP_MONUMENT,
+     2,                         /* size */
+     GROUP_MONUMENT_COLOUR,
+     GROUP_MONUMENT_COST_MUL,
+     GROUP_MONUMENT_BUL_COST,
+     GROUP_MONUMENT_FIREC,
+     GROUP_MONUMENT_COST,
+     GROUP_MONUMENT_TECH},
     /* 26 */
-    { N_("School"),
-      FALSE,                           /* need credit? */
-      GROUP_SCHOOL,
-      2,                               /* size */
-      GROUP_SCHOOL_COLOUR,
-      GROUP_SCHOOL_COST_MUL,
-      GROUP_SCHOOL_BUL_COST,
-      GROUP_SCHOOL_FIREC,
-      GROUP_SCHOOL_COST,
-      GROUP_SCHOOL_TECH
-    },
+    {N_("School"),
+     FALSE,                     /* need credit? */
+     GROUP_SCHOOL,
+     2,                         /* size */
+     GROUP_SCHOOL_COLOUR,
+     GROUP_SCHOOL_COST_MUL,
+     GROUP_SCHOOL_BUL_COST,
+     GROUP_SCHOOL_FIREC,
+     GROUP_SCHOOL_COST,
+     GROUP_SCHOOL_TECH},
     /* 27 */
-    { N_("Blacksmith"),
-      FALSE,                           /* need credit? */
-      GROUP_BLACKSMITH,
-      2,                               /* size */
-      GROUP_BLACKSMITH_COLOUR,
-      GROUP_BLACKSMITH_COST_MUL,
-      GROUP_BLACKSMITH_BUL_COST,
-      GROUP_BLACKSMITH_FIREC,
-      GROUP_BLACKSMITH_COST,
-      GROUP_BLACKSMITH_TECH
-    },
+    {N_("Blacksmith"),
+     FALSE,                     /* need credit? */
+     GROUP_BLACKSMITH,
+     2,                         /* size */
+     GROUP_BLACKSMITH_COLOUR,
+     GROUP_BLACKSMITH_COST_MUL,
+     GROUP_BLACKSMITH_BUL_COST,
+     GROUP_BLACKSMITH_FIREC,
+     GROUP_BLACKSMITH_COST,
+     GROUP_BLACKSMITH_TECH},
     /* 28 */
-    { N_("Mill"),
-      FALSE,                           /* need credit? */
-      GROUP_MILL,
-      2,                               /* size */
-      GROUP_MILL_COLOUR,
-      GROUP_MILL_COST_MUL,
-      GROUP_MILL_BUL_COST,
-      GROUP_MILL_FIREC,
-      GROUP_MILL_COST,
-      GROUP_MILL_TECH
-    },
+    {N_("Mill"),
+     FALSE,                     /* need credit? */
+     GROUP_MILL,
+     2,                         /* size */
+     GROUP_MILL_COLOUR,
+     GROUP_MILL_COST_MUL,
+     GROUP_MILL_BUL_COST,
+     GROUP_MILL_FIREC,
+     GROUP_MILL_COST,
+     GROUP_MILL_TECH},
     /* 29 */
-    { N_("Pottery"),
-      FALSE,                           /* need credit? */
-      GROUP_POTTERY,
-      2,                               /* size */
-      GROUP_POTTERY_COLOUR,
-      GROUP_POTTERY_COST_MUL,
-      GROUP_POTTERY_BUL_COST,
-      GROUP_POTTERY_FIREC,
-      GROUP_POTTERY_COST,
-      GROUP_POTTERY_TECH
-    },
+    {N_("Pottery"),
+     FALSE,                     /* need credit? */
+     GROUP_POTTERY,
+     2,                         /* size */
+     GROUP_POTTERY_COLOUR,
+     GROUP_POTTERY_COST_MUL,
+     GROUP_POTTERY_BUL_COST,
+     GROUP_POTTERY_FIREC,
+     GROUP_POTTERY_COST,
+     GROUP_POTTERY_TECH},
     /* 30 */
-    { N_("Fire sta'n"),
-      FALSE,                           /* need credit? */
-      GROUP_FIRESTATION,
-      2,                               /* size */
-      GROUP_FIRESTATION_COLOUR,
-      GROUP_FIRESTATION_COST_MUL,
-      GROUP_FIRESTATION_BUL_COST,
-      GROUP_FIRESTATION_FIREC,
-      GROUP_FIRESTATION_COST,
-      GROUP_FIRESTATION_TECH
-    },
+    {N_("Fire sta'n"),
+     FALSE,                     /* need credit? */
+     GROUP_FIRESTATION,
+     2,                         /* size */
+     GROUP_FIRESTATION_COLOUR,
+     GROUP_FIRESTATION_COST_MUL,
+     GROUP_FIRESTATION_BUL_COST,
+     GROUP_FIRESTATION_FIREC,
+     GROUP_FIRESTATION_COST,
+     GROUP_FIRESTATION_TECH},
     /* 31 */
-    { N_("Sports field"),
-      FALSE,                           /* need credit? */
-      GROUP_CRICKET,
-      2,                               /* size */
-      GROUP_CRICKET_COLOUR,
-      GROUP_CRICKET_COST_MUL,
-      GROUP_CRICKET_BUL_COST,
-      GROUP_CRICKET_FIREC,
-      GROUP_CRICKET_COST,
-      GROUP_CRICKET_TECH
-    },
+    {N_("Sports field"),
+     FALSE,                     /* need credit? */
+     GROUP_CRICKET,
+     2,                         /* size */
+     GROUP_CRICKET_COLOUR,
+     GROUP_CRICKET_COST_MUL,
+     GROUP_CRICKET_BUL_COST,
+     GROUP_CRICKET_FIREC,
+     GROUP_CRICKET_COST,
+     GROUP_CRICKET_TECH},
     /* 32 */
     /* there is no button for this. */
-    { N_("Burnt"),
-      FALSE,                           /* need credit? */
-      GROUP_BURNT,
-      1,                               /* size */
-      GROUP_BURNT_COLOUR,
-      GROUP_BURNT_COST_MUL,
-      GROUP_BURNT_BUL_COST,
-      GROUP_BURNT_FIREC,
-      GROUP_BURNT_COST,
-      GROUP_BURNT_TECH
-    },
+    {N_("Burnt"),
+     FALSE,                     /* need credit? */
+     GROUP_BURNT,
+     1,                         /* size */
+     GROUP_BURNT_COLOUR,
+     GROUP_BURNT_COST_MUL,
+     GROUP_BURNT_BUL_COST,
+     GROUP_BURNT_FIREC,
+     GROUP_BURNT_COST,
+     GROUP_BURNT_TECH},
     /* 33 */
     /* there is no button for this. */
-    { N_("Shanty town"),
-      FALSE,                           /* need credit? */
-      GROUP_SHANTY,
-      2,                               /* size */
-      GROUP_SHANTY_COLOUR,
-      GROUP_SHANTY_COST_MUL,
-      GROUP_SHANTY_BUL_COST,
-      GROUP_SHANTY_FIREC,
-      GROUP_SHANTY_COST,
-      GROUP_SHANTY_TECH
-    },
+    {N_("Shanty town"),
+     FALSE,                     /* need credit? */
+     GROUP_SHANTY,
+     2,                         /* size */
+     GROUP_SHANTY_COLOUR,
+     GROUP_SHANTY_COST_MUL,
+     GROUP_SHANTY_BUL_COST,
+     GROUP_SHANTY_FIREC,
+     GROUP_SHANTY_COST,
+     GROUP_SHANTY_TECH},
     /* 34 */
     /* there is no button for this. */
-    { N_("Fire"),
-      FALSE,                           /* need credit? */
-      GROUP_FIRE,
-      1,                               /* size */
-      GROUP_FIRE_COLOUR,
-      GROUP_FIRE_COST_MUL,
-      GROUP_FIRE_BUL_COST,
-      GROUP_FIRE_FIREC,
-      GROUP_FIRE_COST,
-      GROUP_FIRE_TECH
-    },
+    {N_("Fire"),
+     FALSE,                     /* need credit? */
+     GROUP_FIRE,
+     1,                         /* size */
+     GROUP_FIRE_COLOUR,
+     GROUP_FIRE_COST_MUL,
+     GROUP_FIRE_BUL_COST,
+     GROUP_FIRE_FIREC,
+     GROUP_FIRE_COST,
+     GROUP_FIRE_TECH},
     /* 35 */
     /* there is no button for this. */
-    { N_("Used"),
-      FALSE,                           /* need credit? */
-      GROUP_USED,
-      1,                               /* size */
-      GROUP_USED_COLOUR,
-      GROUP_USED_COST_MUL,
-      GROUP_USED_BUL_COST,
-      GROUP_USED_FIREC,
-      GROUP_USED_COST,
-      GROUP_USED_TECH
-    },
+    {N_("Used"),
+     FALSE,                     /* need credit? */
+     GROUP_USED,
+     1,                         /* size */
+     GROUP_USED_COLOUR,
+     GROUP_USED_COST_MUL,
+     GROUP_USED_BUL_COST,
+     GROUP_USED_FIREC,
+     GROUP_USED_COST,
+     GROUP_USED_TECH},
     /* 36 */
-    { N_("Residential ML"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_ML,
-      3,                               /* size */
-      GROUP_RESIDENCE_ML_COLOUR,
-      GROUP_RESIDENCE_ML_COST_MUL,
-      GROUP_RESIDENCE_ML_BUL_COST,
-      GROUP_RESIDENCE_ML_FIREC,
-      GROUP_RESIDENCE_ML_COST,
-      GROUP_RESIDENCE_ML_TECH
-    },
+    {N_("Residential ML"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_ML,
+     3,                         /* size */
+     GROUP_RESIDENCE_ML_COLOUR,
+     GROUP_RESIDENCE_ML_COST_MUL,
+     GROUP_RESIDENCE_ML_BUL_COST,
+     GROUP_RESIDENCE_ML_FIREC,
+     GROUP_RESIDENCE_ML_COST,
+     GROUP_RESIDENCE_ML_TECH},
     /* 37 */
-    { N_("Residential HL"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_HL,
-      3,                               /* size */
-      GROUP_RESIDENCE_HL_COLOUR,
-      GROUP_RESIDENCE_HL_COST_MUL,
-      GROUP_RESIDENCE_HL_BUL_COST,
-      GROUP_RESIDENCE_HL_FIREC,
-      GROUP_RESIDENCE_HL_COST,
-      GROUP_RESIDENCE_HL_TECH
-    },
+    {N_("Residential HL"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_HL,
+     3,                         /* size */
+     GROUP_RESIDENCE_HL_COLOUR,
+     GROUP_RESIDENCE_HL_COST_MUL,
+     GROUP_RESIDENCE_HL_BUL_COST,
+     GROUP_RESIDENCE_HL_FIREC,
+     GROUP_RESIDENCE_HL_COST,
+     GROUP_RESIDENCE_HL_TECH},
     /* 38 */
-    { N_("Residential LH"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_LH,
-      3,                               /* size */
-      GROUP_RESIDENCE_LH_COLOUR,
-      GROUP_RESIDENCE_LH_COST_MUL,
-      GROUP_RESIDENCE_LH_BUL_COST,
-      GROUP_RESIDENCE_LH_FIREC,
-      GROUP_RESIDENCE_LH_COST,
-      GROUP_RESIDENCE_LH_TECH
-    },
+    {N_("Residential LH"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_LH,
+     3,                         /* size */
+     GROUP_RESIDENCE_LH_COLOUR,
+     GROUP_RESIDENCE_LH_COST_MUL,
+     GROUP_RESIDENCE_LH_BUL_COST,
+     GROUP_RESIDENCE_LH_FIREC,
+     GROUP_RESIDENCE_LH_COST,
+     GROUP_RESIDENCE_LH_TECH},
     /* 39 */
-    { N_("Residential MH"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_MH,
-      3,                               /* size */
-      GROUP_RESIDENCE_MH_COLOUR,
-      GROUP_RESIDENCE_MH_COST_MUL,
-      GROUP_RESIDENCE_MH_BUL_COST,
-      GROUP_RESIDENCE_MH_FIREC,
-      GROUP_RESIDENCE_MH_COST,
-      GROUP_RESIDENCE_MH_TECH
-    },
+    {N_("Residential MH"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_MH,
+     3,                         /* size */
+     GROUP_RESIDENCE_MH_COLOUR,
+     GROUP_RESIDENCE_MH_COST_MUL,
+     GROUP_RESIDENCE_MH_BUL_COST,
+     GROUP_RESIDENCE_MH_FIREC,
+     GROUP_RESIDENCE_MH_COST,
+     GROUP_RESIDENCE_MH_TECH},
     /* 40 */
-    { N_("Residential HH"),
-      FALSE,                           /* need credit? */
-      GROUP_RESIDENCE_HH,
-      3,                               /* size */
-      GROUP_RESIDENCE_HH_COLOUR,
-      GROUP_RESIDENCE_HH_COST_MUL,
-      GROUP_RESIDENCE_HH_BUL_COST,
-      GROUP_RESIDENCE_HH_FIREC,
-      GROUP_RESIDENCE_HH_COST,
-      GROUP_RESIDENCE_HH_TECH
-    },
+    {N_("Residential HH"),
+     FALSE,                     /* need credit? */
+     GROUP_RESIDENCE_HH,
+     3,                         /* size */
+     GROUP_RESIDENCE_HH_COLOUR,
+     GROUP_RESIDENCE_HH_COST_MUL,
+     GROUP_RESIDENCE_HH_BUL_COST,
+     GROUP_RESIDENCE_HH_FIREC,
+     GROUP_RESIDENCE_HH_COST,
+     GROUP_RESIDENCE_HH_TECH},
     /* 41 */
-        { N_("Water well"),
-      FALSE,                           /* need credit? */
-      GROUP_WATERWELL,
-      2,                               /* size */
-      GROUP_WATERWELL_COLOUR,
-      GROUP_WATERWELL_COST_MUL,
-      GROUP_WATERWELL_BUL_COST,
-      GROUP_WATERWELL_FIREC,
-      GROUP_WATERWELL_COST,
-      GROUP_WATERWELL_TECH
-    },
+    {N_("Water well"),
+     FALSE,                     /* need credit? */
+     GROUP_WATERWELL,
+     2,                         /* size */
+     GROUP_WATERWELL_COLOUR,
+     GROUP_WATERWELL_COST_MUL,
+     GROUP_WATERWELL_BUL_COST,
+     GROUP_WATERWELL_FIREC,
+     GROUP_WATERWELL_COST,
+     GROUP_WATERWELL_TECH},
 
     /* 42 */
-    { N_("Desert"),       	/* name */
-      FALSE,            	/* need credit? */
-      GROUP_DESERT,       	/* group number */
-      1,                	/* size */
-      GROUP_DESERT_COLOUR,      /* color */
-      GROUP_DESERT_COST_MUL,	/* cost multiplier */
-      GROUP_DESERT_BUL_COST,	/* bulldoze cost */
-      GROUP_DESERT_FIREC,	/* probability of fire */
-      GROUP_DESERT_COST,	/* cost */
-      GROUP_DESERT_TECH		/* tech */
-    },
+    {N_("Desert"),              /* name */
+     FALSE,                     /* need credit? */
+     GROUP_DESERT,              /* group number */
+     1,                         /* size */
+     GROUP_DESERT_COLOUR,       /* color */
+     GROUP_DESERT_COST_MUL,     /* cost multiplier */
+     GROUP_DESERT_BUL_COST,     /* bulldoze cost */
+     GROUP_DESERT_FIREC,        /* probability of fire */
+     GROUP_DESERT_COST,         /* cost */
+     GROUP_DESERT_TECH          /* tech */
+     },
     /* 43 */
-    { N_("Tree"),       	/* name */
-      FALSE,            	/* need credit? */
-      GROUP_TREE,       	/* group number */
-      1,                	/* size */
-      GROUP_TREE_COLOUR,	/* color */
-      GROUP_TREE_COST_MUL,	/* cost multiplier */
-      GROUP_TREE_BUL_COST,	/* bulldoze cost */
-      GROUP_TREE_FIREC,		/* probability of fire */
-      GROUP_TREE_COST,		/* cost */
-      GROUP_TREE_TECH		/* tech */
-    },
+    {N_("Tree"),                /* name */
+     FALSE,                     /* need credit? */
+     GROUP_TREE,                /* group number */
+     1,                         /* size */
+     GROUP_TREE_COLOUR,         /* color */
+     GROUP_TREE_COST_MUL,       /* cost multiplier */
+     GROUP_TREE_BUL_COST,       /* bulldoze cost */
+     GROUP_TREE_FIREC,          /* probability of fire */
+     GROUP_TREE_COST,           /* cost */
+     GROUP_TREE_TECH            /* tech */
+     },
 
     /* 44 */
-    { N_("Trees"),       	/* name */
-      FALSE,            	/* need credit? */
-      GROUP_TREE2,       	/* group number */
-      1,                	/* size */
-      GROUP_TREE2_COLOUR,	/* color */
-      GROUP_TREE2_COST_MUL,	/* cost multiplier */
-      GROUP_TREE2_BUL_COST,	/* bulldoze cost */
-      GROUP_TREE2_FIREC,	/* probability of fire */
-      GROUP_TREE2_COST,		/* cost */
-      GROUP_TREE2_TECH		/* tech */
-    },
+    {N_("Trees"),               /* name */
+     FALSE,                     /* need credit? */
+     GROUP_TREE2,               /* group number */
+     1,                         /* size */
+     GROUP_TREE2_COLOUR,        /* color */
+     GROUP_TREE2_COST_MUL,      /* cost multiplier */
+     GROUP_TREE2_BUL_COST,      /* bulldoze cost */
+     GROUP_TREE2_FIREC,         /* probability of fire */
+     GROUP_TREE2_COST,          /* cost */
+     GROUP_TREE2_TECH           /* tech */
+     },
 
     /* 45 */
-    { N_("Forest"),       	/* name */
-      FALSE,            	/* need credit? */
-      GROUP_TREE3,       	/* group number */
-      1,                	/* size */
-      GROUP_TREE3_COLOUR,	/* color */
-      GROUP_TREE3_COST_MUL,	/* cost multiplier */
-      GROUP_TREE3_BUL_COST,	/* bulldoze cost */
-      GROUP_TREE3_FIREC,	/* probability of fire */
-      GROUP_TREE3_COST,		/* cost */
-      GROUP_TREE3_TECH		/* tech */
-    },
+    {N_("Forest"),              /* name */
+     FALSE,                     /* need credit? */
+     GROUP_TREE3,               /* group number */
+     1,                         /* size */
+     GROUP_TREE3_COLOUR,        /* color */
+     GROUP_TREE3_COST_MUL,      /* cost multiplier */
+     GROUP_TREE3_BUL_COST,      /* bulldoze cost */
+     GROUP_TREE3_FIREC,         /* probability of fire */
+     GROUP_TREE3_COST,          /* cost */
+     GROUP_TREE3_TECH           /* tech */
+     },
 
     /* 46 */
     /* End of Data */
-    { "EOF",
-      FALSE,                           /* need credit? */
-      0,
-      0,                               /* size */
-      0,
-      0,
-      0,
-      0,
-      0,
-      0
-    }
+    {"EOF",
+     FALSE,                     /* need credit? */
+     0,
+     0,                         /* size */
+     0,
+     0,
+     0,
+     0,
+     0,
+     0}
 };
 
 void init_types(void)
 {
     char png_file[LC_PATH_MAX], txt_file[LC_PATH_MAX];
-    sprintf (png_file, "%s%c%s", opening_path, PATH_SLASH, "icons.png");
-    sprintf (txt_file, "%s%c%s", opening_path, PATH_SLASH, "iconlist.txt");
+    sprintf(png_file, "%s%c%s", opening_path, PATH_SLASH, "icons.png");
+    sprintf(txt_file, "%s%c%s", opening_path, PATH_SLASH, "iconlist.txt");
 
-    load_png_graphics (txt_file,png_file);
+    load_png_graphics(txt_file, png_file);
 
 #if defined (commentout)
-    main_types[CST_GREEN].group=GROUP_BARE;
-    main_types[CST_GREEN].graphic=load_graphic(CST_GREEN_G);
+    main_types[CST_GREEN].group = GROUP_BARE;
+    main_types[CST_GREEN].graphic = load_graphic(CST_GREEN_G);
 
-    main_types[CST_POWERL_H_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_H_L].graphic=load_graphic(CST_POWERL_H_L_G);
+    main_types[CST_POWERL_H_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_H_L].graphic = load_graphic(CST_POWERL_H_L_G);
 
-    main_types[CST_POWERL_V_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_V_L].graphic=load_graphic(CST_POWERL_V_L_G);
+    main_types[CST_POWERL_V_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_V_L].graphic = load_graphic(CST_POWERL_V_L_G);
 
-    main_types[CST_POWERL_LD_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LD_L].graphic=load_graphic(CST_POWERL_LD_L_G);
+    main_types[CST_POWERL_LD_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LD_L].graphic = load_graphic(CST_POWERL_LD_L_G);
 
-    main_types[CST_POWERL_RD_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_RD_L].graphic=load_graphic(CST_POWERL_RD_L_G);
+    main_types[CST_POWERL_RD_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_RD_L].graphic = load_graphic(CST_POWERL_RD_L_G);
 
-    main_types[CST_POWERL_LU_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LU_L].graphic=load_graphic(CST_POWERL_LU_L_G);
+    main_types[CST_POWERL_LU_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LU_L].graphic = load_graphic(CST_POWERL_LU_L_G);
 
-    main_types[CST_POWERL_RU_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_RU_L].graphic=load_graphic(CST_POWERL_RU_L_G);
+    main_types[CST_POWERL_RU_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_RU_L].graphic = load_graphic(CST_POWERL_RU_L_G);
 
-    main_types[CST_POWERL_LDU_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LDU_L].graphic=load_graphic(CST_POWERL_LDU_L_G);
+    main_types[CST_POWERL_LDU_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LDU_L].graphic = load_graphic(CST_POWERL_LDU_L_G);
 
-    main_types[CST_POWERL_LDR_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LDR_L].graphic=load_graphic(CST_POWERL_LDR_L_G);
+    main_types[CST_POWERL_LDR_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LDR_L].graphic = load_graphic(CST_POWERL_LDR_L_G);
 
-    main_types[CST_POWERL_LUR_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LUR_L].graphic=load_graphic(CST_POWERL_LUR_L_G);
+    main_types[CST_POWERL_LUR_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LUR_L].graphic = load_graphic(CST_POWERL_LUR_L_G);
 
-    main_types[CST_POWERL_UDR_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_UDR_L].graphic=load_graphic(CST_POWERL_UDR_L_G);
+    main_types[CST_POWERL_UDR_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_UDR_L].graphic = load_graphic(CST_POWERL_UDR_L_G);
 
-    main_types[CST_POWERL_LUDR_L].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LUDR_L].graphic
-	    =load_graphic(CST_POWERL_LUDR_L_G);
+    main_types[CST_POWERL_LUDR_L].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LUDR_L].graphic = load_graphic(CST_POWERL_LUDR_L_G);
 
-    main_types[CST_POWERL_H_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_H_D].graphic=load_graphic(CST_POWERL_H_D_G);
+    main_types[CST_POWERL_H_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_H_D].graphic = load_graphic(CST_POWERL_H_D_G);
 
-    main_types[CST_POWERL_V_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_V_D].graphic=load_graphic(CST_POWERL_V_D_G);
+    main_types[CST_POWERL_V_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_V_D].graphic = load_graphic(CST_POWERL_V_D_G);
 
-    main_types[CST_POWERL_LD_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LD_D].graphic=load_graphic(CST_POWERL_LD_D_G);
+    main_types[CST_POWERL_LD_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LD_D].graphic = load_graphic(CST_POWERL_LD_D_G);
 
-    main_types[CST_POWERL_RD_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_RD_D].graphic=load_graphic(CST_POWERL_RD_D_G);
+    main_types[CST_POWERL_RD_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_RD_D].graphic = load_graphic(CST_POWERL_RD_D_G);
 
-    main_types[CST_POWERL_LU_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LU_D].graphic=load_graphic(CST_POWERL_LU_D_G);
+    main_types[CST_POWERL_LU_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LU_D].graphic = load_graphic(CST_POWERL_LU_D_G);
 
-    main_types[CST_POWERL_RU_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_RU_D].graphic=load_graphic(CST_POWERL_RU_D_G);
+    main_types[CST_POWERL_RU_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_RU_D].graphic = load_graphic(CST_POWERL_RU_D_G);
 
-    main_types[CST_POWERL_LDU_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LDU_D].graphic=load_graphic(CST_POWERL_LDU_D_G);
+    main_types[CST_POWERL_LDU_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LDU_D].graphic = load_graphic(CST_POWERL_LDU_D_G);
 
-    main_types[CST_POWERL_LDR_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LDR_D].graphic=load_graphic(CST_POWERL_LDR_D_G);
+    main_types[CST_POWERL_LDR_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LDR_D].graphic = load_graphic(CST_POWERL_LDR_D_G);
 
-    main_types[CST_POWERL_LUR_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LUR_D].graphic=load_graphic(CST_POWERL_LUR_D_G);
+    main_types[CST_POWERL_LUR_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LUR_D].graphic = load_graphic(CST_POWERL_LUR_D_G);
 
-    main_types[CST_POWERL_UDR_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_UDR_D].graphic=load_graphic(CST_POWERL_UDR_D_G);
+    main_types[CST_POWERL_UDR_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_UDR_D].graphic = load_graphic(CST_POWERL_UDR_D_G);
 
-    main_types[CST_POWERL_LUDR_D].group=GROUP_POWER_LINE;
-    main_types[CST_POWERL_LUDR_D].graphic
-	    =load_graphic(CST_POWERL_LUDR_D_G);
+    main_types[CST_POWERL_LUDR_D].group = GROUP_POWER_LINE;
+    main_types[CST_POWERL_LUDR_D].graphic = load_graphic(CST_POWERL_LUDR_D_G);
 
-    main_types[CST_POWERS_SOLAR].group=GROUP_SOLAR_POWER;
-    main_types[CST_POWERS_SOLAR].graphic=load_graphic(CST_POWERS_SOLAR_G);
+    main_types[CST_POWERS_SOLAR].group = GROUP_SOLAR_POWER;
+    main_types[CST_POWERS_SOLAR].graphic = load_graphic(CST_POWERS_SOLAR_G);
 
-    main_types[CST_POWERS_COAL_EMPTY].group=GROUP_COAL_POWER;
-    main_types[CST_POWERS_COAL_EMPTY].graphic
-	    =load_graphic(CST_POWERS_COAL_EMPTY_G);
+    main_types[CST_POWERS_COAL_EMPTY].group = GROUP_COAL_POWER;
+    main_types[CST_POWERS_COAL_EMPTY].graphic = load_graphic(CST_POWERS_COAL_EMPTY_G);
 
-    main_types[CST_POWERS_COAL_LOW].group=GROUP_COAL_POWER;
-    main_types[CST_POWERS_COAL_LOW].graphic
-	    =load_graphic(CST_POWERS_COAL_LOW_G);
+    main_types[CST_POWERS_COAL_LOW].group = GROUP_COAL_POWER;
+    main_types[CST_POWERS_COAL_LOW].graphic = load_graphic(CST_POWERS_COAL_LOW_G);
 
-    prog_box("",12);
+    prog_box("", 12);
 
-    main_types[CST_POWERS_COAL_MED].group=GROUP_COAL_POWER;
-    main_types[CST_POWERS_COAL_MED].graphic
-	    =load_graphic(CST_POWERS_COAL_MED_G);
+    main_types[CST_POWERS_COAL_MED].group = GROUP_COAL_POWER;
+    main_types[CST_POWERS_COAL_MED].graphic = load_graphic(CST_POWERS_COAL_MED_G);
 
-    main_types[CST_POWERS_COAL_FULL].group=GROUP_COAL_POWER;
-    main_types[CST_POWERS_COAL_FULL].graphic
-	    =load_graphic(CST_POWERS_COAL_FULL_G);
+    main_types[CST_POWERS_COAL_FULL].group = GROUP_COAL_POWER;
+    main_types[CST_POWERS_COAL_FULL].graphic = load_graphic(CST_POWERS_COAL_FULL_G);
 
-    main_types[CST_SUBSTATION_R].group=GROUP_SUBSTATION;
-    main_types[CST_SUBSTATION_R].graphic=load_graphic(CST_SUBSTATION_R_G);
+    main_types[CST_SUBSTATION_R].group = GROUP_SUBSTATION;
+    main_types[CST_SUBSTATION_R].graphic = load_graphic(CST_SUBSTATION_R_G);
 
-    main_types[CST_SUBSTATION_G].group=GROUP_SUBSTATION;
-    main_types[CST_SUBSTATION_G].graphic=load_graphic(CST_SUBSTATION_G_G);
+    main_types[CST_SUBSTATION_G].group = GROUP_SUBSTATION;
+    main_types[CST_SUBSTATION_G].graphic = load_graphic(CST_SUBSTATION_G_G);
 
-    main_types[CST_SUBSTATION_RG].group=GROUP_SUBSTATION;
-    main_types[CST_SUBSTATION_RG].graphic
-	    =load_graphic(CST_SUBSTATION_RG_G);
+    main_types[CST_SUBSTATION_RG].group = GROUP_SUBSTATION;
+    main_types[CST_SUBSTATION_RG].graphic = load_graphic(CST_SUBSTATION_RG_G);
 
-    main_types[CST_RESIDENCE_LL].group=GROUP_RESIDENCE_LL;
-    main_types[CST_RESIDENCE_LL].graphic=load_graphic(CST_RESIDENCE_LL_G);
+    main_types[CST_RESIDENCE_LL].group = GROUP_RESIDENCE_LL;
+    main_types[CST_RESIDENCE_LL].graphic = load_graphic(CST_RESIDENCE_LL_G);
 
-    main_types[CST_RESIDENCE_ML].group=GROUP_RESIDENCE_ML;
-    main_types[CST_RESIDENCE_ML].graphic
-	    =load_graphic(CST_RESIDENCE_ML_G);
+    main_types[CST_RESIDENCE_ML].group = GROUP_RESIDENCE_ML;
+    main_types[CST_RESIDENCE_ML].graphic = load_graphic(CST_RESIDENCE_ML_G);
 
-    main_types[CST_RESIDENCE_HL].group=GROUP_RESIDENCE_HL;
-    main_types[CST_RESIDENCE_HL].graphic
-	    =load_graphic(CST_RESIDENCE_HL_G);
+    main_types[CST_RESIDENCE_HL].group = GROUP_RESIDENCE_HL;
+    main_types[CST_RESIDENCE_HL].graphic = load_graphic(CST_RESIDENCE_HL_G);
 
-    main_types[CST_RESIDENCE_LH].group=GROUP_RESIDENCE_LH;
-    main_types[CST_RESIDENCE_LH].graphic=load_graphic(CST_RESIDENCE_LH_G);
+    main_types[CST_RESIDENCE_LH].group = GROUP_RESIDENCE_LH;
+    main_types[CST_RESIDENCE_LH].graphic = load_graphic(CST_RESIDENCE_LH_G);
 
-    main_types[CST_RESIDENCE_MH].group=GROUP_RESIDENCE_MH;
-    main_types[CST_RESIDENCE_MH].graphic=load_graphic(CST_RESIDENCE_MH_G);
+    main_types[CST_RESIDENCE_MH].group = GROUP_RESIDENCE_MH;
+    main_types[CST_RESIDENCE_MH].graphic = load_graphic(CST_RESIDENCE_MH_G);
 
-    main_types[CST_RESIDENCE_HH].group=GROUP_RESIDENCE_HH;
-    main_types[CST_RESIDENCE_HH].graphic=load_graphic(CST_RESIDENCE_HH_G);
+    main_types[CST_RESIDENCE_HH].group = GROUP_RESIDENCE_HH;
+    main_types[CST_RESIDENCE_HH].graphic = load_graphic(CST_RESIDENCE_HH_G);
 
+    main_types[CST_FARM_O0].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O0].graphic = load_graphic(CST_FARM_O0_G);
 
-    main_types[CST_FARM_O0].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O0].graphic=load_graphic(CST_FARM_O0_G);
+    main_types[CST_FARM_O1].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O1].graphic = load_graphic(CST_FARM_O1_G);
 
-    main_types[CST_FARM_O1].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O1].graphic=load_graphic(CST_FARM_O1_G);
+    main_types[CST_FARM_O2].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O2].graphic = load_graphic(CST_FARM_O2_G);
 
-    main_types[CST_FARM_O2].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O2].graphic=load_graphic(CST_FARM_O2_G);
+    main_types[CST_FARM_O3].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O3].graphic = load_graphic(CST_FARM_O3_G);
 
-    main_types[CST_FARM_O3].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O3].graphic=load_graphic(CST_FARM_O3_G);
+    main_types[CST_FARM_O4].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O4].graphic = load_graphic(CST_FARM_O4_G);
 
-    main_types[CST_FARM_O4].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O4].graphic=load_graphic(CST_FARM_O4_G);
+    main_types[CST_FARM_O5].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O5].graphic = load_graphic(CST_FARM_O5_G);
 
-    main_types[CST_FARM_O5].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O5].graphic=load_graphic(CST_FARM_O5_G);
+    main_types[CST_FARM_O6].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O6].graphic = load_graphic(CST_FARM_O6_G);
 
-    main_types[CST_FARM_O6].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O6].graphic=load_graphic(CST_FARM_O6_G);
+    main_types[CST_FARM_O7].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O7].graphic = load_graphic(CST_FARM_O7_G);
 
-    main_types[CST_FARM_O7].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O7].graphic=load_graphic(CST_FARM_O7_G);
+    main_types[CST_FARM_O8].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O8].graphic = load_graphic(CST_FARM_O8_G);
 
-    main_types[CST_FARM_O8].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O8].graphic=load_graphic(CST_FARM_O8_G);
+    main_types[CST_FARM_O9].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O9].graphic = load_graphic(CST_FARM_O9_G);
 
-    main_types[CST_FARM_O9].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O9].graphic=load_graphic(CST_FARM_O9_G);
+    main_types[CST_FARM_O10].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O10].graphic = load_graphic(CST_FARM_O10_G);
 
-    main_types[CST_FARM_O10].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O10].graphic=load_graphic(CST_FARM_O10_G);
+    main_types[CST_FARM_O11].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O11].graphic = load_graphic(CST_FARM_O11_G);
 
-    main_types[CST_FARM_O11].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O11].graphic=load_graphic(CST_FARM_O11_G);
+    main_types[CST_FARM_O12].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O12].graphic = load_graphic(CST_FARM_O12_G);
 
-    main_types[CST_FARM_O12].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O12].graphic=load_graphic(CST_FARM_O12_G);
+    main_types[CST_FARM_O13].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O13].graphic = load_graphic(CST_FARM_O13_G);
 
-    main_types[CST_FARM_O13].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O13].graphic=load_graphic(CST_FARM_O13_G);
+    main_types[CST_FARM_O14].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O14].graphic = load_graphic(CST_FARM_O14_G);
 
-    main_types[CST_FARM_O14].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O14].graphic=load_graphic(CST_FARM_O14_G);
+    main_types[CST_FARM_O15].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O15].graphic = load_graphic(CST_FARM_O15_G);
 
-    main_types[CST_FARM_O15].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O15].graphic=load_graphic(CST_FARM_O15_G);
+    main_types[CST_FARM_O16].group = GROUP_ORGANIC_FARM;
+    main_types[CST_FARM_O16].graphic = load_graphic(CST_FARM_O16_G);
 
-    main_types[CST_FARM_O16].group=GROUP_ORGANIC_FARM;
-    main_types[CST_FARM_O16].graphic=load_graphic(CST_FARM_O16_G);
+    main_types[CST_MARKET_EMPTY].group = GROUP_MARKET;
+    main_types[CST_MARKET_EMPTY].graphic = load_graphic(CST_MARKET_EMPTY_G);
 
-    main_types[CST_MARKET_EMPTY].group=GROUP_MARKET;
-    main_types[CST_MARKET_EMPTY].graphic
-	    =load_graphic(CST_MARKET_EMPTY_G);
+    main_types[CST_MARKET_LOW].group = GROUP_MARKET;
+    main_types[CST_MARKET_LOW].graphic = load_graphic(CST_MARKET_LOW_G);
 
-    main_types[CST_MARKET_LOW].group=GROUP_MARKET;
-    main_types[CST_MARKET_LOW].graphic
-	    =load_graphic(CST_MARKET_LOW_G);
+    main_types[CST_MARKET_MED].group = GROUP_MARKET;
+    main_types[CST_MARKET_MED].graphic = load_graphic(CST_MARKET_MED_G);
 
-    main_types[CST_MARKET_MED].group=GROUP_MARKET;
-    main_types[CST_MARKET_MED].graphic
-	    =load_graphic(CST_MARKET_MED_G);
+    main_types[CST_MARKET_FULL].group = GROUP_MARKET;
+    main_types[CST_MARKET_FULL].graphic = load_graphic(CST_MARKET_FULL_G);
 
-    main_types[CST_MARKET_FULL].group=GROUP_MARKET;
-    main_types[CST_MARKET_FULL].graphic
-	    =load_graphic(CST_MARKET_FULL_G);
+    main_types[CST_TRACK_LR].group = GROUP_TRACK;
+    main_types[CST_TRACK_LR].graphic = load_graphic(CST_TRACK_LR_G);
 
-    main_types[CST_TRACK_LR].group=GROUP_TRACK;
-    main_types[CST_TRACK_LR].graphic=load_graphic(CST_TRACK_LR_G);
+    main_types[CST_TRACK_LU].group = GROUP_TRACK;
+    main_types[CST_TRACK_LU].graphic = load_graphic(CST_TRACK_LU_G);
 
-    main_types[CST_TRACK_LU].group=GROUP_TRACK;
-    main_types[CST_TRACK_LU].graphic=load_graphic(CST_TRACK_LU_G);
+    main_types[CST_TRACK_LD].group = GROUP_TRACK;
+    main_types[CST_TRACK_LD].graphic = load_graphic(CST_TRACK_LD_G);
 
-    main_types[CST_TRACK_LD].group=GROUP_TRACK;
-    main_types[CST_TRACK_LD].graphic=load_graphic(CST_TRACK_LD_G);
+    main_types[CST_TRACK_UD].group = GROUP_TRACK;
+    main_types[CST_TRACK_UD].graphic = load_graphic(CST_TRACK_UD_G);
 
-    main_types[CST_TRACK_UD].group=GROUP_TRACK;
-    main_types[CST_TRACK_UD].graphic=load_graphic(CST_TRACK_UD_G);
+    main_types[CST_TRACK_UR].group = GROUP_TRACK;
+    main_types[CST_TRACK_UR].graphic = load_graphic(CST_TRACK_UR_G);
 
-    main_types[CST_TRACK_UR].group=GROUP_TRACK;
-    main_types[CST_TRACK_UR].graphic=load_graphic(CST_TRACK_UR_G);
+    main_types[CST_TRACK_DR].group = GROUP_TRACK;
+    main_types[CST_TRACK_DR].graphic = load_graphic(CST_TRACK_DR_G);
 
-    main_types[CST_TRACK_DR].group=GROUP_TRACK;
-    main_types[CST_TRACK_DR].graphic=load_graphic(CST_TRACK_DR_G);
+    main_types[CST_TRACK_LUR].group = GROUP_TRACK;
+    main_types[CST_TRACK_LUR].graphic = load_graphic(CST_TRACK_LUR_G);
 
-    main_types[CST_TRACK_LUR].group=GROUP_TRACK;
-    main_types[CST_TRACK_LUR].graphic=load_graphic(CST_TRACK_LUR_G);
+    main_types[CST_TRACK_LDR].group = GROUP_TRACK;
+    main_types[CST_TRACK_LDR].graphic = load_graphic(CST_TRACK_LDR_G);
 
-    main_types[CST_TRACK_LDR].group=GROUP_TRACK;
-    main_types[CST_TRACK_LDR].graphic=load_graphic(CST_TRACK_LDR_G);
+    main_types[CST_TRACK_LUD].group = GROUP_TRACK;
+    main_types[CST_TRACK_LUD].graphic = load_graphic(CST_TRACK_LUD_G);
 
-    main_types[CST_TRACK_LUD].group=GROUP_TRACK;
-    main_types[CST_TRACK_LUD].graphic=load_graphic(CST_TRACK_LUD_G);
+    main_types[CST_TRACK_UDR].group = GROUP_TRACK;
+    main_types[CST_TRACK_UDR].graphic = load_graphic(CST_TRACK_UDR_G);
 
-    main_types[CST_TRACK_UDR].group=GROUP_TRACK;
-    main_types[CST_TRACK_UDR].graphic=load_graphic(CST_TRACK_UDR_G);
+    main_types[CST_TRACK_LUDR].group = GROUP_TRACK;
+    main_types[CST_TRACK_LUDR].graphic = load_graphic(CST_TRACK_LUDR_G);
 
-    main_types[CST_TRACK_LUDR].group=GROUP_TRACK;
-    main_types[CST_TRACK_LUDR].graphic=load_graphic(CST_TRACK_LUDR_G);
+    main_types[CST_COALMINE_EMPTY].group = GROUP_COALMINE;
+    main_types[CST_COALMINE_EMPTY].graphic = load_graphic(CST_COALMINE_EMPTY_G);
 
-    main_types[CST_COALMINE_EMPTY].group=GROUP_COALMINE;
-    main_types[CST_COALMINE_EMPTY].graphic
-	    =load_graphic(CST_COALMINE_EMPTY_G);
+    prog_box("", 25);
 
-    prog_box("",25);
+    main_types[CST_COALMINE_LOW].group = GROUP_COALMINE;
+    main_types[CST_COALMINE_LOW].graphic = load_graphic(CST_COALMINE_LOW_G);
 
-    main_types[CST_COALMINE_LOW].group=GROUP_COALMINE;
-    main_types[CST_COALMINE_LOW].graphic=load_graphic(CST_COALMINE_LOW_G);
+    main_types[CST_COALMINE_MED].group = GROUP_COALMINE;
+    main_types[CST_COALMINE_MED].graphic = load_graphic(CST_COALMINE_MED_G);
 
-    main_types[CST_COALMINE_MED].group=GROUP_COALMINE;
-    main_types[CST_COALMINE_MED].graphic=load_graphic(CST_COALMINE_MED_G);
+    main_types[CST_COALMINE_FULL].group = GROUP_COALMINE;
+    main_types[CST_COALMINE_FULL].graphic = load_graphic(CST_COALMINE_FULL_G);
 
-    main_types[CST_COALMINE_FULL].group=GROUP_COALMINE;
-    main_types[CST_COALMINE_FULL].graphic
-	    =load_graphic(CST_COALMINE_FULL_G);
+    main_types[CST_RAIL_LR].group = GROUP_RAIL;
+    main_types[CST_RAIL_LR].graphic = load_graphic(CST_RAIL_LR_G);
 
-    main_types[CST_RAIL_LR].group=GROUP_RAIL;
-    main_types[CST_RAIL_LR].graphic=load_graphic(CST_RAIL_LR_G);
+    main_types[CST_RAIL_LU].group = GROUP_RAIL;
+    main_types[CST_RAIL_LU].graphic = load_graphic(CST_RAIL_LU_G);
 
-    main_types[CST_RAIL_LU].group=GROUP_RAIL;
-    main_types[CST_RAIL_LU].graphic=load_graphic(CST_RAIL_LU_G);
+    main_types[CST_RAIL_LD].group = GROUP_RAIL;
+    main_types[CST_RAIL_LD].graphic = load_graphic(CST_RAIL_LD_G);
 
-    main_types[CST_RAIL_LD].group=GROUP_RAIL;
-    main_types[CST_RAIL_LD].graphic=load_graphic(CST_RAIL_LD_G);
+    main_types[CST_RAIL_UD].group = GROUP_RAIL;
+    main_types[CST_RAIL_UD].graphic = load_graphic(CST_RAIL_UD_G);
 
-    main_types[CST_RAIL_UD].group=GROUP_RAIL;
-    main_types[CST_RAIL_UD].graphic=load_graphic(CST_RAIL_UD_G);
+    main_types[CST_RAIL_UR].group = GROUP_RAIL;
+    main_types[CST_RAIL_UR].graphic = load_graphic(CST_RAIL_UR_G);
 
-    main_types[CST_RAIL_UR].group=GROUP_RAIL;
-    main_types[CST_RAIL_UR].graphic=load_graphic(CST_RAIL_UR_G);
+    main_types[CST_RAIL_DR].group = GROUP_RAIL;
+    main_types[CST_RAIL_DR].graphic = load_graphic(CST_RAIL_DR_G);
 
-    main_types[CST_RAIL_DR].group=GROUP_RAIL;
-    main_types[CST_RAIL_DR].graphic=load_graphic(CST_RAIL_DR_G);
+    main_types[CST_RAIL_LUR].group = GROUP_RAIL;
+    main_types[CST_RAIL_LUR].graphic = load_graphic(CST_RAIL_LUR_G);
 
-    main_types[CST_RAIL_LUR].group=GROUP_RAIL;
-    main_types[CST_RAIL_LUR].graphic=load_graphic(CST_RAIL_LUR_G);
+    main_types[CST_RAIL_LDR].group = GROUP_RAIL;
+    main_types[CST_RAIL_LDR].graphic = load_graphic(CST_RAIL_LDR_G);
 
-    main_types[CST_RAIL_LDR].group=GROUP_RAIL;
-    main_types[CST_RAIL_LDR].graphic=load_graphic(CST_RAIL_LDR_G);
+    main_types[CST_RAIL_LUD].group = GROUP_RAIL;
+    main_types[CST_RAIL_LUD].graphic = load_graphic(CST_RAIL_LUD_G);
 
-    main_types[CST_RAIL_LUD].group=GROUP_RAIL;
-    main_types[CST_RAIL_LUD].graphic=load_graphic(CST_RAIL_LUD_G);
+    prog_box("", 30);
 
-    prog_box("",30);
+    main_types[CST_RAIL_UDR].group = GROUP_RAIL;
+    main_types[CST_RAIL_UDR].graphic = load_graphic(CST_RAIL_UDR_G);
 
-    main_types[CST_RAIL_UDR].group=GROUP_RAIL;
-    main_types[CST_RAIL_UDR].graphic=load_graphic(CST_RAIL_UDR_G);
+    main_types[CST_RAIL_LUDR].group = GROUP_RAIL;
+    main_types[CST_RAIL_LUDR].graphic = load_graphic(CST_RAIL_LUDR_G);
 
-    main_types[CST_RAIL_LUDR].group=GROUP_RAIL;
-    main_types[CST_RAIL_LUDR].graphic=load_graphic(CST_RAIL_LUDR_G);
+    main_types[CST_ROAD_LR].group = GROUP_ROAD;
+    main_types[CST_ROAD_LR].graphic = load_graphic(CST_ROAD_LR_G);
 
-    main_types[CST_ROAD_LR].group=GROUP_ROAD;
-    main_types[CST_ROAD_LR].graphic=load_graphic(CST_ROAD_LR_G);
+    main_types[CST_ROAD_LU].group = GROUP_ROAD;
+    main_types[CST_ROAD_LU].graphic = load_graphic(CST_ROAD_LU_G);
 
-    main_types[CST_ROAD_LU].group=GROUP_ROAD;
-    main_types[CST_ROAD_LU].graphic=load_graphic(CST_ROAD_LU_G);
+    main_types[CST_ROAD_LD].group = GROUP_ROAD;
+    main_types[CST_ROAD_LD].graphic = load_graphic(CST_ROAD_LD_G);
 
-    main_types[CST_ROAD_LD].group=GROUP_ROAD;
-    main_types[CST_ROAD_LD].graphic=load_graphic(CST_ROAD_LD_G);
+    main_types[CST_ROAD_UD].group = GROUP_ROAD;
+    main_types[CST_ROAD_UD].graphic = load_graphic(CST_ROAD_UD_G);
 
-    main_types[CST_ROAD_UD].group=GROUP_ROAD;
-    main_types[CST_ROAD_UD].graphic=load_graphic(CST_ROAD_UD_G);
+    main_types[CST_ROAD_UR].group = GROUP_ROAD;
+    main_types[CST_ROAD_UR].graphic = load_graphic(CST_ROAD_UR_G);
 
-    main_types[CST_ROAD_UR].group=GROUP_ROAD;
-    main_types[CST_ROAD_UR].graphic=load_graphic(CST_ROAD_UR_G);
+    main_types[CST_ROAD_DR].group = GROUP_ROAD;
+    main_types[CST_ROAD_DR].graphic = load_graphic(CST_ROAD_DR_G);
 
-    main_types[CST_ROAD_DR].group=GROUP_ROAD;
-    main_types[CST_ROAD_DR].graphic=load_graphic(CST_ROAD_DR_G);
+    main_types[CST_ROAD_LUR].group = GROUP_ROAD;
+    main_types[CST_ROAD_LUR].graphic = load_graphic(CST_ROAD_LUR_G);
 
-    main_types[CST_ROAD_LUR].group=GROUP_ROAD;
-    main_types[CST_ROAD_LUR].graphic=load_graphic(CST_ROAD_LUR_G);
+    main_types[CST_ROAD_LDR].group = GROUP_ROAD;
+    main_types[CST_ROAD_LDR].graphic = load_graphic(CST_ROAD_LDR_G);
 
-    main_types[CST_ROAD_LDR].group=GROUP_ROAD;
-    main_types[CST_ROAD_LDR].graphic=load_graphic(CST_ROAD_LDR_G);
+    main_types[CST_ROAD_LUD].group = GROUP_ROAD;
+    main_types[CST_ROAD_LUD].graphic = load_graphic(CST_ROAD_LUD_G);
 
-    main_types[CST_ROAD_LUD].group=GROUP_ROAD;
-    main_types[CST_ROAD_LUD].graphic=load_graphic(CST_ROAD_LUD_G);
+    main_types[CST_ROAD_UDR].group = GROUP_ROAD;
+    main_types[CST_ROAD_UDR].graphic = load_graphic(CST_ROAD_UDR_G);
 
-    main_types[CST_ROAD_UDR].group=GROUP_ROAD;
-    main_types[CST_ROAD_UDR].graphic=load_graphic(CST_ROAD_UDR_G);
+    main_types[CST_ROAD_LUDR].group = GROUP_ROAD;
+    main_types[CST_ROAD_LUDR].graphic = load_graphic(CST_ROAD_LUDR_G);
 
-    main_types[CST_ROAD_LUDR].group=GROUP_ROAD;
-    main_types[CST_ROAD_LUDR].graphic=load_graphic(CST_ROAD_LUDR_G);
+    main_types[CST_INDUSTRY_L_C].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_C].graphic = load_graphic(CST_INDUSTRY_L_C_G);
 
-    main_types[CST_INDUSTRY_L_C].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_C].graphic
-	    =load_graphic(CST_INDUSTRY_L_C_G);
+    main_types[CST_INDUSTRY_L_Q1].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_Q1].graphic = load_graphic(CST_INDUSTRY_L_Q1_G);
 
-    main_types[CST_INDUSTRY_L_Q1].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_Q1].graphic
-	    =load_graphic(CST_INDUSTRY_L_Q1_G);
+    main_types[CST_INDUSTRY_L_Q2].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_Q2].graphic = load_graphic(CST_INDUSTRY_L_Q2_G);
 
-    main_types[CST_INDUSTRY_L_Q2].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_Q2].graphic
-	    =load_graphic(CST_INDUSTRY_L_Q2_G);
+    main_types[CST_INDUSTRY_L_Q3].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_Q3].graphic = load_graphic(CST_INDUSTRY_L_Q3_G);
 
-    main_types[CST_INDUSTRY_L_Q3].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_Q3].graphic
-	    =load_graphic(CST_INDUSTRY_L_Q3_G);
+    main_types[CST_INDUSTRY_L_Q4].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_Q4].graphic = load_graphic(CST_INDUSTRY_L_Q4_G);
 
-    main_types[CST_INDUSTRY_L_Q4].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_Q4].graphic
-	    =load_graphic(CST_INDUSTRY_L_Q4_G);
+    main_types[CST_INDUSTRY_L_L1].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_L1].graphic = load_graphic(CST_INDUSTRY_L_L1_G);
 
-    main_types[CST_INDUSTRY_L_L1].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_L1].graphic
-	    =load_graphic(CST_INDUSTRY_L_L1_G);
+    main_types[CST_INDUSTRY_L_L2].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_L2].graphic = load_graphic(CST_INDUSTRY_L_L2_G);
 
-    main_types[CST_INDUSTRY_L_L2].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_L2].graphic
-	    =load_graphic(CST_INDUSTRY_L_L2_G);
+    main_types[CST_INDUSTRY_L_L3].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_L3].graphic = load_graphic(CST_INDUSTRY_L_L3_G);
 
-    main_types[CST_INDUSTRY_L_L3].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_L3].graphic
-	    =load_graphic(CST_INDUSTRY_L_L3_G);
+    main_types[CST_INDUSTRY_L_L4].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_L4].graphic = load_graphic(CST_INDUSTRY_L_L4_G);
 
-    main_types[CST_INDUSTRY_L_L4].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_L4].graphic
-	    =load_graphic(CST_INDUSTRY_L_L4_G);
+    main_types[CST_INDUSTRY_L_M1].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_M1].graphic = load_graphic(CST_INDUSTRY_L_M1_G);
 
+    main_types[CST_INDUSTRY_L_M2].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_M2].graphic = load_graphic(CST_INDUSTRY_L_M2_G);
 
-    main_types[CST_INDUSTRY_L_M1].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_M1].graphic
-	    =load_graphic(CST_INDUSTRY_L_M1_G);
+    main_types[CST_INDUSTRY_L_M3].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_M3].graphic = load_graphic(CST_INDUSTRY_L_M3_G);
 
-    main_types[CST_INDUSTRY_L_M2].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_M2].graphic
-	    =load_graphic(CST_INDUSTRY_L_M2_G);
+    main_types[CST_INDUSTRY_L_M4].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_M4].graphic = load_graphic(CST_INDUSTRY_L_M4_G);
 
-    main_types[CST_INDUSTRY_L_M3].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_M3].graphic
-	    =load_graphic(CST_INDUSTRY_L_M3_G);
+    main_types[CST_INDUSTRY_L_H1].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_H1].graphic = load_graphic(CST_INDUSTRY_L_H1_G);
 
-    main_types[CST_INDUSTRY_L_M4].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_M4].graphic
-	    =load_graphic(CST_INDUSTRY_L_M4_G);
+    main_types[CST_INDUSTRY_L_H2].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_H2].graphic = load_graphic(CST_INDUSTRY_L_H2_G);
 
+    main_types[CST_INDUSTRY_L_H3].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_H3].graphic = load_graphic(CST_INDUSTRY_L_H3_G);
 
-    main_types[CST_INDUSTRY_L_H1].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_H1].graphic
-	    =load_graphic(CST_INDUSTRY_L_H1_G);
+    main_types[CST_INDUSTRY_L_H4].group = GROUP_INDUSTRY_L;
+    main_types[CST_INDUSTRY_L_H4].graphic = load_graphic(CST_INDUSTRY_L_H4_G);
 
-    main_types[CST_INDUSTRY_L_H2].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_H2].graphic
-	    =load_graphic(CST_INDUSTRY_L_H2_G);
+    main_types[CST_COMMUNE_1].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_1].graphic = load_graphic(CST_COMMUNE_1_G);
 
-    main_types[CST_INDUSTRY_L_H3].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_H3].graphic
-	    =load_graphic(CST_INDUSTRY_L_H3_G);
+    main_types[CST_COMMUNE_2].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_2].graphic = load_graphic(CST_COMMUNE_2_G);
 
-    main_types[CST_INDUSTRY_L_H4].group=GROUP_INDUSTRY_L;
-    main_types[CST_INDUSTRY_L_H4].graphic
-	    =load_graphic(CST_INDUSTRY_L_H4_G);
+    main_types[CST_COMMUNE_3].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_3].graphic = load_graphic(CST_COMMUNE_3_G);
 
-    main_types[CST_COMMUNE_1].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_1].graphic=load_graphic(CST_COMMUNE_1_G);
+    main_types[CST_COMMUNE_4].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_4].graphic = load_graphic(CST_COMMUNE_4_G);
 
-    main_types[CST_COMMUNE_2].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_2].graphic=load_graphic(CST_COMMUNE_2_G);
+    main_types[CST_COMMUNE_5].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_5].graphic = load_graphic(CST_COMMUNE_5_G);
 
-    main_types[CST_COMMUNE_3].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_3].graphic=load_graphic(CST_COMMUNE_3_G);
+    main_types[CST_COMMUNE_6].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_6].graphic = load_graphic(CST_COMMUNE_6_G);
 
-    main_types[CST_COMMUNE_4].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_4].graphic=load_graphic(CST_COMMUNE_4_G);
+    main_types[CST_COMMUNE_7].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_7].graphic = load_graphic(CST_COMMUNE_7_G);
 
-    main_types[CST_COMMUNE_5].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_5].graphic=load_graphic(CST_COMMUNE_5_G);
+    main_types[CST_COMMUNE_8].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_8].graphic = load_graphic(CST_COMMUNE_8_G);
 
-    main_types[CST_COMMUNE_6].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_6].graphic=load_graphic(CST_COMMUNE_6_G);
+    main_types[CST_COMMUNE_9].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_9].graphic = load_graphic(CST_COMMUNE_9_G);
 
-    main_types[CST_COMMUNE_7].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_7].graphic=load_graphic(CST_COMMUNE_7_G);
+    main_types[CST_COMMUNE_10].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_10].graphic = load_graphic(CST_COMMUNE_10_G);
 
-    main_types[CST_COMMUNE_8].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_8].graphic=load_graphic(CST_COMMUNE_8_G);
+    main_types[CST_COMMUNE_11].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_11].graphic = load_graphic(CST_COMMUNE_11_G);
 
-    main_types[CST_COMMUNE_9].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_9].graphic=load_graphic(CST_COMMUNE_9_G);
+    main_types[CST_COMMUNE_12].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_12].graphic = load_graphic(CST_COMMUNE_12_G);
 
-    main_types[CST_COMMUNE_10].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_10].graphic=load_graphic(CST_COMMUNE_10_G);
+    main_types[CST_COMMUNE_13].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_13].graphic = load_graphic(CST_COMMUNE_13_G);
 
-    main_types[CST_COMMUNE_11].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_11].graphic=load_graphic(CST_COMMUNE_11_G);
+    main_types[CST_COMMUNE_14].group = GROUP_COMMUNE;
+    main_types[CST_COMMUNE_14].graphic = load_graphic(CST_COMMUNE_14_G);
 
-    main_types[CST_COMMUNE_12].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_12].graphic=load_graphic(CST_COMMUNE_12_G);
+    main_types[CST_UNIVERSITY].group = GROUP_UNIVERSITY;
+    main_types[CST_UNIVERSITY].graphic = load_graphic(CST_UNIVERSITY_G);
 
-    main_types[CST_COMMUNE_13].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_13].graphic=load_graphic(CST_COMMUNE_13_G);
+    main_types[CST_OREMINE_1].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_1].graphic = load_graphic(CST_OREMINE_1_G);
 
-    main_types[CST_COMMUNE_14].group=GROUP_COMMUNE;
-    main_types[CST_COMMUNE_14].graphic=load_graphic(CST_COMMUNE_14_G);
+    main_types[CST_OREMINE_2].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_2].graphic = load_graphic(CST_OREMINE_2_G);
 
-    main_types[CST_UNIVERSITY].group=GROUP_UNIVERSITY;
-    main_types[CST_UNIVERSITY].graphic=load_graphic(CST_UNIVERSITY_G);
+    main_types[CST_OREMINE_3].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_3].graphic = load_graphic(CST_OREMINE_3_G);
 
-    main_types[CST_OREMINE_1].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_1].graphic=load_graphic(CST_OREMINE_1_G);
+    main_types[CST_OREMINE_4].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_4].graphic = load_graphic(CST_OREMINE_4_G);
 
-    main_types[CST_OREMINE_2].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_2].graphic=load_graphic(CST_OREMINE_2_G);
+    main_types[CST_OREMINE_5].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_5].graphic = load_graphic(CST_OREMINE_5_G);
 
-    main_types[CST_OREMINE_3].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_3].graphic=load_graphic(CST_OREMINE_3_G);
+    main_types[CST_OREMINE_6].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_6].graphic = load_graphic(CST_OREMINE_6_G);
 
-    main_types[CST_OREMINE_4].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_4].graphic=load_graphic(CST_OREMINE_4_G);
+    main_types[CST_OREMINE_7].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_7].graphic = load_graphic(CST_OREMINE_7_G);
 
-    main_types[CST_OREMINE_5].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_5].graphic=load_graphic(CST_OREMINE_5_G);
+    main_types[CST_OREMINE_8].group = GROUP_OREMINE;
+    main_types[CST_OREMINE_8].graphic = load_graphic(CST_OREMINE_8_G);
 
-    main_types[CST_OREMINE_6].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_6].graphic=load_graphic(CST_OREMINE_6_G);
+    main_types[CST_TIP_0].group = GROUP_TIP;
+    main_types[CST_TIP_0].graphic = load_graphic(CST_TIP_0_G);
 
-    main_types[CST_OREMINE_7].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_7].graphic=load_graphic(CST_OREMINE_7_G);
+    main_types[CST_TIP_1].group = GROUP_TIP;
+    main_types[CST_TIP_1].graphic = load_graphic(CST_TIP_1_G);
 
-    main_types[CST_OREMINE_8].group=GROUP_OREMINE;
-    main_types[CST_OREMINE_8].graphic=load_graphic(CST_OREMINE_8_G);
+    main_types[CST_TIP_2].group = GROUP_TIP;
+    main_types[CST_TIP_2].graphic = load_graphic(CST_TIP_2_G);
 
-    main_types[CST_TIP_0].group=GROUP_TIP;
-    main_types[CST_TIP_0].graphic=load_graphic(CST_TIP_0_G);
+    main_types[CST_TIP_3].group = GROUP_TIP;
+    main_types[CST_TIP_3].graphic = load_graphic(CST_TIP_3_G);
 
-    main_types[CST_TIP_1].group=GROUP_TIP;
-    main_types[CST_TIP_1].graphic=load_graphic(CST_TIP_1_G);
+    main_types[CST_TIP_4].group = GROUP_TIP;
+    main_types[CST_TIP_4].graphic = load_graphic(CST_TIP_4_G);
 
-    main_types[CST_TIP_2].group=GROUP_TIP;
-    main_types[CST_TIP_2].graphic=load_graphic(CST_TIP_2_G);
+    main_types[CST_TIP_5].group = GROUP_TIP;
+    main_types[CST_TIP_5].graphic = load_graphic(CST_TIP_5_G);
 
-    main_types[CST_TIP_3].group=GROUP_TIP;
-    main_types[CST_TIP_3].graphic=load_graphic(CST_TIP_3_G);
+    main_types[CST_TIP_6].group = GROUP_TIP;
+    main_types[CST_TIP_6].graphic = load_graphic(CST_TIP_6_G);
 
-    main_types[CST_TIP_4].group=GROUP_TIP;
-    main_types[CST_TIP_4].graphic=load_graphic(CST_TIP_4_G);
+    main_types[CST_TIP_7].group = GROUP_TIP;
+    main_types[CST_TIP_7].graphic = load_graphic(CST_TIP_7_G);
 
-    main_types[CST_TIP_5].group=GROUP_TIP;
-    main_types[CST_TIP_5].graphic=load_graphic(CST_TIP_5_G);
+    main_types[CST_TIP_8].group = GROUP_TIP;
+    main_types[CST_TIP_8].graphic = load_graphic(CST_TIP_8_G);
 
-    main_types[CST_TIP_6].group=GROUP_TIP;
-    main_types[CST_TIP_6].graphic=load_graphic(CST_TIP_6_G);
+    main_types[CST_EX_PORT].group = GROUP_PORT;
+    main_types[CST_EX_PORT].graphic = load_graphic(CST_EX_PORT_G);
 
-    main_types[CST_TIP_7].group=GROUP_TIP;
-    main_types[CST_TIP_7].graphic=load_graphic(CST_TIP_7_G);
+    main_types[CST_INDUSTRY_H_C].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_C].graphic = load_graphic(CST_INDUSTRY_H_C_G);
 
-    main_types[CST_TIP_8].group=GROUP_TIP;
-    main_types[CST_TIP_8].graphic=load_graphic(CST_TIP_8_G);
+    main_types[CST_INDUSTRY_H_L1].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L1].graphic = load_graphic(CST_INDUSTRY_H_L1_G);
 
-    main_types[CST_EX_PORT].group=GROUP_PORT;
-    main_types[CST_EX_PORT].graphic=load_graphic(CST_EX_PORT_G);
+    main_types[CST_INDUSTRY_H_L2].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L2].graphic = load_graphic(CST_INDUSTRY_H_L2_G);
 
-    main_types[CST_INDUSTRY_H_C].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_C].graphic
-	    =load_graphic(CST_INDUSTRY_H_C_G);
+    main_types[CST_INDUSTRY_H_L3].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L3].graphic = load_graphic(CST_INDUSTRY_H_L3_G);
 
-    main_types[CST_INDUSTRY_H_L1].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L1].graphic
-	    =load_graphic(CST_INDUSTRY_H_L1_G);
+    main_types[CST_INDUSTRY_H_L4].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L4].graphic = load_graphic(CST_INDUSTRY_H_L4_G);
 
-    main_types[CST_INDUSTRY_H_L2].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L2].graphic
-	    =load_graphic(CST_INDUSTRY_H_L2_G);
+    main_types[CST_INDUSTRY_H_L5].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L5].graphic = load_graphic(CST_INDUSTRY_H_L5_G);
 
-    main_types[CST_INDUSTRY_H_L3].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L3].graphic
-	    =load_graphic(CST_INDUSTRY_H_L3_G);
+    main_types[CST_INDUSTRY_H_L6].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L6].graphic = load_graphic(CST_INDUSTRY_H_L6_G);
 
-    main_types[CST_INDUSTRY_H_L4].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L4].graphic
-	    =load_graphic(CST_INDUSTRY_H_L4_G);
+    main_types[CST_INDUSTRY_H_L7].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L7].graphic = load_graphic(CST_INDUSTRY_H_L7_G);
 
-    main_types[CST_INDUSTRY_H_L5].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L5].graphic
-	    =load_graphic(CST_INDUSTRY_H_L5_G);
+    main_types[CST_INDUSTRY_H_L8].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_L8].graphic = load_graphic(CST_INDUSTRY_H_L8_G);
 
-    main_types[CST_INDUSTRY_H_L6].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L6].graphic
-	    =load_graphic(CST_INDUSTRY_H_L6_G);
+    main_types[CST_INDUSTRY_H_M1].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M1].graphic = load_graphic(CST_INDUSTRY_H_M1_G);
 
-    main_types[CST_INDUSTRY_H_L7].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L7].graphic
-	    =load_graphic(CST_INDUSTRY_H_L7_G);
+    main_types[CST_INDUSTRY_H_M2].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M2].graphic = load_graphic(CST_INDUSTRY_H_M2_G);
 
-    main_types[CST_INDUSTRY_H_L8].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_L8].graphic
-	    =load_graphic(CST_INDUSTRY_H_L8_G);
+    main_types[CST_INDUSTRY_H_M3].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M3].graphic = load_graphic(CST_INDUSTRY_H_M3_G);
 
+    main_types[CST_INDUSTRY_H_M4].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M4].graphic = load_graphic(CST_INDUSTRY_H_M4_G);
 
-    main_types[CST_INDUSTRY_H_M1].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M1].graphic
-	    =load_graphic(CST_INDUSTRY_H_M1_G);
+    main_types[CST_INDUSTRY_H_M5].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M5].graphic = load_graphic(CST_INDUSTRY_H_M5_G);
 
-    main_types[CST_INDUSTRY_H_M2].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M2].graphic
-	    =load_graphic(CST_INDUSTRY_H_M2_G);
+    main_types[CST_INDUSTRY_H_M6].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M6].graphic = load_graphic(CST_INDUSTRY_H_M6_G);
 
-    main_types[CST_INDUSTRY_H_M3].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M3].graphic
-	    =load_graphic(CST_INDUSTRY_H_M3_G);
+    main_types[CST_INDUSTRY_H_M7].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M7].graphic = load_graphic(CST_INDUSTRY_H_M7_G);
 
-    main_types[CST_INDUSTRY_H_M4].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M4].graphic
-	    =load_graphic(CST_INDUSTRY_H_M4_G);
+    main_types[CST_INDUSTRY_H_M8].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_M8].graphic = load_graphic(CST_INDUSTRY_H_M8_G);
 
-    main_types[CST_INDUSTRY_H_M5].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M5].graphic
-	    =load_graphic(CST_INDUSTRY_H_M5_G);
+    main_types[CST_INDUSTRY_H_H1].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H1].graphic = load_graphic(CST_INDUSTRY_H_H1_G);
 
-    main_types[CST_INDUSTRY_H_M6].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M6].graphic
-	    =load_graphic(CST_INDUSTRY_H_M6_G);
+    main_types[CST_INDUSTRY_H_H2].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H2].graphic = load_graphic(CST_INDUSTRY_H_H2_G);
 
-    main_types[CST_INDUSTRY_H_M7].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M7].graphic
-	    =load_graphic(CST_INDUSTRY_H_M7_G);
+    main_types[CST_INDUSTRY_H_H3].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H3].graphic = load_graphic(CST_INDUSTRY_H_H3_G);
 
-    main_types[CST_INDUSTRY_H_M8].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_M8].graphic
-	    =load_graphic(CST_INDUSTRY_H_M8_G);
+    main_types[CST_INDUSTRY_H_H4].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H4].graphic = load_graphic(CST_INDUSTRY_H_H4_G);
 
-    main_types[CST_INDUSTRY_H_H1].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H1].graphic
-	    =load_graphic(CST_INDUSTRY_H_H1_G);
+    main_types[CST_INDUSTRY_H_H5].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H5].graphic = load_graphic(CST_INDUSTRY_H_H5_G);
 
-    main_types[CST_INDUSTRY_H_H2].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H2].graphic
-	    =load_graphic(CST_INDUSTRY_H_H2_G);
+    main_types[CST_INDUSTRY_H_H6].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H6].graphic = load_graphic(CST_INDUSTRY_H_H6_G);
 
-    main_types[CST_INDUSTRY_H_H3].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H3].graphic
-	    =load_graphic(CST_INDUSTRY_H_H3_G);
+    main_types[CST_INDUSTRY_H_H7].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H7].graphic = load_graphic(CST_INDUSTRY_H_H7_G);
 
-    main_types[CST_INDUSTRY_H_H4].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H4].graphic
-	    =load_graphic(CST_INDUSTRY_H_H4_G);
+    main_types[CST_INDUSTRY_H_H8].group = GROUP_INDUSTRY_H;
+    main_types[CST_INDUSTRY_H_H8].graphic = load_graphic(CST_INDUSTRY_H_H8_G);
 
-    main_types[CST_INDUSTRY_H_H5].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H5].graphic
-	    =load_graphic(CST_INDUSTRY_H_H5_G);
+    main_types[CST_PARKLAND_PLANE].group = GROUP_PARKLAND;
+    main_types[CST_PARKLAND_PLANE].graphic = load_graphic(CST_PARKLAND_PLANE_G);
 
-    main_types[CST_INDUSTRY_H_H6].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H6].graphic
-	    =load_graphic(CST_INDUSTRY_H_H6_G);
+    prog_box("", 50);
 
-    main_types[CST_INDUSTRY_H_H7].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H7].graphic
-	    =load_graphic(CST_INDUSTRY_H_H7_G);
+    main_types[CST_PARKLAND_LAKE].group = GROUP_PARKLAND;
+    main_types[CST_PARKLAND_LAKE].graphic = load_graphic(CST_PARKLAND_LAKE_G);
 
-    main_types[CST_INDUSTRY_H_H8].group=GROUP_INDUSTRY_H;
-    main_types[CST_INDUSTRY_H_H8].graphic
-	    =load_graphic(CST_INDUSTRY_H_H8_G);
+    main_types[CST_RECYCLE].group = GROUP_RECYCLE;
+    main_types[CST_RECYCLE].graphic = load_graphic(CST_RECYCLE_G);
 
-    main_types[CST_PARKLAND_PLANE].group=GROUP_PARKLAND;
-    main_types[CST_PARKLAND_PLANE].graphic
-	    =load_graphic(CST_PARKLAND_PLANE_G);
+    main_types[CST_WATER].group = GROUP_WATER;
+    main_types[CST_WATER].graphic = load_graphic(CST_WATER_G);
 
-    prog_box("",50);
+    main_types[CST_WATER_D].group = GROUP_WATER;
+    main_types[CST_WATER_D].graphic = load_graphic(CST_WATER_D_G);
 
-    main_types[CST_PARKLAND_LAKE].group=GROUP_PARKLAND;
-    main_types[CST_PARKLAND_LAKE].graphic
-	    =load_graphic(CST_PARKLAND_LAKE_G);
+    main_types[CST_WATER_R].group = GROUP_WATER;
+    main_types[CST_WATER_R].graphic = load_graphic(CST_WATER_R_G);
 
-    main_types[CST_RECYCLE].group=GROUP_RECYCLE;
-    main_types[CST_RECYCLE].graphic=load_graphic(CST_RECYCLE_G);
+    main_types[CST_WATER_U].group = GROUP_WATER;
+    main_types[CST_WATER_U].graphic = load_graphic(CST_WATER_U_G);
 
-    main_types[CST_WATER].group=GROUP_WATER;
-    main_types[CST_WATER].graphic=load_graphic(CST_WATER_G);
+    main_types[CST_WATER_L].group = GROUP_WATER;
+    main_types[CST_WATER_L].graphic = load_graphic(CST_WATER_L_G);
 
-    main_types[CST_WATER_D].group=GROUP_WATER;
-    main_types[CST_WATER_D].graphic=load_graphic(CST_WATER_D_G);
+    main_types[CST_WATER_LR].group = GROUP_WATER;
+    main_types[CST_WATER_LR].graphic = load_graphic(CST_WATER_LR_G);
 
-    main_types[CST_WATER_R].group=GROUP_WATER;
-    main_types[CST_WATER_R].graphic=load_graphic(CST_WATER_R_G);
+    main_types[CST_WATER_UD].group = GROUP_WATER;
+    main_types[CST_WATER_UD].graphic = load_graphic(CST_WATER_UD_G);
 
-    main_types[CST_WATER_U].group=GROUP_WATER;
-    main_types[CST_WATER_U].graphic=load_graphic(CST_WATER_U_G);
+    main_types[CST_WATER_LD].group = GROUP_WATER;
+    main_types[CST_WATER_LD].graphic = load_graphic(CST_WATER_LD_G);
 
-    main_types[CST_WATER_L].group=GROUP_WATER;
-    main_types[CST_WATER_L].graphic=load_graphic(CST_WATER_L_G);
+    main_types[CST_WATER_RD].group = GROUP_WATER;
+    main_types[CST_WATER_RD].graphic = load_graphic(CST_WATER_RD_G);
 
-    main_types[CST_WATER_LR].group=GROUP_WATER;
-    main_types[CST_WATER_LR].graphic=load_graphic(CST_WATER_LR_G);
+    main_types[CST_WATER_LU].group = GROUP_WATER;
+    main_types[CST_WATER_LU].graphic = load_graphic(CST_WATER_LU_G);
 
-    main_types[CST_WATER_UD].group=GROUP_WATER;
-    main_types[CST_WATER_UD].graphic=load_graphic(CST_WATER_UD_G);
+    main_types[CST_WATER_UR].group = GROUP_WATER;
+    main_types[CST_WATER_UR].graphic = load_graphic(CST_WATER_UR_G);
 
-    main_types[CST_WATER_LD].group=GROUP_WATER;
-    main_types[CST_WATER_LD].graphic=load_graphic(CST_WATER_LD_G);
+    main_types[CST_WATER_LUD].group = GROUP_WATER;
+    main_types[CST_WATER_LUD].graphic = load_graphic(CST_WATER_LUD_G);
 
-    main_types[CST_WATER_RD].group=GROUP_WATER;
-    main_types[CST_WATER_RD].graphic=load_graphic(CST_WATER_RD_G);
+    main_types[CST_WATER_LRD].group = GROUP_WATER;
+    main_types[CST_WATER_LRD].graphic = load_graphic(CST_WATER_LRD_G);
 
-    main_types[CST_WATER_LU].group=GROUP_WATER;
-    main_types[CST_WATER_LU].graphic=load_graphic(CST_WATER_LU_G);
+    main_types[CST_WATER_LUR].group = GROUP_WATER;
+    main_types[CST_WATER_LUR].graphic = load_graphic(CST_WATER_LUR_G);
 
-    main_types[CST_WATER_UR].group=GROUP_WATER;
-    main_types[CST_WATER_UR].graphic=load_graphic(CST_WATER_UR_G);
+    main_types[CST_WATER_URD].group = GROUP_WATER;
+    main_types[CST_WATER_URD].graphic = load_graphic(CST_WATER_URD_G);
 
-    main_types[CST_WATER_LUD].group=GROUP_WATER;
-    main_types[CST_WATER_LUD].graphic=load_graphic(CST_WATER_LUD_G);
+    main_types[CST_WATER_LURD].group = GROUP_WATER;
+    main_types[CST_WATER_LURD].graphic = load_graphic(CST_WATER_LURD_G);
 
-    main_types[CST_WATER_LRD].group=GROUP_WATER;
-    main_types[CST_WATER_LRD].graphic=load_graphic(CST_WATER_LRD_G);
+    main_types[CST_WATERWELL].group = GROUP_WATERWELL;
+    main_types[CST_WATERWELL].graphic = load_graphic(CST_WATERWELL_G);
 
-    main_types[CST_WATER_LUR].group=GROUP_WATER;
-    main_types[CST_WATER_LUR].graphic=load_graphic(CST_WATER_LUR_G);
+    main_types[CST_HEALTH].group = GROUP_HEALTH;
+    main_types[CST_HEALTH].graphic = load_graphic(CST_HEALTH_G);
 
-    main_types[CST_WATER_URD].group=GROUP_WATER;
-    main_types[CST_WATER_URD].graphic=load_graphic(CST_WATER_URD_G);
+    main_types[CST_ROCKET_1].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_1].graphic = load_graphic(CST_ROCKET_1_G);
 
-    main_types[CST_WATER_LURD].group=GROUP_WATER;
-    main_types[CST_WATER_LURD].graphic=load_graphic(CST_WATER_LURD_G);
+    main_types[CST_ROCKET_2].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_2].graphic = load_graphic(CST_ROCKET_2_G);
 
-    main_types[CST_WATERWELL].group=GROUP_WATERWELL;
-    main_types[CST_WATERWELL].graphic=load_graphic(CST_WATERWELL_G);
+    main_types[CST_ROCKET_3].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_3].graphic = load_graphic(CST_ROCKET_3_G);
 
-    main_types[CST_HEALTH].group=GROUP_HEALTH;
-    main_types[CST_HEALTH].graphic=load_graphic(CST_HEALTH_G);
+    main_types[CST_ROCKET_4].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_4].graphic = load_graphic(CST_ROCKET_4_G);
 
-    main_types[CST_ROCKET_1].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_1].graphic=load_graphic(CST_ROCKET_1_G);
+    prog_box("", 60);
 
-    main_types[CST_ROCKET_2].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_2].graphic=load_graphic(CST_ROCKET_2_G);
+    main_types[CST_ROCKET_5].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_5].graphic = load_graphic(CST_ROCKET_5_G);
 
-    main_types[CST_ROCKET_3].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_3].graphic=load_graphic(CST_ROCKET_3_G);
+    main_types[CST_ROCKET_6].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_6].graphic = load_graphic(CST_ROCKET_6_G);
 
-    main_types[CST_ROCKET_4].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_4].graphic=load_graphic(CST_ROCKET_4_G);
+    main_types[CST_ROCKET_7].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_7].graphic = load_graphic(CST_ROCKET_7_G);
 
-    prog_box("",60);
+    main_types[CST_ROCKET_FLOWN].group = GROUP_ROCKET;
+    main_types[CST_ROCKET_FLOWN].graphic = load_graphic(CST_ROCKET_FLOWN_G);
 
-    main_types[CST_ROCKET_5].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_5].graphic=load_graphic(CST_ROCKET_5_G);
+    main_types[CST_BURNT].group = GROUP_BURNT;
+    main_types[CST_BURNT].graphic = load_graphic(CST_BURNT_G);
 
-    main_types[CST_ROCKET_6].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_6].graphic=load_graphic(CST_ROCKET_6_G);
+    main_types[CST_WINDMILL_1_G].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_1_G].graphic = load_graphic(CST_WINDMILL_1_G_G);
 
-    main_types[CST_ROCKET_7].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_7].graphic=load_graphic(CST_ROCKET_7_G);
+    main_types[CST_WINDMILL_2_G].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_2_G].graphic = load_graphic(CST_WINDMILL_2_G_G);
 
-    main_types[CST_ROCKET_FLOWN].group=GROUP_ROCKET;
-    main_types[CST_ROCKET_FLOWN].graphic
-	    =load_graphic(CST_ROCKET_FLOWN_G);
+    main_types[CST_WINDMILL_3_G].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_3_G].graphic = load_graphic(CST_WINDMILL_3_G_G);
 
+    main_types[CST_WINDMILL_1_RG].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_1_RG].graphic = load_graphic(CST_WINDMILL_1_RG_G);
 
-    main_types[CST_BURNT].group=GROUP_BURNT;
-    main_types[CST_BURNT].graphic=load_graphic(CST_BURNT_G);
+    main_types[CST_WINDMILL_2_RG].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_2_RG].graphic = load_graphic(CST_WINDMILL_2_RG_G);
 
-    main_types[CST_WINDMILL_1_G].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_1_G].graphic
-	    =load_graphic(CST_WINDMILL_1_G_G);
+    main_types[CST_WINDMILL_3_RG].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_3_RG].graphic = load_graphic(CST_WINDMILL_3_RG_G);
 
-    main_types[CST_WINDMILL_2_G].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_2_G].graphic
-	    =load_graphic(CST_WINDMILL_2_G_G);
+    main_types[CST_WINDMILL_1_R].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_1_R].graphic = load_graphic(CST_WINDMILL_1_R_G);
 
-    main_types[CST_WINDMILL_3_G].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_3_G].graphic
-	    =load_graphic(CST_WINDMILL_3_G_G);
+    main_types[CST_WINDMILL_2_R].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_2_R].graphic = load_graphic(CST_WINDMILL_2_R_G);
 
-    main_types[CST_WINDMILL_1_RG].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_1_RG].graphic
-	    =load_graphic(CST_WINDMILL_1_RG_G);
+    main_types[CST_WINDMILL_3_R].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_3_R].graphic = load_graphic(CST_WINDMILL_3_R_G);
 
-    main_types[CST_WINDMILL_2_RG].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_2_RG].graphic
-	    =load_graphic(CST_WINDMILL_2_RG_G);
+    main_types[CST_WINDMILL_1_W].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_1_W].graphic = load_graphic(CST_WINDMILL_1_W_G);
 
-    main_types[CST_WINDMILL_3_RG].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_3_RG].graphic
-	    =load_graphic(CST_WINDMILL_3_RG_G);
+    main_types[CST_WINDMILL_2_W].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_2_W].graphic = load_graphic(CST_WINDMILL_2_W_G);
 
-    main_types[CST_WINDMILL_1_R].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_1_R].graphic
-	    =load_graphic(CST_WINDMILL_1_R_G);
+    main_types[CST_WINDMILL_3_W].group = GROUP_WINDMILL;
+    main_types[CST_WINDMILL_3_W].graphic = load_graphic(CST_WINDMILL_3_W_G);
 
-    main_types[CST_WINDMILL_2_R].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_2_R].graphic
-	    =load_graphic(CST_WINDMILL_2_R_G);
+    main_types[CST_MONUMENT_0].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_0].graphic = load_graphic(CST_MONUMENT_0_G);
 
-    main_types[CST_WINDMILL_3_R].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_3_R].graphic
-	    =load_graphic(CST_WINDMILL_3_R_G);
+    main_types[CST_MONUMENT_1].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_1].graphic = load_graphic(CST_MONUMENT_1_G);
 
-    main_types[CST_WINDMILL_1_W].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_1_W].graphic
-	    =load_graphic(CST_WINDMILL_1_W_G);
+    main_types[CST_MONUMENT_2].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_2].graphic = load_graphic(CST_MONUMENT_2_G);
 
-    main_types[CST_WINDMILL_2_W].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_2_W].graphic
-	    =load_graphic(CST_WINDMILL_2_W_G);
+    main_types[CST_MONUMENT_3].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_3].graphic = load_graphic(CST_MONUMENT_3_G);
 
-    main_types[CST_WINDMILL_3_W].group=GROUP_WINDMILL;
-    main_types[CST_WINDMILL_3_W].graphic
-	    =load_graphic(CST_WINDMILL_3_W_G);
+    main_types[CST_MONUMENT_4].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_4].graphic = load_graphic(CST_MONUMENT_4_G);
 
-    main_types[CST_MONUMENT_0].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_0].graphic=load_graphic(CST_MONUMENT_0_G);
+    main_types[CST_MONUMENT_5].group = GROUP_MONUMENT;
+    main_types[CST_MONUMENT_5].graphic = load_graphic(CST_MONUMENT_5_G);
 
-    main_types[CST_MONUMENT_1].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_1].graphic=load_graphic(CST_MONUMENT_1_G);
+    main_types[CST_SCHOOL].group = GROUP_SCHOOL;
+    main_types[CST_SCHOOL].graphic = load_graphic(CST_SCHOOL_G);
 
-    main_types[CST_MONUMENT_2].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_2].graphic=load_graphic(CST_MONUMENT_2_G);
+    main_types[CST_BLACKSMITH_0].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_0].graphic = load_graphic(CST_BLACKSMITH_0_G);
 
-    main_types[CST_MONUMENT_3].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_3].graphic=load_graphic(CST_MONUMENT_3_G);
+    main_types[CST_BLACKSMITH_1].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_1].graphic = load_graphic(CST_BLACKSMITH_1_G);
 
-    main_types[CST_MONUMENT_4].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_4].graphic=load_graphic(CST_MONUMENT_4_G);
+    main_types[CST_BLACKSMITH_2].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_2].graphic = load_graphic(CST_BLACKSMITH_2_G);
 
-    main_types[CST_MONUMENT_5].group=GROUP_MONUMENT;
-    main_types[CST_MONUMENT_5].graphic=load_graphic(CST_MONUMENT_5_G);
+    main_types[CST_BLACKSMITH_3].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_3].graphic = load_graphic(CST_BLACKSMITH_3_G);
 
-    main_types[CST_SCHOOL].group=GROUP_SCHOOL;
-    main_types[CST_SCHOOL].graphic=load_graphic(CST_SCHOOL_G);
+    main_types[CST_BLACKSMITH_4].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_4].graphic = load_graphic(CST_BLACKSMITH_4_G);
 
-    main_types[CST_BLACKSMITH_0].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_0].graphic
-	    =load_graphic(CST_BLACKSMITH_0_G);
+    main_types[CST_BLACKSMITH_5].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_5].graphic = load_graphic(CST_BLACKSMITH_5_G);
 
-    main_types[CST_BLACKSMITH_1].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_1].graphic
-	    =load_graphic(CST_BLACKSMITH_1_G);
+    main_types[CST_BLACKSMITH_6].group = GROUP_BLACKSMITH;
+    main_types[CST_BLACKSMITH_6].graphic = load_graphic(CST_BLACKSMITH_6_G);
 
-    main_types[CST_BLACKSMITH_2].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_2].graphic
-	    =load_graphic(CST_BLACKSMITH_2_G);
+    prog_box("", 75);
 
-    main_types[CST_BLACKSMITH_3].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_3].graphic
-	    =load_graphic(CST_BLACKSMITH_3_G);
+    main_types[CST_MILL_0].group = GROUP_MILL;
+    main_types[CST_MILL_0].graphic = load_graphic(CST_MILL_0_G);
 
-    main_types[CST_BLACKSMITH_4].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_4].graphic
-	    =load_graphic(CST_BLACKSMITH_4_G);
+    main_types[CST_MILL_1].group = GROUP_MILL;
+    main_types[CST_MILL_1].graphic = load_graphic(CST_MILL_1_G);
 
-    main_types[CST_BLACKSMITH_5].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_5].graphic
-	    =load_graphic(CST_BLACKSMITH_5_G);
+    main_types[CST_MILL_2].group = GROUP_MILL;
+    main_types[CST_MILL_2].graphic = load_graphic(CST_MILL_2_G);
 
-    main_types[CST_BLACKSMITH_6].group=GROUP_BLACKSMITH;
-    main_types[CST_BLACKSMITH_6].graphic
-	    =load_graphic(CST_BLACKSMITH_6_G);
+    main_types[CST_MILL_3].group = GROUP_MILL;
+    main_types[CST_MILL_3].graphic = load_graphic(CST_MILL_3_G);
 
-    prog_box("",75);
+    main_types[CST_MILL_4].group = GROUP_MILL;
+    main_types[CST_MILL_4].graphic = load_graphic(CST_MILL_4_G);
 
-    main_types[CST_MILL_0].group=GROUP_MILL;
-    main_types[CST_MILL_0].graphic=load_graphic(CST_MILL_0_G);
+    main_types[CST_MILL_5].group = GROUP_MILL;
+    main_types[CST_MILL_5].graphic = load_graphic(CST_MILL_5_G);
 
-    main_types[CST_MILL_1].group=GROUP_MILL;
-    main_types[CST_MILL_1].graphic=load_graphic(CST_MILL_1_G);
+    main_types[CST_MILL_6].group = GROUP_MILL;
+    main_types[CST_MILL_6].graphic = load_graphic(CST_MILL_6_G);
 
-    main_types[CST_MILL_2].group=GROUP_MILL;
-    main_types[CST_MILL_2].graphic=load_graphic(CST_MILL_2_G);
+    main_types[CST_POTTERY_0].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_0].graphic = load_graphic(CST_POTTERY_0_G);
 
-    main_types[CST_MILL_3].group=GROUP_MILL;
-    main_types[CST_MILL_3].graphic=load_graphic(CST_MILL_3_G);
+    main_types[CST_POTTERY_1].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_1].graphic = load_graphic(CST_POTTERY_1_G);
 
-    main_types[CST_MILL_4].group=GROUP_MILL;
-    main_types[CST_MILL_4].graphic=load_graphic(CST_MILL_4_G);
+    main_types[CST_POTTERY_2].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_2].graphic = load_graphic(CST_POTTERY_2_G);
 
-    main_types[CST_MILL_5].group=GROUP_MILL;
-    main_types[CST_MILL_5].graphic=load_graphic(CST_MILL_5_G);
+    main_types[CST_POTTERY_3].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_3].graphic = load_graphic(CST_POTTERY_3_G);
 
-    main_types[CST_MILL_6].group=GROUP_MILL;
-    main_types[CST_MILL_6].graphic=load_graphic(CST_MILL_6_G);
+    main_types[CST_POTTERY_4].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_4].graphic = load_graphic(CST_POTTERY_4_G);
 
-    main_types[CST_POTTERY_0].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_0].graphic=load_graphic(CST_POTTERY_0_G);
+    main_types[CST_POTTERY_5].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_5].graphic = load_graphic(CST_POTTERY_5_G);
 
-    main_types[CST_POTTERY_1].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_1].graphic=load_graphic(CST_POTTERY_1_G);
+    main_types[CST_POTTERY_6].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_6].graphic = load_graphic(CST_POTTERY_6_G);
 
-    main_types[CST_POTTERY_2].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_2].graphic=load_graphic(CST_POTTERY_2_G);
+    main_types[CST_POTTERY_7].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_7].graphic = load_graphic(CST_POTTERY_7_G);
 
-    main_types[CST_POTTERY_3].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_3].graphic=load_graphic(CST_POTTERY_3_G);
+    main_types[CST_POTTERY_8].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_8].graphic = load_graphic(CST_POTTERY_8_G);
 
-    main_types[CST_POTTERY_4].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_4].graphic=load_graphic(CST_POTTERY_4_G);
+    main_types[CST_POTTERY_9].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_9].graphic = load_graphic(CST_POTTERY_9_G);
 
-    main_types[CST_POTTERY_5].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_5].graphic=load_graphic(CST_POTTERY_5_G);
+    main_types[CST_POTTERY_10].group = GROUP_POTTERY;
+    main_types[CST_POTTERY_10].graphic = load_graphic(CST_POTTERY_10_G);
 
-    main_types[CST_POTTERY_6].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_6].graphic=load_graphic(CST_POTTERY_6_G);
+    main_types[CST_FIRESTATION_1].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_1].graphic = load_graphic(CST_FIRESTATION_1_G);
 
-    main_types[CST_POTTERY_7].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_7].graphic=load_graphic(CST_POTTERY_7_G);
+    main_types[CST_FIRESTATION_2].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_2].graphic = load_graphic(CST_FIRESTATION_2_G);
 
-    main_types[CST_POTTERY_8].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_8].graphic=load_graphic(CST_POTTERY_8_G);
+    main_types[CST_FIRESTATION_3].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_3].graphic = load_graphic(CST_FIRESTATION_3_G);
 
-    main_types[CST_POTTERY_9].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_9].graphic=load_graphic(CST_POTTERY_9_G);
+    main_types[CST_FIRESTATION_4].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_4].graphic = load_graphic(CST_FIRESTATION_4_G);
 
-    main_types[CST_POTTERY_10].group=GROUP_POTTERY;
-    main_types[CST_POTTERY_10].graphic=load_graphic(CST_POTTERY_10_G);
+    main_types[CST_FIRESTATION_5].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_5].graphic = load_graphic(CST_FIRESTATION_5_G);
 
-    main_types[CST_FIRESTATION_1].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_1].graphic
-	    =load_graphic(CST_FIRESTATION_1_G);
+    main_types[CST_FIRESTATION_6].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_6].graphic = load_graphic(CST_FIRESTATION_6_G);
 
-    main_types[CST_FIRESTATION_2].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_2].graphic
-	    =load_graphic(CST_FIRESTATION_2_G);
+    main_types[CST_FIRESTATION_7].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_7].graphic = load_graphic(CST_FIRESTATION_7_G);
 
-    main_types[CST_FIRESTATION_3].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_3].graphic
-	    =load_graphic(CST_FIRESTATION_3_G);
+    main_types[CST_FIRESTATION_8].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_8].graphic = load_graphic(CST_FIRESTATION_8_G);
 
-    main_types[CST_FIRESTATION_4].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_4].graphic
-	    =load_graphic(CST_FIRESTATION_4_G);
+    main_types[CST_FIRESTATION_9].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_9].graphic = load_graphic(CST_FIRESTATION_9_G);
 
-    main_types[CST_FIRESTATION_5].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_5].graphic
-	    =load_graphic(CST_FIRESTATION_5_G);
+    main_types[CST_FIRESTATION_10].group = GROUP_FIRESTATION;
+    main_types[CST_FIRESTATION_10].graphic = load_graphic(CST_FIRESTATION_10_G);
 
-    main_types[CST_FIRESTATION_6].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_6].graphic
-	    =load_graphic(CST_FIRESTATION_6_G);
+    main_types[CST_CRICKET_1].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_1].graphic = load_graphic(CST_CRICKET_1_G);
 
-    main_types[CST_FIRESTATION_7].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_7].graphic
-	    =load_graphic(CST_FIRESTATION_7_G);
+    main_types[CST_CRICKET_2].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_2].graphic = load_graphic(CST_CRICKET_2_G);
 
-    main_types[CST_FIRESTATION_8].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_8].graphic
-	    =load_graphic(CST_FIRESTATION_8_G);
+    main_types[CST_CRICKET_3].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_3].graphic = load_graphic(CST_CRICKET_3_G);
 
-    main_types[CST_FIRESTATION_9].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_9].graphic
-	    =load_graphic(CST_FIRESTATION_9_G);
+    main_types[CST_CRICKET_4].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_4].graphic = load_graphic(CST_CRICKET_4_G);
 
-    main_types[CST_FIRESTATION_10].group=GROUP_FIRESTATION;
-    main_types[CST_FIRESTATION_10].graphic
-	    =load_graphic(CST_FIRESTATION_10_G);
+    prog_box("", 90);
 
-    main_types[CST_CRICKET_1].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_1].graphic
-	    =load_graphic(CST_CRICKET_1_G);
+    main_types[CST_CRICKET_5].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_5].graphic = load_graphic(CST_CRICKET_5_G);
 
-    main_types[CST_CRICKET_2].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_2].graphic
-	    =load_graphic(CST_CRICKET_2_G);
+    main_types[CST_CRICKET_6].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_6].graphic = load_graphic(CST_CRICKET_6_G);
 
-    main_types[CST_CRICKET_3].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_3].graphic
-	    =load_graphic(CST_CRICKET_3_G);
+    main_types[CST_CRICKET_7].group = GROUP_CRICKET;
+    main_types[CST_CRICKET_7].graphic = load_graphic(CST_CRICKET_7_G);
 
-    main_types[CST_CRICKET_4].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_4].graphic
-	    =load_graphic(CST_CRICKET_4_G);
+    main_types[CST_FIRE_1].group = GROUP_FIRE;
+    main_types[CST_FIRE_1].graphic = load_graphic(CST_FIRE_1_G);
 
-    prog_box("",90);
+    main_types[CST_FIRE_2].group = GROUP_FIRE;
+    main_types[CST_FIRE_2].graphic = load_graphic(CST_FIRE_2_G);
 
-    main_types[CST_CRICKET_5].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_5].graphic
-	    =load_graphic(CST_CRICKET_5_G);
+    main_types[CST_FIRE_3].group = GROUP_FIRE;
+    main_types[CST_FIRE_3].graphic = load_graphic(CST_FIRE_3_G);
 
-    main_types[CST_CRICKET_6].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_6].graphic
-	    =load_graphic(CST_CRICKET_6_G);
+    main_types[CST_FIRE_4].group = GROUP_FIRE;
+    main_types[CST_FIRE_4].graphic = load_graphic(CST_FIRE_4_G);
 
-    main_types[CST_CRICKET_7].group=GROUP_CRICKET;
-    main_types[CST_CRICKET_7].graphic
-	    =load_graphic(CST_CRICKET_7_G);
+    main_types[CST_FIRE_5].group = GROUP_FIRE;
+    main_types[CST_FIRE_5].graphic = load_graphic(CST_FIRE_5_G);
 
-    main_types[CST_FIRE_1].group=GROUP_FIRE;
-    main_types[CST_FIRE_1].graphic
-	    =load_graphic(CST_FIRE_1_G);
+    main_types[CST_FIRE_DONE1].group = GROUP_FIRE;
+    main_types[CST_FIRE_DONE1].graphic = load_graphic(CST_FIRE_DONE1_G);
 
-    main_types[CST_FIRE_2].group=GROUP_FIRE;
-    main_types[CST_FIRE_2].graphic
-	    =load_graphic(CST_FIRE_2_G);
+    main_types[CST_FIRE_DONE2].group = GROUP_FIRE;
+    main_types[CST_FIRE_DONE2].graphic = load_graphic(CST_FIRE_DONE2_G);
 
-    main_types[CST_FIRE_3].group=GROUP_FIRE;
-    main_types[CST_FIRE_3].graphic
-	    =load_graphic(CST_FIRE_3_G);
+    main_types[CST_FIRE_DONE3].group = GROUP_FIRE;
+    main_types[CST_FIRE_DONE3].graphic = load_graphic(CST_FIRE_DONE3_G);
 
-    main_types[CST_FIRE_4].group=GROUP_FIRE;
-    main_types[CST_FIRE_4].graphic
-	    =load_graphic(CST_FIRE_4_G);
+    main_types[CST_FIRE_DONE4].group = GROUP_FIRE;
+    main_types[CST_FIRE_DONE4].graphic = load_graphic(CST_FIRE_DONE4_G);
 
-    main_types[CST_FIRE_5].group=GROUP_FIRE;
-    main_types[CST_FIRE_5].graphic
-	    =load_graphic(CST_FIRE_5_G);
-
-    main_types[CST_FIRE_DONE1].group=GROUP_FIRE;
-    main_types[CST_FIRE_DONE1].graphic
-	    =load_graphic(CST_FIRE_DONE1_G);
-
-    main_types[CST_FIRE_DONE2].group=GROUP_FIRE;
-    main_types[CST_FIRE_DONE2].graphic
-	    =load_graphic(CST_FIRE_DONE2_G);
-
-    main_types[CST_FIRE_DONE3].group=GROUP_FIRE;
-    main_types[CST_FIRE_DONE3].graphic
-	    =load_graphic(CST_FIRE_DONE3_G);
-
-    main_types[CST_FIRE_DONE4].group=GROUP_FIRE;
-    main_types[CST_FIRE_DONE4].graphic
-	    =load_graphic(CST_FIRE_DONE4_G);
-
-    main_types[CST_SHANTY].group=GROUP_SHANTY;
-    main_types[CST_SHANTY].graphic=load_graphic(CST_SHANTY_G);
+    main_types[CST_SHANTY].group = GROUP_SHANTY;
+    main_types[CST_SHANTY].graphic = load_graphic(CST_SHANTY_G);
 #endif
 
-    main_types[CST_USED].group=GROUP_USED;
-    main_types[CST_USED].graphic=0;         /* Won't be dereferenced! */
+    main_types[CST_USED].group = GROUP_USED;
+    main_types[CST_USED].graphic = 0;   /* Won't be dereferenced! */
 }
 
-
-
-int
-get_group_of_type (short type)
+int get_group_of_type(short type)
 {
-    if( type == CST_NONE ) return GROUP_BARE;
+    if (type == CST_NONE)
+        return GROUP_BARE;
     return main_types[type].group;
 }
 
-void
-set_map_groups (void)
+void set_map_groups(void)
 {
     int x, y;
     for (x = 0; x < WORLD_SIDE_LEN; x++) {
         for (y = 0; y < WORLD_SIDE_LEN; y++) {
-            MP_GROUP(x,y) = get_group_of_type(MP_TYPE(x,y));
+            MP_GROUP(x, y) = get_group_of_type(MP_TYPE(x, y));
         }
     }
 }
 
-int
-get_group_cost (short group)
+int get_group_cost(short group)
 {
-    return (int) ((float) main_groups[group].cost
-		  + ((float) main_groups[group].cost
-		     * ((float) main_groups[group].cost_mul
-			* (float) tech_level) 
-		     / (float) MAX_TECH_LEVEL));
+    return (int)((float)main_groups[group].cost
+                 + ((float)main_groups[group].cost * ((float)main_groups[group].cost_mul * (float)tech_level)
+                    / (float)MAX_TECH_LEVEL));
 }
 
-void 
-get_type_name (short type, char * s) 
+void get_type_name(short type, char *s)
 {
-     short g;
-     g = get_group_of_type (type);
-     strcpy (s, _(main_groups[g].name));
+    short g;
+    g = get_group_of_type(type);
+    strcpy(s, _(main_groups[g].name));
 }
 
-int
-get_type_cost (short type)
+int get_type_cost(short type)
 {
-    return get_group_cost ((short) get_group_of_type (type));
+    return get_group_cost((short)get_group_of_type(type));
 }

Modified: trunk/src/lincity/lintypes.h
===================================================================
--- trunk/src/lincity/lintypes.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/lintypes.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -17,32 +17,30 @@
 #define NUM_OF_GROUPS    47
 #define GROUP_NAME_LEN   20
 
-struct GROUP
-{
-    const char* name;      /* name of group */
-    unsigned short        no_credit;   /* TRUE if need credit to build */
-    unsigned short        group;       /* This is redundant: it must match
-					  the index into the table */
-    unsigned short        size;
-    int   colour;         /* summary map colour */
-    int   cost_mul;       /* group cost multiplier */
-    int   bul_cost;       /* group bulldoze cost */
-    int   fire_chance;    /* probability of fire */
-    int   cost;           /* group cost */
-    int   tech;           /* group cost */
+struct GROUP {
+    const char *name;           /* name of group */
+    unsigned short no_credit;   /* TRUE if need credit to build */
+    unsigned short group;       /* This is redundant: it must match
+                                   the index into the table */
+    unsigned short size;
+    int colour;                 /* summary map colour */
+    int cost_mul;               /* group cost multiplier */
+    int bul_cost;               /* group bulldoze cost */
+    int fire_chance;            /* probability of fire */
+    int cost;                   /* group cost */
+    int tech;                   /* group cost */
 };
 
-struct TYPE
-{
-    int group;          /* What group does this type belong to? */
-    char* graphic;      /* Bitmap of the graphic */
+struct TYPE {
+    int group;                  /* What group does this type belong to? */
+    char *graphic;              /* Bitmap of the graphic */
 };
 
-int get_group_of_type (short selected_type);
-void set_map_groups (void);
-int get_type_cost (short type);
-int get_group_cost (short group);
-void get_type_name (short type, char * s);
+int get_group_of_type(short selected_type);
+void set_map_groups(void);
+int get_type_cost(short type);
+int get_group_cost(short group);
+void get_type_name(short type, char *s);
 
 extern struct GROUP main_groups[NUM_OF_GROUPS];
 extern struct TYPE main_types[NUM_OF_TYPES];

Modified: trunk/src/lincity/modules/blacksmith.cpp
===================================================================
--- trunk/src/lincity/modules/blacksmith.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/blacksmith.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,102 +9,90 @@
 #include "blacksmith.h"
 //#include "cliglobs.h"
 
-
-void
-do_blacksmith (int x, int y)
+void do_blacksmith(int x, int y)
 {
-  /*
-    // int_1 contains the goods at the blacksmith
-    // int_2 contains the goods made - for the animation
-    // int_3 contains the coal store
-    // int_4 is the animation trigger time
-    // int_5 is the % made so far this month
-    // int_6 is the % capacity last month
-    // int_7 contains the jobs stored at the blacksmith
-  */
-  if (MP_INFO(x,y).int_3 < MAX_COAL_AT_BLACKSMITH)
-    if (get_coal (x, y, BLACKSMITH_GET_COAL) != 0)
-      MP_INFO(x,y).int_3 += BLACKSMITH_GET_COAL;
+    /*
+       // int_1 contains the goods at the blacksmith
+       // int_2 contains the goods made - for the animation
+       // int_3 contains the coal store
+       // int_4 is the animation trigger time
+       // int_5 is the % made so far this month
+       // int_6 is the % capacity last month
+       // int_7 contains the jobs stored at the blacksmith
+     */
+    if (MP_INFO(x, y).int_3 < MAX_COAL_AT_BLACKSMITH)
+        if (get_coal(x, y, BLACKSMITH_GET_COAL) != 0)
+            MP_INFO(x, y).int_3 += BLACKSMITH_GET_COAL;
 
-  if (MP_INFO(x,y).int_1 < MAX_GOODS_AT_BLACKSMITH
-      && MP_INFO(x,y).int_3 >= BLACKSMITH_COAL_USED)
-    {
-      if (get_steel (x, y, BLACKSMITH_STEEL_USED) != 0)
-	{
-	  MP_INFO(x,y).int_1 += GOODS_MADE_BY_BLACKSMITH;
-	  MP_INFO(x,y).int_3 -= BLACKSMITH_COAL_USED;
-	}
+    if (MP_INFO(x, y).int_1 < MAX_GOODS_AT_BLACKSMITH && MP_INFO(x, y).int_3 >= BLACKSMITH_COAL_USED) {
+        if (get_steel(x, y, BLACKSMITH_STEEL_USED) != 0) {
+            MP_INFO(x, y).int_1 += GOODS_MADE_BY_BLACKSMITH;
+            MP_INFO(x, y).int_3 -= BLACKSMITH_COAL_USED;
+        }
     }
 
-  if (MP_INFO(x,y).int_7 < BLACKSMITH_JOBS) {
-  	if (get_jobs (x, y, BLACKSMITH_JOBS))
-		MP_INFO(x,y).int_7 = BLACKSMITH_JOBS;
-  }
+    if (MP_INFO(x, y).int_7 < BLACKSMITH_JOBS) {
+        if (get_jobs(x, y, BLACKSMITH_JOBS))
+            MP_INFO(x, y).int_7 = BLACKSMITH_JOBS;
+    }
 
-  if (MP_INFO(x,y).int_7 >= BLACKSMITH_JOBS) {
-	if (MP_INFO(x,y).int_1 > GOODS_MADE_BY_BLACKSMITH) {
-		if (put_goods (x, y, GOODS_MADE_BY_BLACKSMITH - 1) != 0) {
-		      MP_INFO(x,y).int_1 -= (GOODS_MADE_BY_BLACKSMITH - 1);
-		      MP_INFO(x,y).int_2 += (GOODS_MADE_BY_BLACKSMITH - 1);
-		      MP_INFO(x,y).int_5++;
-		      MP_INFO(x,y).int_7 -= BLACKSMITH_JOBS;
-		}
-	}
-  } else {
-    MP_TYPE(x,y) = CST_BLACKSMITH_0;
-  }
+    if (MP_INFO(x, y).int_7 >= BLACKSMITH_JOBS) {
+        if (MP_INFO(x, y).int_1 > GOODS_MADE_BY_BLACKSMITH) {
+            if (put_goods(x, y, GOODS_MADE_BY_BLACKSMITH - 1) != 0) {
+                MP_INFO(x, y).int_1 -= (GOODS_MADE_BY_BLACKSMITH - 1);
+                MP_INFO(x, y).int_2 += (GOODS_MADE_BY_BLACKSMITH - 1);
+                MP_INFO(x, y).int_5++;
+                MP_INFO(x, y).int_7 -= BLACKSMITH_JOBS;
+            }
+        }
+    } else {
+        MP_TYPE(x, y) = CST_BLACKSMITH_0;
+    }
 
-  if (MP_INFO(x,y).int_2 > BLACKSMITH_BATCH
-      && real_time >= MP_INFO(x,y).int_4)
-    {
-      MP_INFO(x,y).int_4 = real_time + BLACKSMITH_ANIM_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_BLACKSMITH_0):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_1;
-	  break;
-	case (CST_BLACKSMITH_1):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_2;
-	  break;
-	case (CST_BLACKSMITH_2):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_3;
-	  break;
-	case (CST_BLACKSMITH_3):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_4;
-	  break;
-	case (CST_BLACKSMITH_4):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_5;
-	  break;
-	case (CST_BLACKSMITH_5):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_6;
-	  break;
-	case (CST_BLACKSMITH_6):
-	  MP_TYPE(x,y) = CST_BLACKSMITH_1;
-	  MP_INFO(x,y).int_2 = 0;
-	  MP_POL(x,y)++;
-	  break;
-	}
+    if (MP_INFO(x, y).int_2 > BLACKSMITH_BATCH && real_time >= MP_INFO(x, y).int_4) {
+        MP_INFO(x, y).int_4 = real_time + BLACKSMITH_ANIM_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_BLACKSMITH_0):
+            MP_TYPE(x, y) = CST_BLACKSMITH_1;
+            break;
+        case (CST_BLACKSMITH_1):
+            MP_TYPE(x, y) = CST_BLACKSMITH_2;
+            break;
+        case (CST_BLACKSMITH_2):
+            MP_TYPE(x, y) = CST_BLACKSMITH_3;
+            break;
+        case (CST_BLACKSMITH_3):
+            MP_TYPE(x, y) = CST_BLACKSMITH_4;
+            break;
+        case (CST_BLACKSMITH_4):
+            MP_TYPE(x, y) = CST_BLACKSMITH_5;
+            break;
+        case (CST_BLACKSMITH_5):
+            MP_TYPE(x, y) = CST_BLACKSMITH_6;
+            break;
+        case (CST_BLACKSMITH_6):
+            MP_TYPE(x, y) = CST_BLACKSMITH_1;
+            MP_INFO(x, y).int_2 = 0;
+            MP_POL(x, y)++;
+            break;
+        }
     }
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_6 = MP_INFO(x,y).int_5;
-      MP_INFO(x,y).int_5 = 0;
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_6 = MP_INFO(x, y).int_5;
+        MP_INFO(x, y).int_5 = 0;
     }
 }
 
-void
-mps_blacksmith (int x, int y)
+void mps_blacksmith(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Blacksmith"));
-  i++;
+    mps_store_title(i++, _("Blacksmith"));
+    i++;
 
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_6);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Goods"),
-		MP_INFO(x,y).int_1 * 100.0 / MAX_GOODS_AT_BLACKSMITH);
-  mps_store_sfp(i++,_("Coal"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_AT_BLACKSMITH);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_6);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_1 * 100.0 / MAX_GOODS_AT_BLACKSMITH);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_AT_BLACKSMITH);
 }

Modified: trunk/src/lincity/modules/blacksmith.h
===================================================================
--- trunk/src/lincity/modules/blacksmith.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/blacksmith.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __blacksmith_h__
 
 void do_blacksmith(int x, int y);
-void mps_blacksmith (int x, int y);
+void mps_blacksmith(int x, int y);
 
 #endif /* __blacksmith_h__ */

Modified: trunk/src/lincity/modules/coal_power.cpp
===================================================================
--- trunk/src/lincity/modules/coal_power.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/coal_power.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,8 +8,8 @@
 #include "modules.h"
 #include "../power.h"
 #include "coal_power.h"
-#include "../transport.h"  /* XXX: This seems to be an anomaly; no other modules
-			  use XY_IS_TRANSPORT */
+#include "../transport.h"       /* XXX: This seems to be an anomaly; no other modules
+                                   use XY_IS_TRANSPORT */
 
 /*** Coal Power ***/
 /*
@@ -22,91 +22,79 @@
   // int_7 is grid_timestamp
 */
 
-
-void
-do_power_source_coal (int x, int y)
+void do_power_source_coal(int x, int y)
 {
 
     /* Need coal?  Try transport. */
-    if (MP_INFO(x,y).int_2 < MAX_COAL_AT_POWER_STATION) {
+    if (MP_INFO(x, y).int_2 < MAX_COAL_AT_POWER_STATION) {
 
-	/* left side */
-	if (XY_IS_TRANSPORT(x-1, y+1) && MP_INFO(x-1, y+1).int_3 > 0) {
-	    if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	    {
-		MP_INFO(x,y).int_2 += (MP_INFO(x-1, y+1).int_3 / 2
-				       + ((MP_INFO(x-1, y+1).int_3) % 2));
-		MP_INFO(x-1, y+1).int_3 /= 2;
-		MP_POL(x,y)++;
-	    }
-	}
-	/* top side */
-	else if (XY_IS_TRANSPORT(x+1, y-1) && MP_INFO(x+1, y-1).int_3 > 0) {
-	    if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-		MP_INFO(x,y).int_2 += (MP_INFO(x+1, y-1).int_3 / 2
-				       + ((MP_INFO(x+1, y-1).int_3) % 2));
-	    MP_INFO(x + 1,y - 1).int_3 /= 2;
-	    MP_POL(x,y)++;
-	}
+        /* left side */
+        if (XY_IS_TRANSPORT(x - 1, y + 1) && MP_INFO(x - 1, y + 1).int_3 > 0) {
+            if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+                MP_INFO(x, y).int_2 += (MP_INFO(x - 1, y + 1).int_3 / 2 + ((MP_INFO(x - 1, y + 1).int_3) % 2));
+                MP_INFO(x - 1, y + 1).int_3 /= 2;
+                MP_POL(x, y)++;
+            }
+        }
+        /* top side */
+        else if (XY_IS_TRANSPORT(x + 1, y - 1) && MP_INFO(x + 1, y - 1).int_3 > 0) {
+            if (get_jobs(x, y, JOBS_LOAD_COAL) != 0)
+                MP_INFO(x, y).int_2 += (MP_INFO(x + 1, y - 1).int_3 / 2 + ((MP_INFO(x + 1, y - 1).int_3) % 2));
+            MP_INFO(x + 1, y - 1).int_3 /= 2;
+            MP_POL(x, y)++;
+        }
     }
 
     /* Need jobs?  get_jobs. */
-    if ((MP_INFO(x,y).int_3 + JOBS_COALPS_GENERATE + 10)
-	< MAX_JOBS_AT_COALPS)
-	if (get_jobs (x, y, JOBS_COALPS_GENERATE + 10) != 0)
-	    MP_INFO(x,y).int_3 += JOBS_COALPS_GENERATE + 10;
+    if ((MP_INFO(x, y).int_3 + JOBS_COALPS_GENERATE + 10)
+        < MAX_JOBS_AT_COALPS)
+        if (get_jobs(x, y, JOBS_COALPS_GENERATE + 10) != 0)
+            MP_INFO(x, y).int_3 += JOBS_COALPS_GENERATE + 10;
 
     /* Generate Power */
-    if (MP_INFO(x,y).int_2 > POWERS_COAL_OUTPUT / 500 &&
-	MP_INFO(x,y).int_3 > JOBS_COALPS_GENERATE) 
-    {
-	MP_INFO(x,y).int_5 = MP_INFO(x,y).int_1;
-	MP_INFO(x,y).int_3 -= JOBS_COALPS_GENERATE;
-	MP_INFO(x,y).int_2 -= POWERS_COAL_OUTPUT / 500;
-	coal_used += POWERS_COAL_OUTPUT / 500;
-	MP_POL(x,y) += POWERS_COAL_POLLUTION;
-	grid[MP_INFO(x,y).int_6]->avail_power += MP_INFO(x,y).int_1;
+    if (MP_INFO(x, y).int_2 > POWERS_COAL_OUTPUT / 500 && MP_INFO(x, y).int_3 > JOBS_COALPS_GENERATE) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_1;
+        MP_INFO(x, y).int_3 -= JOBS_COALPS_GENERATE;
+        MP_INFO(x, y).int_2 -= POWERS_COAL_OUTPUT / 500;
+        coal_used += POWERS_COAL_OUTPUT / 500;
+        MP_POL(x, y) += POWERS_COAL_POLLUTION;
+        grid[MP_INFO(x, y).int_6]->avail_power += MP_INFO(x, y).int_1;
     }
 
     /* Animation */
     /* choose a graphic */
-    if (MP_INFO(x,y).int_2 > (MAX_COAL_AT_POWER_STATION
-			      - (MAX_COAL_AT_POWER_STATION / 5)))
-	MP_TYPE(x,y) = CST_POWERS_COAL_FULL;
-    else if (MP_INFO(x,y).int_2 > (MAX_COAL_AT_POWER_STATION / 2))
-	MP_TYPE(x,y) = CST_POWERS_COAL_MED;
-    else if (MP_INFO(x,y).int_2 > (MAX_COAL_AT_POWER_STATION / 10))
-	MP_TYPE(x,y) = CST_POWERS_COAL_LOW;
+    if (MP_INFO(x, y).int_2 > (MAX_COAL_AT_POWER_STATION - (MAX_COAL_AT_POWER_STATION / 5)))
+        MP_TYPE(x, y) = CST_POWERS_COAL_FULL;
+    else if (MP_INFO(x, y).int_2 > (MAX_COAL_AT_POWER_STATION / 2))
+        MP_TYPE(x, y) = CST_POWERS_COAL_MED;
+    else if (MP_INFO(x, y).int_2 > (MAX_COAL_AT_POWER_STATION / 10))
+        MP_TYPE(x, y) = CST_POWERS_COAL_LOW;
     else
-	MP_TYPE(x,y) = CST_POWERS_COAL_EMPTY;
+        MP_TYPE(x, y) = CST_POWERS_COAL_EMPTY;
 }
 
-void
-mps_coal_power (int x, int y)
+void mps_coal_power(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  char s[12];
+    char s[12];
 
-  mps_store_title(i++,_("Coal"));
-  mps_store_title(i++,_("Power Station"));
-  i++;
+    mps_store_title(i++, _("Coal"));
+    mps_store_title(i++, _("Power Station"));
+    i++;
 
-  format_power (s, sizeof(s), MP_INFO(x,y).int_1);
-  mps_store_title(i++,_("Max Output"));
-  mps_store_title(i++,s);
-  i++;
+    format_power(s, sizeof(s), MP_INFO(x, y).int_1);
+    mps_store_title(i++, _("Max Output"));
+    mps_store_title(i++, s);
+    i++;
 
-  format_power (s, sizeof(s), MP_INFO(x,y).int_5);
-  mps_store_title(i++,_("Current Output"));
-  mps_store_title(i++,s);
-  i++;
+    format_power(s, sizeof(s), MP_INFO(x, y).int_5);
+    mps_store_title(i++, _("Current Output"));
+    mps_store_title(i++, s);
+    i++;
 
-  mps_store_sfp(i++,_("Coal"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_COAL_AT_POWER_STATION);
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_JOBS_AT_COALPS);
-  mps_store_sfp(i++,_("Tech"),
-		MP_INFO(x,y).int_4 * 100.0 / MAX_TECH_LEVEL);  
-  mps_store_sd(i++,_("Grid ID"), MP_INFO(x,y).int_6);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_2 * 100.0 / MAX_COAL_AT_POWER_STATION);
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_3 * 100.0 / MAX_JOBS_AT_COALPS);
+    mps_store_sfp(i++, _("Tech"), MP_INFO(x, y).int_4 * 100.0 / MAX_TECH_LEVEL);
+    mps_store_sd(i++, _("Grid ID"), MP_INFO(x, y).int_6);
 }

Modified: trunk/src/lincity/modules/coal_power.h
===================================================================
--- trunk/src/lincity/modules/coal_power.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/coal_power.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __coal_power_h__
 
 void do_power_source_coal(int x, int y);
-void mps_coal_power (int, int);
+void mps_coal_power(int, int);
 
 #endif /* __coal_power_h__ */

Modified: trunk/src/lincity/modules/coalmine.cpp
===================================================================
--- trunk/src/lincity/modules/coalmine.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/coalmine.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,171 +8,135 @@
 #include "modules.h"
 #include "coalmine.h"
 
-
-void
-do_coalmine (int x, int y)
+void do_coalmine(int x, int y)
 {
-  /*
-     // int_1 is the coal at the surface
-     // int_2 is the coal reserve under the ground. More than one mine can claim the coal under ground!
-     // int_3 is the jobs collected.
-   */
-  int xx, yy, xs, ys, xe, ye, cr;
-  if (MP_INFO(x,y).int_1 < (DIG_MORE_COAL_TRIGGER - 1000))
-    {
-      if (MP_INFO(x,y).int_2 < 0)
-	return;			/* run out of reserves */
+    /*
+       // int_1 is the coal at the surface
+       // int_2 is the coal reserve under the ground. More than one mine can claim the coal under ground!
+       // int_3 is the jobs collected.
+     */
+    int xx, yy, xs, ys, xe, ye, cr;
+    if (MP_INFO(x, y).int_1 < (DIG_MORE_COAL_TRIGGER - 1000)) {
+        if (MP_INFO(x, y).int_2 < 0)
+            return;             /* run out of reserves */
 
-      xs = x - COAL_RESERVE_SEARCH_LEN;
-      if (xs < 0)
-	xs = 0;
-      ys = y - COAL_RESERVE_SEARCH_LEN;
-      if (ys < 0)
-	ys = 0;
-      xe = x + COAL_RESERVE_SEARCH_LEN;
-      if (xe > WORLD_SIDE_LEN)
-	xe = WORLD_SIDE_LEN;
-      ye = y + COAL_RESERVE_SEARCH_LEN;
-      if (ye > WORLD_SIDE_LEN)
-	ye = WORLD_SIDE_LEN;
-      cr = 0;
-      for (yy = ys; yy < ye; yy++)
-	for (xx = xs; xx < xe; xx++)
-	  cr += MP_INFO(xx,yy).coal_reserve;
-      MP_INFO(x,y).int_2 = cr;
-      if (cr > 0)
-	{
-	  if (get_jobs (x, y, JOBS_DIG_COAL
-			- MP_INFO(x,y).int_3) != 0)
-	    {
-	      MP_INFO(x,y).int_3 = 0;
-	      for (yy = ys; yy < ye; yy++)
-		for (xx = xs; xx < xe; xx++)
-		  if (MP_INFO(xx,yy).coal_reserve > 0)
-		    {
-		      MP_INFO(xx,yy).coal_reserve--;
-		      MP_INFO(x,y).int_1 += 1000;
-		      coal_made += 1000;
-		      coal_tax += 1000;
-		      sust_dig_ore_coal_tip_flag = 0;
-		      MP_POL(x,y) += COALMINE_POLLUTION;
-		      yy = ye;
-		      xx = xe;	/* break out */
+        xs = x - COAL_RESERVE_SEARCH_LEN;
+        if (xs < 0)
+            xs = 0;
+        ys = y - COAL_RESERVE_SEARCH_LEN;
+        if (ys < 0)
+            ys = 0;
+        xe = x + COAL_RESERVE_SEARCH_LEN;
+        if (xe > WORLD_SIDE_LEN)
+            xe = WORLD_SIDE_LEN;
+        ye = y + COAL_RESERVE_SEARCH_LEN;
+        if (ye > WORLD_SIDE_LEN)
+            ye = WORLD_SIDE_LEN;
+        cr = 0;
+        for (yy = ys; yy < ye; yy++)
+            for (xx = xs; xx < xe; xx++)
+                cr += MP_INFO(xx, yy).coal_reserve;
+        MP_INFO(x, y).int_2 = cr;
+        if (cr > 0) {
+            if (get_jobs(x, y, JOBS_DIG_COAL - MP_INFO(x, y).int_3) != 0) {
+                MP_INFO(x, y).int_3 = 0;
+                for (yy = ys; yy < ye; yy++)
+                    for (xx = xs; xx < xe; xx++)
+                        if (MP_INFO(xx, yy).coal_reserve > 0) {
+                            MP_INFO(xx, yy).coal_reserve--;
+                            MP_INFO(x, y).int_1 += 1000;
+                            coal_made += 1000;
+                            coal_tax += 1000;
+                            sust_dig_ore_coal_tip_flag = 0;
+                            MP_POL(x, y) += COALMINE_POLLUTION;
+                            yy = ye;
+                            xx = xe;    /* break out */
 
-		    }
-	    }
-	  else if (get_jobs (x, y, JOBS_DIG_COAL / 10) != 0)
-	    MP_INFO(x,y).int_3 += JOBS_DIG_COAL / 10;
-	  else if (get_jobs (x, y, JOBS_DIG_COAL / 50) != 0)
-	    MP_INFO(x,y).int_3 += JOBS_DIG_COAL / 50;
-	}
-      else
-	{
-	  MP_INFO(x,y).int_1 = 0;
-	  MP_INFO(x,y).int_2 = -1;
-	}
+                        }
+            } else if (get_jobs(x, y, JOBS_DIG_COAL / 10) != 0)
+                MP_INFO(x, y).int_3 += JOBS_DIG_COAL / 10;
+            else if (get_jobs(x, y, JOBS_DIG_COAL / 50) != 0)
+                MP_INFO(x, y).int_3 += JOBS_DIG_COAL / 50;
+        } else {
+            MP_INFO(x, y).int_1 = 0;
+            MP_INFO(x, y).int_2 = -1;
+        }
     }
-  /* put it on the railway */
-  if (MP_GROUP(x - 1,y) == GROUP_RAIL
-      && MP_INFO(x - 1,y).int_3 < MAX_COAL_ON_RAIL
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_RAIL
-				  - MP_INFO(x - 1,y).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_RAIL - MP_INFO(x - 1,y).int_3);
-	  MP_INFO(x - 1,y).int_3 = MAX_COAL_ON_RAIL;
-	}
+    /* put it on the railway */
+    if (MP_GROUP(x - 1, y) == GROUP_RAIL
+        && MP_INFO(x - 1, y).int_3 < MAX_COAL_ON_RAIL
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_RAIL - MP_INFO(x - 1, y).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_RAIL - MP_INFO(x - 1, y).int_3);
+            MP_INFO(x - 1, y).int_3 = MAX_COAL_ON_RAIL;
+        }
     }
-  if (MP_GROUP(x,y-1) == GROUP_RAIL
-      && MP_INFO(x,y - 1).int_3 < MAX_COAL_ON_RAIL
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_RAIL
-				  - MP_INFO(x,y - 1).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_RAIL - MP_INFO(x,y - 1).int_3);
-	  MP_INFO(x,y - 1).int_3 = MAX_COAL_ON_RAIL;
-	}
+    if (MP_GROUP(x, y - 1) == GROUP_RAIL
+        && MP_INFO(x, y - 1).int_3 < MAX_COAL_ON_RAIL
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_RAIL - MP_INFO(x, y - 1).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_RAIL - MP_INFO(x, y - 1).int_3);
+            MP_INFO(x, y - 1).int_3 = MAX_COAL_ON_RAIL;
+        }
     }
-  /* put it on the road */
-  if (MP_GROUP(x-1,y) == GROUP_ROAD
-      && MP_INFO(x - 1,y).int_3 < MAX_COAL_ON_ROAD
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_ROAD
-				  - MP_INFO(x - 1,y).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_ROAD - MP_INFO(x - 1,y).int_3);
-	  MP_INFO(x - 1,y).int_3 = MAX_COAL_ON_ROAD;
-	}
+    /* put it on the road */
+    if (MP_GROUP(x - 1, y) == GROUP_ROAD
+        && MP_INFO(x - 1, y).int_3 < MAX_COAL_ON_ROAD
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_ROAD - MP_INFO(x - 1, y).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_ROAD - MP_INFO(x - 1, y).int_3);
+            MP_INFO(x - 1, y).int_3 = MAX_COAL_ON_ROAD;
+        }
     }
-  if (MP_GROUP(x,y-1) == GROUP_ROAD
-      && MP_INFO(x,y - 1).int_3 < MAX_COAL_ON_ROAD
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_ROAD
-				  - MP_INFO(x,y - 1).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_ROAD - MP_INFO(x,y - 1).int_3);
-	  MP_INFO(x,y - 1).int_3 = MAX_COAL_ON_ROAD;
-	}
+    if (MP_GROUP(x, y - 1) == GROUP_ROAD
+        && MP_INFO(x, y - 1).int_3 < MAX_COAL_ON_ROAD
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_ROAD - MP_INFO(x, y - 1).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_ROAD - MP_INFO(x, y - 1).int_3);
+            MP_INFO(x, y - 1).int_3 = MAX_COAL_ON_ROAD;
+        }
     }
-  /* put it on the tracks */
-  if (MP_GROUP(x-1,y) == GROUP_TRACK
-      && MP_INFO(x - 1,y).int_3 < MAX_COAL_ON_TRACK
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_TRACK
-				  - MP_INFO(x - 1,y).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_TRACK - MP_INFO(x - 1,y).int_3);
-	  MP_INFO(x - 1,y).int_3 = MAX_COAL_ON_TRACK;
-	}
+    /* put it on the tracks */
+    if (MP_GROUP(x - 1, y) == GROUP_TRACK
+        && MP_INFO(x - 1, y).int_3 < MAX_COAL_ON_TRACK
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_TRACK - MP_INFO(x - 1, y).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_TRACK - MP_INFO(x - 1, y).int_3);
+            MP_INFO(x - 1, y).int_3 = MAX_COAL_ON_TRACK;
+        }
     }
-  if (MP_GROUP(x,y-1) == GROUP_TRACK
-      && MP_INFO(x,y - 1).int_3 < MAX_COAL_ON_TRACK
-      && MP_INFO(x,y).int_1 >= (MAX_COAL_ON_TRACK
-				  - MP_INFO(x,y - 1).int_3))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_COAL_ON_TRACK - MP_INFO(x,y - 1).int_3);
-	  MP_INFO(x,y - 1).int_3 = MAX_COAL_ON_TRACK;
-	}
+    if (MP_GROUP(x, y - 1) == GROUP_TRACK
+        && MP_INFO(x, y - 1).int_3 < MAX_COAL_ON_TRACK
+        && MP_INFO(x, y).int_1 >= (MAX_COAL_ON_TRACK - MP_INFO(x, y - 1).int_3)) {
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_COAL_ON_TRACK - MP_INFO(x, y - 1).int_3);
+            MP_INFO(x, y - 1).int_3 = MAX_COAL_ON_TRACK;
+        }
     }
 
-  /* choose a graphic */
-  if (MP_INFO(x,y).int_1 > (MAX_COAL_AT_MINE - (MAX_COAL_AT_MINE / 5)))
-    MP_TYPE(x,y) = CST_COALMINE_FULL;
-  else if (MP_INFO(x,y).int_1 > (MAX_COAL_AT_MINE / 2))
-    MP_TYPE(x,y) = CST_COALMINE_MED;
-  else if (MP_INFO(x,y).int_1 > 0)
-    MP_TYPE(x,y) = CST_COALMINE_LOW;
-  else
-    MP_TYPE(x,y) = CST_COALMINE_EMPTY;
+    /* choose a graphic */
+    if (MP_INFO(x, y).int_1 > (MAX_COAL_AT_MINE - (MAX_COAL_AT_MINE / 5)))
+        MP_TYPE(x, y) = CST_COALMINE_FULL;
+    else if (MP_INFO(x, y).int_1 > (MAX_COAL_AT_MINE / 2))
+        MP_TYPE(x, y) = CST_COALMINE_MED;
+    else if (MP_INFO(x, y).int_1 > 0)
+        MP_TYPE(x, y) = CST_COALMINE_LOW;
+    else
+        MP_TYPE(x, y) = CST_COALMINE_EMPTY;
 }
 
-void
-mps_coalmine (int x, int y)
+void mps_coalmine(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Coal Mine"));
-  i++;
+    mps_store_title(i++, _("Coal Mine"));
+    i++;
 
-  mps_store_sfp(i++,_("Stock"),
-		MP_INFO(x,y).int_1 * 100 / MAX_COAL_AT_MINE);
+    mps_store_sfp(i++, _("Stock"), MP_INFO(x, y).int_1 * 100 / MAX_COAL_AT_MINE);
 
-  if (MP_INFO(x,y).int_2 > 0) {
-      mps_store_sd(i++, _("Reserve"), MP_INFO(x,y).int_2);
-  } else {
-      mps_store_ss(i++, _("Reserve"), _("EMPTY"));
-  }
+    if (MP_INFO(x, y).int_2 > 0) {
+        mps_store_sd(i++, _("Reserve"), MP_INFO(x, y).int_2);
+    } else {
+        mps_store_ss(i++, _("Reserve"), _("EMPTY"));
+    }
 }

Modified: trunk/src/lincity/modules/coalmine.h
===================================================================
--- trunk/src/lincity/modules/coalmine.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/coalmine.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __coalmine_h__
 
 void do_coalmine(int x, int y);
-void mps_coalmine (int x, int y);
+void mps_coalmine(int x, int y);
 
 #endif /* __coalmine_h__ */

Modified: trunk/src/lincity/modules/commune.cpp
===================================================================
--- trunk/src/lincity/modules/commune.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/commune.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,178 +10,176 @@
 #include <cstdlib>
 #include <math.h>
 
-void
-do_commune (int x, int y)
+void do_commune(int x, int y)
 {
-  /*
-    // int_1 is the animation trigger time
-    // int_2 is the steelflag/trackflag
-    // int_3 is the coal sold in the last 100 days 200 units is 100%
-    // steel adds more.
-    // int_4 is the months without selling much coal,steel,ore
-    // int_5 is the coal, ore, steel waste flags for last month
-    // int_6 is the coal, ore, steel waste flags so far this month
-  */
-  /* GCS -- I folded the trackflag into int_2, changing the logic slightly.
-     This change only affects the animation. */
-  int trackflag = 0;
-  int coalprod = 2;
-  /* stick coal and ore on tracks, in SMALL doses. */
-  if (use_waterwell) {
-      int w = 0;
-      int n = 0;
-      /* Check underground water, and reduce production accordingly */
-      for (int i = 0; i < MP_SIZE(x,y); i++) {
-          for (int j = 0; j < MP_SIZE(x,y); j++) {
-              n++;
-              if (HAS_UGWATER(x+i,y+j))
-                  w++;
-          }
-      }
-      if (w < n / 3) 
-          coalprod = 0;
-      else if (w < (2 * n) / 3)
-          coalprod = 1;
-  }
+    /*
+       // int_1 is the animation trigger time
+       // int_2 is the steelflag/trackflag
+       // int_3 is the coal sold in the last 100 days 200 units is 100%
+       // steel adds more.
+       // int_4 is the months without selling much coal,steel,ore
+       // int_5 is the coal, ore, steel waste flags for last month
+       // int_6 is the coal, ore, steel waste flags so far this month
+     */
+    /* GCS -- I folded the trackflag into int_2, changing the logic slightly.
+       This change only affects the animation. */
+    int trackflag = 0;
+    int coalprod = 2;
+    /* stick coal and ore on tracks, in SMALL doses. */
+    if (use_waterwell) {
+        int w = 0;
+        int n = 0;
+        /* Check underground water, and reduce production accordingly */
+        for (int i = 0; i < MP_SIZE(x, y); i++) {
+            for (int j = 0; j < MP_SIZE(x, y); j++) {
+                n++;
+                if (HAS_UGWATER(x + i, y + j))
+                    w++;
+            }
+        }
+        if (w < n / 3)
+            coalprod = 0;
+        else if (w < (2 * n) / 3)
+            coalprod = 1;
+    }
 
-  if (put_coal (x, y, coalprod) != 0) {
-      trackflag = 1;
-      MP_INFO(x,y).int_3++;
-      MP_INFO(x,y).int_6 |= 1;
-  }
-  if (put_ore (x, y, 6) != 0) {
-      trackflag = 1;
-      MP_INFO(x,y).int_3++;
-      MP_INFO(x,y).int_6 |= 2;
-  }
-  /* recycle a bit of waste */
-  if (get_waste (x, y, 20) != 0) {
-      trackflag = 1;
-      MP_INFO(x,y).int_3++;
-      MP_INFO(x,y).int_6 |= 8;
-  }
-  if (total_time % 10 == 0) {
-      MP_INFO(x,y).int_2 = 1;
-      if (put_steel (x, y, 2) != 0) {
-	  MP_INFO(x,y).int_3++;
-	  MP_INFO(x,y).int_6 |= 4;
-      } else {
-	MP_INFO(x,y).int_2 = 0;
-      }
-      if (trackflag) {
-	MP_INFO(x,y).int_2 = 0;
-      }
-  }
-
-  /* each month. /AL1: is there a reason for day 48 ? */
-  if (total_time % 100 == 1) {
-    MP_INFO(x,y).int_5 = MP_INFO(x,y).int_6;
-    MP_INFO(x,y).int_6 = 0;
-    if (MP_INFO(x,y).int_5 & 4) { //producing steel
-        if (MP_TYPE(x,y) < CST_COMMUNE_7){
-	    MP_TYPE(x,y) += 5;
+    if (put_coal(x, y, coalprod) != 0) {
+        trackflag = 1;
+        MP_INFO(x, y).int_3++;
+        MP_INFO(x, y).int_6 |= 1;
+    }
+    if (put_ore(x, y, 6) != 0) {
+        trackflag = 1;
+        MP_INFO(x, y).int_3++;
+        MP_INFO(x, y).int_6 |= 2;
+    }
+    /* recycle a bit of waste */
+    if (get_waste(x, y, 20) != 0) {
+        trackflag = 1;
+        MP_INFO(x, y).int_3++;
+        MP_INFO(x, y).int_6 |= 8;
+    }
+    if (total_time % 10 == 0) {
+        MP_INFO(x, y).int_2 = 1;
+        if (put_steel(x, y, 2) != 0) {
+            MP_INFO(x, y).int_3++;
+            MP_INFO(x, y).int_6 |= 4;
+        } else {
+            MP_INFO(x, y).int_2 = 0;
         }
-    } else {
-        if (MP_TYPE(x,y) >= CST_COMMUNE_7){
-	        MP_TYPE(x,y) -= 5;
+        if (trackflag) {
+            MP_INFO(x, y).int_2 = 0;
         }
     }
 
-    if (MP_INFO(x,y).int_3 > 0)	/*  >0% */ {
-	  MP_INFO(x,y).int_3 = 0;
-	  if (--MP_INFO(x,y).int_4 < 0)
-              MP_INFO(x,y).int_4 = 0;
-    } else {
-	  MP_INFO(x,y).int_3 = 0;
-	  MP_INFO(x,y).int_4++;
-	  /* Communes without production only last 10 years */
-	  if (MP_INFO(x,y).int_4 > 120)	/* 10 years */ {
-              if (use_waterwell) {
-                  int s =  MP_SIZE(x,y);
-                  /* first destroy the commune, then fill it with correct tiles
-                   * maybe paranoid, but tile is 4x4 thus becomes 16 tiles 1x1
-                   */
-                  do_bulldoze_area (CST_DESERT, x, y);
-                  for (int i = 0; i < s; i++) {
-                      for (int j = 0; j < s; j++)
-                          if (HAS_UGWATER(x+i,y+j))
-                                do_bulldoze_area (CST_PARKLAND_PLANE, x+i, y+j);
-                          else
-                                do_bulldoze_area (CST_DESERT, x+i, y+j);
-                  }
-              } else {
-                  do_bulldoze_area (CST_PARKLAND_PLANE, x, y);
-              }
-	      return;
-          }
+    /* each month. /AL1: is there a reason for day 48 ? */
+    if (total_time % 100 == 1) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_6;
+        MP_INFO(x, y).int_6 = 0;
+        if (MP_INFO(x, y).int_5 & 4) {  //producing steel
+            if (MP_TYPE(x, y) < CST_COMMUNE_7) {
+                MP_TYPE(x, y) += 5;
+            }
+        } else {
+            if (MP_TYPE(x, y) >= CST_COMMUNE_7) {
+                MP_TYPE(x, y) -= 5;
+            }
+        }
+
+        if (MP_INFO(x, y).int_3 > 0) {  /*  >0% */
+            MP_INFO(x, y).int_3 = 0;
+            if (--MP_INFO(x, y).int_4 < 0)
+                MP_INFO(x, y).int_4 = 0;
+        } else {
+            MP_INFO(x, y).int_3 = 0;
+            MP_INFO(x, y).int_4++;
+            /* Communes without production only last 10 years */
+            if (MP_INFO(x, y).int_4 > 120) {    /* 10 years */
+                if (use_waterwell) {
+                    int s = MP_SIZE(x, y);
+                    /* first destroy the commune, then fill it with correct tiles
+                     * maybe paranoid, but tile is 4x4 thus becomes 16 tiles 1x1
+                     */
+                    do_bulldoze_area(CST_DESERT, x, y);
+                    for (int i = 0; i < s; i++) {
+                        for (int j = 0; j < s; j++)
+                            if (HAS_UGWATER(x + i, y + j))
+                                do_bulldoze_area(CST_PARKLAND_PLANE, x + i, y + j);
+                            else
+                                do_bulldoze_area(CST_DESERT, x + i, y + j);
+                    }
+                } else {
+                    do_bulldoze_area(CST_PARKLAND_PLANE, x, y);
+                }
+                return;
+            }
+        }
     }
-  }
 
-  /* animate */
-  if (real_time >= MP_INFO(x,y).int_1) {
-      MP_INFO(x,y).int_1 = real_time + COMMUNE_ANIM_SPEED - 25 + (rand() % 50);
-      switch (MP_TYPE(x,y)) {
+    /* animate */
+    if (real_time >= MP_INFO(x, y).int_1) {
+        MP_INFO(x, y).int_1 = real_time + COMMUNE_ANIM_SPEED - 25 + (rand() % 50);
+        switch (MP_TYPE(x, y)) {
         case (CST_COMMUNE_1):
-          MP_TYPE(x,y) = CST_COMMUNE_2;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_2;
+            break;
         case (CST_COMMUNE_2):
-          MP_TYPE(x,y) = CST_COMMUNE_3;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_3;
+            break;
         case (CST_COMMUNE_3):
-          MP_TYPE(x,y) = CST_COMMUNE_4;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_4;
+            break;
         case (CST_COMMUNE_4):
-          MP_TYPE(x,y) = CST_COMMUNE_5;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_5;
+            break;
         case (CST_COMMUNE_5):
-          MP_TYPE(x,y) = CST_COMMUNE_6;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_6;
+            break;
         case (CST_COMMUNE_6):
-          MP_TYPE(x,y) = CST_COMMUNE_2;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_2;
+            break;
         case (CST_COMMUNE_7):
-          MP_TYPE(x,y) = CST_COMMUNE_8;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_8;
+            break;
         case (CST_COMMUNE_8):
-          MP_TYPE(x,y) = CST_COMMUNE_9;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_9;
+            break;
         case (CST_COMMUNE_9):
-          MP_TYPE(x,y) = CST_COMMUNE_10;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_10;
+            break;
         case (CST_COMMUNE_10):
-          MP_TYPE(x,y) = CST_COMMUNE_11;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_11;
+            break;
         case (CST_COMMUNE_11):
-          MP_TYPE(x,y) = CST_COMMUNE_7;
-          break;
+            MP_TYPE(x, y) = CST_COMMUNE_7;
+            break;
         default:
-          MP_TYPE(x,y) = CST_COMMUNE_1;
-          break;
-	    }
-        if( MP_INFO(x,y).int_5 == 0 ){ //not producing anything
-          MP_TYPE(x,y) = CST_COMMUNE_1;
+            MP_TYPE(x, y) = CST_COMMUNE_1;
+            break;
         }
+        if (MP_INFO(x, y).int_5 == 0) { //not producing anything
+            MP_TYPE(x, y) = CST_COMMUNE_1;
+        }
     }
 
 }
 
-void
-mps_commune (int x, int y)
+void mps_commune(int x, int y)
 {
     int i = 0;
-    const char * p;
+    const char *p;
 
-    mps_store_title(i++,_("Commune"));
+    mps_store_title(i++, _("Commune"));
     i++;
     i++;
-    mps_store_title(i++,_("Activity"));
+    mps_store_title(i++, _("Activity"));
     i++;
-    p = (MP_INFO(x,y).int_5 & 1) ? _("Yes") : _("No");
-    mps_store_ss(i++,_("Coal"),p);
-    p = (MP_INFO(x,y).int_5 & 2) ? _("Yes") : _("No");
-    mps_store_ss(i++,_("Ore"),p);
-    p = (MP_INFO(x,y).int_5 & 4) ? _("Yes") : _("No");
-    mps_store_ss(i++,_("Steel"),p);
-    p = (MP_INFO(x,y).int_5 & 8) ? _("Yes") : _("No");
-    mps_store_ss(i++,_("Waste"),p);
+    p = (MP_INFO(x, y).int_5 & 1) ? _("Yes") : _("No");
+    mps_store_ss(i++, _("Coal"), p);
+    p = (MP_INFO(x, y).int_5 & 2) ? _("Yes") : _("No");
+    mps_store_ss(i++, _("Ore"), p);
+    p = (MP_INFO(x, y).int_5 & 4) ? _("Yes") : _("No");
+    mps_store_ss(i++, _("Steel"), p);
+    p = (MP_INFO(x, y).int_5 & 8) ? _("Yes") : _("No");
+    mps_store_ss(i++, _("Waste"), p);
 }

Modified: trunk/src/lincity/modules/commune.h
===================================================================
--- trunk/src/lincity/modules/commune.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/commune.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __commune_h__
 
 void do_commune(int x, int y);
-void mps_commune (int x, int y);
+void mps_commune(int x, int y);
 
 #endif /* __commune_h__ */

Modified: trunk/src/lincity/modules/cricket.cpp
===================================================================
--- trunk/src/lincity/modules/cricket.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/cricket.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,100 +8,90 @@
 #include "modules.h"
 #include "cricket.h"
 
-void
-do_cricket (int x, int y)
+void do_cricket(int x, int y)
 {
-  /*
-     // int_1 is the jobs stored at the pavillion
-     // int_2 is the goods stored at the pavillion
-     // int_3 is the animation flag
-     // int_4 is the time of the next frame
-   */
-  if (MP_INFO(x,y).int_1
-      < (MAX_JOBS_AT_CRICKET - CRICKET_GET_JOBS))
-    if (get_jobs (x, y, CRICKET_GET_JOBS) != 0)
-      MP_INFO(x,y).int_1 += CRICKET_GET_JOBS;
-  if (MP_INFO(x,y).int_2
-      < (MAX_GOODS_AT_CRICKET - CRICKET_GET_GOODS))
-    if (get_goods (x, y, CRICKET_GET_GOODS) != 0)
-      MP_INFO(x,y).int_2 += CRICKET_GET_GOODS;
-  /* animate */
-  if (MP_INFO(x,y).int_3 && real_time > MP_INFO(x,y).int_4)
-    {
-      MP_INFO(x,y).int_4 = real_time + CRICKET_ANIMATION_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_CRICKET_1):
-	  MP_TYPE(x,y) = CST_CRICKET_2;
-	  break;
-	case (CST_CRICKET_2):
-	  MP_TYPE(x,y) = CST_CRICKET_3;
-	  break;
-	case (CST_CRICKET_3):
-	  MP_TYPE(x,y) = CST_CRICKET_4;
-	  break;
-	case (CST_CRICKET_4):
-	  MP_TYPE(x,y) = CST_CRICKET_5;
-	  break;
-	case (CST_CRICKET_5):
-	  MP_TYPE(x,y) = CST_CRICKET_6;
-	  break;
-	case (CST_CRICKET_6):
-	  MP_TYPE(x,y) = CST_CRICKET_7;
-	  break;
-	case (CST_CRICKET_7):
-	  MP_TYPE(x,y) = CST_CRICKET_1;
-	  MP_INFO(x,y).int_3 = 0;	/* disable anim */
+    /*
+       // int_1 is the jobs stored at the pavillion
+       // int_2 is the goods stored at the pavillion
+       // int_3 is the animation flag
+       // int_4 is the time of the next frame
+     */
+    if (MP_INFO(x, y).int_1 < (MAX_JOBS_AT_CRICKET - CRICKET_GET_JOBS))
+        if (get_jobs(x, y, CRICKET_GET_JOBS) != 0)
+            MP_INFO(x, y).int_1 += CRICKET_GET_JOBS;
+    if (MP_INFO(x, y).int_2 < (MAX_GOODS_AT_CRICKET - CRICKET_GET_GOODS))
+        if (get_goods(x, y, CRICKET_GET_GOODS) != 0)
+            MP_INFO(x, y).int_2 += CRICKET_GET_GOODS;
+    /* animate */
+    if (MP_INFO(x, y).int_3 && real_time > MP_INFO(x, y).int_4) {
+        MP_INFO(x, y).int_4 = real_time + CRICKET_ANIMATION_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_CRICKET_1):
+            MP_TYPE(x, y) = CST_CRICKET_2;
+            break;
+        case (CST_CRICKET_2):
+            MP_TYPE(x, y) = CST_CRICKET_3;
+            break;
+        case (CST_CRICKET_3):
+            MP_TYPE(x, y) = CST_CRICKET_4;
+            break;
+        case (CST_CRICKET_4):
+            MP_TYPE(x, y) = CST_CRICKET_5;
+            break;
+        case (CST_CRICKET_5):
+            MP_TYPE(x, y) = CST_CRICKET_6;
+            break;
+        case (CST_CRICKET_6):
+            MP_TYPE(x, y) = CST_CRICKET_7;
+            break;
+        case (CST_CRICKET_7):
+            MP_TYPE(x, y) = CST_CRICKET_1;
+            MP_INFO(x, y).int_3 = 0;    /* disable anim */
 
-	  break;
-	}
+            break;
+        }
     }
 
-  /* That's all. Cover is done by different functions every 3 months or so. */
+    /* That's all. Cover is done by different functions every 3 months or so. */
 
-  cricket_cost += CRICKET_RUNNING_COST;
+    cricket_cost += CRICKET_RUNNING_COST;
 }
 
-
-void
-do_cricket_cover (int x, int y)
+void do_cricket_cover(int x, int y)
 {
-  int xx, x1, x2, y1, y2;
-  if (MP_INFO(x,y).int_1 < (CRICKET_JOBS * DAYS_BETWEEN_COVER) ||
-      MP_INFO(x,y).int_2 < (CRICKET_GOODS * DAYS_BETWEEN_COVER))
-    return;
-  MP_INFO(x,y).int_1 -= (CRICKET_JOBS * DAYS_BETWEEN_COVER);
-  MP_INFO(x,y).int_2 -= (CRICKET_GOODS * DAYS_BETWEEN_COVER);
-  MP_INFO(x,y).int_3 = 1;	/* turn on animation */
+    int xx, x1, x2, y1, y2;
+    if (MP_INFO(x, y).int_1 < (CRICKET_JOBS * DAYS_BETWEEN_COVER) ||
+        MP_INFO(x, y).int_2 < (CRICKET_GOODS * DAYS_BETWEEN_COVER))
+        return;
+    MP_INFO(x, y).int_1 -= (CRICKET_JOBS * DAYS_BETWEEN_COVER);
+    MP_INFO(x, y).int_2 -= (CRICKET_GOODS * DAYS_BETWEEN_COVER);
+    MP_INFO(x, y).int_3 = 1;    /* turn on animation */
 
-  x1 = x - CRICKET_RANGE;
-  if (x1 < 0)
-    x1 = 0;
-  x2 = x + CRICKET_RANGE;
-  if (x2 > WORLD_SIDE_LEN)
-    x2 = WORLD_SIDE_LEN;
-  y1 = y - CRICKET_RANGE;
-  if (y1 < 0)
-    y1 = 0;
-  y2 = y + CRICKET_RANGE;
-  if (y2 > WORLD_SIDE_LEN)
-    y2 = WORLD_SIDE_LEN;
-  for (; y1 < y2; y1++)
-    for (xx = x1; xx < x2; xx++)
-      MP_INFO(xx,y1).flags |= FLAG_CRICKET_COVER;
+    x1 = x - CRICKET_RANGE;
+    if (x1 < 0)
+        x1 = 0;
+    x2 = x + CRICKET_RANGE;
+    if (x2 > WORLD_SIDE_LEN)
+        x2 = WORLD_SIDE_LEN;
+    y1 = y - CRICKET_RANGE;
+    if (y1 < 0)
+        y1 = 0;
+    y2 = y + CRICKET_RANGE;
+    if (y2 > WORLD_SIDE_LEN)
+        y2 = WORLD_SIDE_LEN;
+    for (; y1 < y2; y1++)
+        for (xx = x1; xx < x2; xx++)
+            MP_INFO(xx, y1).flags |= FLAG_CRICKET_COVER;
 }
 
-void
-mps_cricket (int x, int y)
+void mps_cricket(int x, int y)
 {
     int i = 0;
 
-    mps_store_title(i++,_("Sports field"));
+    mps_store_title(i++, _("Sports field"));
     i++;
-    mps_store_title(i++,_("Inventory"));
-    mps_store_sfp(i++,_("Jobs"),
-		  MP_INFO(x,y).int_1 * 100.0 / MAX_JOBS_AT_CRICKET);
-    mps_store_sfp(i++,_("Goods"),
-		  MP_INFO(x,y).int_2 * 100.0 / MAX_GOODS_AT_CRICKET);
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / MAX_JOBS_AT_CRICKET);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / MAX_GOODS_AT_CRICKET);
 
 }

Modified: trunk/src/lincity/modules/cricket.h
===================================================================
--- trunk/src/lincity/modules/cricket.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/cricket.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,6 +10,6 @@
 
 void do_cricket(int x, int y);
 void do_cricket_cover(int x, int y);
-void mps_cricket (int x, int y);
+void mps_cricket(int x, int y);
 
 #endif /* __cricket_h__ */

Modified: trunk/src/lincity/modules/fire.cpp
===================================================================
--- trunk/src/lincity/modules/fire.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/fire.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,81 +9,74 @@
 #include "fire.h"
 #include <stdlib.h>
 
-void
-do_fire (int x, int y)
+void do_fire(int x, int y)
 {
-  /*
-    // int_1 is the next animation frame time
-    // int_2 is the fire length
-    // int_3 is the real_time before the fire can spread or -1 if triggered 
-    // int_4 is the idle land length
-  */
-  int i;
-  /* this so we don't get whole blocks changing in one go. */
-  if (MP_INFO(x,y).int_2 == 0)
+    /*
+       // int_1 is the next animation frame time
+       // int_2 is the fire length
+       // int_3 is the real_time before the fire can spread or -1 if triggered 
+       // int_4 is the idle land length
+     */
+    int i;
+    /* this so we don't get whole blocks changing in one go. */
+    if (MP_INFO(x, y).int_2 == 0)
 
-    MP_INFO(x,y).int_2 = rand () % (FIRE_LENGTH / 5);
-  if (MP_INFO(x,y).int_2 > FIRE_LENGTH)
-    {
-      if (MP_INFO(x,y).int_4 == 0)	/* rand length here also */
-	MP_INFO(x,y).int_4 = rand () % (AFTER_FIRE_LENGTH / 6);
-      MP_INFO(x,y).int_4++;
-      if (MP_INFO(x,y).int_4 > AFTER_FIRE_LENGTH)
-          if (use_waterwell) {
-              do_bulldoze_area (CST_DESERT, x, y);
-          } else {
-              do_bulldoze_area (CST_GREEN, x, y);
-          }
-      else if (MP_INFO(x,y).int_4 > (3 * AFTER_FIRE_LENGTH) / 4)
-	MP_TYPE(x,y) = CST_FIRE_DONE4;
-      else if (MP_INFO(x,y).int_4 > (2 * AFTER_FIRE_LENGTH) / 4)
-	MP_TYPE(x,y) = CST_FIRE_DONE3;
-      else if (MP_INFO(x,y).int_4 > (AFTER_FIRE_LENGTH) / 4)
-	MP_TYPE(x,y) = CST_FIRE_DONE2;
-      else
-	MP_TYPE(x,y) = CST_FIRE_DONE1;
-      return;
+        MP_INFO(x, y).int_2 = rand() % (FIRE_LENGTH / 5);
+    if (MP_INFO(x, y).int_2 > FIRE_LENGTH) {
+        if (MP_INFO(x, y).int_4 == 0)   /* rand length here also */
+            MP_INFO(x, y).int_4 = rand() % (AFTER_FIRE_LENGTH / 6);
+        MP_INFO(x, y).int_4++;
+        if (MP_INFO(x, y).int_4 > AFTER_FIRE_LENGTH)
+            if (use_waterwell) {
+                do_bulldoze_area(CST_DESERT, x, y);
+            } else {
+                do_bulldoze_area(CST_GREEN, x, y);
+        } else if (MP_INFO(x, y).int_4 > (3 * AFTER_FIRE_LENGTH) / 4)
+            MP_TYPE(x, y) = CST_FIRE_DONE4;
+        else if (MP_INFO(x, y).int_4 > (2 * AFTER_FIRE_LENGTH) / 4)
+            MP_TYPE(x, y) = CST_FIRE_DONE3;
+        else if (MP_INFO(x, y).int_4 > (AFTER_FIRE_LENGTH) / 4)
+            MP_TYPE(x, y) = CST_FIRE_DONE2;
+        else
+            MP_TYPE(x, y) = CST_FIRE_DONE1;
+        return;
     }
-  MP_INFO(x,y).int_2++;
-  if (real_time > MP_INFO(x,y).int_1)
-    {
-      MP_INFO(x,y).int_1 = real_time + FIRE_ANIMATION_SPEED;
-      if (MP_TYPE(x,y) == CST_FIRE_1)
-	MP_TYPE(x,y) = CST_FIRE_2;
-      else if (MP_TYPE(x,y) == CST_FIRE_2)
-	MP_TYPE(x,y) = CST_FIRE_3;
-      else if (MP_TYPE(x,y) == CST_FIRE_3)
-	MP_TYPE(x,y) = CST_FIRE_4;
-      else if (MP_TYPE(x,y) == CST_FIRE_4)
-	MP_TYPE(x,y) = CST_FIRE_5;
-      else if (MP_TYPE(x,y) == CST_FIRE_5)
-	MP_TYPE(x,y) = CST_FIRE_1;
+    MP_INFO(x, y).int_2++;
+    if (real_time > MP_INFO(x, y).int_1) {
+        MP_INFO(x, y).int_1 = real_time + FIRE_ANIMATION_SPEED;
+        if (MP_TYPE(x, y) == CST_FIRE_1)
+            MP_TYPE(x, y) = CST_FIRE_2;
+        else if (MP_TYPE(x, y) == CST_FIRE_2)
+            MP_TYPE(x, y) = CST_FIRE_3;
+        else if (MP_TYPE(x, y) == CST_FIRE_3)
+            MP_TYPE(x, y) = CST_FIRE_4;
+        else if (MP_TYPE(x, y) == CST_FIRE_4)
+            MP_TYPE(x, y) = CST_FIRE_5;
+        else if (MP_TYPE(x, y) == CST_FIRE_5)
+            MP_TYPE(x, y) = CST_FIRE_1;
     }
-  if (MP_INFO(x,y).int_3 == -1)
-    {
-      if ((rand () % FIRE_DAYS_PER_SPREAD) == 1)
-	{
-	  i = rand () % 4;
-	  switch (i)
-	    {
-	    case (0):
-	      do_random_fire (x - 1, y, 0);
-	      break;
-	    case (1):
-	      do_random_fire (x, y - 1, 0);
-	      break;
-	    case (2):
-	      do_random_fire (x + 1, y, 0);
-	      break;
-	    case (3):
-	      do_random_fire (x, y + 1, 0);
-	      break;
-	    }
-	}
+    if (MP_INFO(x, y).int_3 == -1) {
+        if ((rand() % FIRE_DAYS_PER_SPREAD) == 1) {
+            i = rand() % 4;
+            switch (i) {
+            case (0):
+                do_random_fire(x - 1, y, 0);
+                break;
+            case (1):
+                do_random_fire(x, y - 1, 0);
+                break;
+            case (2):
+                do_random_fire(x + 1, y, 0);
+                break;
+            case (3):
+                do_random_fire(x, y + 1, 0);
+                break;
+            }
+        }
     }
-  /* check here 'cos we can wait in the ok box for ever. */
-  else if (MP_INFO(x,y).int_3 == 0)
-    MP_INFO(x,y).int_3 = real_time + 15000;	/* 15 secs seem fair */
-  else if (real_time >= MP_INFO(x,y).int_3)
-    MP_INFO(x,y).int_3 = -1;
+    /* check here 'cos we can wait in the ok box for ever. */
+    else if (MP_INFO(x, y).int_3 == 0)
+        MP_INFO(x, y).int_3 = real_time + 15000;        /* 15 secs seem fair */
+    else if (real_time >= MP_INFO(x, y).int_3)
+        MP_INFO(x, y).int_3 = -1;
 }

Modified: trunk/src/lincity/modules/firestation.cpp
===================================================================
--- trunk/src/lincity/modules/firestation.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/firestation.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,120 +8,107 @@
 #include "modules.h"
 #include "firestation.h"
 
-
-void
-do_firestation (int x, int y)
+void do_firestation(int x, int y)
 {
-  /*
-     // int_1 is the jobs stored at the fire station
-     // int_2 is the goods stored at the fire station
-     // int_3 is the animation flag
-     // int_4 is the time of the next frame
-     // int_5 is the pause counter
-   */
+    /*
+       // int_1 is the jobs stored at the fire station
+       // int_2 is the goods stored at the fire station
+       // int_3 is the animation flag
+       // int_4 is the time of the next frame
+       // int_5 is the pause counter
+     */
     /* XXX: should note whether we actually _produced_ fire cover in int_6 */
-  if (MP_INFO(x,y).int_1
-      < (MAX_JOBS_AT_FIRESTATION - FIRESTATION_GET_JOBS))
-    if (get_jobs (x, y, FIRESTATION_GET_JOBS) != 0)
-      MP_INFO(x,y).int_1 += FIRESTATION_GET_JOBS;
-  if (MP_INFO(x,y).int_2
-      < (MAX_GOODS_AT_FIRESTATION - FIRESTATION_GET_GOODS))
-    if (get_goods (x, y, FIRESTATION_GET_GOODS) != 0)
-      MP_INFO(x,y).int_2 += FIRESTATION_GET_GOODS;
-  /* animate */
-  if (MP_INFO(x,y).int_3 && real_time > MP_INFO(x,y).int_4)
-    {
-      MP_INFO(x,y).int_4 = real_time + FIRESTATION_ANIMATION_SPEED;
-      if (MP_INFO(x,y).int_5 > 0)
-	MP_INFO(x,y).int_5--;
-      else
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_FIRESTATION_1):
-	      MP_TYPE(x,y) = CST_FIRESTATION_2;
-	      break;
-	    case (CST_FIRESTATION_2):
-	      MP_TYPE(x,y) = CST_FIRESTATION_3;
-	      break;
-	    case (CST_FIRESTATION_3):
-	      MP_TYPE(x,y) = CST_FIRESTATION_4;
-	      break;
-	    case (CST_FIRESTATION_4):
-	      MP_TYPE(x,y) = CST_FIRESTATION_5;
-	      break;
-	    case (CST_FIRESTATION_5):
-	      MP_TYPE(x,y) = CST_FIRESTATION_6;
-	      break;
-	    case (CST_FIRESTATION_6):
-	      MP_TYPE(x,y) = CST_FIRESTATION_7;
-	      MP_INFO(x,y).int_5 = 10;	/* pause */
+    if (MP_INFO(x, y).int_1 < (MAX_JOBS_AT_FIRESTATION - FIRESTATION_GET_JOBS))
+        if (get_jobs(x, y, FIRESTATION_GET_JOBS) != 0)
+            MP_INFO(x, y).int_1 += FIRESTATION_GET_JOBS;
+    if (MP_INFO(x, y).int_2 < (MAX_GOODS_AT_FIRESTATION - FIRESTATION_GET_GOODS))
+        if (get_goods(x, y, FIRESTATION_GET_GOODS) != 0)
+            MP_INFO(x, y).int_2 += FIRESTATION_GET_GOODS;
+    /* animate */
+    if (MP_INFO(x, y).int_3 && real_time > MP_INFO(x, y).int_4) {
+        MP_INFO(x, y).int_4 = real_time + FIRESTATION_ANIMATION_SPEED;
+        if (MP_INFO(x, y).int_5 > 0)
+            MP_INFO(x, y).int_5--;
+        else {
+            switch (MP_TYPE(x, y)) {
+            case (CST_FIRESTATION_1):
+                MP_TYPE(x, y) = CST_FIRESTATION_2;
+                break;
+            case (CST_FIRESTATION_2):
+                MP_TYPE(x, y) = CST_FIRESTATION_3;
+                break;
+            case (CST_FIRESTATION_3):
+                MP_TYPE(x, y) = CST_FIRESTATION_4;
+                break;
+            case (CST_FIRESTATION_4):
+                MP_TYPE(x, y) = CST_FIRESTATION_5;
+                break;
+            case (CST_FIRESTATION_5):
+                MP_TYPE(x, y) = CST_FIRESTATION_6;
+                break;
+            case (CST_FIRESTATION_6):
+                MP_TYPE(x, y) = CST_FIRESTATION_7;
+                MP_INFO(x, y).int_5 = 10;       /* pause */
 
-	      break;
-	    case (CST_FIRESTATION_7):
-	      MP_TYPE(x,y) = CST_FIRESTATION_8;
-	      break;
-	    case (CST_FIRESTATION_8):
-	      MP_TYPE(x,y) = CST_FIRESTATION_9;
-	      break;
-	    case (CST_FIRESTATION_9):
-	      MP_TYPE(x,y) = CST_FIRESTATION_10;
-	      break;
-	    case (CST_FIRESTATION_10):
-	      MP_TYPE(x,y) = CST_FIRESTATION_1;
-	      MP_INFO(x,y).int_3 = 0;		/* stop */
+                break;
+            case (CST_FIRESTATION_7):
+                MP_TYPE(x, y) = CST_FIRESTATION_8;
+                break;
+            case (CST_FIRESTATION_8):
+                MP_TYPE(x, y) = CST_FIRESTATION_9;
+                break;
+            case (CST_FIRESTATION_9):
+                MP_TYPE(x, y) = CST_FIRESTATION_10;
+                break;
+            case (CST_FIRESTATION_10):
+                MP_TYPE(x, y) = CST_FIRESTATION_1;
+                MP_INFO(x, y).int_3 = 0;        /* stop */
 
-	      break;
+                break;
 
-
-	    }
-	}
+            }
+        }
     }
-  /* That's all. Cover is done by different functions every 3 months or so. */
+    /* That's all. Cover is done by different functions every 3 months or so. */
 
-  fire_cost += FIRESTATION_RUNNING_COST;
+    fire_cost += FIRESTATION_RUNNING_COST;
 }
 
-
-void
-do_fire_cover (int x, int y)
+void do_fire_cover(int x, int y)
 {
-  int xx, x1, x2, y1, y2;
-  if (MP_INFO(x,y).int_1 < (FIRESTATION_JOBS * DAYS_BETWEEN_COVER) ||
-      MP_INFO(x,y).int_2 < (FIRESTATION_GOODS * DAYS_BETWEEN_COVER))
-    return;
-  MP_INFO(x,y).int_1 -= (FIRESTATION_JOBS * DAYS_BETWEEN_COVER);
-  MP_INFO(x,y).int_2 -= (FIRESTATION_GOODS * DAYS_BETWEEN_COVER);
-  MP_INFO(x,y).int_3 = 1;	/* turn on animation */
+    int xx, x1, x2, y1, y2;
+    if (MP_INFO(x, y).int_1 < (FIRESTATION_JOBS * DAYS_BETWEEN_COVER) ||
+        MP_INFO(x, y).int_2 < (FIRESTATION_GOODS * DAYS_BETWEEN_COVER))
+        return;
+    MP_INFO(x, y).int_1 -= (FIRESTATION_JOBS * DAYS_BETWEEN_COVER);
+    MP_INFO(x, y).int_2 -= (FIRESTATION_GOODS * DAYS_BETWEEN_COVER);
+    MP_INFO(x, y).int_3 = 1;    /* turn on animation */
 
-  x1 = x - FIRESTATION_RANGE;
-  if (x1 < 0)
-    x1 = 0;
-  x2 = x + FIRESTATION_RANGE;
-  if (x2 > WORLD_SIDE_LEN)
-    x2 = WORLD_SIDE_LEN;
-  y1 = y - FIRESTATION_RANGE;
-  if (y1 < 0)
-    y1 = 0;
-  y2 = y + FIRESTATION_RANGE;
-  if (y2 > WORLD_SIDE_LEN)
-    y2 = WORLD_SIDE_LEN;
-  for (; y1 < y2; y1++)
-    for (xx = x1; xx < x2; xx++)
-      MP_INFO(xx,y1).flags |= FLAG_FIRE_COVER;
+    x1 = x - FIRESTATION_RANGE;
+    if (x1 < 0)
+        x1 = 0;
+    x2 = x + FIRESTATION_RANGE;
+    if (x2 > WORLD_SIDE_LEN)
+        x2 = WORLD_SIDE_LEN;
+    y1 = y - FIRESTATION_RANGE;
+    if (y1 < 0)
+        y1 = 0;
+    y2 = y + FIRESTATION_RANGE;
+    if (y2 > WORLD_SIDE_LEN)
+        y2 = WORLD_SIDE_LEN;
+    for (; y1 < y2; y1++)
+        for (xx = x1; xx < x2; xx++)
+            MP_INFO(xx, y1).flags |= FLAG_FIRE_COVER;
 }
 
-void
-mps_firestation (int x, int y)
+void mps_firestation(int x, int y)
 {
     int i = 0;
 
-    mps_store_title(i++,_("Fire Station"));
+    mps_store_title(i++, _("Fire Station"));
     i++;
-    mps_store_title(i++,_("Inventory"));
-    mps_store_sfp(i++,_("Jobs"),
-		  MP_INFO(x,y).int_1 * 100.0 / MAX_JOBS_AT_FIRESTATION);
-    mps_store_sfp(i++,_("Goods"),
-		  MP_INFO(x,y).int_2 * 100.0 / MAX_GOODS_AT_FIRESTATION);
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / MAX_JOBS_AT_FIRESTATION);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / MAX_GOODS_AT_FIRESTATION);
 
 }

Modified: trunk/src/lincity/modules/firestation.h
===================================================================
--- trunk/src/lincity/modules/firestation.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/firestation.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,6 +10,6 @@
 
 void do_firestation(int x, int y);
 void do_fire_cover(int x, int y);
-void mps_firestation (int x, int y);
+void mps_firestation(int x, int y);
 
 #endif /* __firestation_h__ */

Modified: trunk/src/lincity/modules/health_centre.cpp
===================================================================
--- trunk/src/lincity/modules/health_centre.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/health_centre.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,67 +8,57 @@
 #include "modules.h"
 #include "health_centre.h"
 
-
-void
-do_health_centre (int x, int y)
+void do_health_centre(int x, int y)
 {
-  /*
-     // int_1 is the jobs stored at the health centre
-     // int_2 is the goods stored at the health centre
-   */
-  if (MP_INFO(x,y).int_1
-      < (MAX_JOBS_AT_HEALTH_CENTRE - HEALTH_CENTRE_GET_JOBS))
-    if (get_jobs (x, y, HEALTH_CENTRE_GET_JOBS) != 0)
-      MP_INFO(x,y).int_1 += HEALTH_CENTRE_GET_JOBS;
-  if (MP_INFO(x,y).int_2
-      < (MAX_GOODS_AT_HEALTH_CENTRE - HEALTH_CENTRE_GET_GOODS))
-    if (get_goods (x, y, HEALTH_CENTRE_GET_GOODS) != 0)
-      MP_INFO(x,y).int_2 += HEALTH_CENTRE_GET_GOODS;
+    /*
+       // int_1 is the jobs stored at the health centre
+       // int_2 is the goods stored at the health centre
+     */
+    if (MP_INFO(x, y).int_1 < (MAX_JOBS_AT_HEALTH_CENTRE - HEALTH_CENTRE_GET_JOBS))
+        if (get_jobs(x, y, HEALTH_CENTRE_GET_JOBS) != 0)
+            MP_INFO(x, y).int_1 += HEALTH_CENTRE_GET_JOBS;
+    if (MP_INFO(x, y).int_2 < (MAX_GOODS_AT_HEALTH_CENTRE - HEALTH_CENTRE_GET_GOODS))
+        if (get_goods(x, y, HEALTH_CENTRE_GET_GOODS) != 0)
+            MP_INFO(x, y).int_2 += HEALTH_CENTRE_GET_GOODS;
 
-  /* That's all. Cover is done by different functions every 3 months or so. */
+    /* That's all. Cover is done by different functions every 3 months or so. */
 
-  health_cost += HEALTH_RUNNING_COST;
+    health_cost += HEALTH_RUNNING_COST;
 }
 
-
-void
-do_health_cover (int x, int y)
+void do_health_cover(int x, int y)
 {
-  int xx, x1, x2, y1, y2;
-  if (MP_INFO(x,y).int_1 < (HEALTH_CENTRE_JOBS * DAYS_BETWEEN_COVER) ||
-      MP_INFO(x,y).int_2 < (HEALTH_CENTRE_GOODS * DAYS_BETWEEN_COVER))
-    return;
-  MP_INFO(x,y).int_1 -= (HEALTH_CENTRE_JOBS * DAYS_BETWEEN_COVER);
-  MP_INFO(x,y).int_2 -= (HEALTH_CENTRE_GOODS * DAYS_BETWEEN_COVER);
-  x1 = x - HEALTH_CENTRE_RANGE;
-  if (x1 < 0)
-    x1 = 0;
-  x2 = x + HEALTH_CENTRE_RANGE;
-  if (x2 > WORLD_SIDE_LEN)
-    x2 = WORLD_SIDE_LEN;
-  y1 = y - HEALTH_CENTRE_RANGE;
-  if (y1 < 0)
-    y1 = 0;
-  y2 = y + HEALTH_CENTRE_RANGE;
-  if (y2 > WORLD_SIDE_LEN)
-    y2 = WORLD_SIDE_LEN;
-  for (; y1 < y2; y1++)
-    for (xx = x1; xx < x2; xx++)
-      MP_INFO(xx,y1).flags |= FLAG_HEALTH_COVER;
+    int xx, x1, x2, y1, y2;
+    if (MP_INFO(x, y).int_1 < (HEALTH_CENTRE_JOBS * DAYS_BETWEEN_COVER) ||
+        MP_INFO(x, y).int_2 < (HEALTH_CENTRE_GOODS * DAYS_BETWEEN_COVER))
+        return;
+    MP_INFO(x, y).int_1 -= (HEALTH_CENTRE_JOBS * DAYS_BETWEEN_COVER);
+    MP_INFO(x, y).int_2 -= (HEALTH_CENTRE_GOODS * DAYS_BETWEEN_COVER);
+    x1 = x - HEALTH_CENTRE_RANGE;
+    if (x1 < 0)
+        x1 = 0;
+    x2 = x + HEALTH_CENTRE_RANGE;
+    if (x2 > WORLD_SIDE_LEN)
+        x2 = WORLD_SIDE_LEN;
+    y1 = y - HEALTH_CENTRE_RANGE;
+    if (y1 < 0)
+        y1 = 0;
+    y2 = y + HEALTH_CENTRE_RANGE;
+    if (y2 > WORLD_SIDE_LEN)
+        y2 = WORLD_SIDE_LEN;
+    for (; y1 < y2; y1++)
+        for (xx = x1; xx < x2; xx++)
+            MP_INFO(xx, y1).flags |= FLAG_HEALTH_COVER;
 }
 
-
-void
-mps_health_centre (int x, int y)
+void mps_health_centre(int x, int y)
 {
     int i = 0;
 
-    mps_store_title(i++,_("Health Centre"));
+    mps_store_title(i++, _("Health Centre"));
     i++;
-    mps_store_title(i++,_("Inventory"));
-    mps_store_sfp(i++,_("Jobs"),
-		  MP_INFO(x,y).int_1 * 100.0 / MAX_JOBS_AT_HEALTH_CENTRE);
-    mps_store_sfp(i++,_("Goods"),
-		  MP_INFO(x,y).int_2 * 100.0 / MAX_GOODS_AT_HEALTH_CENTRE);
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / MAX_JOBS_AT_HEALTH_CENTRE);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / MAX_GOODS_AT_HEALTH_CENTRE);
 
 }

Modified: trunk/src/lincity/modules/health_centre.h
===================================================================
--- trunk/src/lincity/modules/health_centre.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/health_centre.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,6 +10,6 @@
 
 void do_health_centre(int x, int y);
 void do_health_cover(int x, int y);
-void mps_health_centre (int x, int y);
+void mps_health_centre(int x, int y);
 
 #endif /* __health_centre_h__ */

Modified: trunk/src/lincity/modules/heavy_industry.cpp
===================================================================
--- trunk/src/lincity/modules/heavy_industry.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/heavy_industry.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,345 +8,282 @@
 #include "modules.h"
 #include "heavy_industry.h"
 
-
-void
-do_industry_h (int x, int y)
+void do_industry_h(int x, int y)
 {
-  int rawm, steel = 0;
-  /*
-     // int_1 is the steel produced this month so far
-     // int_2 is the amount of steel in store
-     // int_3 is the amount of raw materials in store (ore)
-     // int_4 is the coal in store
-     // int_5 is the percent max production last month
-     // int_6 is the time of the next animation frame.
-     // int_7 is whether we get power from coal (1) or elsewhere (0)
-   */
+    int rawm, steel = 0;
+    /*
+       // int_1 is the steel produced this month so far
+       // int_2 is the amount of steel in store
+       // int_3 is the amount of raw materials in store (ore)
+       // int_4 is the coal in store
+       // int_5 is the percent max production last month
+       // int_6 is the time of the next animation frame.
+       // int_7 is whether we get power from coal (1) or elsewhere (0)
+     */
 
-  /* See if there's any raw materials (ore) on the road/rail. If so, use some
-     jobs to get it.  First get some ore... 
-  */
-  int load;
-  if (MP_INFO(x,y).int_3 < MAX_ORE_AT_INDUSTRY_H
-      && ((MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT)
-	  != 0) && MP_INFO(x - 1,y).int_5 > 0)
-    if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-      {
-        load = std::min(MAX_ORE_AT_INDUSTRY_H - MP_INFO(x,y).int_3,  
-            MP_INFO(x - 1,y).int_5 / 2 + ((MP_INFO(x - 1,y).int_5) % 2));
-	MP_INFO(x,y).int_3 += load;
-	MP_INFO(x - 1,y).int_5 -= load;
-      }
-  if (MP_INFO(x,y).int_3 < MAX_ORE_AT_INDUSTRY_H
-      && ((MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT)
-	  != 0) && MP_INFO(x,y - 1).int_5 > 0)
-    if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-      {
-        load = std::min(MAX_ORE_AT_INDUSTRY_H - MP_INFO(x,y).int_3,  
-            MP_INFO(x,y - 1).int_5 / 2 + ((MP_INFO(x,y - 1).int_5) % 2));
-	MP_INFO(x,y).int_3 += load;
-	MP_INFO(x,y - 1).int_5 -= load;
-      }
-  /* then get some coal if needed */
-  if (MP_INFO(x,y).int_4 < MAX_COAL_AT_INDUSTRY_H
-      && ((MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT)
-	  != 0) && MP_INFO(x - 1,y).int_3 > 0)
-    if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-      {
-        load = std::min(MAX_COAL_AT_INDUSTRY_H-MP_INFO(x,y).int_4,
-            MP_INFO(x - 1,y).int_3 / 2 + ((MP_INFO(x - 1,y).int_3) % 2));
-	MP_INFO(x,y).int_4 += load;
-	MP_INFO(x - 1,y).int_3 -= load;
-      }
-  if (MP_INFO(x,y).int_4 < MAX_COAL_AT_INDUSTRY_H
-      && ((MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT)
-	  != 0) && MP_INFO(x,y - 1).int_3 > 0)
-    if (get_jobs (x, y, JOBS_LOAD_COAL) != 0)
-      {
-        load = std::min(MAX_COAL_AT_INDUSTRY_H-MP_INFO(x,y).int_4,
-            MP_INFO(x,y - 1).int_3 / 2 + ((MP_INFO(x,y - 1).int_3) % 2));
-	MP_INFO(x,y).int_4 += load;
-	MP_INFO(x,y - 1).int_3 -= load;
-      }
+    /* See if there's any raw materials (ore) on the road/rail. If so, use some
+       jobs to get it.  First get some ore... 
+     */
+    int load;
+    if (MP_INFO(x, y).int_3 < MAX_ORE_AT_INDUSTRY_H && ((MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT)
+                                                        != 0) && MP_INFO(x - 1, y).int_5 > 0)
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            load = std::min(MAX_ORE_AT_INDUSTRY_H - MP_INFO(x, y).int_3,
+                            MP_INFO(x - 1, y).int_5 / 2 + ((MP_INFO(x - 1, y).int_5) % 2));
+            MP_INFO(x, y).int_3 += load;
+            MP_INFO(x - 1, y).int_5 -= load;
+        }
+    if (MP_INFO(x, y).int_3 < MAX_ORE_AT_INDUSTRY_H && ((MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT)
+                                                        != 0) && MP_INFO(x, y - 1).int_5 > 0)
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            load = std::min(MAX_ORE_AT_INDUSTRY_H - MP_INFO(x, y).int_3,
+                            MP_INFO(x, y - 1).int_5 / 2 + ((MP_INFO(x, y - 1).int_5) % 2));
+            MP_INFO(x, y).int_3 += load;
+            MP_INFO(x, y - 1).int_5 -= load;
+        }
+    /* then get some coal if needed */
+    if (MP_INFO(x, y).int_4 < MAX_COAL_AT_INDUSTRY_H && ((MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT)
+                                                         != 0) && MP_INFO(x - 1, y).int_3 > 0)
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            load = std::min(MAX_COAL_AT_INDUSTRY_H - MP_INFO(x, y).int_4,
+                            MP_INFO(x - 1, y).int_3 / 2 + ((MP_INFO(x - 1, y).int_3) % 2));
+            MP_INFO(x, y).int_4 += load;
+            MP_INFO(x - 1, y).int_3 -= load;
+        }
+    if (MP_INFO(x, y).int_4 < MAX_COAL_AT_INDUSTRY_H && ((MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT)
+                                                         != 0) && MP_INFO(x, y - 1).int_3 > 0)
+        if (get_jobs(x, y, JOBS_LOAD_COAL) != 0) {
+            load = std::min(MAX_COAL_AT_INDUSTRY_H - MP_INFO(x, y).int_4,
+                            MP_INFO(x, y - 1).int_3 / 2 + ((MP_INFO(x, y - 1).int_3) % 2));
+            MP_INFO(x, y).int_4 += load;
+            MP_INFO(x, y - 1).int_3 -= load;
+        }
 
-  rawm = MP_INFO(x,y).int_3;
-  if (rawm > MAX_MADE_AT_INDUSTRY_H)
-    rawm = MAX_MADE_AT_INDUSTRY_H;
-  /* turn it into steel */
-  if (rawm > 0 && MP_INFO(x,y).int_2 < (MAX_STEEL_ON_RAIL * 10))
-    {
-      if (get_jobs (x, y, ((rawm / 2) / JOBS_MAKE_STEEL) + 1) != 0)
-	{
-	  steel = (rawm) / ORE_MAKE_STEEL;
-	  MP_POL(x,y) += INDUSTRY_H_POLLUTION / 2;
-	}
-      else if (get_jobs (x, y, ((rawm / 4) / JOBS_MAKE_STEEL) + 1) != 0)
-	{
-	  steel = (rawm / 2) / ORE_MAKE_STEEL;
-	  MP_POL(x,y) += INDUSTRY_H_POLLUTION / 4;
-	}
-      else if (get_jobs (x, y, ((rawm / 10) / JOBS_MAKE_STEEL) + 1) != 0)
-	{
-	  steel = (rawm / 5) / ORE_MAKE_STEEL;
-	  MP_POL(x,y) += INDUSTRY_H_POLLUTION / 10;
-	}
+    rawm = MP_INFO(x, y).int_3;
+    if (rawm > MAX_MADE_AT_INDUSTRY_H)
+        rawm = MAX_MADE_AT_INDUSTRY_H;
+    /* turn it into steel */
+    if (rawm > 0 && MP_INFO(x, y).int_2 < (MAX_STEEL_ON_RAIL * 10)) {
+        if (get_jobs(x, y, ((rawm / 2) / JOBS_MAKE_STEEL) + 1) != 0) {
+            steel = (rawm) / ORE_MAKE_STEEL;
+            MP_POL(x, y) += INDUSTRY_H_POLLUTION / 2;
+        } else if (get_jobs(x, y, ((rawm / 4) / JOBS_MAKE_STEEL) + 1) != 0) {
+            steel = (rawm / 2) / ORE_MAKE_STEEL;
+            MP_POL(x, y) += INDUSTRY_H_POLLUTION / 4;
+        } else if (get_jobs(x, y, ((rawm / 10) / JOBS_MAKE_STEEL) + 1) != 0) {
+            steel = (rawm / 5) / ORE_MAKE_STEEL;
+            MP_POL(x, y) += INDUSTRY_H_POLLUTION / 10;
+        }
     }
-  /* do this here rather than later 'cos maybe steel/=5 */
-  MP_INFO(x,y).int_3 -= steel * ORE_MAKE_STEEL;
-  ore_used += steel * ORE_MAKE_STEEL;
-  /* check there was enough electricity, or back up to 1/10 of the 
-     production. ie same work and material useage for less production. 
-     XXX: there is no reason material usage should be the same 
-     If no real power, see if we have enough coal to generate electricity.
-  */
-  if (get_power (x, y, steel * POWER_MAKE_STEEL, 1) == 0)
-    {
-      if (MP_INFO(x,y).int_4 < (steel * 2))
-	{
-	  MP_INFO(x,y).flags &= (0xffffffff - FLAG_POWERED);
-	  steel /= 5;
-	}
-      else
-	{
-	  MP_INFO(x,y).int_4 -= (steel * 2);
-	  coal_used += (steel * 2);
-	  MP_INFO(x,y).flags |= FLAG_POWERED;
-	  MP_INFO(x,y).int_7 = 1;
-	}
+    /* do this here rather than later 'cos maybe steel/=5 */
+    MP_INFO(x, y).int_3 -= steel * ORE_MAKE_STEEL;
+    ore_used += steel * ORE_MAKE_STEEL;
+    /* check there was enough electricity, or back up to 1/10 of the 
+       production. ie same work and material useage for less production. 
+       XXX: there is no reason material usage should be the same 
+       If no real power, see if we have enough coal to generate electricity.
+     */
+    if (get_power(x, y, steel * POWER_MAKE_STEEL, 1) == 0) {
+        if (MP_INFO(x, y).int_4 < (steel * 2)) {
+            MP_INFO(x, y).flags &= (0xffffffff - FLAG_POWERED);
+            steel /= 5;
+        } else {
+            MP_INFO(x, y).int_4 -= (steel * 2);
+            coal_used += (steel * 2);
+            MP_INFO(x, y).flags |= FLAG_POWERED;
+            MP_INFO(x, y).int_7 = 1;
+        }
+    } else {
+        MP_INFO(x, y).flags |= FLAG_POWERED;
+        MP_INFO(x, y).int_7 = 0;
     }
-  else 
-    {
-      MP_INFO(x,y).flags |= FLAG_POWERED;
-      MP_INFO(x,y).int_7 = 0;
+    MP_INFO(x, y).int_1 += steel;
+    MP_INFO(x, y).int_2 += steel;
+    /* now sell the steel to the road/rail */
+    if (MP_GROUP(x, y - 1) == GROUP_ROAD && (MAX_STEEL_ON_ROAD - MP_INFO(x, y - 1).int_6)
+        <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_ROAD - MP_INFO(x, y - 1).int_6);
+        MP_INFO(x, y - 1).int_6 = MAX_STEEL_ON_ROAD;
+    } else if (MP_GROUP(x, y - 1) == GROUP_RAIL && (MAX_STEEL_ON_RAIL - MP_INFO(x, y - 1).int_6)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_RAIL - MP_INFO(x, y - 1).int_6);
+        MP_INFO(x, y - 1).int_6 = MAX_STEEL_ON_RAIL;
+    } else if (MP_GROUP(x, y - 1) == GROUP_TRACK && (MAX_STEEL_ON_TRACK - MP_INFO(x, y - 1).int_6)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_TRACK - MP_INFO(x, y - 1).int_6);
+        MP_INFO(x, y - 1).int_6 = MAX_STEEL_ON_TRACK;
     }
-  MP_INFO(x,y).int_1 += steel;
-  MP_INFO(x,y).int_2 += steel;
-  /* now sell the steel to the road/rail */
-  if (MP_GROUP(x,y-1) == GROUP_ROAD 
-      && (MAX_STEEL_ON_ROAD - MP_INFO(x,y - 1).int_6)
-      <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_ROAD
-			       - MP_INFO(x,y - 1).int_6);
-      MP_INFO(x,y - 1).int_6 = MAX_STEEL_ON_ROAD;
-    }
-  else if (MP_GROUP(x,y - 1) == GROUP_RAIL 
-	   && (MAX_STEEL_ON_RAIL - MP_INFO(x,y - 1).int_6)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_RAIL
-			       - MP_INFO(x,y - 1).int_6);
-      MP_INFO(x,y - 1).int_6 = MAX_STEEL_ON_RAIL;
-    }
-  else if (MP_GROUP(x,y-1) == GROUP_TRACK 
-	   && (MAX_STEEL_ON_TRACK - MP_INFO(x,y - 1).int_6)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_TRACK
-			       - MP_INFO(x,y - 1).int_6);
-      MP_INFO(x,y - 1).int_6 = MAX_STEEL_ON_TRACK;
-    }
 
-  if (MP_GROUP(x-1,y) == GROUP_ROAD 
-      && (MAX_STEEL_ON_ROAD - MP_INFO(x - 1,y).int_6)
-      <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_ROAD
-			       - MP_INFO(x - 1,y).int_6);
-      MP_INFO(x - 1,y).int_6 = MAX_STEEL_ON_ROAD;
+    if (MP_GROUP(x - 1, y) == GROUP_ROAD && (MAX_STEEL_ON_ROAD - MP_INFO(x - 1, y).int_6)
+        <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_ROAD - MP_INFO(x - 1, y).int_6);
+        MP_INFO(x - 1, y).int_6 = MAX_STEEL_ON_ROAD;
+    } else if (MP_GROUP(x - 1, y) == GROUP_RAIL && (MAX_STEEL_ON_RAIL - MP_INFO(x - 1, y).int_6)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_RAIL - MP_INFO(x - 1, y).int_6);
+        MP_INFO(x - 1, y).int_6 = MAX_STEEL_ON_RAIL;
+    } else if (MP_GROUP(x - 1, y) == GROUP_TRACK && (MAX_STEEL_ON_TRACK - MP_INFO(x - 1, y).int_6)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_STEEL_ON_TRACK - MP_INFO(x - 1, y).int_6);
+        MP_INFO(x - 1, y).int_6 = MAX_STEEL_ON_TRACK;
     }
-  else if (MP_GROUP(x-1,y) == GROUP_RAIL 
-	   && (MAX_STEEL_ON_RAIL - MP_INFO(x - 1,y).int_6)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_RAIL
-			       - MP_INFO(x - 1,y).int_6);
-      MP_INFO(x - 1,y).int_6 = MAX_STEEL_ON_RAIL;
-    }
-  else if (MP_GROUP(x - 1,y) == GROUP_TRACK 
-	   && (MAX_STEEL_ON_TRACK - MP_INFO(x - 1,y).int_6)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_STEEL_ON_TRACK
-			       - MP_INFO(x - 1,y).int_6);
-      MP_INFO(x - 1,y).int_6 = MAX_STEEL_ON_TRACK;
-    }
 
-
-  /* now choose a graphic every month */
-  if ((total_time % NUMOF_DAYS_IN_MONTH) == NUMOF_DAYS_IN_MONTH - 1)
-    {
-      MP_INFO(x,y).int_5 = MP_INFO(x,y).int_1
-	/ (MAX_MADE_AT_INDUSTRY_H / ORE_MAKE_STEEL);
-      MP_INFO(x,y).int_1 = 0;
-      if (MP_INFO(x,y).int_5 > 80)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_H_H1):
-	    case (CST_INDUSTRY_H_H2):
-	    case (CST_INDUSTRY_H_H3):
-	    case (CST_INDUSTRY_H_H4):
-	    case (CST_INDUSTRY_H_H5):
-	    case (CST_INDUSTRY_H_H6):
-	    case (CST_INDUSTRY_H_H7):
-	    case (CST_INDUSTRY_H_H8):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_H_H1;
-	    }
-	}
-      else if (MP_INFO(x,y).int_5 > 30)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_H_M1):
-	    case (CST_INDUSTRY_H_M2):
-	    case (CST_INDUSTRY_H_M3):
-	    case (CST_INDUSTRY_H_M4):
-	    case (CST_INDUSTRY_H_M5):
-	    case (CST_INDUSTRY_H_M6):
-	    case (CST_INDUSTRY_H_M7):
-	    case (CST_INDUSTRY_H_M8):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_H_M1;
-	    }
-	}
-      else if (MP_INFO(x,y).int_5 > 0)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_H_L1):
-	    case (CST_INDUSTRY_H_L2):
-	    case (CST_INDUSTRY_H_L3):
-	    case (CST_INDUSTRY_H_L4):
-	    case (CST_INDUSTRY_H_L5):
-	    case (CST_INDUSTRY_H_L6):
-	    case (CST_INDUSTRY_H_L7):
-	    case (CST_INDUSTRY_H_L8):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_H_L1;
-	    }
-	}
-      else
-	MP_TYPE(x,y) = CST_INDUSTRY_H_C;
+    /* now choose a graphic every month */
+    if ((total_time % NUMOF_DAYS_IN_MONTH) == NUMOF_DAYS_IN_MONTH - 1) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_1 / (MAX_MADE_AT_INDUSTRY_H / ORE_MAKE_STEEL);
+        MP_INFO(x, y).int_1 = 0;
+        if (MP_INFO(x, y).int_5 > 80) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_H_H1):
+            case (CST_INDUSTRY_H_H2):
+            case (CST_INDUSTRY_H_H3):
+            case (CST_INDUSTRY_H_H4):
+            case (CST_INDUSTRY_H_H5):
+            case (CST_INDUSTRY_H_H6):
+            case (CST_INDUSTRY_H_H7):
+            case (CST_INDUSTRY_H_H8):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_H_H1;
+            }
+        } else if (MP_INFO(x, y).int_5 > 30) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_H_M1):
+            case (CST_INDUSTRY_H_M2):
+            case (CST_INDUSTRY_H_M3):
+            case (CST_INDUSTRY_H_M4):
+            case (CST_INDUSTRY_H_M5):
+            case (CST_INDUSTRY_H_M6):
+            case (CST_INDUSTRY_H_M7):
+            case (CST_INDUSTRY_H_M8):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_H_M1;
+            }
+        } else if (MP_INFO(x, y).int_5 > 0) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_H_L1):
+            case (CST_INDUSTRY_H_L2):
+            case (CST_INDUSTRY_H_L3):
+            case (CST_INDUSTRY_H_L4):
+            case (CST_INDUSTRY_H_L5):
+            case (CST_INDUSTRY_H_L6):
+            case (CST_INDUSTRY_H_L7):
+            case (CST_INDUSTRY_H_L8):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_H_L1;
+            }
+        } else
+            MP_TYPE(x, y) = CST_INDUSTRY_H_C;
     }
-  /* now animate */
-  if (real_time >= MP_INFO(x,y).int_6)
-    {
-      MP_INFO(x,y).int_6 = real_time + INDUSTRY_H_ANIM_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_INDUSTRY_H_L1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L2;
-	  break;
-	case (CST_INDUSTRY_H_L2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L3;
-	  break;
-	case (CST_INDUSTRY_H_L3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L4;
-	  break;
-	case (CST_INDUSTRY_H_L4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L5;
-	  break;
-	case (CST_INDUSTRY_H_L5):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L6;
-	  break;
-	case (CST_INDUSTRY_H_L6):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L7;
-	  break;
-	case (CST_INDUSTRY_H_L7):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L8;
-	  break;
-	case (CST_INDUSTRY_H_L8):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_L1;
-	  break;
+    /* now animate */
+    if (real_time >= MP_INFO(x, y).int_6) {
+        MP_INFO(x, y).int_6 = real_time + INDUSTRY_H_ANIM_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_INDUSTRY_H_L1):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L2;
+            break;
+        case (CST_INDUSTRY_H_L2):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L3;
+            break;
+        case (CST_INDUSTRY_H_L3):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L4;
+            break;
+        case (CST_INDUSTRY_H_L4):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L5;
+            break;
+        case (CST_INDUSTRY_H_L5):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L6;
+            break;
+        case (CST_INDUSTRY_H_L6):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L7;
+            break;
+        case (CST_INDUSTRY_H_L7):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L8;
+            break;
+        case (CST_INDUSTRY_H_L8):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_L1;
+            break;
 
-	case (CST_INDUSTRY_H_M1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M2;
-	  break;
-	case (CST_INDUSTRY_H_M2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M3;
-	  break;
-	case (CST_INDUSTRY_H_M3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M4;
-	  break;
-	case (CST_INDUSTRY_H_M4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M5;
-	  break;
-	case (CST_INDUSTRY_H_M5):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M6;
-	  break;
-	case (CST_INDUSTRY_H_M6):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M7;
-	  break;
-	case (CST_INDUSTRY_H_M7):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M8;
-	  break;
-	case (CST_INDUSTRY_H_M8):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_M1;
-	  break;
+        case (CST_INDUSTRY_H_M1):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M2;
+            break;
+        case (CST_INDUSTRY_H_M2):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M3;
+            break;
+        case (CST_INDUSTRY_H_M3):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M4;
+            break;
+        case (CST_INDUSTRY_H_M4):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M5;
+            break;
+        case (CST_INDUSTRY_H_M5):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M6;
+            break;
+        case (CST_INDUSTRY_H_M6):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M7;
+            break;
+        case (CST_INDUSTRY_H_M7):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M8;
+            break;
+        case (CST_INDUSTRY_H_M8):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_M1;
+            break;
 
-	case (CST_INDUSTRY_H_H1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H2;
-	  break;
-	case (CST_INDUSTRY_H_H2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H3;
-	  break;
-	case (CST_INDUSTRY_H_H3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H4;
-	  break;
-	case (CST_INDUSTRY_H_H4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H5;
-	  break;
-	case (CST_INDUSTRY_H_H5):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H6;
-	  break;
-	case (CST_INDUSTRY_H_H6):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H7;
-	  break;
-	case (CST_INDUSTRY_H_H7):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H8;
-	  break;
-	case (CST_INDUSTRY_H_H8):
-	  MP_TYPE(x,y) = CST_INDUSTRY_H_H1;
-	  break;
+        case (CST_INDUSTRY_H_H1):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H2;
+            break;
+        case (CST_INDUSTRY_H_H2):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H3;
+            break;
+        case (CST_INDUSTRY_H_H3):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H4;
+            break;
+        case (CST_INDUSTRY_H_H4):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H5;
+            break;
+        case (CST_INDUSTRY_H_H5):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H6;
+            break;
+        case (CST_INDUSTRY_H_H6):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H7;
+            break;
+        case (CST_INDUSTRY_H_H7):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H8;
+            break;
+        case (CST_INDUSTRY_H_H8):
+            MP_TYPE(x, y) = CST_INDUSTRY_H_H1;
+            break;
 
-	}
+        }
     }
 }
 
-
-void
-mps_heavy_industry (int x, int y)
+void mps_heavy_industry(int x, int y)
 {
     int i = 0;
-    const char * p;
-  
-    mps_store_title(i++,_("Heavy"));
-    mps_store_title(i++,_("Industry"));
+    const char *p;
+
+    mps_store_title(i++, _("Heavy"));
+    mps_store_title(i++, _("Industry"));
     i++;
 
-    if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) {
-	if (MP_INFO(x,y).int_7 == 1) {
-	    p = _("Coal");
-	} else {
-	    p = _("Grid");
-	}
+    if ((MP_INFO(x, y).flags & FLAG_POWERED) != 0) {
+        if (MP_INFO(x, y).int_7 == 1) {
+            p = _("Coal");
+        } else {
+            p = _("Grid");
+        }
     } else {
-	p = _("NO");
+        p = _("NO");
     }
 
-    mps_store_ss(i++,_("Power"),p);
+    mps_store_ss(i++, _("Power"), p);
 
-    mps_store_sd(i++,_("Output"), MP_INFO(x,y).int_1);
-    mps_store_sfp(i++,_("Store"), 
-		 MP_INFO(x,y).int_2 * 100.0 / MAX_STEEL_AT_INDUSTRY_H);
-    mps_store_sfp(i++,_("Ore"), 
-		 MP_INFO(x,y).int_3 * 100.0 / MAX_ORE_AT_INDUSTRY_H);
-    mps_store_sfp(i++,_("Coal"),
-		 MP_INFO(x,y).int_4 * 100.0 / MAX_COAL_AT_INDUSTRY_H);
-    mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_5);
+    mps_store_sd(i++, _("Output"), MP_INFO(x, y).int_1);
+    mps_store_sfp(i++, _("Store"), MP_INFO(x, y).int_2 * 100.0 / MAX_STEEL_AT_INDUSTRY_H);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_3 * 100.0 / MAX_ORE_AT_INDUSTRY_H);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_4 * 100.0 / MAX_COAL_AT_INDUSTRY_H);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_5);
 }

Modified: trunk/src/lincity/modules/light_industry.cpp
===================================================================
--- trunk/src/lincity/modules/light_industry.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/light_industry.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,365 +8,283 @@
 #include "modules.h"
 #include "light_industry.h"
 
-
-void
-do_industry_l (int x, int y)
+void do_industry_l(int x, int y)
 {
-  int goods = 0;
-  double tmp_pol;
-  /*
-     // int_1 is the goods produced this month so far
-     // int_2 is the amount of goods in store.
-     // int_3 is the amount of ore in store.
-     // int_4 is the amount of steel in store.
-     // int_5 is the jobs stored.
-     // int_6 is the percent of capacity last month.
-     // int 7 is the next animation frame time.
-   */
-  /* first get some jobs */
-  if (MP_INFO(x,y).int_5 < MAX_JOBS_AT_INDUSTRY_L - INDUSTRY_L_GET_JOBS)
-    {
-      if (get_jobs (x, y, INDUSTRY_L_GET_JOBS) != 0)
-	MP_INFO(x,y).int_5 += INDUSTRY_L_GET_JOBS;
-      else if (get_jobs (x, y, INDUSTRY_L_GET_JOBS / 10) != 0)
-	MP_INFO(x,y).int_5 += INDUSTRY_L_GET_JOBS / 10;
+    int goods = 0;
+    double tmp_pol;
+    /*
+       // int_1 is the goods produced this month so far
+       // int_2 is the amount of goods in store.
+       // int_3 is the amount of ore in store.
+       // int_4 is the amount of steel in store.
+       // int_5 is the jobs stored.
+       // int_6 is the percent of capacity last month.
+       // int 7 is the next animation frame time.
+     */
+    /* first get some jobs */
+    if (MP_INFO(x, y).int_5 < MAX_JOBS_AT_INDUSTRY_L - INDUSTRY_L_GET_JOBS) {
+        if (get_jobs(x, y, INDUSTRY_L_GET_JOBS) != 0)
+            MP_INFO(x, y).int_5 += INDUSTRY_L_GET_JOBS;
+        else if (get_jobs(x, y, INDUSTRY_L_GET_JOBS / 10) != 0)
+            MP_INFO(x, y).int_5 += INDUSTRY_L_GET_JOBS / 10;
     }
-  /* if we don't have enough jobs we can't do anything */
-  if (MP_INFO(x,y).int_5 < MIN_JOBS_AT_INDUSTRY_L)
-    return;
-  /* get some ore */
-  if (MP_INFO(x,y).int_3 < (MAX_ORE_AT_INDUSTRY_L
-			      - INDUSTRY_L_GET_ORE))
-    {
-      if ((MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0
-	  && MP_INFO(x - 1,y).int_5 > 0)
-	{
-	  if (MP_INFO(x - 1,y).int_5 >= INDUSTRY_L_GET_ORE)
-	    {
-	      MP_INFO(x,y).int_3 += INDUSTRY_L_GET_ORE;
-	      MP_INFO(x - 1,y).int_5 -= INDUSTRY_L_GET_ORE;
-	    }
-	  else
-	    {
-	      MP_INFO(x,y).int_3 += MP_INFO(x - 1,y).int_5;
-	      MP_INFO(x - 1,y).int_5 = 0;
-	    }
-	  MP_INFO(x,y).int_5 -= INDUSTRY_L_JOBS_LOAD_ORE;
-	}
+    /* if we don't have enough jobs we can't do anything */
+    if (MP_INFO(x, y).int_5 < MIN_JOBS_AT_INDUSTRY_L)
+        return;
+    /* get some ore */
+    if (MP_INFO(x, y).int_3 < (MAX_ORE_AT_INDUSTRY_L - INDUSTRY_L_GET_ORE)) {
+        if ((MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0 && MP_INFO(x - 1, y).int_5 > 0) {
+            if (MP_INFO(x - 1, y).int_5 >= INDUSTRY_L_GET_ORE) {
+                MP_INFO(x, y).int_3 += INDUSTRY_L_GET_ORE;
+                MP_INFO(x - 1, y).int_5 -= INDUSTRY_L_GET_ORE;
+            } else {
+                MP_INFO(x, y).int_3 += MP_INFO(x - 1, y).int_5;
+                MP_INFO(x - 1, y).int_5 = 0;
+            }
+            MP_INFO(x, y).int_5 -= INDUSTRY_L_JOBS_LOAD_ORE;
+        }
     }
-  /* do we still need some ore? */
-  if (MP_INFO(x,y).int_3 < (MAX_ORE_AT_INDUSTRY_L
-			      - INDUSTRY_L_GET_ORE))
-    {
-      if ((MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0
-	  && MP_INFO(x,y - 1).int_5 > 0)
-	{
-	  if (MP_INFO(x,y - 1).int_5 >= INDUSTRY_L_GET_ORE)
-	    {
-	      MP_INFO(x,y).int_3 += INDUSTRY_L_GET_ORE;
-	      MP_INFO(x,y - 1).int_5 -= INDUSTRY_L_GET_ORE;
-	    }
-	  else
-	    {
-	      MP_INFO(x,y).int_3 += MP_INFO(x,y - 1).int_5;
-	      MP_INFO(x,y - 1).int_5 = 0;
-	    }
-	  MP_INFO(x,y).int_5 -= INDUSTRY_L_JOBS_LOAD_ORE;
-	}
+    /* do we still need some ore? */
+    if (MP_INFO(x, y).int_3 < (MAX_ORE_AT_INDUSTRY_L - INDUSTRY_L_GET_ORE)) {
+        if ((MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0 && MP_INFO(x, y - 1).int_5 > 0) {
+            if (MP_INFO(x, y - 1).int_5 >= INDUSTRY_L_GET_ORE) {
+                MP_INFO(x, y).int_3 += INDUSTRY_L_GET_ORE;
+                MP_INFO(x, y - 1).int_5 -= INDUSTRY_L_GET_ORE;
+            } else {
+                MP_INFO(x, y).int_3 += MP_INFO(x, y - 1).int_5;
+                MP_INFO(x, y - 1).int_5 = 0;
+            }
+            MP_INFO(x, y).int_5 -= INDUSTRY_L_JOBS_LOAD_ORE;
+        }
     }
-  /* then get some steel */
-  if (MP_INFO(x,y).int_4 < (MAX_STEEL_AT_INDUSTRY_L
-			      - INDUSTRY_L_GET_STEEL))
-    {
-      if ((MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0
-	  && MP_INFO(x - 1,y).int_6 > 0)
-	{
-	  if (MP_INFO(x - 1,y).int_6 >= INDUSTRY_L_GET_STEEL)
-	    {
-	      MP_INFO(x,y).int_4 += INDUSTRY_L_GET_STEEL;
-	      MP_INFO(x - 1,y).int_6 -= INDUSTRY_L_GET_STEEL;
-	    }
-	  else
-	    {
-	      MP_INFO(x,y).int_4
-		+= MP_INFO(x - 1,y).int_6;
-	      MP_INFO(x - 1,y).int_6 = 0;
-	    }
-	  MP_INFO(x,y).int_5 -= INDUSTRY_L_JOBS_LOAD_STEEL;
-	}
+    /* then get some steel */
+    if (MP_INFO(x, y).int_4 < (MAX_STEEL_AT_INDUSTRY_L - INDUSTRY_L_GET_STEEL)) {
+        if ((MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0 && MP_INFO(x - 1, y).int_6 > 0) {
+            if (MP_INFO(x - 1, y).int_6 >= INDUSTRY_L_GET_STEEL) {
+                MP_INFO(x, y).int_4 += INDUSTRY_L_GET_STEEL;
+                MP_INFO(x - 1, y).int_6 -= INDUSTRY_L_GET_STEEL;
+            } else {
+                MP_INFO(x, y).int_4 += MP_INFO(x - 1, y).int_6;
+                MP_INFO(x - 1, y).int_6 = 0;
+            }
+            MP_INFO(x, y).int_5 -= INDUSTRY_L_JOBS_LOAD_STEEL;
+        }
     }
-  /* do we still need some steel? */
-  if (MP_INFO(x,y).int_4 < (MAX_STEEL_AT_INDUSTRY_L
-			      - INDUSTRY_L_GET_STEEL))
-    {
-      if ((MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0
-	  && MP_INFO(x,y - 1).int_6 > 0)
-	{
-	  if (MP_INFO(x,y - 1).int_6 >= INDUSTRY_L_GET_STEEL)
-	    {
-	      MP_INFO(x,y).int_4 += INDUSTRY_L_GET_STEEL;
-	      MP_INFO(x,y - 1).int_6 -= INDUSTRY_L_GET_STEEL;
-	    }
-	  else
-	    {
-	      MP_INFO(x,y).int_4
-		+= MP_INFO(x,y - 1).int_6;
-	      MP_INFO(x,y - 1).int_6 = 0;
-	    }
-	  MP_INFO(x,y).int_5 -= INDUSTRY_L_JOBS_LOAD_STEEL;
-	}
+    /* do we still need some steel? */
+    if (MP_INFO(x, y).int_4 < (MAX_STEEL_AT_INDUSTRY_L - INDUSTRY_L_GET_STEEL)) {
+        if ((MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0 && MP_INFO(x, y - 1).int_6 > 0) {
+            if (MP_INFO(x, y - 1).int_6 >= INDUSTRY_L_GET_STEEL) {
+                MP_INFO(x, y).int_4 += INDUSTRY_L_GET_STEEL;
+                MP_INFO(x, y - 1).int_6 -= INDUSTRY_L_GET_STEEL;
+            } else {
+                MP_INFO(x, y).int_4 += MP_INFO(x, y - 1).int_6;
+                MP_INFO(x, y - 1).int_6 = 0;
+            }
+            MP_INFO(x, y).int_5 -= INDUSTRY_L_JOBS_LOAD_STEEL;
+        }
     }
-  /* now make some goods if there is room in inventory*/
-  if (MP_INFO(x,y).int_2 < (MAX_GOODS_AT_INDUSTRY_L
-		      - (INDUSTRY_L_MAKE_GOODS * 8)) && MP_INFO(x,y).int_3
-      >= INDUSTRY_L_ORE_USED)
-    {
-      goods += INDUSTRY_L_MAKE_GOODS;
-      MP_INFO(x,y).int_3 -= INDUSTRY_L_ORE_USED;
-      ore_used += INDUSTRY_L_ORE_USED;
-      MP_INFO(x,y).int_5 -= INDUSTRY_L_JOBS_USED;
-      /* Pollution is now determined by amount of goods made and affected by
-	 technology 
-	 MP_POL(x,y) += INDUSTRY_L_POLLUTION; */
+    /* now make some goods if there is room in inventory */
+    if (MP_INFO(x, y).int_2 < (MAX_GOODS_AT_INDUSTRY_L
+                               - (INDUSTRY_L_MAKE_GOODS * 8)) && MP_INFO(x, y).int_3 >= INDUSTRY_L_ORE_USED) {
+        goods += INDUSTRY_L_MAKE_GOODS;
+        MP_INFO(x, y).int_3 -= INDUSTRY_L_ORE_USED;
+        ore_used += INDUSTRY_L_ORE_USED;
+        MP_INFO(x, y).int_5 -= INDUSTRY_L_JOBS_USED;
+        /* Pollution is now determined by amount of goods made and affected by
+           technology 
+           MP_POL(x,y) += INDUSTRY_L_POLLUTION; */
 
-      /* multiply by 2 if we have steel. */
-      if (MP_INFO(x,y).int_4 >= INDUSTRY_L_STEEL_USED)
-	{
-	  MP_INFO(x,y).int_4 -= INDUSTRY_L_STEEL_USED;
-	  goods += goods;
-	}
-      /* multipy by 4 if we can get power. */
+        /* multiply by 2 if we have steel. */
+        if (MP_INFO(x, y).int_4 >= INDUSTRY_L_STEEL_USED) {
+            MP_INFO(x, y).int_4 -= INDUSTRY_L_STEEL_USED;
+            goods += goods;
+        }
+        /* multipy by 4 if we can get power. */
 
-      if (MP_INFO(x,y).int_3 >= INDUSTRY_L_ORE_USED
-	  && get_power (x, y, goods * 10, 1) != 0)
-	{
-	  goods *= 4;
-	  MP_INFO(x,y).flags |= FLAG_POWERED;
-	  /* and use more ore */
-	  MP_INFO(x,y).int_3 -= INDUSTRY_L_ORE_USED;
-	  ore_used += INDUSTRY_L_ORE_USED;
-	}
-      else
-	MP_INFO(x,y).flags &= (0xffffffff - FLAG_POWERED);
+        if (MP_INFO(x, y).int_3 >= INDUSTRY_L_ORE_USED && get_power(x, y, goods * 10, 1) != 0) {
+            goods *= 4;
+            MP_INFO(x, y).flags |= FLAG_POWERED;
+            /* and use more ore */
+            MP_INFO(x, y).int_3 -= INDUSTRY_L_ORE_USED;
+            ore_used += INDUSTRY_L_ORE_USED;
+        } else
+            MP_INFO(x, y).flags &= (0xffffffff - FLAG_POWERED);
     }
 
-  MP_INFO(x,y).int_1 += goods;
-  MP_INFO(x,y).int_2 += goods;
-  goods_made += goods;
+    MP_INFO(x, y).int_1 += goods;
+    MP_INFO(x, y).int_2 += goods;
+    goods_made += goods;
 
-  /* Pollution is based on goods produced and is affected by tech level above
-     1000 (displayed as 100) whereupon it is reduced by one percent per 10
-     tech_level points.  
-  */
-  /* XXX: it would be nice to convert tech-reduced air pollution into waste
-     to be hauled to a tip or recycled, and reduce that above tl 2000 */
+    /* Pollution is based on goods produced and is affected by tech level above
+       1000 (displayed as 100) whereupon it is reduced by one percent per 10
+       tech_level points.  
+     */
+    /* XXX: it would be nice to convert tech-reduced air pollution into waste
+       to be hauled to a tip or recycled, and reduce that above tl 2000 */
 
-  tmp_pol = (float)(INDUSTRY_L_POL_PER_GOOD * goods);
-  if (tech_level > 1000) { 
-    double d;
-    d = (tech_level - 1000);
-    if (d > 1000) 
-      d = 1000;
-    d /= 1000;
-    tmp_pol -= (tmp_pol * d);
-    if (tmp_pol < 0) 
-      tmp_pol = 0;
-  }
+    tmp_pol = (float)(INDUSTRY_L_POL_PER_GOOD * goods);
+    if (tech_level > 1000) {
+        double d;
+        d = (tech_level - 1000);
+        if (d > 1000)
+            d = 1000;
+        d /= 1000;
+        tmp_pol -= (tmp_pol * d);
+        if (tmp_pol < 0)
+            tmp_pol = 0;
+    }
 
-  MP_POL(x,y) += (int)tmp_pol;
+    MP_POL(x, y) += (int)tmp_pol;
 
-  /* now sell the goods to the road/rail/track */
-  if (MP_GROUP(x,y - 1) == GROUP_ROAD 
-      && (MAX_GOODS_ON_ROAD - MP_INFO(x,y - 1).int_4) <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_ROAD - MP_INFO(x,y - 1).int_4);
-      MP_INFO(x,y - 1).int_4 = MAX_GOODS_ON_ROAD;
+    /* now sell the goods to the road/rail/track */
+    if (MP_GROUP(x, y - 1) == GROUP_ROAD && (MAX_GOODS_ON_ROAD - MP_INFO(x, y - 1).int_4) <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_ROAD - MP_INFO(x, y - 1).int_4);
+        MP_INFO(x, y - 1).int_4 = MAX_GOODS_ON_ROAD;
+    } else if (MP_GROUP(x, y - 1) == GROUP_RAIL && (MAX_GOODS_ON_RAIL - MP_INFO(x, y - 1).int_4)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_RAIL - MP_INFO(x, y - 1).int_4);
+        MP_INFO(x, y - 1).int_4 = MAX_GOODS_ON_RAIL;
+    } else if (MP_GROUP(x, y - 1) == GROUP_TRACK && (MAX_GOODS_ON_TRACK - MP_INFO(x, y - 1).int_4)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_TRACK - MP_INFO(x, y - 1).int_4);
+        MP_INFO(x, y - 1).int_4 = MAX_GOODS_ON_TRACK;
     }
-  else if (MP_GROUP(x,y - 1) == GROUP_RAIL 
-	   && (MAX_GOODS_ON_RAIL - MP_INFO(x,y - 1).int_4) 
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_RAIL
-			       - MP_INFO(x,y - 1).int_4);
-      MP_INFO(x,y - 1).int_4 = MAX_GOODS_ON_RAIL;
-    }
-  else if (MP_GROUP(x,y - 1) == GROUP_TRACK 
-	   && (MAX_GOODS_ON_TRACK - MP_INFO(x,y - 1).int_4)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_TRACK
-			       - MP_INFO(x,y - 1).int_4);
-      MP_INFO(x,y - 1).int_4 = MAX_GOODS_ON_TRACK;
-    }
 
-
-  if (MP_GROUP(x - 1,y) == GROUP_ROAD 
-      && (MAX_GOODS_ON_ROAD - MP_INFO(x - 1,y).int_4)
-      <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_ROAD
-			       - MP_INFO(x - 1,y).int_4);
-      MP_INFO(x - 1,y).int_4 = MAX_GOODS_ON_ROAD;
+    if (MP_GROUP(x - 1, y) == GROUP_ROAD && (MAX_GOODS_ON_ROAD - MP_INFO(x - 1, y).int_4)
+        <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_ROAD - MP_INFO(x - 1, y).int_4);
+        MP_INFO(x - 1, y).int_4 = MAX_GOODS_ON_ROAD;
+    } else if (MP_GROUP(x - 1, y) == GROUP_RAIL && (MAX_GOODS_ON_RAIL - MP_INFO(x - 1, y).int_4)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_RAIL - MP_INFO(x - 1, y).int_4);
+        MP_INFO(x - 1, y).int_4 = MAX_GOODS_ON_RAIL;
+    } else if (MP_GROUP(x - 1, y) == GROUP_TRACK && (MAX_GOODS_ON_TRACK - MP_INFO(x - 1, y).int_4)
+               <= MP_INFO(x, y).int_2) {
+        MP_INFO(x, y).int_2 -= (MAX_GOODS_ON_TRACK - MP_INFO(x - 1, y).int_4);
+        MP_INFO(x - 1, y).int_4 = MAX_GOODS_ON_TRACK;
     }
-  else if (MP_GROUP(x - 1,y) == GROUP_RAIL 
-	   && (MAX_GOODS_ON_RAIL - MP_INFO(x - 1,y).int_4)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_RAIL
-			       - MP_INFO(x - 1,y).int_4);
-      MP_INFO(x - 1,y).int_4 = MAX_GOODS_ON_RAIL;
-    }
-  else if (MP_GROUP(x-1,y) == GROUP_TRACK 
-	   && (MAX_GOODS_ON_TRACK - MP_INFO(x - 1,y).int_4)
-	   <= MP_INFO(x,y).int_2)
-    {
-      MP_INFO(x,y).int_2 -= (MAX_GOODS_ON_TRACK
-			       - MP_INFO(x - 1,y).int_4);
-      MP_INFO(x - 1,y).int_4 = MAX_GOODS_ON_TRACK;
-    }
 
-  /* now choose a graphic every month */
-  if ((total_time % NUMOF_DAYS_IN_MONTH) == NUMOF_DAYS_IN_MONTH - 1)
-    {
-      MP_INFO(x,y).int_6 = (MP_INFO(x,y).int_1)
-	/ (INDUSTRY_L_MAKE_GOODS * 8);
-      MP_INFO(x,y).int_1 = 0;
-      if (MP_INFO(x,y).int_6 > 80)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_L_H1):
-	    case (CST_INDUSTRY_L_H2):
-	    case (CST_INDUSTRY_L_H3):
-	    case (CST_INDUSTRY_L_H4):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_L_H1;
-	    }
-	}
-      else if (MP_INFO(x,y).int_6 > 55)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_L_M1):
-	    case (CST_INDUSTRY_L_M2):
-	    case (CST_INDUSTRY_L_M3):
-	    case (CST_INDUSTRY_L_M4):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_L_M1;
-	    }
-	}
-      else if (MP_INFO(x,y).int_6 > 25)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_L_L1):
-	    case (CST_INDUSTRY_L_L2):
-	    case (CST_INDUSTRY_L_L3):
-	    case (CST_INDUSTRY_L_L4):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_L_L1;
-	    }
-	}
-      else if (MP_INFO(x,y).int_6 > 0)
-	{
-	  switch (MP_TYPE(x,y))
-	    {
-	    case (CST_INDUSTRY_L_Q1):
-	    case (CST_INDUSTRY_L_Q2):
-	    case (CST_INDUSTRY_L_Q3):
-	    case (CST_INDUSTRY_L_Q4):
-	      break;
-	    default:
-	      MP_TYPE(x,y) = CST_INDUSTRY_L_Q1;
-	    }
-	}
-      else
-	MP_TYPE(x,y) = CST_INDUSTRY_L_C;
+    /* now choose a graphic every month */
+    if ((total_time % NUMOF_DAYS_IN_MONTH) == NUMOF_DAYS_IN_MONTH - 1) {
+        MP_INFO(x, y).int_6 = (MP_INFO(x, y).int_1)
+            / (INDUSTRY_L_MAKE_GOODS * 8);
+        MP_INFO(x, y).int_1 = 0;
+        if (MP_INFO(x, y).int_6 > 80) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_L_H1):
+            case (CST_INDUSTRY_L_H2):
+            case (CST_INDUSTRY_L_H3):
+            case (CST_INDUSTRY_L_H4):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_L_H1;
+            }
+        } else if (MP_INFO(x, y).int_6 > 55) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_L_M1):
+            case (CST_INDUSTRY_L_M2):
+            case (CST_INDUSTRY_L_M3):
+            case (CST_INDUSTRY_L_M4):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_L_M1;
+            }
+        } else if (MP_INFO(x, y).int_6 > 25) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_L_L1):
+            case (CST_INDUSTRY_L_L2):
+            case (CST_INDUSTRY_L_L3):
+            case (CST_INDUSTRY_L_L4):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_L_L1;
+            }
+        } else if (MP_INFO(x, y).int_6 > 0) {
+            switch (MP_TYPE(x, y)) {
+            case (CST_INDUSTRY_L_Q1):
+            case (CST_INDUSTRY_L_Q2):
+            case (CST_INDUSTRY_L_Q3):
+            case (CST_INDUSTRY_L_Q4):
+                break;
+            default:
+                MP_TYPE(x, y) = CST_INDUSTRY_L_Q1;
+            }
+        } else
+            MP_TYPE(x, y) = CST_INDUSTRY_L_C;
     }
-  /* now animate */
-  if (real_time >= MP_INFO(x,y).int_7)
-    {
-      MP_INFO(x,y).int_7 = real_time + INDUSTRY_L_ANIM_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_INDUSTRY_L_Q1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_Q2;
-	  break;
-	case (CST_INDUSTRY_L_Q2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_Q3;
-	  break;
-	case (CST_INDUSTRY_L_Q3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_Q4;
-	  break;
-	case (CST_INDUSTRY_L_Q4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_Q1;
-	  break;
-	case (CST_INDUSTRY_L_L1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_L2;
-	  break;
-	case (CST_INDUSTRY_L_L2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_L3;
-	  break;
-	case (CST_INDUSTRY_L_L3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_L4;
-	  break;
-	case (CST_INDUSTRY_L_L4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_L1;
-	  break;
-	case (CST_INDUSTRY_L_M1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_M2;
-	  break;
-	case (CST_INDUSTRY_L_M2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_M3;
-	  break;
-	case (CST_INDUSTRY_L_M3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_M4;
-	  break;
-	case (CST_INDUSTRY_L_M4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_M1;
-	  break;
-	case (CST_INDUSTRY_L_H1):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_H2;
-	  break;
-	case (CST_INDUSTRY_L_H2):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_H3;
-	  break;
-	case (CST_INDUSTRY_L_H3):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_H4;
-	  break;
-	case (CST_INDUSTRY_L_H4):
-	  MP_TYPE(x,y) = CST_INDUSTRY_L_H1;
-	  break;
-	}
+    /* now animate */
+    if (real_time >= MP_INFO(x, y).int_7) {
+        MP_INFO(x, y).int_7 = real_time + INDUSTRY_L_ANIM_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_INDUSTRY_L_Q1):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_Q2;
+            break;
+        case (CST_INDUSTRY_L_Q2):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_Q3;
+            break;
+        case (CST_INDUSTRY_L_Q3):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_Q4;
+            break;
+        case (CST_INDUSTRY_L_Q4):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_Q1;
+            break;
+        case (CST_INDUSTRY_L_L1):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_L2;
+            break;
+        case (CST_INDUSTRY_L_L2):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_L3;
+            break;
+        case (CST_INDUSTRY_L_L3):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_L4;
+            break;
+        case (CST_INDUSTRY_L_L4):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_L1;
+            break;
+        case (CST_INDUSTRY_L_M1):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_M2;
+            break;
+        case (CST_INDUSTRY_L_M2):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_M3;
+            break;
+        case (CST_INDUSTRY_L_M3):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_M4;
+            break;
+        case (CST_INDUSTRY_L_M4):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_M1;
+            break;
+        case (CST_INDUSTRY_L_H1):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_H2;
+            break;
+        case (CST_INDUSTRY_L_H2):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_H3;
+            break;
+        case (CST_INDUSTRY_L_H3):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_H4;
+            break;
+        case (CST_INDUSTRY_L_H4):
+            MP_TYPE(x, y) = CST_INDUSTRY_L_H1;
+            break;
+        }
     }
 }
 
-
-void
-mps_light_industry (int x, int y)
+void mps_light_industry(int x, int y)
 {
-  int i = 0;
-  const char * p;
+    int i = 0;
+    const char *p;
 
-  mps_store_title(i++,_("Light"));
-  mps_store_title(i++,_("Industry"));
+    mps_store_title(i++, _("Light"));
+    mps_store_title(i++, _("Industry"));
 
-  i++;
+    i++;
 
-  p = ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
-  mps_store_ss(i++,_("Power"),p);
+    p = ((MP_INFO(x, y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
+    mps_store_ss(i++, _("Power"), p);
 
-  mps_store_sd(i++,_("Output"),MP_INFO(x,y).int_1);
+    mps_store_sd(i++, _("Output"), MP_INFO(x, y).int_1);
 
-  mps_store_sfp(i++,_("Store"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_GOODS_AT_INDUSTRY_L);
-  mps_store_sfp(i++,_("Ore"),
-		MP_INFO(x,y).int_3 * 100.0 / MAX_ORE_AT_INDUSTRY_L);
-  mps_store_sfp(i++,_("Steel"), 
-		MP_INFO(x,y).int_4 * 100.0 / MAX_STEEL_AT_INDUSTRY_L);
-  mps_store_sfp(i++,_("Capacity"),
-		MP_INFO(x,y).int_6);
+    mps_store_sfp(i++, _("Store"), MP_INFO(x, y).int_2 * 100.0 / MAX_GOODS_AT_INDUSTRY_L);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_3 * 100.0 / MAX_ORE_AT_INDUSTRY_L);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_4 * 100.0 / MAX_STEEL_AT_INDUSTRY_L);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_6);
 }

Modified: trunk/src/lincity/modules/market.cpp
===================================================================
--- trunk/src/lincity/modules/market.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/market.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -14,1160 +14,992 @@
 #include "lcintl.h"
 #include "market.h"
 
-
-int
-get_jobs (int x, int y, int jobs)
+int get_jobs(int x, int y, int jobs)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE
-	       && abs (markety[q] - y) < MARKET_RANGE
-	       && (MP_INFO(marketx[q],markety[q]).int_2 > (3 * jobs / 2))))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_2 -= jobs;
-	      income_tax += jobs;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE
+                 && abs(markety[q] - y) < MARKET_RANGE && (MP_INFO(marketx[q], markety[q]).int_2 > (3 * jobs / 2)))) {
+                MP_INFO(marketx[q], markety[q]).int_2 -= jobs;
+                income_tax += jobs;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, jobs, T_JOBS) != 0)
-    {
-      income_tax += jobs;
-      return (1);
+    if (get_stuff(x, y, jobs, T_JOBS) != 0) {
+        income_tax += jobs;
+        return (1);
     }
-  return (0);
+    return (0);
 }
 
-int
-put_jobs (int x, int y, int jobs)
+int put_jobs(int x, int y, int jobs)
 {
-  int q;
-  if (numof_markets > 0) {
-      for (q = 0; q < numof_markets; q++) {
-	  if (MP_INFO(marketx[q],markety[q]).int_2
-	      >= (MAX_JOBS_IN_MARKET - jobs))
-	    continue;
-	  if (abs (marketx[q] - x) < EMPLOYER_RANGE
-	      && abs (markety[q] - y) < EMPLOYER_RANGE)
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_2 += jobs;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_2 >= (MAX_JOBS_IN_MARKET - jobs))
+                continue;
+            if (abs(marketx[q] - x) < EMPLOYER_RANGE && abs(markety[q] - y) < EMPLOYER_RANGE) {
+                MP_INFO(marketx[q], markety[q]).int_2 += jobs;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, jobs, T_JOBS) != 0) {
-      return (1);
-  }
-  return (0);
+    if (put_stuff(x, y, jobs, T_JOBS) != 0) {
+        return (1);
+    }
+    return (0);
 }
 
-int
-get_food (int x, int y, int food)
+int get_food(int x, int y, int food)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE)
-	      && (MP_INFO(marketx[q],markety[q]).int_1
-		  > food))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_1 -= food;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)
+                && (MP_INFO(marketx[q], markety[q]).int_1 > food)) {
+                MP_INFO(marketx[q], markety[q]).int_1 -= food;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, food, T_FOOD) != 0)
-    return (1);
-  return (0);
+    if (get_stuff(x, y, food, T_FOOD) != 0)
+        return (1);
+    return (0);
 }
 
-int
-put_food (int x, int y, int food)
+int put_food(int x, int y, int food)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_1
-	      >= (MAX_FOOD_IN_MARKET - food))
-	    continue;
-	  if ((abs (marketx[q] - x) < ORG_FARM_RANGE)
-	      && (abs (markety[q] - y) < ORG_FARM_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_1 += food;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_1 >= (MAX_FOOD_IN_MARKET - food))
+                continue;
+            if ((abs(marketx[q] - x) < ORG_FARM_RANGE)
+                && (abs(markety[q] - y) < ORG_FARM_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_1 += food;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, food, T_FOOD) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, food, T_FOOD) != 0)
+        return (1);
+    return (0);
 }
 
-
-int
-get_goods (int x, int y, int goods)
+int get_goods(int x, int y, int goods)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (abs (marketx[q] - x) < MARKET_RANGE
-	      && abs (markety[q] - y) < MARKET_RANGE
-	      && (MP_INFO(marketx[q],markety[q]).int_4
-		  > goods))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_4 -= goods;
-	      goods_tax += goods;
-	      goods_used += goods;
-	      /* make the waste here. */
-	      MP_INFO(marketx[q],markety[q]).int_7 += goods / 3;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (abs(marketx[q] - x) < MARKET_RANGE
+                && abs(markety[q] - y) < MARKET_RANGE && (MP_INFO(marketx[q], markety[q]).int_4 > goods)) {
+                MP_INFO(marketx[q], markety[q]).int_4 -= goods;
+                goods_tax += goods;
+                goods_used += goods;
+                /* make the waste here. */
+                MP_INFO(marketx[q], markety[q]).int_7 += goods / 3;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, goods, T_GOODS) != 0)
-    {
-      put_stuff (x, y, goods / 3, T_WASTE);
-      goods_tax += goods;
-      goods_used += goods;
-      return (1);
+    if (get_stuff(x, y, goods, T_GOODS) != 0) {
+        put_stuff(x, y, goods / 3, T_WASTE);
+        goods_tax += goods;
+        goods_used += goods;
+        return (1);
     }
-  return (0);
+    return (0);
 }
 
-int
-put_goods (int x, int y, int goods)
+int put_goods(int x, int y, int goods)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_4
-	      >= (MAX_GOODS_IN_MARKET - goods))
-	    continue;
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_4 += goods;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_4 >= (MAX_GOODS_IN_MARKET - goods))
+                continue;
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_4 += goods;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, goods, T_GOODS) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, goods, T_GOODS) != 0)
+        return (1);
+    return (0);
 }
 
-int
-put_waste (int x, int y, int waste)
+int put_waste(int x, int y, int waste)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_7
-	      >= (MAX_WASTE_IN_MARKET - waste))
-	    continue;
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_7 += waste;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_7 >= (MAX_WASTE_IN_MARKET - waste))
+                continue;
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_7 += waste;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, waste, T_WASTE) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, waste, T_WASTE) != 0)
+        return (1);
+    return (0);
 }
 
-int
-get_waste (int x, int y, int waste)
+int get_waste(int x, int y, int waste)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE)
-	      && (MP_INFO(marketx[q],markety[q]).int_7
-		  > waste))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_7 -= waste;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)
+                && (MP_INFO(marketx[q], markety[q]).int_7 > waste)) {
+                MP_INFO(marketx[q], markety[q]).int_7 -= waste;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, waste, T_WASTE) != 0)
-    return (1);
-  return (0);
+    if (get_stuff(x, y, waste, T_WASTE) != 0)
+        return (1);
+    return (0);
 }
 
-
-int
-get_steel (int x, int y, int steel)
+int get_steel(int x, int y, int steel)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE)
-	      && (MP_INFO(marketx[q],markety[q]).int_6
-		  > steel))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_6 -= steel;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)
+                && (MP_INFO(marketx[q], markety[q]).int_6 > steel)) {
+                MP_INFO(marketx[q], markety[q]).int_6 -= steel;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, steel, T_STEEL) != 0)
-    return (1);
-  return (0);
+    if (get_stuff(x, y, steel, T_STEEL) != 0)
+        return (1);
+    return (0);
 }
 
-int
-put_steel (int x, int y, int steel)
+int put_steel(int x, int y, int steel)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_6
-	      >= (MAX_STEEL_IN_MARKET - steel))
-	    continue;
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_6 += steel;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_6 >= (MAX_STEEL_IN_MARKET - steel))
+                continue;
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_6 += steel;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, steel, T_STEEL) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, steel, T_STEEL) != 0)
+        return (1);
+    return (0);
 }
 
-
-int
-get_ore (int x, int y, int ore)
+int get_ore(int x, int y, int ore)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE)
-	      && (MP_INFO(marketx[q],markety[q]).int_5
-		  > ore))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_5 -= ore;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)
+                && (MP_INFO(marketx[q], markety[q]).int_5 > ore)) {
+                MP_INFO(marketx[q], markety[q]).int_5 -= ore;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, ore, T_ORE) != 0)
-    return (1);
-  return (0);
+    if (get_stuff(x, y, ore, T_ORE) != 0)
+        return (1);
+    return (0);
 }
 
-int
-put_ore (int x, int y, int ore)
+int put_ore(int x, int y, int ore)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_5
-	      >= (MAX_ORE_IN_MARKET - ore))
-	    continue;
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_5 += ore;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_5 >= (MAX_ORE_IN_MARKET - ore))
+                continue;
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_5 += ore;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, ore, T_ORE) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, ore, T_ORE) != 0)
+        return (1);
+    return (0);
 }
 
-
-int
-get_coal (int x, int y, int coal)
+int get_coal(int x, int y, int coal)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE)
-	      && (MP_INFO(marketx[q],markety[q]).int_3
-		  > coal))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_3 -= coal;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)
+                && (MP_INFO(marketx[q], markety[q]).int_3 > coal)) {
+                MP_INFO(marketx[q], markety[q]).int_3 -= coal;
+                return (1);
+            }
+        }
     }
-  if (get_stuff (x, y, coal, T_COAL) != 0)
-    return (1);
-  return (0);
+    if (get_stuff(x, y, coal, T_COAL) != 0)
+        return (1);
+    return (0);
 }
 
-int
-put_coal (int x, int y, int coal)
+int put_coal(int x, int y, int coal)
 {
-  int q;
-  if (numof_markets > 0)
-    {
-      for (q = 0; q < numof_markets; q++)
-	{
-	  if (MP_INFO(marketx[q],markety[q]).int_3
-	      >= (MAX_COAL_IN_MARKET - coal))
-	    continue;
-	  if ((abs (marketx[q] - x) < MARKET_RANGE)
-	      && (abs (markety[q] - y) < MARKET_RANGE))
-	    {
-	      MP_INFO(marketx[q],markety[q]).int_3 += coal;
-	      return (1);
-	    }
-	}
+    int q;
+    if (numof_markets > 0) {
+        for (q = 0; q < numof_markets; q++) {
+            if (MP_INFO(marketx[q], markety[q]).int_3 >= (MAX_COAL_IN_MARKET - coal))
+                continue;
+            if ((abs(marketx[q] - x) < MARKET_RANGE)
+                && (abs(markety[q] - y) < MARKET_RANGE)) {
+                MP_INFO(marketx[q], markety[q]).int_3 += coal;
+                return (1);
+            }
+        }
     }
-  if (put_stuff (x, y, coal, T_COAL) != 0)
-    return (1);
-  return (0);
+    if (put_stuff(x, y, coal, T_COAL) != 0)
+        return (1);
+    return (0);
 }
 
+int add_a_market(int x, int y)
+{                               /* add to marketx markety to list */
+    if (numof_markets >= MAX_NUMOF_MARKETS)
+        return (0);
+    marketx[numof_markets] = x;
+    markety[numof_markets] = y;
+    numof_markets++;
+    /* oh dear. Got to bootstap markets with jobs, otherwise power won't work
+     * GCS: Is this still true?
+     * AL1: FIXME it seems not :) it's just needed to wait for periodic event
+     */
 
-int
-add_a_market (int x, int y)	/* add to marketx markety to list */
-{
-  if (numof_markets >= MAX_NUMOF_MARKETS)
-    return (0);
-  marketx[numof_markets] = x;
-  markety[numof_markets] = y;
-  numof_markets++;
-  /* oh dear. Got to bootstap markets with jobs, otherwise power won't work
-   * GCS: Is this still true?
-   * AL1: FIXME it seems not :) it's just needed to wait for periodic event
-   */
-
-  MP_INFO(x,y).int_2 = 2000;
-  return (1);
+    MP_INFO(x, y).int_2 = 2000;
+    return (1);
 }
 
-void
-remove_a_market (int x, int y)
+void remove_a_market(int x, int y)
 {
-  /* AL1: Could use present jobs to try put_everything elsewhere
-   * at least half of the content
-   */
-  int q;
-  for (q = 0; q < numof_markets; q++)
-    if (marketx[q] == x && markety[q] == y)
-      break;
-  for (; q < numof_markets; q++)
-    {
-      marketx[q] = marketx[q + 1];
-      markety[q] = markety[q + 1];
+    /* AL1: Could use present jobs to try put_everything elsewhere
+     * at least half of the content
+     */
+    int q;
+    for (q = 0; q < numof_markets; q++)
+        if (marketx[q] == x && markety[q] == y)
+            break;
+    for (; q < numof_markets; q++) {
+        marketx[q] = marketx[q + 1];
+        markety[q] = markety[q + 1];
     }
-  numof_markets--;
+    numof_markets--;
 }
 
-void
-do_market (int x, int y)
+void do_market(int x, int y)
 {
-  /*
-     //  int_1 contains the food it holds
-     //  int_2 contains the jobs
-     //  int_3 contains the coal
-     //  int_4 contains the goods
-     //  int_5 contains the ore
-     //  int_6 contains the steel
-     //  int_7 contains the waste
-   */
+    /*
+       //  int_1 contains the food it holds
+       //  int_2 contains the jobs
+       //  int_3 contains the coal
+       //  int_4 contains the goods
+       //  int_5 contains the ore
+       //  int_6 contains the steel
+       //  int_7 contains the waste
+     */
 
-  int extra_jobs = 0;
+    int extra_jobs = 0;
 
-  shuffle_markets ();
+    shuffle_markets();
 
-  if (x > 0 && (MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x - 1, y);
-  if (x > 0 && (MP_INFO(x - 1,y + 1).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x - 1, y + 1);
-  if (y > 0 && (MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x, y - 1);
-  if (y > 0 && (MP_INFO(x + 1,y - 1).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x + 1, y - 1);
-  if (x < WORLD_SIDE_LEN - 2
-      && (MP_INFO(x + 2,y).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x + 2, y);
-  if (x < WORLD_SIDE_LEN - 2
-      && (MP_INFO(x + 2,y + 1).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x + 2, y + 1);
-  if (y < WORLD_SIDE_LEN - 2
-      && (MP_INFO(x,y + 2).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x, y + 2);
-  if (y < WORLD_SIDE_LEN - 2
-      && (MP_INFO(x + 1,y + 2).flags & FLAG_IS_TRANSPORT) != 0)
-    extra_jobs += deal_with_transport (x, y, x + 1, y + 2);
+    if (x > 0 && (MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x - 1, y);
+    if (x > 0 && (MP_INFO(x - 1, y + 1).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x - 1, y + 1);
+    if (y > 0 && (MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x, y - 1);
+    if (y > 0 && (MP_INFO(x + 1, y - 1).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x + 1, y - 1);
+    if (x < WORLD_SIDE_LEN - 2 && (MP_INFO(x + 2, y).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x + 2, y);
+    if (x < WORLD_SIDE_LEN - 2 && (MP_INFO(x + 2, y + 1).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x + 2, y + 1);
+    if (y < WORLD_SIDE_LEN - 2 && (MP_INFO(x, y + 2).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x, y + 2);
+    if (y < WORLD_SIDE_LEN - 2 && (MP_INFO(x + 1, y + 2).flags & FLAG_IS_TRANSPORT) != 0)
+        extra_jobs += deal_with_transport(x, y, x + 1, y + 2);
 
-  if (MP_INFO(x,y).int_1 > MAX_FOOD_IN_MARKET)
-    MP_INFO(x,y).int_1 = MAX_FOOD_IN_MARKET;
-  if (MP_INFO(x,y).int_2 > MAX_JOBS_IN_MARKET)
-    MP_INFO(x,y).int_2 = MAX_JOBS_IN_MARKET;
-  if (MP_INFO(x,y).int_4 > MAX_GOODS_IN_MARKET)
-    MP_INFO(x,y).int_4 = MAX_GOODS_IN_MARKET;
+    if (MP_INFO(x, y).int_1 > MAX_FOOD_IN_MARKET)
+        MP_INFO(x, y).int_1 = MAX_FOOD_IN_MARKET;
+    if (MP_INFO(x, y).int_2 > MAX_JOBS_IN_MARKET)
+        MP_INFO(x, y).int_2 = MAX_JOBS_IN_MARKET;
+    if (MP_INFO(x, y).int_4 > MAX_GOODS_IN_MARKET)
+        MP_INFO(x, y).int_4 = MAX_GOODS_IN_MARKET;
 
-  /* now choose a graphic only dependent on food (for now anyway) */
-  if (total_time % 25 == 17)
-    {
-      if (MP_INFO(x,y).int_1 <= 0)
-	{
-	  if (MP_INFO(x,y).int_2 > 0)
-	    MP_TYPE(x,y) = CST_MARKET_LOW;
-	  else
-	    MP_TYPE(x,y) = CST_MARKET_EMPTY;
-	}
-      else if (MP_INFO(x,y).int_1 < (MARKET_FOOD_SEARCH_TRIGGER / 2))
-	MP_TYPE(x,y) = CST_MARKET_LOW;
-      else if (MP_INFO(x,y).int_1
-	       < (MAX_FOOD_IN_MARKET - MAX_FOOD_IN_MARKET / 4))
-	MP_TYPE(x,y) = CST_MARKET_MED;
-      else
-	MP_TYPE(x,y) = CST_MARKET_FULL;
+    /* now choose a graphic only dependent on food (for now anyway) */
+    if (total_time % 25 == 17) {
+        if (MP_INFO(x, y).int_1 <= 0) {
+            if (MP_INFO(x, y).int_2 > 0)
+                MP_TYPE(x, y) = CST_MARKET_LOW;
+            else
+                MP_TYPE(x, y) = CST_MARKET_EMPTY;
+        } else if (MP_INFO(x, y).int_1 < (MARKET_FOOD_SEARCH_TRIGGER / 2))
+            MP_TYPE(x, y) = CST_MARKET_LOW;
+        else if (MP_INFO(x, y).int_1 < (MAX_FOOD_IN_MARKET - MAX_FOOD_IN_MARKET / 4))
+            MP_TYPE(x, y) = CST_MARKET_MED;
+        else
+            MP_TYPE(x, y) = CST_MARKET_FULL;
     }
 
-  /* now employ some people */
-  get_jobs (x, y, 1 + (extra_jobs / 5));
+    /* now employ some people */
+    get_jobs(x, y, 1 + (extra_jobs / 5));
 
-  /* keep the pbars accurate */
-  inventory(x,y);
+    /* keep the pbars accurate */
+    inventory(x, y);
 }
 
-void
-shuffle_markets (void)
+void shuffle_markets(void)
 {
-  register int x;
-  int q, r, m;
-  m = (numof_markets / 4) + 1;
-  for (x = 0; x < m; x++)
-    {
-      r = rand () % numof_markets;
-      if (r == x)
-	continue;
-      q = marketx[x];
-      marketx[x] = marketx[r];
-      marketx[r] = q;
-      q = markety[x];
-      markety[x] = markety[r];
-      markety[r] = q;
+    register int x;
+    int q, r, m;
+    m = (numof_markets / 4) + 1;
+    for (x = 0; x < m; x++) {
+        r = rand() % numof_markets;
+        if (r == x)
+            continue;
+        q = marketx[x];
+        marketx[x] = marketx[r];
+        marketx[r] = q;
+        q = markety[x];
+        markety[x] = markety[r];
+        markety[r] = q;
     }
 }
 
-
-int
-deal_with_transport (int x, int y, int tx, int ty)
+int deal_with_transport(int x, int y, int tx, int ty)
 {
-  int i, r, extra_jobs = 3, flags;
-  flags = MP_INFO(x,y).flags;
-  /* tracks */
-  if (MP_GROUP(tx,ty) == GROUP_TRACK)
-    {
-      /* food */
-      if ((flags & FLAG_MB_FOOD) != 0)
-	{
-	  r = (MAX_FOOD_IN_MARKET * 1000)
-	    / (MAX_FOOD_ON_TRACK + MAX_FOOD_IN_MARKET);
-	  i = MP_INFO(x,y).int_1 + MP_INFO(tx,ty).int_1;
-	  MP_INFO(x,y).int_1 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_1 = i - MP_INFO(x,y).int_1;
-	}
+    int i, r, extra_jobs = 3, flags;
+    flags = MP_INFO(x, y).flags;
+    /* tracks */
+    if (MP_GROUP(tx, ty) == GROUP_TRACK) {
+        /* food */
+        if ((flags & FLAG_MB_FOOD) != 0) {
+            r = (MAX_FOOD_IN_MARKET * 1000)
+                / (MAX_FOOD_ON_TRACK + MAX_FOOD_IN_MARKET);
+            i = MP_INFO(x, y).int_1 + MP_INFO(tx, ty).int_1;
+            MP_INFO(x, y).int_1 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_1 = i - MP_INFO(x, y).int_1;
+        }
 
-      /* jobs */
-      if ((flags & FLAG_MB_JOBS) != 0)
-	{
-	  r = (MAX_JOBS_IN_MARKET * 1000)
-	    / (MAX_JOBS_ON_TRACK + MAX_JOBS_IN_MARKET);
-	  i = MP_INFO(x,y).int_2 + MP_INFO(tx,ty).int_2;
-	  MP_INFO(x,y).int_2 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_2 = i - MP_INFO(x,y).int_2;
-	}
+        /* jobs */
+        if ((flags & FLAG_MB_JOBS) != 0) {
+            r = (MAX_JOBS_IN_MARKET * 1000)
+                / (MAX_JOBS_ON_TRACK + MAX_JOBS_IN_MARKET);
+            i = MP_INFO(x, y).int_2 + MP_INFO(tx, ty).int_2;
+            MP_INFO(x, y).int_2 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_2 = i - MP_INFO(x, y).int_2;
+        }
 
-      /* coal */
-      if ((flags & FLAG_MB_COAL) != 0)
-	{
-	  r = (MAX_COAL_IN_MARKET * 1000)
-	    / (MAX_COAL_ON_TRACK + MAX_COAL_IN_MARKET);
-	  i = MP_INFO(x,y).int_3 + MP_INFO(tx,ty).int_3;
-	  MP_INFO(x,y).int_3 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_3 = i - MP_INFO(x,y).int_3;
-	}
+        /* coal */
+        if ((flags & FLAG_MB_COAL) != 0) {
+            r = (MAX_COAL_IN_MARKET * 1000)
+                / (MAX_COAL_ON_TRACK + MAX_COAL_IN_MARKET);
+            i = MP_INFO(x, y).int_3 + MP_INFO(tx, ty).int_3;
+            MP_INFO(x, y).int_3 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_3 = i - MP_INFO(x, y).int_3;
+        }
 
-      /* goods */
-      if ((flags & FLAG_MB_GOODS) != 0)
-	{
-	  r = (MAX_GOODS_IN_MARKET * 1000)
-	    / (MAX_GOODS_ON_TRACK + MAX_GOODS_IN_MARKET);
-	  i = MP_INFO(x,y).int_4 + MP_INFO(tx,ty).int_4;
-	  MP_INFO(x,y).int_4 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_4 = i - MP_INFO(x,y).int_4;
-	}
+        /* goods */
+        if ((flags & FLAG_MB_GOODS) != 0) {
+            r = (MAX_GOODS_IN_MARKET * 1000)
+                / (MAX_GOODS_ON_TRACK + MAX_GOODS_IN_MARKET);
+            i = MP_INFO(x, y).int_4 + MP_INFO(tx, ty).int_4;
+            MP_INFO(x, y).int_4 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_4 = i - MP_INFO(x, y).int_4;
+        }
 
-      /* ore */
-      if ((flags & FLAG_MB_ORE) != 0)
-	{
-	  r = (MAX_ORE_IN_MARKET * 1000)
-	    / (MAX_ORE_ON_TRACK + MAX_ORE_IN_MARKET);
-	  i = MP_INFO(x,y).int_5 + MP_INFO(tx,ty).int_5;
-	  MP_INFO(x,y).int_5 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_5 = i - MP_INFO(x,y).int_5;
-	}
+        /* ore */
+        if ((flags & FLAG_MB_ORE) != 0) {
+            r = (MAX_ORE_IN_MARKET * 1000)
+                / (MAX_ORE_ON_TRACK + MAX_ORE_IN_MARKET);
+            i = MP_INFO(x, y).int_5 + MP_INFO(tx, ty).int_5;
+            MP_INFO(x, y).int_5 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_5 = i - MP_INFO(x, y).int_5;
+        }
 
+        /* steel */
+        if ((flags & FLAG_MB_STEEL) != 0) {
+            r = (MAX_STEEL_IN_MARKET * 1000)
+                / (MAX_STEEL_ON_TRACK + MAX_STEEL_IN_MARKET);
+            i = MP_INFO(x, y).int_6 + MP_INFO(tx, ty).int_6;
+            MP_INFO(x, y).int_6 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_6 = i - MP_INFO(x, y).int_6;
+        }
 
-      /* steel */
-      if ((flags & FLAG_MB_STEEL) != 0)
-	{
-	  r = (MAX_STEEL_IN_MARKET * 1000)
-	    / (MAX_STEEL_ON_TRACK + MAX_STEEL_IN_MARKET);
-	  i = MP_INFO(x,y).int_6 + MP_INFO(tx,ty).int_6;
-	  MP_INFO(x,y).int_6 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_6 = i - MP_INFO(x,y).int_6;
-	}
+        /* waste */
+        r = (MAX_WASTE_IN_MARKET * 1000)
+            / (MAX_WASTE_ON_TRACK + MAX_WASTE_IN_MARKET);
+        i = MP_INFO(x, y).int_7 + MP_INFO(tx, ty).int_7;
+        MP_INFO(x, y).int_7 = (i * r) / 1000;
+        MP_INFO(tx, ty).int_7 = i - MP_INFO(x, y).int_7;
 
-      /* waste */
-      r = (MAX_WASTE_IN_MARKET * 1000)
-	/ (MAX_WASTE_ON_TRACK + MAX_WASTE_IN_MARKET);
-      i = MP_INFO(x,y).int_7 + MP_INFO(tx,ty).int_7;
-      MP_INFO(x,y).int_7 = (i * r) / 1000;
-      MP_INFO(tx,ty).int_7 = i - MP_INFO(x,y).int_7;
-
-
-      /* if it's full of waste, burn some to make pollution. */
-      if (MP_INFO(x,y).int_7 >= (99 * MAX_WASTE_IN_MARKET / 100))
-	{
-	  MP_POL(x,y) += 3000;
-	  MP_INFO(x,y).int_7 -= (7 * MAX_WASTE_IN_MARKET) / 10;
+        /* if it's full of waste, burn some to make pollution. */
+        if (MP_INFO(x, y).int_7 >= (99 * MAX_WASTE_IN_MARKET / 100)) {
+            MP_POL(x, y) += 3000;
+            MP_INFO(x, y).int_7 -= (7 * MAX_WASTE_IN_MARKET) / 10;
 #if defined (commentout)
-	  /* this should fire up the pollution mini screen within a second.
-           * AL1: oh this is not implemented in NG :(
-           * This works only with oldgui
-           */
-	  mini_screen_flags = MINI_SCREEN_POL_FLAG;
+            /* this should fire up the pollution mini screen within a second.
+             * AL1: oh this is not implemented in NG :(
+             * This works only with oldgui
+             */
+            mini_screen_flags = MINI_SCREEN_POL_FLAG;
 #endif
-	}
+        }
     }
 
+    /* do rail traffic */
+    else if (MP_GROUP(tx, ty) == GROUP_RAIL) {
+        /* food */
+        if ((flags & FLAG_MB_FOOD) != 0) {
+            r = (MAX_FOOD_IN_MARKET * 1000)
+                / (MAX_FOOD_ON_RAIL + MAX_FOOD_IN_MARKET);
+            i = MP_INFO(x, y).int_1 + MP_INFO(tx, ty).int_1;
+            MP_INFO(x, y).int_1 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_1 = i - MP_INFO(x, y).int_1;
+        }
 
-  /* do rail traffic */
-  else if (MP_GROUP(tx,ty) == GROUP_RAIL)
-    {
-      /* food */
-      if ((flags & FLAG_MB_FOOD) != 0)
-	{
-	  r = (MAX_FOOD_IN_MARKET * 1000)
-	    / (MAX_FOOD_ON_RAIL + MAX_FOOD_IN_MARKET);
-	  i = MP_INFO(x,y).int_1 + MP_INFO(tx,ty).int_1;
-	  MP_INFO(x,y).int_1 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_1 = i - MP_INFO(x,y).int_1;
-	}
+        /* jobs */
+        if ((flags & FLAG_MB_JOBS) != 0) {
+            r = (MAX_JOBS_IN_MARKET * 1000)
+                / (MAX_JOBS_ON_RAIL + MAX_JOBS_IN_MARKET);
+            i = MP_INFO(x, y).int_2 + MP_INFO(tx, ty).int_2;
+            MP_INFO(x, y).int_2 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_2 = i - MP_INFO(x, y).int_2;
+        }
 
-      /* jobs */
-      if ((flags & FLAG_MB_JOBS) != 0)
-	{
-	  r = (MAX_JOBS_IN_MARKET * 1000)
-	    / (MAX_JOBS_ON_RAIL + MAX_JOBS_IN_MARKET);
-	  i = MP_INFO(x,y).int_2 + MP_INFO(tx,ty).int_2;
-	  MP_INFO(x,y).int_2 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_2 = i - MP_INFO(x,y).int_2;
-	}
+        /* coal */
+        if ((flags & FLAG_MB_COAL) != 0) {
+            r = (MAX_COAL_IN_MARKET * 1000)
+                / (MAX_COAL_ON_RAIL + MAX_COAL_IN_MARKET);
+            i = MP_INFO(x, y).int_3 + MP_INFO(tx, ty).int_3;
+            MP_INFO(x, y).int_3 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_3 = i - MP_INFO(x, y).int_3;
+        }
 
-      /* coal */
-      if ((flags & FLAG_MB_COAL) != 0)
-	{
-	  r = (MAX_COAL_IN_MARKET * 1000)
-	    / (MAX_COAL_ON_RAIL + MAX_COAL_IN_MARKET);
-	  i = MP_INFO(x,y).int_3 + MP_INFO(tx,ty).int_3;
-	  MP_INFO(x,y).int_3 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_3 = i - MP_INFO(x,y).int_3;
-	}
+        /* goods */
+        if ((flags & FLAG_MB_GOODS) != 0) {
+            r = (MAX_GOODS_IN_MARKET * 1000)
+                / (MAX_GOODS_ON_RAIL + MAX_GOODS_IN_MARKET);
+            i = MP_INFO(x, y).int_4 + MP_INFO(tx, ty).int_4;
+            MP_INFO(x, y).int_4 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_4 = i - MP_INFO(x, y).int_4;
+        }
 
-      /* goods */
-      if ((flags & FLAG_MB_GOODS) != 0)
-	{
-	  r = (MAX_GOODS_IN_MARKET * 1000)
-	    / (MAX_GOODS_ON_RAIL + MAX_GOODS_IN_MARKET);
-	  i = MP_INFO(x,y).int_4 + MP_INFO(tx,ty).int_4;
-	  MP_INFO(x,y).int_4 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_4 = i - MP_INFO(x,y).int_4;
-	}
+        /* ore */
+        if ((flags & FLAG_MB_ORE) != 0) {
+            r = (MAX_ORE_IN_MARKET * 1000)
+                / (MAX_ORE_ON_RAIL + MAX_ORE_IN_MARKET);
+            i = MP_INFO(x, y).int_5 + MP_INFO(tx, ty).int_5;
+            MP_INFO(x, y).int_5 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_5 = i - MP_INFO(x, y).int_5;
+        }
 
-      /* ore */
-      if ((flags & FLAG_MB_ORE) != 0)
-	{
-	  r = (MAX_ORE_IN_MARKET * 1000)
-	    / (MAX_ORE_ON_RAIL + MAX_ORE_IN_MARKET);
-	  i = MP_INFO(x,y).int_5 + MP_INFO(tx,ty).int_5;
-	  MP_INFO(x,y).int_5 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_5 = i - MP_INFO(x,y).int_5;
-	}
+        /* steel */
+        if ((flags & FLAG_MB_STEEL) != 0) {
+            r = (MAX_STEEL_IN_MARKET * 1000)
+                / (MAX_STEEL_ON_RAIL + MAX_STEEL_IN_MARKET);
+            i = MP_INFO(x, y).int_6 + MP_INFO(tx, ty).int_6;
+            MP_INFO(x, y).int_6 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_6 = i - MP_INFO(x, y).int_6;
+        }
 
-      /* steel */
-      if ((flags & FLAG_MB_STEEL) != 0)
-	{
-	  r = (MAX_STEEL_IN_MARKET * 1000)
-	    / (MAX_STEEL_ON_RAIL + MAX_STEEL_IN_MARKET);
-	  i = MP_INFO(x,y).int_6 + MP_INFO(tx,ty).int_6;
-	  MP_INFO(x,y).int_6 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_6 = i - MP_INFO(x,y).int_6;
-	}
+        /* waste */
+        r = (MAX_WASTE_IN_MARKET * 1000)
+            / (MAX_WASTE_ON_RAIL + MAX_WASTE_IN_MARKET);
+        i = MP_INFO(x, y).int_7 + MP_INFO(tx, ty).int_7;
+        MP_INFO(x, y).int_7 = (i * r) / 1000;
+        MP_INFO(tx, ty).int_7 = i - MP_INFO(x, y).int_7;
 
-      /* waste */
-      r = (MAX_WASTE_IN_MARKET * 1000)
-	/ (MAX_WASTE_ON_RAIL + MAX_WASTE_IN_MARKET);
-      i = MP_INFO(x,y).int_7 + MP_INFO(tx,ty).int_7;
-      MP_INFO(x,y).int_7 = (i * r) / 1000;
-      MP_INFO(tx,ty).int_7 = i - MP_INFO(x,y).int_7;
-
     }
 
-  /* do road traffic */
-  else if (MP_GROUP(tx,ty) == GROUP_ROAD)
-    {
-      /* food */
-      if ((flags & FLAG_MB_FOOD) != 0)
-	{
-	  r = (MAX_FOOD_IN_MARKET * 1000)
-	    / (MAX_FOOD_ON_ROAD + MAX_FOOD_IN_MARKET);
-	  i = MP_INFO(x,y).int_1 + MP_INFO(tx,ty).int_1;
-	  MP_INFO(x,y).int_1 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_1 = i - MP_INFO(x,y).int_1;
-	}
+    /* do road traffic */
+    else if (MP_GROUP(tx, ty) == GROUP_ROAD) {
+        /* food */
+        if ((flags & FLAG_MB_FOOD) != 0) {
+            r = (MAX_FOOD_IN_MARKET * 1000)
+                / (MAX_FOOD_ON_ROAD + MAX_FOOD_IN_MARKET);
+            i = MP_INFO(x, y).int_1 + MP_INFO(tx, ty).int_1;
+            MP_INFO(x, y).int_1 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_1 = i - MP_INFO(x, y).int_1;
+        }
 
-      /* jobs */
-      if ((flags & FLAG_MB_JOBS) != 0)
-	{
-	  r = (MAX_JOBS_IN_MARKET * 1000)
-	    / (MAX_JOBS_ON_ROAD + MAX_JOBS_IN_MARKET);
-	  i = MP_INFO(x,y).int_2 + MP_INFO(tx,ty).int_2;
-	  MP_INFO(x,y).int_2 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_2 = i - MP_INFO(x,y).int_2;
-	}
+        /* jobs */
+        if ((flags & FLAG_MB_JOBS) != 0) {
+            r = (MAX_JOBS_IN_MARKET * 1000)
+                / (MAX_JOBS_ON_ROAD + MAX_JOBS_IN_MARKET);
+            i = MP_INFO(x, y).int_2 + MP_INFO(tx, ty).int_2;
+            MP_INFO(x, y).int_2 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_2 = i - MP_INFO(x, y).int_2;
+        }
 
-      /* coal */
-      if ((flags & FLAG_MB_COAL) != 0)
-	{
-	  r = (MAX_COAL_IN_MARKET * 1000)
-	    / (MAX_COAL_ON_ROAD + MAX_COAL_IN_MARKET);
-	  i = MP_INFO(x,y).int_3 + MP_INFO(tx,ty).int_3;
-	  MP_INFO(x,y).int_3 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_3 = i - MP_INFO(x,y).int_3;
-	}
+        /* coal */
+        if ((flags & FLAG_MB_COAL) != 0) {
+            r = (MAX_COAL_IN_MARKET * 1000)
+                / (MAX_COAL_ON_ROAD + MAX_COAL_IN_MARKET);
+            i = MP_INFO(x, y).int_3 + MP_INFO(tx, ty).int_3;
+            MP_INFO(x, y).int_3 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_3 = i - MP_INFO(x, y).int_3;
+        }
 
-      /* goods */
-      if ((flags & FLAG_MB_GOODS) != 0)
-	{
-	  r = (MAX_GOODS_IN_MARKET * 1000)
-	    / (MAX_GOODS_ON_ROAD + MAX_GOODS_IN_MARKET);
-	  i = MP_INFO(x,y).int_4 + MP_INFO(tx,ty).int_4;
-	  MP_INFO(x,y).int_4 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_4 = i - MP_INFO(x,y).int_4;
-	}
+        /* goods */
+        if ((flags & FLAG_MB_GOODS) != 0) {
+            r = (MAX_GOODS_IN_MARKET * 1000)
+                / (MAX_GOODS_ON_ROAD + MAX_GOODS_IN_MARKET);
+            i = MP_INFO(x, y).int_4 + MP_INFO(tx, ty).int_4;
+            MP_INFO(x, y).int_4 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_4 = i - MP_INFO(x, y).int_4;
+        }
 
-      /* ore */
-      if ((flags & FLAG_MB_ORE) != 0)
-	{
-	  r = (MAX_ORE_IN_MARKET * 1000)
-	    / (MAX_ORE_ON_ROAD + MAX_ORE_IN_MARKET);
-	  i = MP_INFO(x,y).int_5 + MP_INFO(tx,ty).int_5;
-	  MP_INFO(x,y).int_5 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_5 = i - MP_INFO(x,y).int_5;
-	}
+        /* ore */
+        if ((flags & FLAG_MB_ORE) != 0) {
+            r = (MAX_ORE_IN_MARKET * 1000)
+                / (MAX_ORE_ON_ROAD + MAX_ORE_IN_MARKET);
+            i = MP_INFO(x, y).int_5 + MP_INFO(tx, ty).int_5;
+            MP_INFO(x, y).int_5 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_5 = i - MP_INFO(x, y).int_5;
+        }
 
-      /* steel */
-      if ((flags & FLAG_MB_STEEL) != 0)
-	{
-	  r = (MAX_STEEL_IN_MARKET * 1000)
-	    / (MAX_STEEL_ON_ROAD + MAX_STEEL_IN_MARKET);
-	  i = MP_INFO(x,y).int_6 + MP_INFO(tx,ty).int_6;
-	  MP_INFO(x,y).int_6 = (i * r) / 1000;
-	  MP_INFO(tx,ty).int_6 = i - MP_INFO(x,y).int_6;
-	}
+        /* steel */
+        if ((flags & FLAG_MB_STEEL) != 0) {
+            r = (MAX_STEEL_IN_MARKET * 1000)
+                / (MAX_STEEL_ON_ROAD + MAX_STEEL_IN_MARKET);
+            i = MP_INFO(x, y).int_6 + MP_INFO(tx, ty).int_6;
+            MP_INFO(x, y).int_6 = (i * r) / 1000;
+            MP_INFO(tx, ty).int_6 = i - MP_INFO(x, y).int_6;
+        }
 
-      /* waste */
-      r = (MAX_WASTE_IN_MARKET * 1000)
-	/ (MAX_WASTE_ON_ROAD + MAX_WASTE_IN_MARKET);
-      i = MP_INFO(x,y).int_7 + MP_INFO(tx,ty).int_7;
-      MP_INFO(x,y).int_7 = (i * r) / 1000;
-      MP_INFO(tx,ty).int_7 = i - MP_INFO(x,y).int_7;
-    }
-  else
-    extra_jobs = 0;
+        /* waste */
+        r = (MAX_WASTE_IN_MARKET * 1000)
+            / (MAX_WASTE_ON_ROAD + MAX_WASTE_IN_MARKET);
+        i = MP_INFO(x, y).int_7 + MP_INFO(tx, ty).int_7;
+        MP_INFO(x, y).int_7 = (i * r) / 1000;
+        MP_INFO(tx, ty).int_7 = i - MP_INFO(x, y).int_7;
+    } else
+        extra_jobs = 0;
 
-  return (extra_jobs);
+    return (extra_jobs);
 }
 
-int
-get_stuff (int x, int y, int stuff, int stuff_type)
+int get_stuff(int x, int y, int stuff, int stuff_type)
 {
-  int res = 0;
-  Map_Point_Info *minfo = &MP_INFO(x,y);
+    int res = 0;
+    Map_Point_Info *minfo = &MP_INFO(x, y);
 
-  switch (MP_SIZE(x,y))
-    {
+    switch (MP_SIZE(x, y)) {
     case 2:
-      res = get_stuff2 (minfo, stuff, stuff_type);
-      break;
+        res = get_stuff2(minfo, stuff, stuff_type);
+        break;
     case 3:
-      res = get_stuff3 (minfo, stuff, stuff_type);
-      break;
+        res = get_stuff3(minfo, stuff, stuff_type);
+        break;
     case 4:
-      res = get_stuff4 (minfo, stuff, stuff_type);
-      break;
+        res = get_stuff4(minfo, stuff, stuff_type);
+        break;
     default:
-      do_error ("Bad area size in get_stuff()");
+        do_error("Bad area size in get_stuff()");
     }
-  return (res);
+    return (res);
 }
 
-static const int
-  t2[8] =
-{
-  -1,
-  WORLD_SIDE_LEN - 1,
-  2 * WORLD_SIDE_LEN,
-  2 * WORLD_SIDE_LEN + 1,
-  WORLD_SIDE_LEN + 2,
-  2,
-  1 - WORLD_SIDE_LEN,
-  -WORLD_SIDE_LEN
+static const int t2[8] = {
+    -1,
+    WORLD_SIDE_LEN - 1,
+    2 * WORLD_SIDE_LEN,
+    2 * WORLD_SIDE_LEN + 1,
+    WORLD_SIDE_LEN + 2,
+    2,
+    1 - WORLD_SIDE_LEN,
+    -WORLD_SIDE_LEN
 };
 
 /* worth inlining -- (ThMO) */
-int
-get_stuff2 (Map_Point_Info *map, int stuff, int stuff_type)
+int get_stuff2(Map_Point_Info * map, int stuff, int stuff_type)
 {
-  static int tstart2 = 0;
-  int i, st, tst, *ip, *stack[8], **ssp;	/* stack is a pipe -- (ThMO) */
+    static int tstart2 = 0;
+    int i, st, tst, *ip, *stack[8], **ssp;      /* stack is a pipe -- (ThMO) */
 
-  /* we'll stack our found pointers so to avoid re-looping and
-   * testing again (ThMO) */
+    /* we'll stack our found pointers so to avoid re-looping and
+     * testing again (ThMO) */
 
-  tst = tstart2;
+    tst = tstart2;
 
-  /* can we find enough on the transport? */
+    /* can we find enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 8; i++)
-    {
-      if (map[t2[tst]].flags & FLAG_IS_TRANSPORT)
-	{
-	  ip = &map[t2[tst]].int_1;
-	  ip += stuff_type;
-	  st += *ip;
-	  *ssp++ = ip;		/* push it -- (ThMO) */
-	  if (st >= stuff)
-	    {
-	      ssp = stack;
-	      do
-		{
-		  ip = *ssp++;	/* pop it -- (ThMO) */
-		  *ip = (stuff -= *ip) < 0 ? -stuff : 0;
-		}
-	      while (stuff > 0);
-	      tstart2 = ++tst & 7;
-	      return (1);
-	    }
-	}
-      if (++tst >= 8)
-	tst = 0;
+    for (ssp = stack, st = 0, i = 0; i < 8; i++) {
+        if (map[t2[tst]].flags & FLAG_IS_TRANSPORT) {
+            ip = &map[t2[tst]].int_1;
+            ip += stuff_type;
+            st += *ip;
+            *ssp++ = ip;        /* push it -- (ThMO) */
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    ip = *ssp++;        /* pop it -- (ThMO) */
+                    *ip = (stuff -= *ip) < 0 ? -stuff : 0;
+                }
+                while (stuff > 0);
+                tstart2 = ++tst & 7;
+                return (1);
+            }
+        }
+        if (++tst >= 8)
+            tst = 0;
     }
-  return (0);
+    return (0);
 }
 
-static const int
-  t3[12] =
-{
-  -1,
-  WORLD_SIDE_LEN - 1,
-  2 * WORLD_SIDE_LEN - 1,
-  3 * WORLD_SIDE_LEN,
-  3 * WORLD_SIDE_LEN + 1,
-  3 * WORLD_SIDE_LEN + 2,
-  2 * WORLD_SIDE_LEN + 3,
-  WORLD_SIDE_LEN + 3,
-  3,
-  2 - WORLD_SIDE_LEN,
-  1 - WORLD_SIDE_LEN,
-  -WORLD_SIDE_LEN
+static const int t3[12] = {
+    -1,
+    WORLD_SIDE_LEN - 1,
+    2 * WORLD_SIDE_LEN - 1,
+    3 * WORLD_SIDE_LEN,
+    3 * WORLD_SIDE_LEN + 1,
+    3 * WORLD_SIDE_LEN + 2,
+    2 * WORLD_SIDE_LEN + 3,
+    WORLD_SIDE_LEN + 3,
+    3,
+    2 - WORLD_SIDE_LEN,
+    1 - WORLD_SIDE_LEN,
+    -WORLD_SIDE_LEN
 };
 
 /* worth inlining -- (ThMO) */
-int
-get_stuff3 (Map_Point_Info *map, int stuff, int stuff_type)
+int get_stuff3(Map_Point_Info * map, int stuff, int stuff_type)
 {
-  static int tstart3 = 0;
+    static int tstart3 = 0;
 
-  int i, st, tst, *ip, *stack[12], **ssp;	/* stack is a pipe -- (ThMO) */
+    int i, st, tst, *ip, *stack[12], **ssp;     /* stack is a pipe -- (ThMO) */
 
-  /* we'll stack our found pointers so to avoid re-looping and
-   * testing again
-   * (ThMO)
-   */
+    /* we'll stack our found pointers so to avoid re-looping and
+     * testing again
+     * (ThMO)
+     */
 
-  tst = tstart3;
+    tst = tstart3;
 
-  /* can we find enough on the transport? */
+    /* can we find enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 12; i++)
-    {
-      if (map[t3[tst]].flags & FLAG_IS_TRANSPORT)
-	{
-	  ip = &map[t3[tst]].int_1;
-	  ip += stuff_type;
-	  st += *ip;
-	  *ssp++ = ip;		/* push it -- (ThMO) */
-	  if (st >= stuff)
-	    {
-	      ssp = stack;
-	      do
-		{
-		  ip = *ssp++;	/* pop it -- (ThMO) */
-		  *ip = (stuff -= *ip) < 0 ? -stuff : 0;
-		}
-	      while (stuff > 0);
-	      ++tst;
-	      tstart3 = tst >= 12 ? 0 : tst;
-	      return (1);
-	    }
-	}
-      if (++tst >= 12)
-	tst = 0;
+    for (ssp = stack, st = 0, i = 0; i < 12; i++) {
+        if (map[t3[tst]].flags & FLAG_IS_TRANSPORT) {
+            ip = &map[t3[tst]].int_1;
+            ip += stuff_type;
+            st += *ip;
+            *ssp++ = ip;        /* push it -- (ThMO) */
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    ip = *ssp++;        /* pop it -- (ThMO) */
+                    *ip = (stuff -= *ip) < 0 ? -stuff : 0;
+                }
+                while (stuff > 0);
+                ++tst;
+                tstart3 = tst >= 12 ? 0 : tst;
+                return (1);
+            }
+        }
+        if (++tst >= 12)
+            tst = 0;
     }
-  return (0);
+    return (0);
 }
 
-static const int
-  t4[16] =
-{
-  -1,
-  WORLD_SIDE_LEN - 1,
-  2 * WORLD_SIDE_LEN - 1,
-  3 * WORLD_SIDE_LEN - 1,
-  4 * WORLD_SIDE_LEN,
-  4 * WORLD_SIDE_LEN + 1,
-  4 * WORLD_SIDE_LEN + 2,
-  4 * WORLD_SIDE_LEN + 3,
-  3 * WORLD_SIDE_LEN + 4,
-  2 * WORLD_SIDE_LEN + 4,
-  WORLD_SIDE_LEN + 4,
-  4,
-  3 - WORLD_SIDE_LEN,
-  2 - WORLD_SIDE_LEN,
-  1 - WORLD_SIDE_LEN,
-  -WORLD_SIDE_LEN
+static const int t4[16] = {
+    -1,
+    WORLD_SIDE_LEN - 1,
+    2 * WORLD_SIDE_LEN - 1,
+    3 * WORLD_SIDE_LEN - 1,
+    4 * WORLD_SIDE_LEN,
+    4 * WORLD_SIDE_LEN + 1,
+    4 * WORLD_SIDE_LEN + 2,
+    4 * WORLD_SIDE_LEN + 3,
+    3 * WORLD_SIDE_LEN + 4,
+    2 * WORLD_SIDE_LEN + 4,
+    WORLD_SIDE_LEN + 4,
+    4,
+    3 - WORLD_SIDE_LEN,
+    2 - WORLD_SIDE_LEN,
+    1 - WORLD_SIDE_LEN,
+    -WORLD_SIDE_LEN
 };
 
 /* worth inlining -- (ThMO) */
-int
-get_stuff4 (Map_Point_Info *map, int stuff, int stuff_type)
+int get_stuff4(Map_Point_Info * map, int stuff, int stuff_type)
 {
-  static int
-    tstart4 = 0;
+    static int tstart4 = 0;
 
-  int i, st, tst, *ip, *stack[16], **ssp;	/* stack is a pipe -- (ThMO) */
+    int i, st, tst, *ip, *stack[16], **ssp;     /* stack is a pipe -- (ThMO) */
 
-  /* we'll stack our found pointers so to avoid re-looping and
-   * testing again
-   * (ThMO)
-   */
+    /* we'll stack our found pointers so to avoid re-looping and
+     * testing again
+     * (ThMO)
+     */
 
-  tst = tstart4;
+    tst = tstart4;
 
-  /* can we find enough on the transport? */
+    /* can we find enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 16; i++)
-    {
-      if (map[t4[tst]].flags & FLAG_IS_TRANSPORT)
-	{
-	  ip = &map[t4[tst]].int_1;
-	  ip += stuff_type;
-	  st += *ip;
-	  *ssp++ = ip;		/* push it -- (ThMO) */
-	  if (st >= stuff)
-	    {
-	      ssp = stack;
-	      do
-		{
-		  ip = *ssp++;	/* pop it -- (ThMO) */
-		  *ip = (stuff -= *ip) < 0 ? -stuff : 0;
-		}
-	      while (stuff > 0);
-	      tstart4 = ++tst & 15;
-	      return (1);
-	    }
-	}
-      if (++tst >= 16)
-	tst = 0;
+    for (ssp = stack, st = 0, i = 0; i < 16; i++) {
+        if (map[t4[tst]].flags & FLAG_IS_TRANSPORT) {
+            ip = &map[t4[tst]].int_1;
+            ip += stuff_type;
+            st += *ip;
+            *ssp++ = ip;        /* push it -- (ThMO) */
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    ip = *ssp++;        /* pop it -- (ThMO) */
+                    *ip = (stuff -= *ip) < 0 ? -stuff : 0;
+                }
+                while (stuff > 0);
+                tstart4 = ++tst & 15;
+                return (1);
+            }
+        }
+        if (++tst >= 16)
+            tst = 0;
     }
-  return (0);
+    return (0);
 }
 
-int
-put_stuff (int x, int y, int stuff, int stuff_type)
+int put_stuff(int x, int y, int stuff, int stuff_type)
 {
     int res = 0;
-    short *type = &MP_TYPE(x,y);
-    Map_Point_Info *minfo = &MP_INFO(x,y);
-    switch (MP_SIZE(x,y))
-    {
+    short *type = &MP_TYPE(x, y);
+    Map_Point_Info *minfo = &MP_INFO(x, y);
+    switch (MP_SIZE(x, y)) {
     case 2:
-	res = put_stuff2 (minfo, type, stuff, stuff_type);
-	break;
+        res = put_stuff2(minfo, type, stuff, stuff_type);
+        break;
     case 3:
-	res = put_stuff3 (minfo, type, stuff, stuff_type);
-	break;
+        res = put_stuff3(minfo, type, stuff, stuff_type);
+        break;
     case 4:
-	res = put_stuff4 (minfo, type, stuff, stuff_type);
-	break;
+        res = put_stuff4(minfo, type, stuff, stuff_type);
+        break;
     default:
-	do_error ("Bad area size in put_stuff()");
+        do_error("Bad area size in put_stuff()");
     }
     return res;
 }
 
-
-int tmax[3][7] =
-{
-  {MAX_FOOD_ON_TRACK, MAX_JOBS_ON_TRACK
-   ,MAX_COAL_ON_TRACK, MAX_GOODS_ON_TRACK, MAX_ORE_ON_TRACK
-   ,MAX_STEEL_ON_TRACK, MAX_WASTE_ON_TRACK},
-  {MAX_FOOD_ON_ROAD, MAX_JOBS_ON_ROAD
-   ,MAX_COAL_ON_ROAD, MAX_GOODS_ON_ROAD, MAX_ORE_ON_ROAD
-   ,MAX_STEEL_ON_ROAD, MAX_WASTE_ON_ROAD},
-  {MAX_FOOD_ON_RAIL, MAX_JOBS_ON_RAIL
-   ,MAX_COAL_ON_RAIL, MAX_GOODS_ON_RAIL, MAX_ORE_ON_RAIL
-   ,MAX_STEEL_ON_RAIL, MAX_WASTE_ON_RAIL}
+int tmax[3][7] = {
+    {MAX_FOOD_ON_TRACK, MAX_JOBS_ON_TRACK, MAX_COAL_ON_TRACK, MAX_GOODS_ON_TRACK, MAX_ORE_ON_TRACK, MAX_STEEL_ON_TRACK,
+     MAX_WASTE_ON_TRACK},
+    {MAX_FOOD_ON_ROAD, MAX_JOBS_ON_ROAD, MAX_COAL_ON_ROAD, MAX_GOODS_ON_ROAD, MAX_ORE_ON_ROAD, MAX_STEEL_ON_ROAD,
+     MAX_WASTE_ON_ROAD},
+    {MAX_FOOD_ON_RAIL, MAX_JOBS_ON_RAIL, MAX_COAL_ON_RAIL, MAX_GOODS_ON_RAIL, MAX_ORE_ON_RAIL, MAX_STEEL_ON_RAIL,
+     MAX_WASTE_ON_RAIL}
 };
 
-struct stack
-  {
+struct stack {
     int *ip, max_val;
-  };
+};
 
 /* worth inlining -- (ThMO) */
-int
-put_stuff2 (Map_Point_Info *minfo, short *type, int stuff, int stuff_type)
+int put_stuff2(Map_Point_Info * minfo, short *type, int stuff, int stuff_type)
 {
-  static int tstart2 = 0;
-  int i, st, tst, *ip, tp = 0;
-  struct stack stack[8], *ssp;	/* stack is really a pipe -- (ThMO) */
+    static int tstart2 = 0;
+    int i, st, tst, *ip, tp = 0;
+    struct stack stack[8], *ssp;        /* stack is really a pipe -- (ThMO) */
 
-  /* we'll stack our found pointers so to avoid re-looping and
-   * testing again (ThMO) */
+    /* we'll stack our found pointers so to avoid re-looping and
+     * testing again (ThMO) */
 
-  tst = tstart2;
+    tst = tstart2;
 
-  /* can we put enough on the transport? */
+    /* can we put enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 8; i++) {
-    int map_index = t2[tst];
-    if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
-      switch (get_group_of_type(type[map_index]))
-	{
-	case GROUP_TRACK:
-	  tp = tmax[0][stuff_type];
-	  break;
-	case GROUP_ROAD:
-	  tp = tmax[1][stuff_type];
-	  break;
-	case GROUP_RAIL:
-	  tp = tmax[2][stuff_type];
-	  break;
-	default:
-	  do_error ("Bad transport type in put_stuff2");
-	}
-      ip = &minfo[map_index].int_1;
-      ssp->ip = ip += stuff_type;	/* push it -- (ThMO) */
-      ssp++->max_val = tp;
-      st += tp - *ip;
-      if (st >= stuff) {
-	ssp = stack;
-	do {
-	  tp = ssp->max_val - *ssp->ip;		/* pop it -- (ThMO) */
-	  if ((stuff -= tp) < 0)
-	    *ssp->ip += tp + stuff;	/* == orig. stuff -- (ThMO) */
-	  else
-	    *ssp->ip = ssp->max_val;
-	  ++ssp;
-	} while (stuff > 0);
-	tstart2 = ++tst & 7;
-	return (1);
-      }
+    for (ssp = stack, st = 0, i = 0; i < 8; i++) {
+        int map_index = t2[tst];
+        if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
+            switch (get_group_of_type(type[map_index])) {
+            case GROUP_TRACK:
+                tp = tmax[0][stuff_type];
+                break;
+            case GROUP_ROAD:
+                tp = tmax[1][stuff_type];
+                break;
+            case GROUP_RAIL:
+                tp = tmax[2][stuff_type];
+                break;
+            default:
+                do_error("Bad transport type in put_stuff2");
+            }
+            ip = &minfo[map_index].int_1;
+            ssp->ip = ip += stuff_type; /* push it -- (ThMO) */
+            ssp++->max_val = tp;
+            st += tp - *ip;
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    tp = ssp->max_val - *ssp->ip;       /* pop it -- (ThMO) */
+                    if ((stuff -= tp) < 0)
+                        *ssp->ip += tp + stuff; /* == orig. stuff -- (ThMO) */
+                    else
+                        *ssp->ip = ssp->max_val;
+                    ++ssp;
+                } while (stuff > 0);
+                tstart2 = ++tst & 7;
+                return (1);
+            }
+        }
+        if (++tst >= 8)
+            tst = 0;
     }
-    if (++tst >= 8)
-      tst = 0;
-  }
-  return (0);
+    return (0);
 }
 
 /* worth inlining -- (ThMO) */
-int
-put_stuff3 (Map_Point_Info *minfo, short *type, int stuff, int stuff_type)
+int put_stuff3(Map_Point_Info * minfo, short *type, int stuff, int stuff_type)
 {
-  static int tstart3 = 0;
-  int i, st, tst, *ip, tp = 0;
-  struct stack stack[12], *ssp;	/* stack is really a pipe -- (ThMO)
-				   we'll stack our found pointers so 
-				   to avoid re-looping and
-				   testing again (ThMO) */
+    static int tstart3 = 0;
+    int i, st, tst, *ip, tp = 0;
+    struct stack stack[12], *ssp;       /* stack is really a pipe -- (ThMO)
+                                           we'll stack our found pointers so 
+                                           to avoid re-looping and
+                                           testing again (ThMO) */
 
-  tst = tstart3;
+    tst = tstart3;
 
-  /* can we put enough on the transport? */
+    /* can we put enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 12; i++) {
-    int map_index = t3[tst];
-    if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
-      switch (get_group_of_type(type[map_index]))
-	{
-	case GROUP_TRACK:
-	  tp = tmax[0][stuff_type];
-	  break;
-	case GROUP_ROAD:
-	  tp = tmax[1][stuff_type];
-	  break;
-	case GROUP_RAIL:
-	  tp = tmax[2][stuff_type];
-	  break;
-	default:
-	  do_error ("Bad transport type in put_stuff3");
-	}
-      ip = &minfo[map_index].int_1;
-      ssp->ip = ip += stuff_type;	/* push it -- (ThMO) */
-      ssp++->max_val = tp;
-      st += tp - *ip;
-      if (st >= stuff) {
-	ssp = stack;
-	do {
-	  tp = ssp->max_val - *ssp->ip;		/* pop it -- (ThMO) */
-	  if ((stuff -= tp) < 0)
-	    *ssp->ip += tp + stuff;	/* == orig. stuff -- (ThMO) */
-	  else
-	    *ssp->ip = ssp->max_val;
-	  ++ssp;
-	} while (stuff > 0);
-	++tst;
-	tstart3 = tst >= 12 ? 0 : tst;
-	return (1);
-      }
+    for (ssp = stack, st = 0, i = 0; i < 12; i++) {
+        int map_index = t3[tst];
+        if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
+            switch (get_group_of_type(type[map_index])) {
+            case GROUP_TRACK:
+                tp = tmax[0][stuff_type];
+                break;
+            case GROUP_ROAD:
+                tp = tmax[1][stuff_type];
+                break;
+            case GROUP_RAIL:
+                tp = tmax[2][stuff_type];
+                break;
+            default:
+                do_error("Bad transport type in put_stuff3");
+            }
+            ip = &minfo[map_index].int_1;
+            ssp->ip = ip += stuff_type; /* push it -- (ThMO) */
+            ssp++->max_val = tp;
+            st += tp - *ip;
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    tp = ssp->max_val - *ssp->ip;       /* pop it -- (ThMO) */
+                    if ((stuff -= tp) < 0)
+                        *ssp->ip += tp + stuff; /* == orig. stuff -- (ThMO) */
+                    else
+                        *ssp->ip = ssp->max_val;
+                    ++ssp;
+                } while (stuff > 0);
+                ++tst;
+                tstart3 = tst >= 12 ? 0 : tst;
+                return (1);
+            }
+        }
+        if (++tst >= 12)
+            tst = 0;
     }
-    if (++tst >= 12)
-      tst = 0;
-  }
-  return (0);
+    return (0);
 }
 
 /* worth inlining -- (ThMO) */
-int
-put_stuff4 (Map_Point_Info *minfo, short *type, int stuff, int stuff_type)
+int put_stuff4(Map_Point_Info * minfo, short *type, int stuff, int stuff_type)
 {
-  static int tstart4 = 0;
-  int i, st, tst, *ip, tp = 0;
-  struct stack stack[16], *ssp;	/* stack is really a pipe -- (ThMO)
-				 */
-  /* we'll stack our found pointers so to avoid re-looping and
-   * testing again (ThMO) */
+    static int tstart4 = 0;
+    int i, st, tst, *ip, tp = 0;
+    struct stack stack[16], *ssp;       /* stack is really a pipe -- (ThMO)
+                                         */
+    /* we'll stack our found pointers so to avoid re-looping and
+     * testing again (ThMO) */
 
-  tst = tstart4;
+    tst = tstart4;
 
-  /* can we put enough on the transport? */
+    /* can we put enough on the transport? */
 
-  for (ssp = stack, st = 0, i = 0; i < 16; i++) {
-    int map_index = t4[tst];
-    if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
-      switch (get_group_of_type(type[map_index]))
-	{
-	case GROUP_TRACK:
-	  tp = tmax[0][stuff_type];
-	  break;
-	case GROUP_ROAD:
-	  tp = tmax[1][stuff_type];
-	  break;
-	case GROUP_RAIL:
-	  tp = tmax[2][stuff_type];
-	  break;
-	default:
-	  do_error ("Bad transport type in put_stuff4");
-	}
-      ip = &minfo[map_index].int_1;
-      ssp->ip = ip += stuff_type;	/* push it -- (ThMO) */
-      ssp++->max_val = tp;
-      st += tp - *ip;
-      if (st >= stuff) {
-	ssp = stack;
-	do {
-	  tp = ssp->max_val - *ssp->ip;		/* pop it -- (ThMO) */
-	  if ((stuff -= tp) < 0)
-	    *ssp->ip += tp + stuff;	/* == orig. stuff -- (ThMO) */
-	  else
-	    *ssp->ip = ssp->max_val;
-	  ++ssp;
-	} while (stuff > 0);
-	tstart4 = ++tst & 15;
-	return (1);
-      }
+    for (ssp = stack, st = 0, i = 0; i < 16; i++) {
+        int map_index = t4[tst];
+        if (minfo[map_index].flags & FLAG_IS_TRANSPORT) {
+            switch (get_group_of_type(type[map_index])) {
+            case GROUP_TRACK:
+                tp = tmax[0][stuff_type];
+                break;
+            case GROUP_ROAD:
+                tp = tmax[1][stuff_type];
+                break;
+            case GROUP_RAIL:
+                tp = tmax[2][stuff_type];
+                break;
+            default:
+                do_error("Bad transport type in put_stuff4");
+            }
+            ip = &minfo[map_index].int_1;
+            ssp->ip = ip += stuff_type; /* push it -- (ThMO) */
+            ssp++->max_val = tp;
+            st += tp - *ip;
+            if (st >= stuff) {
+                ssp = stack;
+                do {
+                    tp = ssp->max_val - *ssp->ip;       /* pop it -- (ThMO) */
+                    if ((stuff -= tp) < 0)
+                        *ssp->ip += tp + stuff; /* == orig. stuff -- (ThMO) */
+                    else
+                        *ssp->ip = ssp->max_val;
+                    ++ssp;
+                } while (stuff > 0);
+                tstart4 = ++tst & 15;
+                return (1);
+            }
+        }
+        if (++tst >= 16)
+            tst = 0;
     }
-    if (++tst >= 16)
-      tst = 0;
-  }
-  return (0);
+    return (0);
 }
 
-void
-mps_market (int x, int y)
+void mps_market(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Market"));
+    mps_store_title(i++, _("Market"));
 
-  i++;
+    i++;
 
-  mps_store_sfp(i++,_("Food"), 
-		MP_INFO(x,y).int_1 * 100.0 / MAX_FOOD_IN_MARKET);
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_2 * 100.0 / MAX_JOBS_IN_MARKET);
-  mps_store_sfp(i++,_("Coal"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_IN_MARKET);
-  mps_store_sfp(i++,_("Goods"), 
-		MP_INFO(x,y).int_4 * 100.0 / MAX_GOODS_IN_MARKET);
-  mps_store_sfp(i++,_("Ore"), 
-		MP_INFO(x,y).int_5 * 100.0 / MAX_ORE_IN_MARKET);
-  mps_store_sfp(i++,_("Steel"), 
-		MP_INFO(x,y).int_6 * 100.0 / MAX_STEEL_IN_MARKET);
-  mps_store_sfp(i++,_("Waste"), 
-		MP_INFO(x,y).int_7 * 100.0 / MAX_WASTE_IN_MARKET);
+    mps_store_sfp(i++, _("Food"), MP_INFO(x, y).int_1 * 100.0 / MAX_FOOD_IN_MARKET);
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_2 * 100.0 / MAX_JOBS_IN_MARKET);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_IN_MARKET);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_4 * 100.0 / MAX_GOODS_IN_MARKET);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_5 * 100.0 / MAX_ORE_IN_MARKET);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_6 * 100.0 / MAX_STEEL_IN_MARKET);
+    mps_store_sfp(i++, _("Waste"), MP_INFO(x, y).int_7 * 100.0 / MAX_WASTE_IN_MARKET);
 
 }
-
-

Modified: trunk/src/lincity/modules/mill.cpp
===================================================================
--- trunk/src/lincity/modules/mill.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/mill.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,108 +8,90 @@
 #include "modules.h"
 #include "mill.h"
 
-
-void
-do_mill (int x, int y)
+void do_mill(int x, int y)
 {
-  /*
-     // int_1 contains the goods at the mill
-     // int_2 contains the food store
-     // int_3 contains the coal store
-     // int_4 contains the animation trigger time
-     // int_5 is the % count so far this month
-     // int_6 is the % capacity last month
-   */
-  /* get food */
-  int block_anim = 0;
-  if (MP_INFO(x,y).int_2 < MAX_FOOD_AT_MILL)
-    if (get_food (x, y, MILL_GET_FOOD) != 0)
-      MP_INFO(x,y).int_2 += MILL_GET_FOOD;
-  /* get coal */
-  if (MP_INFO(x,y).int_3 < MAX_COAL_AT_MILL)
-    {
-      if (get_coal (x, y, MILL_GET_COAL) != 0)
-	MP_INFO(x,y).int_3 += MILL_GET_COAL;
-      else if (get_power (x, y, MILL_GET_COAL
-			  * MILL_POWER_PER_COAL, 0) != 0)
-	MP_INFO(x,y).int_3 += MILL_GET_COAL;
+    /*
+       // int_1 contains the goods at the mill
+       // int_2 contains the food store
+       // int_3 contains the coal store
+       // int_4 contains the animation trigger time
+       // int_5 is the % count so far this month
+       // int_6 is the % capacity last month
+     */
+    /* get food */
+    int block_anim = 0;
+    if (MP_INFO(x, y).int_2 < MAX_FOOD_AT_MILL)
+        if (get_food(x, y, MILL_GET_FOOD) != 0)
+            MP_INFO(x, y).int_2 += MILL_GET_FOOD;
+    /* get coal */
+    if (MP_INFO(x, y).int_3 < MAX_COAL_AT_MILL) {
+        if (get_coal(x, y, MILL_GET_COAL) != 0)
+            MP_INFO(x, y).int_3 += MILL_GET_COAL;
+        else if (get_power(x, y, MILL_GET_COAL * MILL_POWER_PER_COAL, 0) != 0)
+            MP_INFO(x, y).int_3 += MILL_GET_COAL;
     }
-  if (MP_INFO(x,y).int_1 < MAX_GOODS_AT_MILL)
-    {
-      if (MP_INFO(x,y).int_2 > FOOD_USED_BY_MILL
-	  && MP_INFO(x,y).int_3 > COAL_USED_BY_MILL)
-	{
-	  if (get_jobs (x, y, MILL_JOBS) != 0)
-	    {
-	      MP_INFO(x,y).int_2 -= FOOD_USED_BY_MILL;
-	      MP_INFO(x,y).int_3 -= COAL_USED_BY_MILL;
-	      MP_INFO(x,y).int_1 += GOODS_MADE_BY_MILL;
-	      MP_INFO(x,y).int_5++;
-	    }
-	  else
-	    {
-	      MP_TYPE(x,y) = CST_MILL_0;
-	      block_anim = 1;
-	    }
-	}
-      else
-	block_anim = 1;
+    if (MP_INFO(x, y).int_1 < MAX_GOODS_AT_MILL) {
+        if (MP_INFO(x, y).int_2 > FOOD_USED_BY_MILL && MP_INFO(x, y).int_3 > COAL_USED_BY_MILL) {
+            if (get_jobs(x, y, MILL_JOBS) != 0) {
+                MP_INFO(x, y).int_2 -= FOOD_USED_BY_MILL;
+                MP_INFO(x, y).int_3 -= COAL_USED_BY_MILL;
+                MP_INFO(x, y).int_1 += GOODS_MADE_BY_MILL;
+                MP_INFO(x, y).int_5++;
+            } else {
+                MP_TYPE(x, y) = CST_MILL_0;
+                block_anim = 1;
+            }
+        } else
+            block_anim = 1;
     }
 
-  if (MP_INFO(x,y).int_1 > GOODS_MADE_BY_MILL)
-    if (put_goods (x, y, GOODS_MADE_BY_MILL - 1) !=0)
-      MP_INFO(x,y).int_1 -= (GOODS_MADE_BY_MILL - 1); 
+    if (MP_INFO(x, y).int_1 > GOODS_MADE_BY_MILL)
+        if (put_goods(x, y, GOODS_MADE_BY_MILL - 1) != 0)
+            MP_INFO(x, y).int_1 -= (GOODS_MADE_BY_MILL - 1);
 
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_6 = MP_INFO(x,y).int_5;
-      MP_INFO(x,y).int_5 = 0;
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_6 = MP_INFO(x, y).int_5;
+        MP_INFO(x, y).int_5 = 0;
     }
-  if (real_time >= MP_INFO(x,y).int_4 && block_anim == 0)
-    {
-      MP_INFO(x,y).int_4 = real_time + MILL_ANIM_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_MILL_0):
-	  MP_TYPE(x,y) = CST_MILL_1;
-	  break;
-	case (CST_MILL_1):
-	  MP_TYPE(x,y) = CST_MILL_2;
-	  break;
-	case (CST_MILL_2):
-	  MP_TYPE(x,y) = CST_MILL_3;
-	  break;
-	case (CST_MILL_3):
-	  MP_TYPE(x,y) = CST_MILL_4;
-	  break;
-	case (CST_MILL_4):
-	  MP_TYPE(x,y) = CST_MILL_5;
-	  break;
-	case (CST_MILL_5):
-	  MP_TYPE(x,y) = CST_MILL_6;
-	  break;
-	case (CST_MILL_6):
-	  MP_TYPE(x,y) = CST_MILL_1;
-	  MP_POL(x,y)++;
-	  break;
-	}
+    if (real_time >= MP_INFO(x, y).int_4 && block_anim == 0) {
+        MP_INFO(x, y).int_4 = real_time + MILL_ANIM_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_MILL_0):
+            MP_TYPE(x, y) = CST_MILL_1;
+            break;
+        case (CST_MILL_1):
+            MP_TYPE(x, y) = CST_MILL_2;
+            break;
+        case (CST_MILL_2):
+            MP_TYPE(x, y) = CST_MILL_3;
+            break;
+        case (CST_MILL_3):
+            MP_TYPE(x, y) = CST_MILL_4;
+            break;
+        case (CST_MILL_4):
+            MP_TYPE(x, y) = CST_MILL_5;
+            break;
+        case (CST_MILL_5):
+            MP_TYPE(x, y) = CST_MILL_6;
+            break;
+        case (CST_MILL_6):
+            MP_TYPE(x, y) = CST_MILL_1;
+            MP_POL(x, y)++;
+            break;
+        }
     }
 }
 
-void
-mps_mill (int x, int y)
+void mps_mill(int x, int y)
 {
-  int i = 0;
-  mps_store_title(i++,_("Textile Mill"));
-  i++;
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_6);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Goods"),
-		MP_INFO(x,y).int_1 * 100.0 / MAX_GOODS_AT_MILL);
-  mps_store_sfp(i++,_("Food"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_FOOD_AT_MILL);
-  mps_store_sfp(i++,_("Coal"),
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_AT_MILL);
+    int i = 0;
+    mps_store_title(i++, _("Textile Mill"));
+    i++;
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_6);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_1 * 100.0 / MAX_GOODS_AT_MILL);
+    mps_store_sfp(i++, _("Food"), MP_INFO(x, y).int_2 * 100.0 / MAX_FOOD_AT_MILL);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_AT_MILL);
 
 }

Modified: trunk/src/lincity/modules/mill.h
===================================================================
--- trunk/src/lincity/modules/mill.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/mill.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __mill_h__
 
 void do_mill(int x, int y);
-void mps_mill (int x, int y);
+void mps_mill(int x, int y);
 
 #endif /* __mill_h__ */

Modified: trunk/src/lincity/modules/monument.cpp
===================================================================
--- trunk/src/lincity/modules/monument.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/monument.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,65 +8,58 @@
 #include "modules.h"
 #include "monument.h"
 
-void
-do_monument (int x, int y)
+void do_monument(int x, int y)
 {
-  /*
-     // int_1 holds the jobs used
-     // int_2 holds the tech points made
-     // int_3 holds the tail off count
-   */
-  if (MP_INFO(x,y).int_1 < BUILD_MONUMENT_JOBS)
-    if (get_jobs (x, y, MONUMENT_GET_JOBS) != 0)
-      MP_INFO(x,y).int_1 += MONUMENT_GET_JOBS;
+    /*
+       // int_1 holds the jobs used
+       // int_2 holds the tech points made
+       // int_3 holds the tail off count
+     */
+    if (MP_INFO(x, y).int_1 < BUILD_MONUMENT_JOBS)
+        if (get_jobs(x, y, MONUMENT_GET_JOBS) != 0)
+            MP_INFO(x, y).int_1 += MONUMENT_GET_JOBS;
 
-  /* now choose a graphic */
-  if (MP_INFO(x,y).int_1 >= BUILD_MONUMENT_JOBS)
-    {
-      MP_TYPE(x,y) = CST_MONUMENT_5;
-      /* inc tech level only if fully built and tech less 
-         than MONUMENT_TECH_EXPIRE */
-      if (tech_level < (MONUMENT_TECH_EXPIRE * 1000)
-	  && (total_time % MONUMENT_DAYS_PER_TECH) == 1)
-	{
-	  if (MP_INFO(x,y).int_3++ > (tech_level / 10000) - 2)
-	    {
-	      tech_level++;
-	      MP_INFO(x,y).int_2++;
-	      MP_INFO(x,y).int_3 = 0;
-	    }
-	}
-    }
-  else if (MP_INFO(x,y).int_1 >= ((BUILD_MONUMENT_JOBS * 4) / 5))
-    MP_TYPE(x,y) = CST_MONUMENT_4;
-  else if (MP_INFO(x,y).int_1 >= ((BUILD_MONUMENT_JOBS * 3) / 5))
-    MP_TYPE(x,y) = CST_MONUMENT_3;
-  else if (MP_INFO(x,y).int_1 >= ((BUILD_MONUMENT_JOBS * 2) / 5))
-    MP_TYPE(x,y) = CST_MONUMENT_2;
-  else if (MP_INFO(x,y).int_1 >= (BUILD_MONUMENT_JOBS / 20))
-    MP_TYPE(x,y) = CST_MONUMENT_1;
-  else
-    MP_TYPE(x,y) = CST_MONUMENT_0;
+    /* now choose a graphic */
+    if (MP_INFO(x, y).int_1 >= BUILD_MONUMENT_JOBS) {
+        MP_TYPE(x, y) = CST_MONUMENT_5;
+        /* inc tech level only if fully built and tech less 
+           than MONUMENT_TECH_EXPIRE */
+        if (tech_level < (MONUMENT_TECH_EXPIRE * 1000)
+            && (total_time % MONUMENT_DAYS_PER_TECH) == 1) {
+            if (MP_INFO(x, y).int_3++ > (tech_level / 10000) - 2) {
+                tech_level++;
+                MP_INFO(x, y).int_2++;
+                MP_INFO(x, y).int_3 = 0;
+            }
+        }
+    } else if (MP_INFO(x, y).int_1 >= ((BUILD_MONUMENT_JOBS * 4) / 5))
+        MP_TYPE(x, y) = CST_MONUMENT_4;
+    else if (MP_INFO(x, y).int_1 >= ((BUILD_MONUMENT_JOBS * 3) / 5))
+        MP_TYPE(x, y) = CST_MONUMENT_3;
+    else if (MP_INFO(x, y).int_1 >= ((BUILD_MONUMENT_JOBS * 2) / 5))
+        MP_TYPE(x, y) = CST_MONUMENT_2;
+    else if (MP_INFO(x, y).int_1 >= (BUILD_MONUMENT_JOBS / 20))
+        MP_TYPE(x, y) = CST_MONUMENT_1;
+    else
+        MP_TYPE(x, y) = CST_MONUMENT_0;
 }
 
-void
-mps_monument (int x, int y)
+void mps_monument(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Monument"));
-  i++;
-  i++;
+    mps_store_title(i++, _("Monument"));
+    i++;
+    i++;
 
-  /* Display tech contribution only after monument is complete */
-  if ((MP_INFO(x,y).int_1 * 100 / BUILD_MONUMENT_JOBS) >= 100) {
-      mps_store_title(i++,_("Wisdom Bestowed"));
-      i++;
-      mps_store_f(i++, MP_INFO(x,y).int_2 * 100.0 / MAX_TECH_LEVEL);
-  } else {
-      mps_store_title(i++,_("% Complete"));
-      i++;
-      mps_store_fp(i++, MP_INFO(x,y).int_1 * 100.0 /
-		   BUILD_MONUMENT_JOBS);
-  }
+    /* Display tech contribution only after monument is complete */
+    if ((MP_INFO(x, y).int_1 * 100 / BUILD_MONUMENT_JOBS) >= 100) {
+        mps_store_title(i++, _("Wisdom Bestowed"));
+        i++;
+        mps_store_f(i++, MP_INFO(x, y).int_2 * 100.0 / MAX_TECH_LEVEL);
+    } else {
+        mps_store_title(i++, _("% Complete"));
+        i++;
+        mps_store_fp(i++, MP_INFO(x, y).int_1 * 100.0 / BUILD_MONUMENT_JOBS);
+    }
 }

Modified: trunk/src/lincity/modules/monument.h
===================================================================
--- trunk/src/lincity/modules/monument.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/monument.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __monument_h__
 
 void do_monument(int x, int y);
-void mps_monument (int x, int y);
+void mps_monument(int x, int y);
 
 #endif /* __monument_h__ */

Modified: trunk/src/lincity/modules/oremine.cpp
===================================================================
--- trunk/src/lincity/modules/oremine.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/oremine.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,185 +9,145 @@
 #include "gui_interface/screen_interface.h"
 #include "oremine.h"
 
-
-
-void
-do_oremine (int x, int y)
+void do_oremine(int x, int y)
 {
-  /*
-     // int_1 is the ore at in stock
-     // int_2 is the ore reserve under the ground or at the surface really.
-   */
-  int xx, yy, xs, ys, xe, ye, cr;
-  if (MP_INFO(x,y).int_1 < DIG_MORE_ORE_TRIGGER - 5000)
-    {
-      xs = x;
-      ys = y;
-      xe = x + 4;
-      ye = y + 4;
-      cr = 0;
-      for (yy = ys; yy < ye; yy++)
-	for (xx = xs; xx < xe; xx++)
-	  cr += MP_INFO(xx,yy).ore_reserve;
-      MP_INFO(x,y).int_2 = cr;
-      if (cr > 0)
-	if (get_jobs (x, y, JOBS_DIG_ORE) != 0)
-	  for (yy = ys; yy < ye; yy++)
-	    for (xx = xs; xx < xe; xx++)
-	      if (MP_INFO(xx,yy).ore_reserve > 0)
-		{
-		  MP_INFO(xx,yy).ore_reserve--;
-		  MP_INFO(x,y).int_1 += 5000;
-		  ore_made += 5000;
-		  sust_dig_ore_coal_tip_flag = 0;
-		  /* maybe want an ore tax? */
-		  yy = ye;
-		  xx = xe;	/* break out */
-		}
+    /*
+       // int_1 is the ore at in stock
+       // int_2 is the ore reserve under the ground or at the surface really.
+     */
+    int xx, yy, xs, ys, xe, ye, cr;
+    if (MP_INFO(x, y).int_1 < DIG_MORE_ORE_TRIGGER - 5000) {
+        xs = x;
+        ys = y;
+        xe = x + 4;
+        ye = y + 4;
+        cr = 0;
+        for (yy = ys; yy < ye; yy++)
+            for (xx = xs; xx < xe; xx++)
+                cr += MP_INFO(xx, yy).ore_reserve;
+        MP_INFO(x, y).int_2 = cr;
+        if (cr > 0)
+            if (get_jobs(x, y, JOBS_DIG_ORE) != 0)
+                for (yy = ys; yy < ye; yy++)
+                    for (xx = xs; xx < xe; xx++)
+                        if (MP_INFO(xx, yy).ore_reserve > 0) {
+                            MP_INFO(xx, yy).ore_reserve--;
+                            MP_INFO(x, y).int_1 += 5000;
+                            ore_made += 5000;
+                            sust_dig_ore_coal_tip_flag = 0;
+                            /* maybe want an ore tax? */
+                            yy = ye;
+                            xx = xe;    /* break out */
+                        }
     }
 
-  if ((MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      if (MP_GROUP(x-1,y) == GROUP_RAIL
-	  && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_RAIL
-	  && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_RAIL
-				      - MP_INFO(x - 1,y).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_RAIL - MP_INFO(x - 1,y).int_5);
-	      MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_RAIL;
-	    }
-	}
-      else if (MP_GROUP(x-1,y) == GROUP_ROAD
-	       && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_ROAD
-	       && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_ROAD
-					   - MP_INFO(x - 1,y).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_ROAD - MP_INFO(x - 1,y).int_5);
-	      MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_ROAD;
-	    }
-	}
-      else if (MP_GROUP(x - 1,y) == GROUP_TRACK
-	       && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_TRACK
-	       && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_TRACK
-					   - MP_INFO(x - 1,y).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_TRACK - MP_INFO(x - 1,y).int_5);
-	      MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_TRACK;
-	    }
-	}
+    if ((MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0) {
+        if (MP_GROUP(x - 1, y) == GROUP_RAIL
+            && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_RAIL
+            && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_RAIL - MP_INFO(x - 1, y).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_RAIL - MP_INFO(x - 1, y).int_5);
+                MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_RAIL;
+            }
+        } else if (MP_GROUP(x - 1, y) == GROUP_ROAD
+                   && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_ROAD
+                   && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_ROAD - MP_INFO(x - 1, y).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_ROAD - MP_INFO(x - 1, y).int_5);
+                MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_ROAD;
+            }
+        } else if (MP_GROUP(x - 1, y) == GROUP_TRACK
+                   && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_TRACK
+                   && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_TRACK - MP_INFO(x - 1, y).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_TRACK - MP_INFO(x - 1, y).int_5);
+                MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_TRACK;
+            }
+        }
     }
 
-  if ((MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      if (MP_GROUP(x,y-1) == GROUP_RAIL
-	  && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_RAIL
-	  && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_RAIL
-				      - MP_INFO(x,y - 1).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_RAIL - MP_INFO(x,y - 1).int_5);
-	      MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_RAIL;
-	    }
-	}
-      else if (MP_GROUP(x,y-1) == GROUP_ROAD
-	       && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_ROAD
-	       && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_ROAD
-					   - MP_INFO(x,y - 1).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_ROAD - MP_INFO(x,y - 1).int_5);
-	      MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_ROAD;
-	    }
-	}
-      else if (MP_GROUP(x,y-1) == GROUP_TRACK
-	       && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_TRACK
-	       && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_TRACK
-					   - MP_INFO(x,y - 1).int_5))
-	{
-	  if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	    {
-	      MP_INFO(x,y).int_1
-		-= (MAX_ORE_ON_TRACK - MP_INFO(x,y - 1).int_5);
-	      MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_TRACK;
-	    }
-	}
+    if ((MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0) {
+        if (MP_GROUP(x, y - 1) == GROUP_RAIL
+            && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_RAIL
+            && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_RAIL - MP_INFO(x, y - 1).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_RAIL - MP_INFO(x, y - 1).int_5);
+                MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_RAIL;
+            }
+        } else if (MP_GROUP(x, y - 1) == GROUP_ROAD
+                   && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_ROAD
+                   && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_ROAD - MP_INFO(x, y - 1).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_ROAD - MP_INFO(x, y - 1).int_5);
+                MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_ROAD;
+            }
+        } else if (MP_GROUP(x, y - 1) == GROUP_TRACK
+                   && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_TRACK
+                   && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_TRACK - MP_INFO(x, y - 1).int_5)) {
+            if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+                MP_INFO(x, y).int_1 -= (MAX_ORE_ON_TRACK - MP_INFO(x, y - 1).int_5);
+                MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_TRACK;
+            }
+        }
     }
 
-
-  /* choose a graphic */
-  if ((total_time & 0x7f) == 0) {
-      xx = 7 * (MP_INFO(x,y).int_2 + (3 * ORE_RESERVE / 2))
-	/ (16 * ORE_RESERVE);
-      switch (xx) {
+    /* choose a graphic */
+    if ((total_time & 0x7f) == 0) {
+        xx = 7 * (MP_INFO(x, y).int_2 + (3 * ORE_RESERVE / 2))
+            / (16 * ORE_RESERVE);
+        switch (xx) {
         case (0):
-	  MP_TYPE(x,y) = CST_OREMINE_8;
-	  break;
-	case (1):
-	  MP_TYPE(x,y) = CST_OREMINE_7;
-	  break;
-	case (2):
-	  MP_TYPE(x,y) = CST_OREMINE_6;
-	  break;
-	case (3):
-	  MP_TYPE(x,y) = CST_OREMINE_5;
-	  break;
-	case (4):
-	  MP_TYPE(x,y) = CST_OREMINE_4;
-	  break;
-	case (5):
-	  MP_TYPE(x,y) = CST_OREMINE_3;
-	  break;
-	case (6):
-	  MP_TYPE(x,y) = CST_OREMINE_2;
-	  break;
-	case (7):
-	  MP_TYPE(x,y) = CST_OREMINE_1;
-	  break;
-	}
-	if (MP_INFO(x,y).int_2 <= 0) {
+            MP_TYPE(x, y) = CST_OREMINE_8;
+            break;
+        case (1):
+            MP_TYPE(x, y) = CST_OREMINE_7;
+            break;
+        case (2):
+            MP_TYPE(x, y) = CST_OREMINE_6;
+            break;
+        case (3):
+            MP_TYPE(x, y) = CST_OREMINE_5;
+            break;
+        case (4):
+            MP_TYPE(x, y) = CST_OREMINE_4;
+            break;
+        case (5):
+            MP_TYPE(x, y) = CST_OREMINE_3;
+            break;
+        case (6):
+            MP_TYPE(x, y) = CST_OREMINE_2;
+            break;
+        case (7):
+            MP_TYPE(x, y) = CST_OREMINE_1;
+            break;
+        }
+        if (MP_INFO(x, y).int_2 <= 0) {
 #if defined (commentout)
             /* AL1. It seems to be overwritten just below! */
-	    do_bulldoze_area (CST_GREEN, x, y);
-	    place_item(x,y,CST_TIP_0);
+            do_bulldoze_area(CST_GREEN, x, y);
+            place_item(x, y, CST_TIP_0);
 #endif
-	    int i,j;
-	    for (j = 0; j < 4; j++) {
-		for (i = 0; i < 4; i++) {
-		    do_bulldoze_area (CST_WATER, x+i, y+j);
-		}
-	    }
-	    connect_rivers ();
-	    refresh_main_screen ();
-	}
-  }
+            int i, j;
+            for (j = 0; j < 4; j++) {
+                for (i = 0; i < 4; i++) {
+                    do_bulldoze_area(CST_WATER, x + i, y + j);
+                }
+            }
+            connect_rivers();
+            refresh_main_screen();
+        }
+    }
 }
 
-void
-mps_oremine (int x, int y)
+void mps_oremine(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Ore Mine"));
-  i++;
+    mps_store_title(i++, _("Ore Mine"));
+    i++;
 
-  mps_store_sfp(i++,_("Stock"), 
-		MP_INFO(x,y).int_1 * 100.0 / DIG_MORE_ORE_TRIGGER);
-  i++;
+    mps_store_sfp(i++, _("Stock"), MP_INFO(x, y).int_1 * 100.0 / DIG_MORE_ORE_TRIGGER);
+    i++;
 
-  mps_store_sfp(i++,_("Reserve"),
-		MP_INFO(x,y).int_2 * 100.0 / (ORE_RESERVE * 16));
+    mps_store_sfp(i++, _("Reserve"), MP_INFO(x, y).int_2 * 100.0 / (ORE_RESERVE * 16));
 }
-

Modified: trunk/src/lincity/modules/oremine.h
===================================================================
--- trunk/src/lincity/modules/oremine.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/oremine.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __oremine_h__
 
 void do_oremine(int x, int y);
-void mps_oremine (int x, int y);
+void mps_oremine(int x, int y);
 
 #endif /* __oremine_h__ */

Modified: trunk/src/lincity/modules/organic_farm.cpp
===================================================================
--- trunk/src/lincity/modules/organic_farm.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/organic_farm.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -12,202 +12,194 @@
 
 #include <stdlib.h>
 
-void
-do_organic_farm (int x, int y)
+void do_organic_farm(int x, int y)
 {
-  /* // MP_INFO(x,y)
-     // int_1 is the tech level of the farm when built
-     // int_2 is a flag so we don't create a farm with nearly ripe crops.
-      *      unused in NG1.1	
-     // int_3 is the food sold count so far this year.
-     // int_4 is the food made last year.
-     // int_5 is the random crop rotation key.
-     // int_6 is the random month stagger, so they don't all flash at once
-     // int_7 is the jobs stored at the farm 
-     // 	up to NG-1.1.0 int_7 was the tech-level dependent output of a
-     // 	 powered farm with full workforce. 
-     // 	= duplicate with int_1.  see below tech_bonus.
-      * 
-      * MP_INFO(x+1,y) stores additional info
-      *    int_1 reserved (=x)
-      *    int_2 reserved (=y)
-      *    int_3 max possible production (assuming 100% water and power)
-      *    int_4 number of 1x1 tiles with underground water inside the farm
-      *    int_5 current production
-  */
-  int i;
-  int has_power = false;
-  int tech_bonus = (int)(((double) MP_INFO(x,y).int_1
-			      * ORGANIC_FARM_FOOD_OUTPUT) / MAX_TECH_LEVEL);
-  MP_INFO(x+1,y).int_3 = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
-  /* Animation */
-  if (MP_INFO(x,y).int_5 == 0) {
-      /* this should be done when we create the area! */
-      MP_INFO(x,y).int_5 = (rand () % 4) + 1;
-      MP_INFO(x,y).int_6 = rand () % 300; /* AL1 will be sooner or later redefined as %100. see below */
-  }
+    /* // MP_INFO(x,y)
+       // int_1 is the tech level of the farm when built
+       // int_2 is a flag so we don't create a farm with nearly ripe crops.
+       *      unused in NG1.1     
+       // int_3 is the food sold count so far this year.
+       // int_4 is the food made last year.
+       // int_5 is the random crop rotation key.
+       // int_6 is the random month stagger, so they don't all flash at once
+       // int_7 is the jobs stored at the farm 
+       //         up to NG-1.1.0 int_7 was the tech-level dependent output of a
+       //          powered farm with full workforce. 
+       //         = duplicate with int_1.  see below tech_bonus.
+       * 
+       * MP_INFO(x+1,y) stores additional info
+       *    int_1 reserved (=x)
+       *    int_2 reserved (=y)
+       *    int_3 max possible production (assuming 100% water and power)
+       *    int_4 number of 1x1 tiles with underground water inside the farm
+       *    int_5 current production
+     */
+    int i;
+    int has_power = false;
+    int tech_bonus = (int)(((double)MP_INFO(x, y).int_1 * ORGANIC_FARM_FOOD_OUTPUT) / MAX_TECH_LEVEL);
+    MP_INFO(x + 1, y).int_3 = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
+    /* Animation */
+    if (MP_INFO(x, y).int_5 == 0) {
+        /* this should be done when we create the area! */
+        MP_INFO(x, y).int_5 = (rand() % 4) + 1;
+        MP_INFO(x, y).int_6 = rand() % 300;     /* AL1 will be sooner or later redefined as %100. see below */
+    }
 
-  /* check jobs */
-  if (MP_INFO(x,y).int_7 < FARM_JOBS_USED) {
-  	if (get_jobs (x, y, FARM_JOBS_USED) != 0)
-		MP_INFO(x,y).int_7 += FARM_JOBS_USED;
-	/* adding if (get_jobs ... /2) would allow to have some jobs stored at farm,
-	 * so would smooth the behavior and make farms more resistant to job penury.
-	 * Currently keep previous behavior.
-	 */
-  	else if (get_jobs (x, y, FARM_JOBS_USED / 4) != 0)
-		MP_INFO(x,y).int_7 += FARM_JOBS_USED / 4;
-  	else if (get_jobs (x, y, 1) != 0)
-		MP_INFO(x,y).int_7 += 1;
-  }
+    /* check jobs */
+    if (MP_INFO(x, y).int_7 < FARM_JOBS_USED) {
+        if (get_jobs(x, y, FARM_JOBS_USED) != 0)
+            MP_INFO(x, y).int_7 += FARM_JOBS_USED;
+        /* adding if (get_jobs ... /2) would allow to have some jobs stored at farm,
+         * so would smooth the behavior and make farms more resistant to job penury.
+         * Currently keep previous behavior.
+         */
+        else if (get_jobs(x, y, FARM_JOBS_USED / 4) != 0)
+            MP_INFO(x, y).int_7 += FARM_JOBS_USED / 4;
+        else if (get_jobs(x, y, 1) != 0)
+            MP_INFO(x, y).int_7 += 1;
+    }
 
-  /* check power */
-  MP_INFO(x,y).flags &= (0xffffffff - FLAG_POWERED);
-  if (MP_INFO(x,y).int_7 >= 1) {
-  	/* There are jobs to do some production, so check for power */
-	if (get_power (x, y, ORG_FARM_POWER_REC, 0) != 0) {
-		MP_INFO(x,y).flags |= FLAG_POWERED;
-		has_power = true;
-	}
-  }
+    /* check power */
+    MP_INFO(x, y).flags &= (0xffffffff - FLAG_POWERED);
+    if (MP_INFO(x, y).int_7 >= 1) {
+        /* There are jobs to do some production, so check for power */
+        if (get_power(x, y, ORG_FARM_POWER_REC, 0) != 0) {
+            MP_INFO(x, y).flags |= FLAG_POWERED;
+            has_power = true;
+        }
+    }
 
-  /* Produce some food */
-  int prod = 0;
-  if (MP_INFO(x,y).int_7 >= FARM_JOBS_USED) {
-      if (has_power) {
-	      	 prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
-      } else {
-	      	 prod = ORGANIC_FARM_FOOD_OUTPUT / 4;
-      }
-  } else if (MP_INFO(x,y).int_7 >= FARM_JOBS_USED / 4) {
-      if (has_power) {
-	      	 prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 4;
-      } else {
-	      	 prod = ORGANIC_FARM_FOOD_OUTPUT / (4 * 4);
-      }
-  } else if (MP_INFO(x,y).int_7 >= 1) {
-      /* got 1 job */
-      if (has_power) {
-	     	prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 8;
-      } else {
-	        /* AL1 "small ouch":
-	         * without power output with 1 job is bigger than output with 3 !
-	         * 3 = FARMS_JOBS_USED / 4 
-	         * ORGANIC_FARM_FOOD_OUTPUT = 550 currently (ng_1.1)
-	         */
-	         prod = 30 + ORGANIC_FARM_FOOD_OUTPUT / (4 * 8);
-      }
-  } else {
-            /* AL1 : the farm gives very small amount of food without job. 
-             *  ? Probably needed for start ?
-             *  ? Useful to prevent starvation when no jobs ? 
-             *  The various buildings are "done" in random order,
-             *  so it should be ok without this.
+    /* Produce some food */
+    int prod = 0;
+    if (MP_INFO(x, y).int_7 >= FARM_JOBS_USED) {
+        if (has_power) {
+            prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus;
+        } else {
+            prod = ORGANIC_FARM_FOOD_OUTPUT / 4;
+        }
+    } else if (MP_INFO(x, y).int_7 >= FARM_JOBS_USED / 4) {
+        if (has_power) {
+            prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 4;
+        } else {
+            prod = ORGANIC_FARM_FOOD_OUTPUT / (4 * 4);
+        }
+    } else if (MP_INFO(x, y).int_7 >= 1) {
+        /* got 1 job */
+        if (has_power) {
+            prod = ORGANIC_FARM_FOOD_OUTPUT + tech_bonus / 8;
+        } else {
+            /* AL1 "small ouch":
+             * without power output with 1 job is bigger than output with 3 !
+             * 3 = FARMS_JOBS_USED / 4 
+             * ORGANIC_FARM_FOOD_OUTPUT = 550 currently (ng_1.1)
              */
-             put_food (x, y, 30);
-             /* note that this does not generate revenu int_3) */
-  }
-  /* Check underground water, and reduce production accordingly */
-  if (use_waterwell) {
-      int w = 0;
-      int n = 0;
-      for (int i = 0; i < MP_SIZE(x,y); i++) {
-          for (int j = 0; j < MP_SIZE(x,y); j++) {
-              n++;
-              if (HAS_UGWATER(x+i,y+j))
-                  w++;
-          }
-      }
-      prod = (prod * w)/n;
-      MP_INFO(x + 1, y).int_4 = w;
-  }
-  MP_INFO(x + 1, y).int_5 = prod;
-                 	 
-  if (prod != 0) {
-     if (put_food (x, y, prod) != 0) {
-	    	MP_INFO(x,y).int_3++;
-		    MP_INFO(x,y).int_7 -= 1;
-     }
-  }
+            prod = 30 + ORGANIC_FARM_FOOD_OUTPUT / (4 * 8);
+        }
+    } else {
+        /* AL1 : the farm gives very small amount of food without job. 
+         *  ? Probably needed for start ?
+         *  ? Useful to prevent starvation when no jobs ? 
+         *  The various buildings are "done" in random order,
+         *  so it should be ok without this.
+         */
+        put_food(x, y, 30);
+        /* note that this does not generate revenu int_3) */
+    }
+    /* Check underground water, and reduce production accordingly */
+    if (use_waterwell) {
+        int w = 0;
+        int n = 0;
+        for (int i = 0; i < MP_SIZE(x, y); i++) {
+            for (int j = 0; j < MP_SIZE(x, y); j++) {
+                n++;
+                if (HAS_UGWATER(x + i, y + j))
+                    w++;
+            }
+        }
+        prod = (prod * w) / n;
+        MP_INFO(x + 1, y).int_4 = w;
+    }
+    MP_INFO(x + 1, y).int_5 = prod;
 
-  if ((total_time & 0x7f) == 0)
-    if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0)
-      get_waste (x, y, 0x80 * ORG_FARM_WASTE_GET);
+    if (prod != 0) {
+        if (put_food(x, y, prod) != 0) {
+            MP_INFO(x, y).int_3++;
+            MP_INFO(x, y).int_7 -= 1;
+        }
+    }
 
-  if ((total_time % 1200) == 0) {
-      MP_INFO(x,y).int_4 = MP_INFO(x,y).int_3;
-      MP_INFO(x,y).int_3 = 0;
-  }
+    if ((total_time & 0x7f) == 0)
+        if ((MP_INFO(x, y).flags & FLAG_POWERED) != 0)
+            get_waste(x, y, 0x80 * ORG_FARM_WASTE_GET);
 
-  i = (total_time + MP_INFO(x,y).int_5 * 1200 + MP_INFO(x,y).int_6) % 4800;
+    if ((total_time % 1200) == 0) {
+        MP_INFO(x, y).int_4 = MP_INFO(x, y).int_3;
+        MP_INFO(x, y).int_3 = 0;
+    }
 
-  if (i % 300 == 0)
-    {
-      i /= 300;
-      if ( /* MP_INFO(x,y).int_2!=0 &&  */ MP_INFO(x,y).int_4
-	  > MIN_FOOD_SOLD_FOR_ANIM)
-	{
-	  if (i % 4 == 0)
-	    {
-	      MP_INFO(x,y).int_6 = rand () % 100; /* AL1: initially defined as %300 */
-	    }
-	  switch (i)
-	    {
-	    case (0):
-	      MP_TYPE(x,y) = CST_FARM_O3;
-	      break;
-	    case (1):
-	      MP_TYPE(x,y) = CST_FARM_O3;
-	      break;
-	    case (2):
-	      MP_TYPE(x,y) = CST_FARM_O3;
-	      break;
-	    case (3):
-	      MP_TYPE(x,y) = CST_FARM_O3;
-	      break;
-	    case (4):
-	      MP_TYPE(x,y) = CST_FARM_O7;
-	      break;
-	    case (5):
-	      MP_TYPE(x,y) = CST_FARM_O7;
-	      break;
-	    case (6):
-	      MP_TYPE(x,y) = CST_FARM_O7;
-	      break;
-	    case (7):
-	      MP_TYPE(x,y) = CST_FARM_O7;
-	      break;
-	    case (8):
-	      MP_TYPE(x,y) = CST_FARM_O11;
-	      break;
-	    case (9):
-	      MP_TYPE(x,y) = CST_FARM_O11;
-	      break;
-	    case (10):
-	      MP_TYPE(x,y) = CST_FARM_O11;
-	      break;
-	    case (11):
-	      MP_TYPE(x,y) = CST_FARM_O11;
-	      break;
-	    case (12):
-	      MP_TYPE(x,y) = CST_FARM_O15;
-	      break;
-	    case (13):
-	      MP_TYPE(x,y) = CST_FARM_O15;
-	      break;
-	    case (14):
-	      MP_TYPE(x,y) = CST_FARM_O15;
-	      break;
-	    case (15):
-	      MP_TYPE(x,y) = CST_FARM_O15;
-	      break;
+    i = (total_time + MP_INFO(x, y).int_5 * 1200 + MP_INFO(x, y).int_6) % 4800;
 
-	    }
-	}
-      else
-	{
-	  MP_TYPE(x,y) = CST_FARM_O0;
-	}
+    if (i % 300 == 0) {
+        i /= 300;
+        if ( /* MP_INFO(x,y).int_2!=0 &&  */ MP_INFO(x, y).int_4
+            > MIN_FOOD_SOLD_FOR_ANIM) {
+            if (i % 4 == 0) {
+                MP_INFO(x, y).int_6 = rand() % 100;     /* AL1: initially defined as %300 */
+            }
+            switch (i) {
+            case (0):
+                MP_TYPE(x, y) = CST_FARM_O3;
+                break;
+            case (1):
+                MP_TYPE(x, y) = CST_FARM_O3;
+                break;
+            case (2):
+                MP_TYPE(x, y) = CST_FARM_O3;
+                break;
+            case (3):
+                MP_TYPE(x, y) = CST_FARM_O3;
+                break;
+            case (4):
+                MP_TYPE(x, y) = CST_FARM_O7;
+                break;
+            case (5):
+                MP_TYPE(x, y) = CST_FARM_O7;
+                break;
+            case (6):
+                MP_TYPE(x, y) = CST_FARM_O7;
+                break;
+            case (7):
+                MP_TYPE(x, y) = CST_FARM_O7;
+                break;
+            case (8):
+                MP_TYPE(x, y) = CST_FARM_O11;
+                break;
+            case (9):
+                MP_TYPE(x, y) = CST_FARM_O11;
+                break;
+            case (10):
+                MP_TYPE(x, y) = CST_FARM_O11;
+                break;
+            case (11):
+                MP_TYPE(x, y) = CST_FARM_O11;
+                break;
+            case (12):
+                MP_TYPE(x, y) = CST_FARM_O15;
+                break;
+            case (13):
+                MP_TYPE(x, y) = CST_FARM_O15;
+                break;
+            case (14):
+                MP_TYPE(x, y) = CST_FARM_O15;
+                break;
+            case (15):
+                MP_TYPE(x, y) = CST_FARM_O15;
+                break;
+
+            }
+        } else {
+            MP_TYPE(x, y) = CST_FARM_O0;
+        }
     }
 }
 
@@ -217,61 +209,56 @@
 #endif
 #define MPS_INFO_CHARS 30
 
-void
-mps_organic_farm (int x, int y)
+void mps_organic_farm(int x, int y)
 {
-  int i = 0;
-  const char *p;
-  char text[MPS_INFO_CHARS+1];
+    int i = 0;
+    const char *p;
+    char text[MPS_INFO_CHARS + 1];
 
   /** removed depency on mps_info */
-  mps_store_title(i++,_("Organic Farm"));
-  i++;
+    mps_store_title(i++, _("Organic Farm"));
+    i++;
 
-  if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0)
-    p = _("YES");
-  else
-    p = _("NO ");
-  
-  snprintf(text, MPS_INFO_CHARS, "%s %s", _("Power"), p);
-  mps_store_title(i++,text);
+    if ((MP_INFO(x, y).flags & FLAG_POWERED) != 0)
+        p = _("YES");
+    else
+        p = _("NO ");
 
-  snprintf(text, MPS_INFO_CHARS, "%s  %5.1f%%", _("Tech"), 
-	   MP_INFO(x,y).int_1 * 100.0 / MAX_TECH_LEVEL);
-  mps_store_title(i++,text);
+    snprintf(text, MPS_INFO_CHARS, "%s %s", _("Power"), p);
+    mps_store_title(i++, text);
 
-  snprintf(text, MPS_INFO_CHARS, "%s  %5.1f%%", _("Prod"),
-	   MP_INFO(x,y).int_4 * 100.0 / 1200.0);
-  mps_store_title(i++,text);
+    snprintf(text, MPS_INFO_CHARS, "%s  %5.1f%%", _("Tech"), MP_INFO(x, y).int_1 * 100.0 / MAX_TECH_LEVEL);
+    mps_store_title(i++, text);
 
-  if (use_waterwell) {
-      i++;
-      mps_store_title(i++,_("Debug info"));
-      mps_store_sd(i++,_(" max with power & water"), MP_INFO(x + 1, y).int_3);
-      mps_store_sd(i++,_(" number of tile with water"), MP_INFO(x + 1, y).int_4);
-      mps_store_sd(i++,_(" current production"), MP_INFO(x + 1, y).int_5);
-  }
+    snprintf(text, MPS_INFO_CHARS, "%s  %5.1f%%", _("Prod"), MP_INFO(x, y).int_4 * 100.0 / 1200.0);
+    mps_store_title(i++, text);
 
-  /*
-  char * p;
+    if (use_waterwell) {
+        i++;
+        mps_store_title(i++, _("Debug info"));
+        mps_store_sd(i++, _(" max with power & water"), MP_INFO(x + 1, y).int_3);
+        mps_store_sd(i++, _(" number of tile with water"), MP_INFO(x + 1, y).int_4);
+        mps_store_sd(i++, _(" current production"), MP_INFO(x + 1, y).int_5);
+    }
 
-  snprintf(mps_info[i++], MPS_INFO_CHARS, _("Organic Farm"));
-  i++;
+    /*
+       char * p;
 
-  if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0)
-    p = _("YES");
-  else
-    p = _("NO ");
+       snprintf(mps_info[i++], MPS_INFO_CHARS, _("Organic Farm"));
+       i++;
 
-  snprintf(mps_info[i++], MPS_INFO_CHARS, "%s %s", _("Power"), p);
+       if ((MP_INFO(x,y).flags & FLAG_POWERED) != 0)
+       p = _("YES");
+       else
+       p = _("NO ");
 
-  snprintf(mps_info[i++], MPS_INFO_CHARS, "%s  %5.1f%%", _("Tech"), 
-	   MP_INFO(x,y).int_1 * 100.0 / MAX_TECH_LEVEL);
+       snprintf(mps_info[i++], MPS_INFO_CHARS, "%s %s", _("Power"), p);
 
-  snprintf(mps_info[i++], MPS_INFO_CHARS, "%s  %5.1f%%", _("Prod"),
-	   MP_INFO(x,y).int_4 * 100.0 / 1200.0);
+       snprintf(mps_info[i++], MPS_INFO_CHARS, "%s  %5.1f%%", _("Tech"), 
+       MP_INFO(x,y).int_1 * 100.0 / MAX_TECH_LEVEL);
 
-  */
-}
+       snprintf(mps_info[i++], MPS_INFO_CHARS, "%s  %5.1f%%", _("Prod"),
+       MP_INFO(x,y).int_4 * 100.0 / 1200.0);
 
-
+     */
+}

Modified: trunk/src/lincity/modules/organic_farm.h
===================================================================
--- trunk/src/lincity/modules/organic_farm.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/organic_farm.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -7,7 +7,7 @@
 #ifndef __organic_farm_h__
 #define __organic_farm_h__
 
-void do_organic_farm (int x, int y);
+void do_organic_farm(int x, int y);
 void mps_organic_farm(int x, int y);
 
 #endif /* __organic_farm_h__ */

Modified: trunk/src/lincity/modules/parkland.cpp
===================================================================
--- trunk/src/lincity/modules/parkland.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/parkland.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,9 +8,8 @@
 #include "modules.h"
 #include "parkland.h"
 
-void
-do_parkland (int x, int y)
+void do_parkland(int x, int y)
 {
-  if (MP_POL(x,y) > 10 && (total_time & 1) == 0)
-    MP_POL(x,y) -= 1;
+    if (MP_POL(x, y) > 10 && (total_time & 1) == 0)
+        MP_POL(x, y) -= 1;
 }

Modified: trunk/src/lincity/modules/port.cpp
===================================================================
--- trunk/src/lincity/modules/port.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/port.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,362 +8,301 @@
 #include "modules.h"
 #include "port.h"
 
-static int
-buy_food (int xt, int yt)
+static int buy_food(int xt, int yt)
 {
-  int i = 0;
-  if (MP_GROUP(xt,yt) == GROUP_TRACK)
-    {
-      if (MP_INFO(xt,yt).int_1 < MAX_FOOD_ON_TRACK)
-	i = MAX_FOOD_ON_TRACK - MP_INFO(xt,yt).int_1;
+    int i = 0;
+    if (MP_GROUP(xt, yt) == GROUP_TRACK) {
+        if (MP_INFO(xt, yt).int_1 < MAX_FOOD_ON_TRACK)
+            i = MAX_FOOD_ON_TRACK - MP_INFO(xt, yt).int_1;
+    } else if (MP_GROUP(xt, yt) == GROUP_ROAD) {
+        if (MP_INFO(xt, yt).int_1 < MAX_FOOD_ON_ROAD)
+            i = MAX_FOOD_ON_ROAD - MP_INFO(xt, yt).int_1;
+    } else if (MP_GROUP(xt, yt) == GROUP_RAIL) {
+        if (MP_INFO(xt, yt).int_1 < MAX_FOOD_ON_RAIL)
+            i = MAX_FOOD_ON_RAIL - MP_INFO(xt, yt).int_1;
     }
-  else if (MP_GROUP(xt,yt) == GROUP_ROAD)
-    {
-      if (MP_INFO(xt,yt).int_1 < MAX_FOOD_ON_ROAD)
-	i = MAX_FOOD_ON_ROAD - MP_INFO(xt,yt).int_1;
-    }
-  else if (MP_GROUP(xt,yt) == GROUP_RAIL)
-    {
-      if (MP_INFO(xt,yt).int_1 < MAX_FOOD_ON_RAIL)
-	i = MAX_FOOD_ON_RAIL - MP_INFO(xt,yt).int_1;
-    }
-  i = (i * PORT_IMPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_1 += i;
-  return (i * PORT_FOOD_RATE);
+    i = (i * PORT_IMPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_1 += i;
+    return (i * PORT_FOOD_RATE);
 }
 
-static int
-buy_coal (int xt, int yt)
+static int buy_coal(int xt, int yt)
 {
-  int i = 0;
-  if (MP_GROUP(xt,yt) == GROUP_TRACK)
-    {
-      if (MP_INFO(xt,yt).int_3 < MAX_COAL_ON_TRACK)
-	i = MAX_COAL_ON_TRACK - MP_INFO(xt,yt).int_3;
+    int i = 0;
+    if (MP_GROUP(xt, yt) == GROUP_TRACK) {
+        if (MP_INFO(xt, yt).int_3 < MAX_COAL_ON_TRACK)
+            i = MAX_COAL_ON_TRACK - MP_INFO(xt, yt).int_3;
+    } else if (MP_GROUP(xt, yt) == GROUP_ROAD) {
+        if (MP_INFO(xt, yt).int_3 < MAX_COAL_ON_ROAD)
+            i = MAX_COAL_ON_ROAD - MP_INFO(xt, yt).int_3;
+    } else if (MP_GROUP(xt, yt) == GROUP_RAIL) {
+        if (MP_INFO(xt, yt).int_3 < MAX_COAL_ON_RAIL)
+            i = MAX_COAL_ON_RAIL - MP_INFO(xt, yt).int_3;
     }
-  else if (MP_GROUP(xt,yt) == GROUP_ROAD)
-    {
-      if (MP_INFO(xt,yt).int_3 < MAX_COAL_ON_ROAD)
-	i = MAX_COAL_ON_ROAD - MP_INFO(xt,yt).int_3;
-    }
-  else if (MP_GROUP(xt,yt) == GROUP_RAIL)
-    {
-      if (MP_INFO(xt,yt).int_3 < MAX_COAL_ON_RAIL)
-	i = MAX_COAL_ON_RAIL - MP_INFO(xt,yt).int_3;
-    }
-  i = (i * PORT_IMPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_3 += i;
-  return (i * PORT_COAL_RATE);
+    i = (i * PORT_IMPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_3 += i;
+    return (i * PORT_COAL_RATE);
 }
 
-static int
-buy_ore (int xt, int yt)
+static int buy_ore(int xt, int yt)
 {
-  int i = 0;
-  if (MP_GROUP(xt,yt) == GROUP_TRACK)
-    {
-      if (MP_INFO(xt,yt).int_5 < MAX_ORE_ON_TRACK)
-	i = MAX_ORE_ON_TRACK - MP_INFO(xt,yt).int_5;
+    int i = 0;
+    if (MP_GROUP(xt, yt) == GROUP_TRACK) {
+        if (MP_INFO(xt, yt).int_5 < MAX_ORE_ON_TRACK)
+            i = MAX_ORE_ON_TRACK - MP_INFO(xt, yt).int_5;
+    } else if (MP_GROUP(xt, yt) == GROUP_ROAD) {
+        if (MP_INFO(xt, yt).int_5 < MAX_ORE_ON_ROAD)
+            i = MAX_ORE_ON_ROAD - MP_INFO(xt, yt).int_5;
+    } else if (MP_GROUP(xt, yt) == GROUP_RAIL) {
+        if (MP_INFO(xt, yt).int_5 < MAX_ORE_ON_RAIL)
+            i = MAX_ORE_ON_RAIL - MP_INFO(xt, yt).int_5;
     }
-  else if (MP_GROUP(xt,yt) == GROUP_ROAD)
-    {
-      if (MP_INFO(xt,yt).int_5 < MAX_ORE_ON_ROAD)
-	i = MAX_ORE_ON_ROAD - MP_INFO(xt,yt).int_5;
-    }
-  else if (MP_GROUP(xt,yt) == GROUP_RAIL)
-    {
-      if (MP_INFO(xt,yt).int_5 < MAX_ORE_ON_RAIL)
-	i = MAX_ORE_ON_RAIL - MP_INFO(xt,yt).int_5;
-    }
-  i = (i * PORT_IMPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_5 += i;
-  return (i * PORT_ORE_RATE);
+    i = (i * PORT_IMPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_5 += i;
+    return (i * PORT_ORE_RATE);
 }
 
-static int
-buy_goods (int xt, int yt)
+static int buy_goods(int xt, int yt)
 {
-  int i = 0;
-  if (MP_GROUP(xt,yt) == GROUP_TRACK)
-    {
-      if (MP_INFO(xt,yt).int_4 < MAX_GOODS_ON_TRACK)
-	i = MAX_GOODS_ON_TRACK - MP_INFO(xt,yt).int_4;
+    int i = 0;
+    if (MP_GROUP(xt, yt) == GROUP_TRACK) {
+        if (MP_INFO(xt, yt).int_4 < MAX_GOODS_ON_TRACK)
+            i = MAX_GOODS_ON_TRACK - MP_INFO(xt, yt).int_4;
+    } else if (MP_GROUP(xt, yt) == GROUP_ROAD) {
+        if (MP_INFO(xt, yt).int_4 < MAX_GOODS_ON_ROAD)
+            i = MAX_GOODS_ON_ROAD - MP_INFO(xt, yt).int_4;
+    } else if (MP_GROUP(xt, yt) == GROUP_RAIL) {
+        if (MP_INFO(xt, yt).int_4 < MAX_GOODS_ON_RAIL)
+            i = MAX_GOODS_ON_RAIL - MP_INFO(xt, yt).int_4;
     }
-  else if (MP_GROUP(xt,yt) == GROUP_ROAD)
-    {
-      if (MP_INFO(xt,yt).int_4 < MAX_GOODS_ON_ROAD)
-	i = MAX_GOODS_ON_ROAD - MP_INFO(xt,yt).int_4;
-    }
-  else if (MP_GROUP(xt,yt) == GROUP_RAIL)
-    {
-      if (MP_INFO(xt,yt).int_4 < MAX_GOODS_ON_RAIL)
-	i = MAX_GOODS_ON_RAIL - MP_INFO(xt,yt).int_4;
-    }
-  i = (i * PORT_IMPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_4 += i;
-  return (i * PORT_GOODS_RATE);
+    i = (i * PORT_IMPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_4 += i;
+    return (i * PORT_GOODS_RATE);
 }
 
-
-static int
-buy_steel (int xt, int yt)
+static int buy_steel(int xt, int yt)
 {
-  int i = 0;
-  if (MP_GROUP(xt,yt) == GROUP_TRACK)
-    {
-      if (MP_INFO(xt,yt).int_6 < MAX_STEEL_ON_TRACK)
-	i = MAX_STEEL_ON_TRACK - MP_INFO(xt,yt).int_6;
+    int i = 0;
+    if (MP_GROUP(xt, yt) == GROUP_TRACK) {
+        if (MP_INFO(xt, yt).int_6 < MAX_STEEL_ON_TRACK)
+            i = MAX_STEEL_ON_TRACK - MP_INFO(xt, yt).int_6;
+    } else if (MP_GROUP(xt, yt) == GROUP_ROAD) {
+        if (MP_INFO(xt, yt).int_6 < MAX_STEEL_ON_ROAD)
+            i = MAX_STEEL_ON_ROAD - MP_INFO(xt, yt).int_6;
+    } else if (MP_GROUP(xt, yt) == GROUP_RAIL) {
+        if (MP_INFO(xt, yt).int_6 < MAX_STEEL_ON_RAIL)
+            i = MAX_STEEL_ON_RAIL - MP_INFO(xt, yt).int_6;
     }
-  else if (MP_GROUP(xt,yt) == GROUP_ROAD)
-    {
-      if (MP_INFO(xt,yt).int_6 < MAX_STEEL_ON_ROAD)
-	i = MAX_STEEL_ON_ROAD - MP_INFO(xt,yt).int_6;
-    }
-  else if (MP_GROUP(xt,yt) == GROUP_RAIL)
-    {
-      if (MP_INFO(xt,yt).int_6 < MAX_STEEL_ON_RAIL)
-	i = MAX_STEEL_ON_RAIL - MP_INFO(xt,yt).int_6;
-    }
-  i = (i * PORT_IMPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_6 += i;
-  return (i * PORT_STEEL_RATE);
+    i = (i * PORT_IMPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_6 += i;
+    return (i * PORT_STEEL_RATE);
 }
 
-static int
-sell_food (int xt, int yt)
+static int sell_food(int xt, int yt)
 {
-  int i = 0;
-  i = (MP_INFO(xt,yt).int_1 * PORT_EXPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_1 -= i;
-  return (i * PORT_FOOD_RATE);
+    int i = 0;
+    i = (MP_INFO(xt, yt).int_1 * PORT_EXPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_1 -= i;
+    return (i * PORT_FOOD_RATE);
 }
 
-static int
-sell_coal (int xt, int yt)
+static int sell_coal(int xt, int yt)
 {
-  int i = 0;
-  i = (MP_INFO(xt,yt).int_3 * PORT_EXPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_3 -= i;
-  return (i * PORT_COAL_RATE);
+    int i = 0;
+    i = (MP_INFO(xt, yt).int_3 * PORT_EXPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_3 -= i;
+    return (i * PORT_COAL_RATE);
 }
 
-static int
-sell_ore (int xt, int yt)
+static int sell_ore(int xt, int yt)
 {
-  int i = 0;
-  i = (MP_INFO(xt,yt).int_5 * PORT_EXPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_5 -= i;
-  return (i * PORT_ORE_RATE);
+    int i = 0;
+    i = (MP_INFO(xt, yt).int_5 * PORT_EXPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_5 -= i;
+    return (i * PORT_ORE_RATE);
 }
 
-static int
-sell_goods (int xt, int yt)
+static int sell_goods(int xt, int yt)
 {
-  int i = 0;
-  i = (MP_INFO(xt,yt).int_4 * PORT_EXPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_4 -= i;
-  return (i * PORT_GOODS_RATE);
+    int i = 0;
+    i = (MP_INFO(xt, yt).int_4 * PORT_EXPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_4 -= i;
+    return (i * PORT_GOODS_RATE);
 }
 
-static int
-sell_steel (int xt, int yt)
+static int sell_steel(int xt, int yt)
 {
-  int i = 0;
-  i = (MP_INFO(xt,yt).int_6 * PORT_EXPORT_RATE) / 1000;
-  MP_INFO(xt,yt).int_6 -= i;
-  return (i * PORT_STEEL_RATE);
+    int i = 0;
+    i = (MP_INFO(xt, yt).int_6 * PORT_EXPORT_RATE) / 1000;
+    MP_INFO(xt, yt).int_6 -= i;
+    return (i * PORT_STEEL_RATE);
 }
 
 /* Trade with a transport.
  * Port is at x/y, transport at u/v. */
-static void
-trade_connection( const int x, const int y, const int u, const int v, int* ic_ptr, int* et_ptr )
+static void trade_connection(const int x, const int y, const int u, const int v, int *ic_ptr, int *et_ptr)
 {
-  if (u >= 0 && v>=0 && (MP_INFO( u, v).flags
-              & FLAG_IS_TRANSPORT) != 0)
-  {
-      //printf("Port %i/%i trading with transport %i/%i\n", x,y,u,v);
-      int i, flags;
-      int ic = 0;
-      int et = 0;
-      flags = MP_INFO(x,y).flags;
-      if ((flags & FLAG_MB_FOOD) != 0)
-      {
-          i = buy_food ( u, v);
-          ic += i;
-          MP_INFO(x + 1,y).int_3 += i;
-      }
-      if ((flags & FLAG_MS_FOOD) != 0)
-      {
-          i = sell_food ( u, v);
-          et += i;
-          MP_INFO(x + 2,y).int_3 += i;
-      }
-      if ((flags & FLAG_MB_COAL) != 0)
-      {
-          i = buy_coal ( u, v);
-          ic += i;
-          MP_INFO(x + 1,y).int_4 += i;
-      }
-      if ((flags & FLAG_MS_COAL) != 0)
-      {
-          i = sell_coal ( u, v);
-          et += i;
-          MP_INFO(x + 2,y).int_4 += i;
-      }
-      if ((flags & FLAG_MB_ORE) != 0)
-      {
-          i = buy_ore ( u, v);
-          ic += i;
-          MP_INFO(x + 1,y).int_5 += i;
-      }
-      if ((flags & FLAG_MS_ORE) != 0)
-      {
-          i = sell_ore ( u, v);
-          et += i;
-          MP_INFO(x + 2,y).int_5 += i;
-      }
-      if ((flags & FLAG_MB_GOODS) != 0)
-      {
-          i = buy_goods ( u, v);
-          ic += i;
-          MP_INFO(x + 1,y).int_6 += i;
-      }
-      if ((flags & FLAG_MS_GOODS) != 0)
-      {
-          i = sell_goods ( u, v);
-          et += i;
-          MP_INFO(x + 2,y).int_6 += i;
-      }
-      if ((flags & FLAG_MB_STEEL) != 0)
-      {
-          i = buy_steel ( u, v);
-          ic += i;
-          MP_INFO(x + 1,y).int_7 += i;
-      }
-      if ((flags & FLAG_MS_STEEL) != 0)
-      {
-          i = sell_steel ( u, v);
-          et += i;
-          MP_INFO(x + 2,y).int_7 += i;
-      }
-      *ic_ptr += ic;
-      *et_ptr += et;
-  }
+    if (u >= 0 && v >= 0 && (MP_INFO(u, v).flags & FLAG_IS_TRANSPORT) != 0) {
+        //printf("Port %i/%i trading with transport %i/%i\n", x,y,u,v);
+        int i, flags;
+        int ic = 0;
+        int et = 0;
+        flags = MP_INFO(x, y).flags;
+        if ((flags & FLAG_MB_FOOD) != 0) {
+            i = buy_food(u, v);
+            ic += i;
+            MP_INFO(x + 1, y).int_3 += i;
+        }
+        if ((flags & FLAG_MS_FOOD) != 0) {
+            i = sell_food(u, v);
+            et += i;
+            MP_INFO(x + 2, y).int_3 += i;
+        }
+        if ((flags & FLAG_MB_COAL) != 0) {
+            i = buy_coal(u, v);
+            ic += i;
+            MP_INFO(x + 1, y).int_4 += i;
+        }
+        if ((flags & FLAG_MS_COAL) != 0) {
+            i = sell_coal(u, v);
+            et += i;
+            MP_INFO(x + 2, y).int_4 += i;
+        }
+        if ((flags & FLAG_MB_ORE) != 0) {
+            i = buy_ore(u, v);
+            ic += i;
+            MP_INFO(x + 1, y).int_5 += i;
+        }
+        if ((flags & FLAG_MS_ORE) != 0) {
+            i = sell_ore(u, v);
+            et += i;
+            MP_INFO(x + 2, y).int_5 += i;
+        }
+        if ((flags & FLAG_MB_GOODS) != 0) {
+            i = buy_goods(u, v);
+            ic += i;
+            MP_INFO(x + 1, y).int_6 += i;
+        }
+        if ((flags & FLAG_MS_GOODS) != 0) {
+            i = sell_goods(u, v);
+            et += i;
+            MP_INFO(x + 2, y).int_6 += i;
+        }
+        if ((flags & FLAG_MB_STEEL) != 0) {
+            i = buy_steel(u, v);
+            ic += i;
+            MP_INFO(x + 1, y).int_7 += i;
+        }
+        if ((flags & FLAG_MS_STEEL) != 0) {
+            i = sell_steel(u, v);
+            et += i;
+            MP_INFO(x + 2, y).int_7 += i;
+        }
+        *ic_ptr += ic;
+        *et_ptr += et;
+    }
 }
 
-void
-do_port (int x, int y)
+void do_port(int x, int y)
 {
-  /*
-     // int_1 is the money made so far this month
-     // int_2 is the money made last month
-     // int_3 holds the 'pence/pennies/bits' to add next time round.
-     // int_4 is the import costs so far this month
-     // int_5 is the import costs for last month
-     // Use int_3 to int_7 of (x+1,y) to hold the individual buy values
-     //                       (x,y+1) is last month's
-     // Use int_3 to int_7 of (x+2,y) to hold the individual sell values
-     //                       (x,y+2) is last month's
-   */
-  int i, et = 0, ic = 0, *b1, *b2, *s1, *s2, a;
+    /*
+       // int_1 is the money made so far this month
+       // int_2 is the money made last month
+       // int_3 holds the 'pence/pennies/bits' to add next time round.
+       // int_4 is the import costs so far this month
+       // int_5 is the import costs for last month
+       // Use int_3 to int_7 of (x+1,y) to hold the individual buy values
+       //                       (x,y+1) is last month's
+       // Use int_3 to int_7 of (x+2,y) to hold the individual sell values
+       //                       (x,y+2) is last month's
+     */
+    int i, et = 0, ic = 0, *b1, *b2, *s1, *s2, a;
 
-      
- /* left connection first */
-  for( a = 0; a < 4 ; a++ ) //try anywhere on the west side.
-    if ( x >= 0 && y>=0 && (MP_INFO( x-1, y+a ).flags
-              & FLAG_IS_TRANSPORT) != 0){
-        trade_connection( x, y, x-1, y+a, &ic, &et );
-        break;
+    /* left connection first */
+    for (a = 0; a < 4; a++)     //try anywhere on the west side.
+        if (x >= 0 && y >= 0 && (MP_INFO(x - 1, y + a).flags & FLAG_IS_TRANSPORT) != 0) {
+            trade_connection(x, y, x - 1, y + a, &ic, &et);
+            break;
+        }
+    /* upper gate next */
+    bool deal = false;
+    for (a = 0; a < 3; a++)     //try north
+        if (x >= 0 && y >= 0 && (MP_INFO(x + a, y - 1).flags & FLAG_IS_TRANSPORT) != 0) {
+            trade_connection(x, y, x + a, y - 1, &ic, &et);
+            deal = false;
+            break;
+        }
+    if (!deal)
+        for (a = 0; a < 3; a++) //try south
+            if (x >= 0 && y >= 0 && (MP_INFO(x + a, y + 4).flags & FLAG_IS_TRANSPORT) != 0) {
+                trade_connection(x, y, x + a, y + 4, &ic, &et);
+                break;
+            }
+
+    MP_INFO(x, y).int_1 += et;
+    MP_INFO(x, y).int_4 += ic;
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_2 = MP_INFO(x, y).int_1;
+        MP_INFO(x, y).int_1 = 0;
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_4;
+        MP_INFO(x, y).int_4 = 0;
+        b1 = &(MP_INFO(x + 1, y).int_3);
+        s1 = &(MP_INFO(x + 2, y).int_3);
+        b2 = &(MP_INFO(x, y + 1).int_3);
+        s2 = &(MP_INFO(x, y + 2).int_3);
+        /* GCS FIX -- This obfuscation is unnecessary. */
+        for (i = 0; i < 5; i++) {
+            *(b2++) = *b1;
+            *(s2++) = *s1;
+            *(b1++) = 0;
+            *(s1++) = 0;
+        }
     }
- /* upper gate next */
-  bool deal = false;
-  for( a = 0; a < 3 ; a++ ) //try north
-    if ( x >= 0 && y>=0 && (MP_INFO( x+a, y-1 ).flags
-              & FLAG_IS_TRANSPORT) != 0){
-        trade_connection( x, y, x+a, y-1, &ic, &et );
-        deal = false;
-        break;
+    if (et > 0) {
+        sust_port_flag = 0;
+        tech_level++;
     }
-  if( !deal )
-  for( a = 0; a < 3 ; a++ ) //try south
-    if ( x >= 0 && y>=0 && (MP_INFO( x+a, y+4 ).flags
-              & FLAG_IS_TRANSPORT) != 0){
-        trade_connection( x, y, x+a, y+4, &ic, &et );
-        break;
+    if (ic > 0) {
+        sust_port_flag = 0;
+        tech_level++;
     }
-  
-  MP_INFO(x,y).int_1 += et;
-  MP_INFO(x,y).int_4 += ic;
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_2 = MP_INFO(x,y).int_1;
-      MP_INFO(x,y).int_1 = 0;
-      MP_INFO(x,y).int_5 = MP_INFO(x,y).int_4;
-      MP_INFO(x,y).int_4 = 0;
-      b1 = &(MP_INFO(x + 1,y).int_3);
-      s1 = &(MP_INFO(x + 2,y).int_3);
-      b2 = &(MP_INFO(x,y + 1).int_3);
-      s2 = &(MP_INFO(x,y + 2).int_3);
-      /* GCS FIX -- This obfuscation is unnecessary. */
-      for (i = 0; i < 5; i++)
-	{
-	  *(b2++) = *b1;
-	  *(s2++) = *s1;
-	  *(b1++) = 0;
-	  *(s1++) = 0;
-	}
-    }
-  if (et > 0)
-    {
-      sust_port_flag = 0;
-      tech_level++;
-    }
-  if (ic > 0)
-    {
-      sust_port_flag = 0;
-      tech_level++;
-    }
-  et += MP_INFO(x,y).int_3;	/* int_3 holds the 'pence' */
+    et += MP_INFO(x, y).int_3;  /* int_3 holds the 'pence' */
 
-  export_tax += et / 100;
-  MP_INFO(x,y).int_3 = et % 100;
-  import_cost += ic;
+    export_tax += et / 100;
+    MP_INFO(x, y).int_3 = et % 100;
+    import_cost += ic;
 }
 
-void
-mps_port (int x, int y)
+void mps_port(int x, int y)
 {
     int i = 0;
     char buy[12], sell[12];
 
-    mps_store_title(i++,_("Port"));
+    mps_store_title(i++, _("Port"));
     i++;
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y+1).int_3 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y+2).int_3 / 100);
-    mps_store_sss(i++,_("Food"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y + 1).int_3 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y + 2).int_3 / 100);
+    mps_store_sss(i++, _("Food"), buy, sell);
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y+1).int_4 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y+2).int_4 / 100);
-    mps_store_sss(i++,_("Coal"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y + 1).int_4 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y + 2).int_4 / 100);
+    mps_store_sss(i++, _("Coal"), buy, sell);
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y+1).int_5 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y+2).int_5 / 100);
-    mps_store_sss(i++,_("Ore"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y + 1).int_5 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y + 2).int_5 / 100);
+    mps_store_sss(i++, _("Ore"), buy, sell);
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y+1).int_6 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y+2).int_6 / 100);
-    mps_store_sss(i++,_("Goods"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y + 1).int_6 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y + 2).int_6 / 100);
+    mps_store_sss(i++, _("Goods"), buy, sell);
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y+1).int_7 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y+2).int_7 / 100);
-    mps_store_sss(i++,_("Steel"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y + 1).int_7 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y + 2).int_7 / 100);
+    mps_store_sss(i++, _("Steel"), buy, sell);
 
-    num_to_ansi(buy, sizeof(buy), MP_INFO(x,y).int_5 / 100);
-    num_to_ansi(sell, sizeof(sell), MP_INFO(x,y).int_2 / 100);
-    mps_store_sss(i++,_("Total"),buy,sell);
+    num_to_ansi(buy, sizeof(buy), MP_INFO(x, y).int_5 / 100);
+    num_to_ansi(sell, sizeof(sell), MP_INFO(x, y).int_2 / 100);
+    mps_store_sss(i++, _("Total"), buy, sell);
 
 }
-
-

Modified: trunk/src/lincity/modules/port.h
===================================================================
--- trunk/src/lincity/modules/port.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/port.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __port_h__
 
 void do_port(int x, int y);
-void mps_port (int x, int y);
+void mps_port(int x, int y);
 
 #endif /* __port_h__ */

Modified: trunk/src/lincity/modules/pottery.cpp
===================================================================
--- trunk/src/lincity/modules/pottery.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/pottery.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,125 +8,106 @@
 #include "modules.h"
 #include "pottery.h"
 
-
-void
-do_pottery (int x, int y)
+void do_pottery(int x, int y)
 {
-  /*
-    // int_1 contains the goods at the pottery
-    // int_2 contains the ore at the pottery
-    // int_3 contains the coal at the pottery
-    // int_4 is the animation trigger time
-    // int_5 is the % made so far this month or the close time if negative
-    // int_6 is the % capacity last month
-    // int_7 contains the jobs stored at the pottery
-  */
-  if (MP_INFO(x,y).int_5 < 0)
-    {
-      MP_INFO(x,y).int_5++;
-      return;
+    /*
+       // int_1 contains the goods at the pottery
+       // int_2 contains the ore at the pottery
+       // int_3 contains the coal at the pottery
+       // int_4 is the animation trigger time
+       // int_5 is the % made so far this month or the close time if negative
+       // int_6 is the % capacity last month
+       // int_7 contains the jobs stored at the pottery
+     */
+    if (MP_INFO(x, y).int_5 < 0) {
+        MP_INFO(x, y).int_5++;
+        return;
     }
-  if (MP_INFO(x,y).int_1 < (MAX_GOODS_AT_POTTERY - POTTERY_MADE_GOODS))
-    {
-      if (MP_INFO(x,y).int_2
-	  < (MAX_ORE_AT_POTTERY - POTTERY_GET_ORE))
-	if (get_ore (x, y, POTTERY_GET_ORE) != 0)
-	  MP_INFO(x,y).int_2 += POTTERY_GET_ORE;
-      if (MP_INFO(x,y).int_3
-	  < (MAX_COAL_AT_POTTERY - POTTERY_GET_COAL))
-	if (get_coal (x, y, POTTERY_GET_COAL) != 0)
-	  MP_INFO(x,y).int_3 += POTTERY_GET_COAL;
-      if (MP_INFO(x,y).int_7
-	  < (MAX_JOBS_AT_POTTERY - POTTERY_GET_JOBS))
-	if (get_jobs (x, y, POTTERY_GET_JOBS) != 0)
-	  MP_INFO(x,y).int_7 += POTTERY_GET_JOBS;
+    if (MP_INFO(x, y).int_1 < (MAX_GOODS_AT_POTTERY - POTTERY_MADE_GOODS)) {
+        if (MP_INFO(x, y).int_2 < (MAX_ORE_AT_POTTERY - POTTERY_GET_ORE))
+            if (get_ore(x, y, POTTERY_GET_ORE) != 0)
+                MP_INFO(x, y).int_2 += POTTERY_GET_ORE;
+        if (MP_INFO(x, y).int_3 < (MAX_COAL_AT_POTTERY - POTTERY_GET_COAL))
+            if (get_coal(x, y, POTTERY_GET_COAL) != 0)
+                MP_INFO(x, y).int_3 += POTTERY_GET_COAL;
+        if (MP_INFO(x, y).int_7 < (MAX_JOBS_AT_POTTERY - POTTERY_GET_JOBS))
+            if (get_jobs(x, y, POTTERY_GET_JOBS) != 0)
+                MP_INFO(x, y).int_7 += POTTERY_GET_JOBS;
 
-      if (MP_INFO(x,y).int_2 > POTTERY_ORE_MAKE_GOODS
-	  && MP_INFO(x,y).int_3 > POTTERY_COAL_MAKE_GOODS
-	  && MP_INFO(x,y).int_7 > POTTERY_JOBS)
-	{
-	  MP_INFO(x,y).int_1 += POTTERY_MADE_GOODS;
-	  MP_INFO(x,y).int_2 -= POTTERY_ORE_MAKE_GOODS;
-	  MP_INFO(x,y).int_3 -= POTTERY_COAL_MAKE_GOODS;
-	  MP_INFO(x,y).int_7 -= POTTERY_JOBS;
-	  MP_INFO(x,y).int_5++;
-	}
-      else
-	{
-	  MP_TYPE(x,y) = CST_POTTERY_1;
-	  MP_INFO(x,y).int_6 = 0;
-	  MP_INFO(x,y).int_5 = -POTTERY_CLOSE_TIME;
-	  return;
-	}
+        if (MP_INFO(x, y).int_2 > POTTERY_ORE_MAKE_GOODS
+            && MP_INFO(x, y).int_3 > POTTERY_COAL_MAKE_GOODS && MP_INFO(x, y).int_7 > POTTERY_JOBS) {
+            MP_INFO(x, y).int_1 += POTTERY_MADE_GOODS;
+            MP_INFO(x, y).int_2 -= POTTERY_ORE_MAKE_GOODS;
+            MP_INFO(x, y).int_3 -= POTTERY_COAL_MAKE_GOODS;
+            MP_INFO(x, y).int_7 -= POTTERY_JOBS;
+            MP_INFO(x, y).int_5++;
+        } else {
+            MP_TYPE(x, y) = CST_POTTERY_1;
+            MP_INFO(x, y).int_6 = 0;
+            MP_INFO(x, y).int_5 = -POTTERY_CLOSE_TIME;
+            return;
+        }
     }
-  if (MP_INFO(x,y).int_1 > 0)
-    if (put_goods (x, y, MP_INFO(x,y).int_1) != 0)
-      MP_INFO(x,y).int_1 = 0;
+    if (MP_INFO(x, y).int_1 > 0)
+        if (put_goods(x, y, MP_INFO(x, y).int_1) != 0)
+            MP_INFO(x, y).int_1 = 0;
 
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_6 = MP_INFO(x,y).int_5;
-      MP_INFO(x,y).int_5 = 0;
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_6 = MP_INFO(x, y).int_5;
+        MP_INFO(x, y).int_5 = 0;
     }
-  if (real_time >= MP_INFO(x,y).int_4 /* && block_anim==0 */ )
-    {
-      MP_INFO(x,y).int_4 = real_time + POTTERY_ANIM_SPEED;
-      switch (MP_TYPE(x,y))
-	{
-	case (CST_POTTERY_0):
-	  MP_TYPE(x,y) = CST_POTTERY_1;
-	  break;
-	case (CST_POTTERY_1):
-	  MP_TYPE(x,y) = CST_POTTERY_2;
-	  break;
-	case (CST_POTTERY_2):
-	  MP_TYPE(x,y) = CST_POTTERY_3;
-	  break;
-	case (CST_POTTERY_3):
-	  MP_TYPE(x,y) = CST_POTTERY_4;
-	  break;
-	case (CST_POTTERY_4):
-	  MP_TYPE(x,y) = CST_POTTERY_5;
-	  break;
-	case (CST_POTTERY_5):
-	  MP_TYPE(x,y) = CST_POTTERY_6;
-	  break;
-	case (CST_POTTERY_6):
-	  MP_TYPE(x,y) = CST_POTTERY_7;
-	  break;
-	case (CST_POTTERY_7):
-	  MP_TYPE(x,y) = CST_POTTERY_8;
-	  break;
-	case (CST_POTTERY_8):
-	  MP_TYPE(x,y) = CST_POTTERY_9;
-	  break;
-	case (CST_POTTERY_9):
-	  MP_TYPE(x,y) = CST_POTTERY_10;
-	  break;
-	case (CST_POTTERY_10):
-	  MP_TYPE(x,y) = CST_POTTERY_1;
-	  MP_POL(x,y)++;
-	  break;
-	}
+    if (real_time >= MP_INFO(x, y).int_4 /* && block_anim==0 */ ) {
+        MP_INFO(x, y).int_4 = real_time + POTTERY_ANIM_SPEED;
+        switch (MP_TYPE(x, y)) {
+        case (CST_POTTERY_0):
+            MP_TYPE(x, y) = CST_POTTERY_1;
+            break;
+        case (CST_POTTERY_1):
+            MP_TYPE(x, y) = CST_POTTERY_2;
+            break;
+        case (CST_POTTERY_2):
+            MP_TYPE(x, y) = CST_POTTERY_3;
+            break;
+        case (CST_POTTERY_3):
+            MP_TYPE(x, y) = CST_POTTERY_4;
+            break;
+        case (CST_POTTERY_4):
+            MP_TYPE(x, y) = CST_POTTERY_5;
+            break;
+        case (CST_POTTERY_5):
+            MP_TYPE(x, y) = CST_POTTERY_6;
+            break;
+        case (CST_POTTERY_6):
+            MP_TYPE(x, y) = CST_POTTERY_7;
+            break;
+        case (CST_POTTERY_7):
+            MP_TYPE(x, y) = CST_POTTERY_8;
+            break;
+        case (CST_POTTERY_8):
+            MP_TYPE(x, y) = CST_POTTERY_9;
+            break;
+        case (CST_POTTERY_9):
+            MP_TYPE(x, y) = CST_POTTERY_10;
+            break;
+        case (CST_POTTERY_10):
+            MP_TYPE(x, y) = CST_POTTERY_1;
+            MP_POL(x, y)++;
+            break;
+        }
     }
 }
 
-void
-mps_pottery (int x, int y)
+void mps_pottery(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Pottery"));
-  i++;
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_6 * 1.0);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Jobs"),
-		MP_INFO(x,y).int_7 * 100.0 / MAX_JOBS_AT_POTTERY);
-  mps_store_sfp(i++,_("Goods"),
-		MP_INFO(x,y).int_1 * 100.0 / MAX_GOODS_AT_POTTERY);
-  mps_store_sfp(i++,_("Ore"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_ORE_AT_POTTERY);
-  mps_store_sfp(i++,_("Coal"),
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_AT_POTTERY);
+    mps_store_title(i++, _("Pottery"));
+    i++;
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_6 * 1.0);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_7 * 100.0 / MAX_JOBS_AT_POTTERY);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_1 * 100.0 / MAX_GOODS_AT_POTTERY);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_2 * 100.0 / MAX_ORE_AT_POTTERY);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_AT_POTTERY);
 }

Modified: trunk/src/lincity/modules/pottery.h
===================================================================
--- trunk/src/lincity/modules/pottery.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/pottery.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __pottery_h__
 
 void do_pottery(int x, int y);
-void mps_pottery (int x, int y);
+void mps_pottery(int x, int y);
 
 #endif /* __pottery_h__ */

Modified: trunk/src/lincity/modules/power_line.cpp
===================================================================
--- trunk/src/lincity/modules/power_line.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/power_line.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,46 +9,42 @@
 #include "../power.h"
 #include "power_line.h"
 
-
 /*** Power Lines ***/
 /*
   int_5 is animation schedule
   int_6 is the grid it is on
   int_7 is a grid timestamp
 */
-void
-do_power_line (int x, int y)
+void do_power_line(int x, int y)
 {
-    if (grid[MP_INFO(x,y).int_6]->powered == -1)
-	return;
+    if (grid[MP_INFO(x, y).int_6]->powered == -1)
+        return;
 
-    switch(MP_INFO(x,y).int_5) 
-    {
-    case 0: 
-	MP_INFO(x,y).int_5 = POWER_MODULUS;
-	break;
+    switch (MP_INFO(x, y).int_5) {
+    case 0:
+        MP_INFO(x, y).int_5 = POWER_MODULUS;
+        break;
     case 1:
-	if (!(MP_TYPE(x,y) <= 11 && MP_TYPE(x,y) >= 1))
-	    break;
-	MP_TYPE(x,y) += 11;
-	break;
+        if (!(MP_TYPE(x, y) <= 11 && MP_TYPE(x, y) >= 1))
+            break;
+        MP_TYPE(x, y) += 11;
+        break;
     case 2:
-	if (!(MP_TYPE(x,y) >= 11 && MP_TYPE(x,y) <= 22))
-	    break;
-	MP_TYPE(x,y) -= 11;
-	break;
+        if (!(MP_TYPE(x, y) >= 11 && MP_TYPE(x, y) <= 22))
+            break;
+        MP_TYPE(x, y) -= 11;
+        break;
     }
 
-    MP_INFO(x,y).int_5--;
+    MP_INFO(x, y).int_5--;
 }
 
-void
-mps_power_line (int x, int y)
+void mps_power_line(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Power Line"));
-  i++;
+    mps_store_title(i++, _("Power Line"));
+    i++;
 
-  mps_store_sd(i++,_("Grid ID"),MP_INFO(x,y).int_6);
+    mps_store_sd(i++, _("Grid ID"), MP_INFO(x, y).int_6);
 }

Modified: trunk/src/lincity/modules/power_line.h
===================================================================
--- trunk/src/lincity/modules/power_line.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/power_line.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __power_line_h__
 
 void do_power_line(int x, int y);
-void mps_power_line (int x, int y);
+void mps_power_line(int x, int y);
 
 #endif /* __power_line_h__ */

Modified: trunk/src/lincity/modules/rail.cpp
===================================================================
--- trunk/src/lincity/modules/rail.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/rail.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -21,48 +21,38 @@
    int_7 contains the amount of waste
   --------------------------------------------------------------------- */
 
-void
-do_rail (int x, int y)
+void do_rail(int x, int y)
 {
     static int wb_count = 0;
-    int *pol = &MP_POL(x,y);
-    Map_Point_Info *minfo = &MP_INFO(x,y);
+    int *pol = &MP_POL(x, y);
+    Map_Point_Info *minfo = &MP_INFO(x, y);
     transport_cost += 3;
     if (total_time % DAYS_PER_RAIL_POLLUTION == 0)
-	*pol += RAIL_POLLUTION;
+        *pol += RAIL_POLLUTION;
     if ((total_time & RAIL_GOODS_USED_MASK) == 0 && minfo->int_4 > 0) {
-	--minfo->int_4;
-	++minfo->int_7;
+        --minfo->int_4;
+        ++minfo->int_7;
     }
     if ((total_time & RAIL_STEEL_USED_MASK) == 0 && minfo->int_6 > 0) {
-	--minfo->int_6;
-	++minfo->int_7;
+        --minfo->int_6;
+        ++minfo->int_7;
     }
-    general_transport (minfo, pol, MAX_WASTE_ON_RAIL, &wb_count);
+    general_transport(minfo, pol, MAX_WASTE_ON_RAIL, &wb_count);
 }
 
-
-void
-mps_rail (int x, int y)
+void mps_rail(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Rail"));
-  i++;
+    mps_store_title(i++, _("Rail"));
+    i++;
 
-  mps_store_sfp(i++,_("Food"), 
-		MP_INFO(x,y).int_1 * 100.0 / MAX_FOOD_ON_RAIL);
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_2 * 100.0 / MAX_JOBS_ON_RAIL);
-  mps_store_sfp(i++,_("Coal"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_ON_RAIL);
-  mps_store_sfp(i++,_("Goods"), 
-		MP_INFO(x,y).int_4 * 100.0 / MAX_GOODS_ON_RAIL);
-  mps_store_sfp(i++,_("Ore"), 
-		MP_INFO(x,y).int_5 * 100.0 / MAX_ORE_ON_RAIL);
-  mps_store_sfp(i++,_("Steel"), 
-		MP_INFO(x,y).int_6 * 100.0 / MAX_STEEL_ON_RAIL);
-  mps_store_sfp(i++,_("Waste"), 
-		MP_INFO(x,y).int_7 * 100.0 / MAX_WASTE_ON_RAIL);
+    mps_store_sfp(i++, _("Food"), MP_INFO(x, y).int_1 * 100.0 / MAX_FOOD_ON_RAIL);
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_2 * 100.0 / MAX_JOBS_ON_RAIL);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_ON_RAIL);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_4 * 100.0 / MAX_GOODS_ON_RAIL);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_5 * 100.0 / MAX_ORE_ON_RAIL);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_6 * 100.0 / MAX_STEEL_ON_RAIL);
+    mps_store_sfp(i++, _("Waste"), MP_INFO(x, y).int_7 * 100.0 / MAX_WASTE_ON_RAIL);
 
 }

Modified: trunk/src/lincity/modules/recycle.cpp
===================================================================
--- trunk/src/lincity/modules/recycle.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/recycle.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,180 +8,145 @@
 #include "modules.h"
 #include "recycle.h"
 
-void
-do_recycle (int x, int y)
+void do_recycle(int x, int y)
 {
-  int i;
-  /*
-     // int_1 is the ore made and waiting to go out
-     // int_2 is the used goods in store
-     // int_3 is the used steel in store       NOT USED at this time
-     // int_4 is the tech level when built
-     // int_5 is the recycling done so far this month
-     // int_6 is the percent of max recycling last month
-     // int_7 is the waste in store
-     // cost
-   */
-  recycle_cost += RECYCLE_RUNNING_COST;
+    int i;
+    /*
+       // int_1 is the ore made and waiting to go out
+       // int_2 is the used goods in store
+       // int_3 is the used steel in store       NOT USED at this time
+       // int_4 is the tech level when built
+       // int_5 is the recycling done so far this month
+       // int_6 is the percent of max recycling last month
+       // int_7 is the waste in store
+       // cost
+     */
+    recycle_cost += RECYCLE_RUNNING_COST;
 
-  /*
-     // let these go through, even if we're full of waste. It's a waste of time
-     // checking.
-   */
-  if (x > 0 && (MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      i = MP_INFO(x - 1,y).int_7;
-      if (i > MAX_WASTE_AT_RECYCLE - MP_INFO(x,y).int_2)
-	i = MAX_WASTE_AT_RECYCLE - MP_INFO(x,y).int_2;
-      MP_INFO(x,y).int_2 += i;
-      MP_INFO(x - 1,y).int_7 -= i;
+    /*
+       // let these go through, even if we're full of waste. It's a waste of time
+       // checking.
+     */
+    if (x > 0 && (MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0) {
+        i = MP_INFO(x - 1, y).int_7;
+        if (i > MAX_WASTE_AT_RECYCLE - MP_INFO(x, y).int_2)
+            i = MAX_WASTE_AT_RECYCLE - MP_INFO(x, y).int_2;
+        MP_INFO(x, y).int_2 += i;
+        MP_INFO(x - 1, y).int_7 -= i;
     }
-  if (y > 0 && (MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      i = MP_INFO(x,y - 1).int_7;
-      if (i > MAX_WASTE_AT_RECYCLE - MP_INFO(x,y).int_2)
-	i = MAX_WASTE_AT_RECYCLE - MP_INFO(x,y).int_2;
-      MP_INFO(x,y).int_2 += i;
-      MP_INFO(x,y - 1).int_7 -= i;
+    if (y > 0 && (MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0) {
+        i = MP_INFO(x, y - 1).int_7;
+        if (i > MAX_WASTE_AT_RECYCLE - MP_INFO(x, y).int_2)
+            i = MAX_WASTE_AT_RECYCLE - MP_INFO(x, y).int_2;
+        MP_INFO(x, y).int_2 += i;
+        MP_INFO(x, y - 1).int_7 -= i;
     }
 
-  /* get some startup power if not powered yet */
-  if ((MP_INFO(x,y).flags & FLAG_POWERED) == 0)
-    if (get_power (x, y, GOODS_RECYCLED, 1) != 0)
-      MP_INFO(x,y).flags |= FLAG_POWERED;
+    /* get some startup power if not powered yet */
+    if ((MP_INFO(x, y).flags & FLAG_POWERED) == 0)
+        if (get_power(x, y, GOODS_RECYCLED, 1) != 0)
+            MP_INFO(x, y).flags |= FLAG_POWERED;
 
-  /* no steel recycling yet - no point, it's only used to make goods.
-     // recycle to ore.
-   */
-  if (MP_INFO(x,y).int_1 < MAX_ORE_AT_RECYCLE
-      && MP_INFO(x,y).int_2 > GOODS_RECYCLED
-      && (MP_INFO(x,y).flags & FLAG_POWERED) != 0)
-    if (get_jobs (x, y, RECYCLE_GOODS_JOBS) != 0)
-      {
-	if (get_power (x, y, GOODS_RECYCLED / 2, 1) == 0)
-	  MP_INFO(x,y).flags
-	    &= (0xffffffff - FLAG_POWERED);
-	else
-	  MP_INFO(x,y).flags |= FLAG_POWERED;
-	MP_INFO(x,y).int_2 -= GOODS_RECYCLED;
-	i = (GOODS_RECYCLED * (10 + ((50 * MP_INFO(x,y).int_4)
-				     / MAX_TECH_LEVEL))) / 100;
-	if (i > (GOODS_RECYCLED * 8) / 10)
-	  i = (GOODS_RECYCLED * 8) / 10;
-	MP_INFO(x,y).int_1 += i;
-	ore_made += i;
-	MP_INFO(x,y).int_5++;
-      }
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_6 = MP_INFO(x,y).int_5;
-      MP_INFO(x,y).int_5 = 0;
+    /* no steel recycling yet - no point, it's only used to make goods.
+       // recycle to ore.
+     */
+    if (MP_INFO(x, y).int_1 < MAX_ORE_AT_RECYCLE
+        && MP_INFO(x, y).int_2 > GOODS_RECYCLED && (MP_INFO(x, y).flags & FLAG_POWERED) != 0)
+        if (get_jobs(x, y, RECYCLE_GOODS_JOBS) != 0) {
+            if (get_power(x, y, GOODS_RECYCLED / 2, 1) == 0)
+                MP_INFO(x, y).flags &= (0xffffffff - FLAG_POWERED);
+            else
+                MP_INFO(x, y).flags |= FLAG_POWERED;
+            MP_INFO(x, y).int_2 -= GOODS_RECYCLED;
+            i = (GOODS_RECYCLED * (10 + ((50 * MP_INFO(x, y).int_4)
+                                         / MAX_TECH_LEVEL))) / 100;
+            if (i > (GOODS_RECYCLED * 8) / 10)
+                i = (GOODS_RECYCLED * 8) / 10;
+            MP_INFO(x, y).int_1 += i;
+            ore_made += i;
+            MP_INFO(x, y).int_5++;
+        }
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_6 = MP_INFO(x, y).int_5;
+        MP_INFO(x, y).int_5 = 0;
     }
-  /* now bung the ore out */
-  /* put it on the railway */
-  if (x > 0 && MP_GROUP(x-1,y) == GROUP_RAIL
-      && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_RAIL
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_RAIL
-				  - MP_INFO(x - 1,y).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_RAIL - MP_INFO(x - 1,y).int_5);
-	  MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_RAIL;
-	}
+    /* now bung the ore out */
+    /* put it on the railway */
+    if (x > 0 && MP_GROUP(x - 1, y) == GROUP_RAIL
+        && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_RAIL
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_RAIL - MP_INFO(x - 1, y).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_RAIL - MP_INFO(x - 1, y).int_5);
+            MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_RAIL;
+        }
     }
-  if (y > 0 && MP_GROUP(x,y-1) == GROUP_RAIL
-      && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_RAIL
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_RAIL
-				  - MP_INFO(x,y - 1).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_RAIL - MP_INFO(x,y - 1).int_5);
-	  MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_RAIL;
-	}
+    if (y > 0 && MP_GROUP(x, y - 1) == GROUP_RAIL
+        && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_RAIL
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_RAIL - MP_INFO(x, y - 1).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_RAIL - MP_INFO(x, y - 1).int_5);
+            MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_RAIL;
+        }
     }
-  /* put it on the road */
-  if (x > 0 && MP_GROUP(x-1,y) == GROUP_ROAD
-      && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_ROAD
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_ROAD
-				  - MP_INFO(x - 1,y).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_ROAD - MP_INFO(x - 1,y).int_5);
-	  MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_ROAD;
-	}
+    /* put it on the road */
+    if (x > 0 && MP_GROUP(x - 1, y) == GROUP_ROAD
+        && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_ROAD
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_ROAD - MP_INFO(x - 1, y).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_ROAD - MP_INFO(x - 1, y).int_5);
+            MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_ROAD;
+        }
     }
-  if (y > 0 && MP_GROUP(x,y-1) == GROUP_ROAD
-      && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_ROAD
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_ROAD
-				  - MP_INFO(x,y - 1).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_ROAD - MP_INFO(x,y - 1).int_5);
-	  MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_ROAD;
-	}
+    if (y > 0 && MP_GROUP(x, y - 1) == GROUP_ROAD
+        && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_ROAD
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_ROAD - MP_INFO(x, y - 1).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_ROAD - MP_INFO(x, y - 1).int_5);
+            MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_ROAD;
+        }
     }
-  /* put it on the tracks */
-  if (x > 0 && MP_GROUP(x-1,y) == GROUP_TRACK
-      && MP_INFO(x - 1,y).int_5 < MAX_ORE_ON_TRACK
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_TRACK
-				  - MP_INFO(x - 1,y).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_TRACK - MP_INFO(x - 1,y).int_5);
-	  MP_INFO(x - 1,y).int_5 = MAX_ORE_ON_TRACK;
-	}
+    /* put it on the tracks */
+    if (x > 0 && MP_GROUP(x - 1, y) == GROUP_TRACK
+        && MP_INFO(x - 1, y).int_5 < MAX_ORE_ON_TRACK
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_TRACK - MP_INFO(x - 1, y).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_TRACK - MP_INFO(x - 1, y).int_5);
+            MP_INFO(x - 1, y).int_5 = MAX_ORE_ON_TRACK;
+        }
     }
-  if (y > 0 && MP_GROUP(x,y-1) == GROUP_TRACK
-      && MP_INFO(x,y - 1).int_5 < MAX_ORE_ON_TRACK
-      && MP_INFO(x,y).int_1 >= (MAX_ORE_ON_TRACK
-				  - MP_INFO(x,y - 1).int_5))
-    {
-      if (get_jobs (x, y, JOBS_LOAD_ORE) != 0)
-	{
-	  MP_INFO(x,y).int_1
-	    -= (MAX_ORE_ON_TRACK - MP_INFO(x,y - 1).int_5);
-	  MP_INFO(x,y - 1).int_5 = MAX_ORE_ON_TRACK;
-	}
+    if (y > 0 && MP_GROUP(x, y - 1) == GROUP_TRACK
+        && MP_INFO(x, y - 1).int_5 < MAX_ORE_ON_TRACK
+        && MP_INFO(x, y).int_1 >= (MAX_ORE_ON_TRACK - MP_INFO(x, y - 1).int_5)) {
+        if (get_jobs(x, y, JOBS_LOAD_ORE) != 0) {
+            MP_INFO(x, y).int_1 -= (MAX_ORE_ON_TRACK - MP_INFO(x, y - 1).int_5);
+            MP_INFO(x, y - 1).int_5 = MAX_ORE_ON_TRACK;
+        }
     }
-  /* if we've still got >90% ore and waste in stock, burn some waste cleanly. 
-   */
-  if (MP_INFO(x,y).int_1 > (MAX_ORE_AT_RECYCLE * 9 / 10)
-      && MP_INFO(x,y).int_2 > (MAX_WASTE_AT_RECYCLE * 9 / 10))
-    MP_INFO(x,y).int_2 -= BURN_WASTE_AT_RECYCLE;
+    /* if we've still got >90% ore and waste in stock, burn some waste cleanly. 
+     */
+    if (MP_INFO(x, y).int_1 > (MAX_ORE_AT_RECYCLE * 9 / 10)
+        && MP_INFO(x, y).int_2 > (MAX_WASTE_AT_RECYCLE * 9 / 10))
+        MP_INFO(x, y).int_2 -= BURN_WASTE_AT_RECYCLE;
 }
 
-void
-mps_recycle (int x, int y)
+void mps_recycle(int x, int y)
 {
-  int i = 0;
-  const char * p;
+    int i = 0;
+    const char *p;
 
-  mps_store_title(i++,_("Recycling"));
-  mps_store_title(i++,_("Center"));
-  i++;
+    mps_store_title(i++, _("Recycling"));
+    mps_store_title(i++, _("Center"));
+    i++;
 
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_6);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_6);
 
-  p = ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
-  mps_store_ss(i++,_("Power"),p);
+    p = ((MP_INFO(x, y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
+    mps_store_ss(i++, _("Power"), p);
 
-  mps_store_sfp(i++,_("Tech"),
-		MP_INFO(x,y).int_4 * 100.0 / MAX_TECH_LEVEL);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Ore"),
-		MP_INFO(x,y).int_1 * 100.0 / MAX_ORE_AT_RECYCLE);
-  mps_store_sfp(i++,_("Waste"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_WASTE_AT_RECYCLE);
+    mps_store_sfp(i++, _("Tech"), MP_INFO(x, y).int_4 * 100.0 / MAX_TECH_LEVEL);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_1 * 100.0 / MAX_ORE_AT_RECYCLE);
+    mps_store_sfp(i++, _("Waste"), MP_INFO(x, y).int_2 * 100.0 / MAX_WASTE_AT_RECYCLE);
 
 }

Modified: trunk/src/lincity/modules/recycle.h
===================================================================
--- trunk/src/lincity/modules/recycle.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/recycle.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __recycle_h__
 
 void do_recycle(int x, int y);
-void mps_recycle (int x, int y);
+void mps_recycle(int x, int y);
 
 #endif /* __recycle_h__ */

Modified: trunk/src/lincity/modules/residence.cpp
===================================================================
--- trunk/src/lincity/modules/residence.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/residence.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,308 +10,273 @@
 #include "waterwell.h"
 #include <stdlib.h>
 
-void
-do_residence (int x, int y)
+void do_residence(int x, int y)
 {
     /*
-      // int_1 is a job swingometer to choose +/- JOB_SWING% of normal
-      // int_2 is the date of the last starve
-      // int 3 is the real time for the next icon update
-      // int_4 is the birth rate modifier.
-      // int_5 is the death rate modifier.
-      // int_6 unused
-      // int_7 unused Could be FLAG_HAD_POWER which is specific to residences, and will free 1 flag.
-      //                btw, FLAG_POWERED and FLAG_GOT_POWER means the same thing. => free 1 more flag.
-      //
-      */
-    int p;                           /* population */
-    int bad = 35, good = 30;         /* (un)desirability of living here */
+       // int_1 is a job swingometer to choose +/- JOB_SWING% of normal
+       // int_2 is the date of the last starve
+       // int 3 is the real time for the next icon update
+       // int_4 is the birth rate modifier.
+       // int_5 is the death rate modifier.
+       // int_6 unused
+       // int_7 unused Could be FLAG_HAD_POWER which is specific to residences, and will free 1 flag.
+       //                btw, FLAG_POWERED and FLAG_GOT_POWER means the same thing. => free 1 more flag.
+       //
+     */
+    int p;                      /* population */
+    int bad = 35, good = 30;    /* (un)desirability of living here */
     int r, po, swing;
-    int hc = 0;                      /* have health cover ? */
-    int brm = 0, drm = 0;            /* birth/death rate modifier */
+    int hc = 0;                 /* have health cover ? */
+    int brm = 0, drm = 0;       /* birth/death rate modifier */
     int cc = 0;
-    int birth_flag=0;
+    int birth_flag = 0;
 
-    p = MP_INFO(x,y).population;
-    if ((MP_INFO(x,y).flags & FLAG_HEALTH_COVER) != 0)
-    {
-	brm += RESIDENCE_BRM_HEALTH;
-	good += 15;
-	hc = 1;
+    p = MP_INFO(x, y).population;
+    if ((MP_INFO(x, y).flags & FLAG_HEALTH_COVER) != 0) {
+        brm += RESIDENCE_BRM_HEALTH;
+        good += 15;
+        hc = 1;
     }
-    if ((MP_INFO(x,y).flags & FLAG_FIRE_COVER) == 0)
-	bad += 5;
+    if ((MP_INFO(x, y).flags & FLAG_FIRE_COVER) == 0)
+        bad += 5;
     else
-	good += 15;
-    if ((MP_INFO(x,y).flags & FLAG_CRICKET_COVER) != 0)
-    {
-	good += 20;
-	cc = CRICKET_JOB_SWING;
+        good += 15;
+    if ((MP_INFO(x, y).flags & FLAG_CRICKET_COVER) != 0) {
+        good += 20;
+        cc = CRICKET_JOB_SWING;
     }
     /* normal deaths + pollution deaths */
-    po = ((MP_POL(x,y) / 50) + 1);
-    if ((RESIDENCE_BASE_DR - MP_INFO(x,y).int_5 - po) > 1)
-	r = rand () % (RESIDENCE_BASE_DR - MP_INFO(x,y).int_5 - po);
+    po = ((MP_POL(x, y) / 50) + 1);
+    if ((RESIDENCE_BASE_DR - MP_INFO(x, y).int_5 - po) > 1)
+        r = rand() % (RESIDENCE_BASE_DR - MP_INFO(x, y).int_5 - po);
     else
-	r = 2;
-    if (p > 0 && (r < po))
-    {
-	if (r == 0 || hc == 0)
-	    p--;
-	else if (hc != 0 && po > 10 && rand () % 4 == 0)
-	{
-	    p--;
-	    unnat_deaths++;
-	    total_pollution_deaths++;
-	    pollution_deaths_history += 1.0;
-	    bad += 100;
-	}
-	if (r > 0 && hc == 0)
-	{
-	    unnat_deaths++;
-	    total_pollution_deaths++;
-	    pollution_deaths_history += 1.0;
-	    bad += 100;
-	}
+        r = 2;
+    if (p > 0 && (r < po)) {
+        if (r == 0 || hc == 0)
+            p--;
+        else if (hc != 0 && po > 10 && rand() % 4 == 0) {
+            p--;
+            unnat_deaths++;
+            total_pollution_deaths++;
+            pollution_deaths_history += 1.0;
+            bad += 100;
+        }
+        if (r > 0 && hc == 0) {
+            unnat_deaths++;
+            total_pollution_deaths++;
+            pollution_deaths_history += 1.0;
+            bad += 100;
+        }
     }
     /* normal births - must have food, water and jobs... and people */
-    if (use_waterwell) 
+    if (use_waterwell)
         birth_flag = FLAG_FED + FLAG_WATERWELL_COVER + FLAG_EMPLOYED;
     else
         birth_flag = FLAG_FED + FLAG_EMPLOYED;
 
-    if (((MP_INFO(x,y).flags & birth_flag) == birth_flag)
-	&& (rand () % (RESIDENCE_BASE_BR + MP_INFO(x,y).int_4) == 1) 
-	&& (p > 0))
-    {
+    if (((MP_INFO(x, y).flags & birth_flag) == birth_flag)
+        && (rand() % (RESIDENCE_BASE_BR + MP_INFO(x, y).int_4) == 1)
+        && (p > 0)) {
 #ifdef DEBUG_WATERWELL
-    	fprintf(stderr," birth ok, we are fed. use_waterwell= %i\n",use_waterwell);
+        fprintf(stderr, " birth ok, we are fed. use_waterwell= %i\n", use_waterwell);
 #endif
-	p++;
-	total_births++;
-	good += 50;
+        p++;
+        total_births++;
+        good += 50;
     }
     /* are people starving or lacking water ? */
-    if ( ((MP_INFO(x,y).flags & FLAG_FED) == 0)
-		| (use_waterwell & (MP_INFO(x,y).flags & FLAG_WATERWELL_COVER) == 0) 
-		&& p > 0)
-    {
+    if (((MP_INFO(x, y).flags & FLAG_FED) == 0)
+        | (use_waterwell & (MP_INFO(x, y).flags & FLAG_WATERWELL_COVER) == 0)
+        && p > 0) {
 #ifdef DEBUG_WATERWELL
-    	fprintf(stderr," hey, we are dying: lack of food or water!, use_waterwell=%i\n",use_waterwell);
+        fprintf(stderr, " hey, we are dying: lack of food or water!, use_waterwell=%i\n", use_waterwell);
 #endif
-	if (rand () % DAYS_PER_STARVE == 1)
-	{
-	    p--;
-	    unnat_deaths++;
-	    total_starve_deaths++;
-	    starve_deaths_history += 1.0;
-	}
-	starving_population += p;
-	bad += 250;
-	drm += 100;
-	MP_INFO(x,y).int_2 = total_time;	/* for the starve screen */
+        if (rand() % DAYS_PER_STARVE == 1) {
+            p--;
+            unnat_deaths++;
+            total_starve_deaths++;
+            starve_deaths_history += 1.0;
+        }
+        starving_population += p;
+        bad += 250;
+        drm += 100;
+        MP_INFO(x, y).int_2 = total_time;       /* for the starve screen */
     }
     /* kick one out if overpopulated */
-    if (MP_TYPE(x,y) == CST_RESIDENCE_LL)
-    {
-	brm += RESIDENCE1_BRM;
-	drm += p * 8;
-	if (p > 50)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 20;
-	}
+    if (MP_TYPE(x, y) == CST_RESIDENCE_LL) {
+        brm += RESIDENCE1_BRM;
+        drm += p * 8;
+        if (p > 50) {
+            p--;
+            people_pool++;
+            brm += 20;
+        }
+    } else if (MP_TYPE(x, y) == CST_RESIDENCE_ML) {
+        brm += RESIDENCE2_BRM;
+        drm += p * 3;
+        if (p > 100) {
+            p--;
+            people_pool++;
+            brm += 10;
+        }
+    } else if (MP_TYPE(x, y) == CST_RESIDENCE_HL) {
+        brm += RESIDENCE3_BRM;
+        drm += p;
+        good += 40;
+        if (p > 200) {
+            p--;
+            people_pool++;
+            brm += 10;
+        }
+    } else if (MP_TYPE(x, y) == CST_RESIDENCE_LH) {
+        brm += RESIDENCE4_BRM;
+        drm += p * 5;
+        if (p > 100) {
+            p--;
+            people_pool++;
+            brm += 20;
+        }
+    } else if (MP_TYPE(x, y) == CST_RESIDENCE_MH) {
+        brm += RESIDENCE5_BRM;
+        drm += p / 2;
+        if (p > 200) {
+            p--;
+            people_pool++;
+            brm += 10;
+        }
+    } else if (MP_TYPE(x, y) == CST_RESIDENCE_HH) {
+        good += 100;
+        brm += RESIDENCE6_BRM;
+        drm += p;
+        if (p > 400) {
+            p--;
+            people_pool++;
+            brm += 10;
+        }
     }
-    else if (MP_TYPE(x,y) == CST_RESIDENCE_ML)
-    {
-	brm += RESIDENCE2_BRM;
-	drm += p * 3;
-	if (p > 100)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 10;
-	}
-    }
-    else if (MP_TYPE(x,y) == CST_RESIDENCE_HL)
-    {
-	brm += RESIDENCE3_BRM;
-	drm += p;
-	good += 40;
-	if (p > 200)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 10;
-	}
-    }
-    else if (MP_TYPE(x,y) == CST_RESIDENCE_LH)
-    {
-	brm += RESIDENCE4_BRM;
-	drm += p * 5;
-	if (p > 100)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 20;
-	}
-    }
-    else if (MP_TYPE(x,y) == CST_RESIDENCE_MH)
-    {
-	brm += RESIDENCE5_BRM;
-	drm += p / 2;
-	if (p > 200)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 10;
-	}
-    }
-    else if (MP_TYPE(x,y) == CST_RESIDENCE_HH)
-    {
-	good += 100;
-	brm += RESIDENCE6_BRM;
-	drm += p;
-	if (p > 400)
-	{
-	    p--;
-	    people_pool++;
-	    brm += 10;
-	}
-    }
 
     /* XXX AL1: this is daily accumulator used stats.cpp, and maybe pop graph */
-    population += p; 
+    population += p;
 
     /* now get power */
-    if (get_power (x, y, POWER_RES_OVERHEAD
-		   + (POWER_USE_PER_PERSON * p), 0) != 0)
-    {
-	MP_INFO(x,y).flags |= FLAG_POWERED;
-	MP_INFO(x,y).flags |= FLAG_HAD_POWER;
-	good += 10;
+    if (get_power(x, y, POWER_RES_OVERHEAD + (POWER_USE_PER_PERSON * p), 0) != 0) {
+        MP_INFO(x, y).flags |= FLAG_POWERED;
+        MP_INFO(x, y).flags |= FLAG_HAD_POWER;
+        good += 10;
+    } else {
+        MP_INFO(x, y).flags &= (0xffffffff - FLAG_POWERED);
+        bad += 15;
+        if ((MP_INFO(x, y).flags & FLAG_HAD_POWER) != 0)
+            bad += 50;
     }
-    else
-    {
-	MP_INFO(x,y).flags &= (0xffffffff - FLAG_POWERED);
-	bad += 15;
-	if ((MP_INFO(x,y).flags & FLAG_HAD_POWER) != 0)
-	    bad += 50;
-    }
-    /* now get fed */  /* AL1: should be done earlier, before check for starvation */
-    if (get_food (x, y, p) != 0)
-    {
-	MP_INFO(x,y).flags |= FLAG_FED;
-	good += 10;
-    }
-    else
-	MP_INFO(x,y).flags &= (0xffffffff - FLAG_FED);
+    /* now get fed *//* AL1: should be done earlier, before check for starvation */
+    if (get_food(x, y, p) != 0) {
+        MP_INFO(x, y).flags |= FLAG_FED;
+        good += 10;
+    } else
+        MP_INFO(x, y).flags &= (0xffffffff - FLAG_FED);
 
     /* now supply jobs and buy goods if employed */
-    if (MP_INFO(x,y).int_1 > 0)
-	swing = JOB_SWING + (hc * HC_JOB_SWING) + cc;
+    if (MP_INFO(x, y).int_1 > 0)
+        swing = JOB_SWING + (hc * HC_JOB_SWING) + cc;
     else
-	swing = -(JOB_SWING + (hc * HC_JOB_SWING) + cc);
+        swing = -(JOB_SWING + (hc * HC_JOB_SWING) + cc);
 
-    if (put_jobs (x, y, ((p * (WORKING_POP_PERCENT + swing)) / 100)) != 0) {
-	MP_INFO(x,y).flags |= FLAG_EMPLOYED;
-	MP_INFO(x,y).int_1++;
-	if (MP_INFO(x,y).int_1 > 10)
-	    MP_INFO(x,y).int_1 = 10;
-	good += 20;
-	if (get_goods (x, y, p / 4) != 0) {
-	    good += 10;
-	    if (get_power (x, y, p / 2, 0) != 0) {
-		good += 5;
-		brm += 10;
-		/*     buy more goods if got power for them */
-		if (get_goods (x, y, p / 4) != 0)
-		    good += 5;
-	    } else
-		bad += 5;
-	}
-    } else if (MP_INFO(x,y).int_1 < 10) {
-	MP_INFO(x,y).flags &= (0xffffffff - FLAG_EMPLOYED);
-	MP_INFO(x,y).int_1 -= 11;
-	if (MP_INFO(x,y).int_1 < -300)
-	    MP_INFO(x,y).int_1 = -300;
-	unemployed_population += p;
-	total_unemployed_days += p;
-	if (total_unemployed_days >= NUMOF_DAYS_IN_YEAR)
-	{
-	    total_unemployed_years++;
-	    /* think we're ok doing this, max of about 120 added each time. */
-	    total_unemployed_days -= NUMOF_DAYS_IN_YEAR;
-	    unemployed_history += 1.0;
-	}
-	unemployment_cost += p;	/* hmmm */
-	bad += 70;
+    if (put_jobs(x, y, ((p * (WORKING_POP_PERCENT + swing)) / 100)) != 0) {
+        MP_INFO(x, y).flags |= FLAG_EMPLOYED;
+        MP_INFO(x, y).int_1++;
+        if (MP_INFO(x, y).int_1 > 10)
+            MP_INFO(x, y).int_1 = 10;
+        good += 20;
+        if (get_goods(x, y, p / 4) != 0) {
+            good += 10;
+            if (get_power(x, y, p / 2, 0) != 0) {
+                good += 5;
+                brm += 10;
+                /*     buy more goods if got power for them */
+                if (get_goods(x, y, p / 4) != 0)
+                    good += 5;
+            } else
+                bad += 5;
+        }
+    } else if (MP_INFO(x, y).int_1 < 10) {
+        MP_INFO(x, y).flags &= (0xffffffff - FLAG_EMPLOYED);
+        MP_INFO(x, y).int_1 -= 11;
+        if (MP_INFO(x, y).int_1 < -300)
+            MP_INFO(x, y).int_1 = -300;
+        unemployed_population += p;
+        total_unemployed_days += p;
+        if (total_unemployed_days >= NUMOF_DAYS_IN_YEAR) {
+            total_unemployed_years++;
+            /* think we're ok doing this, max of about 120 added each time. */
+            total_unemployed_days -= NUMOF_DAYS_IN_YEAR;
+            unemployed_history += 1.0;
+        }
+        unemployment_cost += p; /* hmmm */
+        bad += 70;
     } else {
-	MP_INFO(x,y).int_1 -= 20;
-	bad += 50;
+        MP_INFO(x, y).int_1 -= 20;
+        bad += 50;
     }
     drm += p / 4;
     /* people_pool stuff */
     bad += p / 2;
-    bad += MP_POL(x,y) / 20;
+    bad += MP_POL(x, y) / 20;
     good += people_pool / 27;
-    r = rand () % ((good + bad) * RESIDENCE_PPM);
+    r = rand() % ((good + bad) * RESIDENCE_PPM);
     if (r < bad) {
-	if (p > MIN_RES_POPULATION) {
-	    p--;
-	    people_pool++;
-	}
-    } else if (people_pool > 0
-            &&  (MP_INFO(x,y).flags & FLAG_FED) != 0  /* No newcomer gets in when there is starvation */
-            && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad)) /* r > (rmax - good) */ {
+        if (p > MIN_RES_POPULATION) {
+            p--;
+            people_pool++;
+        }
+    } else if (people_pool > 0 && (MP_INFO(x, y).flags & FLAG_FED) != 0 /* No newcomer gets in when there is starvation */
+               && r > ((good + bad) * (RESIDENCE_PPM - 1) + bad)) {     /* r > (rmax - good) */
         p++;
         people_pool--;
     }
-    MP_INFO(x,y).population = p;
-    MP_INFO(x,y).int_4 = brm;
-    MP_INFO(x,y).int_5 = drm;
+    MP_INFO(x, y).population = p;
+    MP_INFO(x, y).int_4 = brm;
+    MP_INFO(x, y).int_5 = drm;
 }
 
-void
-mps_residence (int x, int y)
+void mps_residence(int x, int y)
 {
     int i = 0;
-    const char * p;
+    const char *p;
 
-    mps_store_title(i++,_("Residence"));
+    mps_store_title(i++, _("Residence"));
 
     i++;
 
-    mps_store_sd(i++,_("People"), MP_INFO(x,y).population);
+    mps_store_sd(i++, _("People"), MP_INFO(x, y).population);
 
     if (use_waterwell) {
-        p = ((MP_INFO(x,y).flags & FLAG_WATERWELL_COVER) != 0) 
-                 ? _("YES") : _("NO");
+        p = ((MP_INFO(x, y).flags & FLAG_WATERWELL_COVER) != 0)
+            ? _("YES") : _("NO");
         mps_store_ss(i++, _("Water"), p);
     }
 
-    p = ((MP_INFO(x,y).flags & FLAG_FED) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_FED) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Fed"), p);
 
-    p = ((MP_INFO(x,y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_POWERED) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Power"), p);
 
-    p = ((MP_INFO(x,y).flags & FLAG_EMPLOYED) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_EMPLOYED) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Employed"), p);
 
-    p = (MP_INFO(x,y).int_1 >= 10) ? _("good") : _("poor");
+    p = (MP_INFO(x, y).int_1 >= 10) ? _("good") : _("poor");
     mps_store_ss(i++, _("Job"), p);
 
-    p = ((MP_INFO(x,y).flags & FLAG_HEALTH_COVER) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_HEALTH_COVER) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Health Cvr"), p);
 
-    p = ((MP_INFO(x,y).flags & FLAG_FIRE_COVER) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_FIRE_COVER) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Fire"), p);
 
-    p = ((MP_INFO(x,y).flags & FLAG_CRICKET_COVER) != 0) ? _("YES") : _("NO");
+    p = ((MP_INFO(x, y).flags & FLAG_CRICKET_COVER) != 0) ? _("YES") : _("NO");
     mps_store_ss(i++, _("Sport"), p);
 
-    mps_store_sd(i++, _("Pollution"), MP_POL(x,y));
+    mps_store_sd(i++, _("Pollution"), MP_POL(x, y));
 
 }

Modified: trunk/src/lincity/modules/road.cpp
===================================================================
--- trunk/src/lincity/modules/road.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/road.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -21,45 +21,34 @@
    int_7 contains the amount of waste
   --------------------------------------------------------------------- */
 
-
-
-void
-do_road (int x, int y)
+void do_road(int x, int y)
 {
     static int wb_count = 0;
-    int *pol = &MP_POL(x,y);
-    Map_Point_Info *minfo = &MP_INFO(x,y);
+    int *pol = &MP_POL(x, y);
+    Map_Point_Info *minfo = &MP_INFO(x, y);
     ++transport_cost;
     if (total_time % DAYS_PER_ROAD_POLLUTION == 0)
-	*pol += ROAD_POLLUTION;
+        *pol += ROAD_POLLUTION;
     if ((total_time & ROAD_GOODS_USED_MASK) == 0 && minfo->int_4 > 0) {
-	--minfo->int_4;
-	++minfo->int_7;
+        --minfo->int_4;
+        ++minfo->int_7;
     }
-    general_transport (minfo, pol, MAX_WASTE_ON_ROAD, &wb_count);
+    general_transport(minfo, pol, MAX_WASTE_ON_ROAD, &wb_count);
 }
 
-void
-mps_road (int x, int y)
+void mps_road(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Road"));
-  i++;
+    mps_store_title(i++, _("Road"));
+    i++;
 
-  mps_store_sfp(i++,_("Food"), 
-		MP_INFO(x,y).int_1 * 100.0 / MAX_FOOD_ON_ROAD);
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_2 * 100.0 / MAX_JOBS_ON_ROAD);
-  mps_store_sfp(i++,_("Coal"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_ON_ROAD);
-  mps_store_sfp(i++,_("Goods"), 
-		MP_INFO(x,y).int_4 * 100.0 / MAX_GOODS_ON_ROAD);
-  mps_store_sfp(i++,_("Ore"), 
-		MP_INFO(x,y).int_5 * 100.0 / MAX_ORE_ON_ROAD);
-  mps_store_sfp(i++,_("Steel"), 
-		MP_INFO(x,y).int_6 * 100.0 / MAX_STEEL_ON_ROAD);
-  mps_store_sfp(i++,_("Waste"), 
-		MP_INFO(x,y).int_7 * 100.0 / MAX_WASTE_ON_ROAD);
+    mps_store_sfp(i++, _("Food"), MP_INFO(x, y).int_1 * 100.0 / MAX_FOOD_ON_ROAD);
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_2 * 100.0 / MAX_JOBS_ON_ROAD);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_ON_ROAD);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_4 * 100.0 / MAX_GOODS_ON_ROAD);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_5 * 100.0 / MAX_ORE_ON_ROAD);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_6 * 100.0 / MAX_STEEL_ON_ROAD);
+    mps_store_sfp(i++, _("Waste"), MP_INFO(x, y).int_7 * 100.0 / MAX_WASTE_ON_ROAD);
 
 }

Modified: trunk/src/lincity/modules/rocket_pad.cpp
===================================================================
--- trunk/src/lincity/modules/rocket_pad.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/rocket_pad.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -14,240 +14,222 @@
 
 #include <stdlib.h>
 
-void
-do_rocket_pad (int x, int y)
+void do_rocket_pad(int x, int y)
 {
     /*
-      // You need ROCKET_PAD_JOBS, ROCKET_PAD_GOODS and ROCKET_PAD_STEEL 
-      // to add 1 to % of ready to fire.
-      // int_1 is the stored jobs
-      // int_2 is the stored goods
-      // int_3 is the stored steel
-      // int_4 is the count which gets to ROCKET_PAD_LAUNCH to fire.
-      // int_5 is the time of the next animation frame, when waiting for launch.
-      */
-    if (MP_TYPE(x,y) == CST_ROCKET_FLOWN)
-	return;			/* The rocket has been launched. */
+       // You need ROCKET_PAD_JOBS, ROCKET_PAD_GOODS and ROCKET_PAD_STEEL 
+       // to add 1 to % of ready to fire.
+       // int_1 is the stored jobs
+       // int_2 is the stored goods
+       // int_3 is the stored steel
+       // int_4 is the count which gets to ROCKET_PAD_LAUNCH to fire.
+       // int_5 is the time of the next animation frame, when waiting for launch.
+     */
+    if (MP_TYPE(x, y) == CST_ROCKET_FLOWN)
+        return;                 /* The rocket has been launched. */
 
     /* get some jobs */
-    if (MP_INFO(x,y).int_1 < ROCKET_PAD_JOBS_STORE)
-    {
-	if (get_jobs (x, y, ROCKET_PAD_JOBS + 10) != 0)
-	    MP_INFO(x,y).int_1 += ROCKET_PAD_JOBS;
+    if (MP_INFO(x, y).int_1 < ROCKET_PAD_JOBS_STORE) {
+        if (get_jobs(x, y, ROCKET_PAD_JOBS + 10) != 0)
+            MP_INFO(x, y).int_1 += ROCKET_PAD_JOBS;
     }
     /* get goods */
-    if (MP_INFO(x,y).int_2 < ROCKET_PAD_GOODS_STORE)
-    {
-	if (get_goods (x, y, ROCKET_PAD_GOODS + 10) != 0)
-	    MP_INFO(x,y).int_2 += ROCKET_PAD_GOODS;
-	else if (get_goods (x, y, ROCKET_PAD_GOODS / 10) != 0)
-	    MP_INFO(x,y).int_2 += ROCKET_PAD_GOODS / 5;
-	else if (get_goods (x, y, ROCKET_PAD_GOODS / 50) != 0)
-	    MP_INFO(x,y).int_2 += ROCKET_PAD_GOODS / 20;
+    if (MP_INFO(x, y).int_2 < ROCKET_PAD_GOODS_STORE) {
+        if (get_goods(x, y, ROCKET_PAD_GOODS + 10) != 0)
+            MP_INFO(x, y).int_2 += ROCKET_PAD_GOODS;
+        else if (get_goods(x, y, ROCKET_PAD_GOODS / 10) != 0)
+            MP_INFO(x, y).int_2 += ROCKET_PAD_GOODS / 5;
+        else if (get_goods(x, y, ROCKET_PAD_GOODS / 50) != 0)
+            MP_INFO(x, y).int_2 += ROCKET_PAD_GOODS / 20;
     }
     /* get steel */
-    if (MP_INFO(x,y).int_3 < ROCKET_PAD_STEEL_STORE)
-    {
-	if (get_steel (x, y, ROCKET_PAD_STEEL + 10) != 0)
-	    MP_INFO(x,y).int_3 += ROCKET_PAD_STEEL + 10;
-	else if (get_steel (x, y, ROCKET_PAD_STEEL / 5) != 0)
-	    MP_INFO(x,y).int_3 += ROCKET_PAD_STEEL / 5;
-	else if (get_steel (x, y, ROCKET_PAD_STEEL / 20) != 0)
-	    MP_INFO(x,y).int_3 += ROCKET_PAD_STEEL / 20;
+    if (MP_INFO(x, y).int_3 < ROCKET_PAD_STEEL_STORE) {
+        if (get_steel(x, y, ROCKET_PAD_STEEL + 10) != 0)
+            MP_INFO(x, y).int_3 += ROCKET_PAD_STEEL + 10;
+        else if (get_steel(x, y, ROCKET_PAD_STEEL / 5) != 0)
+            MP_INFO(x, y).int_3 += ROCKET_PAD_STEEL / 5;
+        else if (get_steel(x, y, ROCKET_PAD_STEEL / 20) != 0)
+            MP_INFO(x, y).int_3 += ROCKET_PAD_STEEL / 20;
     }
 #ifdef DEBUG_ROCKETS
-    MP_INFO(x,y).int_4++;
+    MP_INFO(x, y).int_4++;
 #else
     /* now build the rocket.  Unlike uni's need a full store to make +1% */
-    if (MP_TYPE(x,y) < CST_ROCKET_5
-	&& MP_INFO(x,y).int_1 >= ROCKET_PAD_JOBS_STORE
-	&& MP_INFO(x,y).int_2 >= ROCKET_PAD_GOODS_STORE
-	&& MP_INFO(x,y).int_3 >= ROCKET_PAD_STEEL_STORE)
-    {
-	MP_INFO(x,y).int_1 -= ROCKET_PAD_JOBS_STORE;
-	MP_INFO(x,y).int_2 -= ROCKET_PAD_GOODS_STORE;
-	MP_INFO(x,y).int_3 -= ROCKET_PAD_STEEL_STORE;
-	MP_INFO(x,y).int_4++;
-	goods_used += ROCKET_PAD_GOODS_STORE;
+    if (MP_TYPE(x, y) < CST_ROCKET_5
+        && MP_INFO(x, y).int_1 >= ROCKET_PAD_JOBS_STORE
+        && MP_INFO(x, y).int_2 >= ROCKET_PAD_GOODS_STORE && MP_INFO(x, y).int_3 >= ROCKET_PAD_STEEL_STORE) {
+        MP_INFO(x, y).int_1 -= ROCKET_PAD_JOBS_STORE;
+        MP_INFO(x, y).int_2 -= ROCKET_PAD_GOODS_STORE;
+        MP_INFO(x, y).int_3 -= ROCKET_PAD_STEEL_STORE;
+        MP_INFO(x, y).int_4++;
+        goods_used += ROCKET_PAD_GOODS_STORE;
 
     }
 #endif
     rocket_pad_cost += ROCKET_PAD_RUNNING_COST;
     /* animate and return if already said no to launch */
-    if (MP_TYPE(x,y) >= CST_ROCKET_5
-	&& MP_INFO(x,y).int_4 >= (100 * ROCKET_PAD_LAUNCH) / 100)
-    {
-	if (real_time >= MP_INFO(x,y).int_5)
-	{
-	    MP_INFO(x,y).int_5 = real_time + ROCKET_ANIMATION_SPEED;
-	    switch (MP_TYPE(x,y))
-	    {
-	    case (CST_ROCKET_5):
-		MP_TYPE(x,y) = CST_ROCKET_6;
-		break;
-	    case (CST_ROCKET_6):
-		MP_TYPE(x,y) = CST_ROCKET_7;
-		break;
-	    case (CST_ROCKET_7):
-		MP_TYPE(x,y) = CST_ROCKET_5;
-		break;
-	    }
-	}
-	return;
+    if (MP_TYPE(x, y) >= CST_ROCKET_5 && MP_INFO(x, y).int_4 >= (100 * ROCKET_PAD_LAUNCH) / 100) {
+        if (real_time >= MP_INFO(x, y).int_5) {
+            MP_INFO(x, y).int_5 = real_time + ROCKET_ANIMATION_SPEED;
+            switch (MP_TYPE(x, y)) {
+            case (CST_ROCKET_5):
+                MP_TYPE(x, y) = CST_ROCKET_6;
+                break;
+            case (CST_ROCKET_6):
+                MP_TYPE(x, y) = CST_ROCKET_7;
+                break;
+            case (CST_ROCKET_7):
+                MP_TYPE(x, y) = CST_ROCKET_5;
+                break;
+            }
+        }
+        return;
     }
     /* now choose a graphic */
-    if (MP_INFO(x,y).int_4 < (25 * ROCKET_PAD_LAUNCH) / 100)
-	MP_TYPE(x,y) = CST_ROCKET_1;
-    else if (MP_INFO(x,y).int_4 < (60 * ROCKET_PAD_LAUNCH) / 100)
-	MP_TYPE(x,y) = CST_ROCKET_2;
-    else if (MP_INFO(x,y).int_4 < (90 * ROCKET_PAD_LAUNCH) / 100)
-	MP_TYPE(x,y) = CST_ROCKET_3;
-    else if (MP_INFO(x,y).int_4 < (100 * ROCKET_PAD_LAUNCH) / 100)
-	MP_TYPE(x,y) = CST_ROCKET_4;
-    else if (MP_INFO(x,y).int_4 >= (100 * ROCKET_PAD_LAUNCH) / 100) {
-	MP_TYPE(x,y) = CST_ROCKET_5;
-	update_main_screen (0);
-	if (ask_launch_rocket_now (x,y)) {
+    if (MP_INFO(x, y).int_4 < (25 * ROCKET_PAD_LAUNCH) / 100)
+        MP_TYPE(x, y) = CST_ROCKET_1;
+    else if (MP_INFO(x, y).int_4 < (60 * ROCKET_PAD_LAUNCH) / 100)
+        MP_TYPE(x, y) = CST_ROCKET_2;
+    else if (MP_INFO(x, y).int_4 < (90 * ROCKET_PAD_LAUNCH) / 100)
+        MP_TYPE(x, y) = CST_ROCKET_3;
+    else if (MP_INFO(x, y).int_4 < (100 * ROCKET_PAD_LAUNCH) / 100)
+        MP_TYPE(x, y) = CST_ROCKET_4;
+    else if (MP_INFO(x, y).int_4 >= (100 * ROCKET_PAD_LAUNCH) / 100) {
+        MP_TYPE(x, y) = CST_ROCKET_5;
+        update_main_screen(0);
+        if (ask_launch_rocket_now(x, y)) {
             /* ? AL1: in NG 1.1 it seems we are never here ?
              * ? ask_launch_rocket_now  manages everything and call launch_rocket ?
              */
-            launch_rocket (x,y);
-	}
-	/* so we don't get get our money back when we bulldoze. */
-	if (x == last_built_x && y == last_built_y) {
-	    x = 0;
-	    y = 0;
-	}
+            launch_rocket(x, y);
+        }
+        /* so we don't get get our money back when we bulldoze. */
+        if (x == last_built_x && y == last_built_y) {
+            x = 0;
+            y = 0;
+        }
     }
 }
 
-void
-remove_people (int num)
+void remove_people(int num)
 {
 #if defined (commentout)
-  int x, y, f;
-  time_t t;
-  f = 1;
-  t = time (0);
-  while (f && (num > 0)) {
-      for (y = 0; y < WORLD_SIDE_LEN; y++)
-	for (x = 0; x < WORLD_SIDE_LEN; x++)
-	  if (MP_GROUP_IS_RESIDENCE(x,y) && MP_INFO(x,y).population > 0)
-	    {
-	      MP_INFO(x,y).population--;
-	      // f = 1;
-	      f |= (MP_INFO(x,y).population > 0);
-	      num--;
-	      total_evacuated++;
-	    }
-  }
-  while (num > 0 && people_pool > 0) {
-      num--;
-      total_evacuated++;
-      people_pool--;
-  }
+    int x, y, f;
+    time_t t;
+    f = 1;
+    t = time(0);
+    while (f && (num > 0)) {
+        for (y = 0; y < WORLD_SIDE_LEN; y++)
+            for (x = 0; x < WORLD_SIDE_LEN; x++)
+                if (MP_GROUP_IS_RESIDENCE(x, y) && MP_INFO(x, y).population > 0) {
+                    MP_INFO(x, y).population--;
+                    // f = 1;
+                    f |= (MP_INFO(x, y).population > 0);
+                    num--;
+                    total_evacuated++;
+                }
+    }
+    while (num > 0 && people_pool > 0) {
+        num--;
+        total_evacuated++;
+        people_pool--;
+    }
 #endif
 
-  int x, y;
-  /* reset housed population so that we can display it correctly */
-  housed_population = 1;
-  while (housed_population && (num > 0)) {
-      housed_population = 0;
-      for (y = 0; y < WORLD_SIDE_LEN; y++)
-	for (x = 0; x < WORLD_SIDE_LEN; x++)
-	  if (MP_GROUP_IS_RESIDENCE(x,y) && MP_INFO(x,y).population > 0) {
-	      MP_INFO(x,y).population--;
-	      housed_population += MP_INFO(x,y).population;
-	      num--;
-	      total_evacuated++;
-	  }
-  }
-  while (num > 0 && people_pool > 0) {
-      num--;
-      total_evacuated++;
-      people_pool--;
-  }
+    int x, y;
+    /* reset housed population so that we can display it correctly */
+    housed_population = 1;
+    while (housed_population && (num > 0)) {
+        housed_population = 0;
+        for (y = 0; y < WORLD_SIDE_LEN; y++)
+            for (x = 0; x < WORLD_SIDE_LEN; x++)
+                if (MP_GROUP_IS_RESIDENCE(x, y) && MP_INFO(x, y).population > 0) {
+                    MP_INFO(x, y).population--;
+                    housed_population += MP_INFO(x, y).population;
+                    num--;
+                    total_evacuated++;
+                }
+    }
+    while (num > 0 && people_pool > 0) {
+        num--;
+        total_evacuated++;
+        people_pool--;
+    }
 
-  refresh_population_text ();
+    refresh_population_text();
 
 #if defined (commentout)
 /* last ship wasn't full so everyone has gone. */
-  if (num > 0)
-    {
-      if (t > HOF_START && t < HOF_STOP)
-	ok_dial_box ("launch-gone-mail.mes", GOOD, 0L);
-      else
-	ok_dial_box ("launch-gone.mes", GOOD, 0L);
-      housed_population = 0;
+    if (num > 0) {
+        if (t > HOF_START && t < HOF_STOP)
+            ok_dial_box("launch-gone-mail.mes", GOOD, 0L);
+        else
+            ok_dial_box("launch-gone.mes", GOOD, 0L);
+        housed_population = 0;
     }
 #endif
 
-  /* Note that the previous test was inaccurate.  There could be 
-     exactly 1000 people left. */
-  if (!housed_population && !people_pool) {
-    ok_dial_box ("launch-gone.mes", GOOD, 0L);
-  }
+    /* Note that the previous test was inaccurate.  There could be 
+       exactly 1000 people left. */
+    if (!housed_population && !people_pool) {
+        ok_dial_box("launch-gone.mes", GOOD, 0L);
+    }
 }
 
-void
-launch_rocket (int x, int y)
+void launch_rocket(int x, int y)
 {
     int i, r, xx, yy, xxx, yyy;
     rockets_launched++;
-    MP_TYPE(x,y) = CST_ROCKET_FLOWN;
-    update_main_screen (0);
+    MP_TYPE(x, y) = CST_ROCKET_FLOWN;
+    update_main_screen(0);
     /* The first five failures gives 49.419 % chances of 5 success
      * TODO: some stress could be added by 3,2,1,0 and animation of rocket with sound...
      */
-    r = rand () % MAX_TECH_LEVEL;
-    if (r > tech_level || rand () % 100 > (rockets_launched * 15 + 25)) {
-	/* the launch failed */
-	display_rocket_result_dialog (ROCKET_LAUNCH_BAD);
-	rockets_launched_success = 0;
-	xx = ((rand () % 40) - 20) + x;
-	yy = ((rand () % 40) - 20) + y;
-	for (i = 0; i < 20; i++) {
-	    xxx = ((rand () % 20) - 10) + xx;
-	    yyy = ((rand () % 20) - 10) + yy;
-	    if (xxx > 0 && xxx < (WORLD_SIDE_LEN - 4)
-                    && yyy > 0 && yyy < (WORLD_SIDE_LEN - 4)) {
-		/* don't crash on it's own area */
-		if (xxx >= x && xxx < (x + 4) && yyy >= y && yyy < (y + 4))
-		    continue;
-		fire_area (xxx, yyy);
-		/* make a sound perhaps */
-	    }
-	}
+    r = rand() % MAX_TECH_LEVEL;
+    if (r > tech_level || rand() % 100 > (rockets_launched * 15 + 25)) {
+        /* the launch failed */
+        display_rocket_result_dialog(ROCKET_LAUNCH_BAD);
+        rockets_launched_success = 0;
+        xx = ((rand() % 40) - 20) + x;
+        yy = ((rand() % 40) - 20) + y;
+        for (i = 0; i < 20; i++) {
+            xxx = ((rand() % 20) - 10) + xx;
+            yyy = ((rand() % 20) - 10) + yy;
+            if (xxx > 0 && xxx < (WORLD_SIDE_LEN - 4)
+                && yyy > 0 && yyy < (WORLD_SIDE_LEN - 4)) {
+                /* don't crash on it's own area */
+                if (xxx >= x && xxx < (x + 4) && yyy >= y && yyy < (y + 4))
+                    continue;
+                fire_area(xxx, yyy);
+                /* make a sound perhaps */
+            }
+        }
     } else {
-	rockets_launched_success++;
+        rockets_launched_success++;
         /* TODO: Maybe should generate some pollution ? */
-	if (rockets_launched_success > 5) {
-	    remove_people (1000);
-	    if (people_pool || housed_population)
-	      display_rocket_result_dialog (ROCKET_LAUNCH_EVAC);
-	} else {
-	    display_rocket_result_dialog (ROCKET_LAUNCH_GOOD);
-	}
+        if (rockets_launched_success > 5) {
+            remove_people(1000);
+            if (people_pool || housed_population)
+                display_rocket_result_dialog(ROCKET_LAUNCH_EVAC);
+        } else {
+            display_rocket_result_dialog(ROCKET_LAUNCH_GOOD);
+        }
     }
 }
 
-void
-mps_rocket (int x, int y)
+void mps_rocket(int x, int y)
 {
     int i = 0;
 
-    mps_store_title(i++,_("Rocket Pad"));
+    mps_store_title(i++, _("Rocket Pad"));
     i++;
 
-    mps_store_title(i++,_("Completion"));
-    mps_store_fp(i++, MP_INFO(x,y).int_4 * 100.0 / ROCKET_PAD_LAUNCH);    
+    mps_store_title(i++, _("Completion"));
+    mps_store_fp(i++, MP_INFO(x, y).int_4 * 100.0 / ROCKET_PAD_LAUNCH);
     i++;
-    mps_store_title(i++,_("Inventory"));
-    mps_store_sfp(i++,_("Jobs"), 
-		  MP_INFO(x,y).int_1 * 100.0 / ROCKET_PAD_JOBS_STORE);
-    mps_store_sfp(i++,_("Goods"),
-		  MP_INFO(x,y).int_2 * 100.0 / ROCKET_PAD_GOODS_STORE);
-    mps_store_sfp(i++,_("Steel"),
-		  MP_INFO(x,y).int_3 * 100.0 / ROCKET_PAD_STEEL_STORE);
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / ROCKET_PAD_JOBS_STORE);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / ROCKET_PAD_GOODS_STORE);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_3 * 100.0 / ROCKET_PAD_STEEL_STORE);
 
 }

Modified: trunk/src/lincity/modules/rocket_pad.h
===================================================================
--- trunk/src/lincity/modules/rocket_pad.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/rocket_pad.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,6 +10,6 @@
 
 void do_rocket_pad(int x, int y);
 void launch_rocket(int x, int y);
-void mps_rocket (int x, int y);
+void mps_rocket(int x, int y);
 
 #endif /* __rocket_pad_h__ */

Modified: trunk/src/lincity/modules/school.cpp
===================================================================
--- trunk/src/lincity/modules/school.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/school.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,55 +8,47 @@
 #include "modules.h"
 #include "school.h"
 
-
-void
-do_school (int x, int y)
+void do_school(int x, int y)
 {
-  /*
-     // int_1 contains the job pool
-     // int_2 contains the goods at the school
-     // int_3 has the tech points made
-     // int_4 is the tech count so far this 100 days
-     // int_5 is the tech count last 100 days to give a % of max production
-   */
-  if (MP_INFO(x,y).int_1 < (MAX_JOBS_AT_SCHOOL - SCHOOL_JOBS))
-    if (get_jobs (x, y, SCHOOL_JOBS) != 0)
-      MP_INFO(x,y).int_1 += SCHOOL_JOBS;
-  if (MP_INFO(x,y).int_2 < (MAX_GOODS_AT_SCHOOL - SCHOOL_GOODS))
-    if (get_goods (x, y, SCHOOL_GOODS) != 0)
-      MP_INFO(x,y).int_2 += SCHOOL_GOODS;
-  if (MP_INFO(x,y).int_1 >= JOBS_MAKE_TECH_SCHOOL
-      && MP_INFO(x,y).int_2 >= GOODS_MAKE_TECH_SCHOOL)
-    {
-      MP_INFO(x,y).int_1 -= JOBS_MAKE_TECH_SCHOOL;
-      MP_INFO(x,y).int_2 -= GOODS_MAKE_TECH_SCHOOL;
-      MP_INFO(x,y).int_3 += TECH_MADE_BY_SCHOOL;
-      MP_INFO(x,y).int_4++;
-      tech_level += TECH_MADE_BY_SCHOOL;
+    /*
+       // int_1 contains the job pool
+       // int_2 contains the goods at the school
+       // int_3 has the tech points made
+       // int_4 is the tech count so far this 100 days
+       // int_5 is the tech count last 100 days to give a % of max production
+     */
+    if (MP_INFO(x, y).int_1 < (MAX_JOBS_AT_SCHOOL - SCHOOL_JOBS))
+        if (get_jobs(x, y, SCHOOL_JOBS) != 0)
+            MP_INFO(x, y).int_1 += SCHOOL_JOBS;
+    if (MP_INFO(x, y).int_2 < (MAX_GOODS_AT_SCHOOL - SCHOOL_GOODS))
+        if (get_goods(x, y, SCHOOL_GOODS) != 0)
+            MP_INFO(x, y).int_2 += SCHOOL_GOODS;
+    if (MP_INFO(x, y).int_1 >= JOBS_MAKE_TECH_SCHOOL && MP_INFO(x, y).int_2 >= GOODS_MAKE_TECH_SCHOOL) {
+        MP_INFO(x, y).int_1 -= JOBS_MAKE_TECH_SCHOOL;
+        MP_INFO(x, y).int_2 -= GOODS_MAKE_TECH_SCHOOL;
+        MP_INFO(x, y).int_3 += TECH_MADE_BY_SCHOOL;
+        MP_INFO(x, y).int_4++;
+        tech_level += TECH_MADE_BY_SCHOOL;
     }
-  school_cost += SCHOOL_RUNNING_COST;
-  if ((total_time % 100) == 0)
-    {
-      MP_INFO(x,y).int_5 = MP_INFO(x,y).int_4;
-      MP_INFO(x,y).int_4 = 0;
+    school_cost += SCHOOL_RUNNING_COST;
+    if ((total_time % 100) == 0) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_4;
+        MP_INFO(x, y).int_4 = 0;
     }
 }
 
-void
-mps_school (int x, int y)
+void mps_school(int x, int y)
 {
-  int i = 0;
-  mps_store_title(i++,_("School"));
-  i++;
-  mps_store_title(i++,_("Lessons Learned"));
-  mps_store_f(i++,MP_INFO(x,y).int_3 * 100.0 / MAX_TECH_LEVEL);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Jobs"),
-		MP_INFO(x,y).int_1 * 100.0 / MAX_JOBS_AT_SCHOOL);
-  mps_store_sfp(i++,_("Goods"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_GOODS_AT_SCHOOL);
+    int i = 0;
+    mps_store_title(i++, _("School"));
+    i++;
+    mps_store_title(i++, _("Lessons Learned"));
+    mps_store_f(i++, MP_INFO(x, y).int_3 * 100.0 / MAX_TECH_LEVEL);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / MAX_JOBS_AT_SCHOOL);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / MAX_GOODS_AT_SCHOOL);
 
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_5 * 4);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_5 * 4);
 
 }

Modified: trunk/src/lincity/modules/school.h
===================================================================
--- trunk/src/lincity/modules/school.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/school.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __school_h__
 
 void do_school(int x, int y);
-void mps_school (int x, int y);
+void mps_school(int x, int y);
 
 #endif /* __school_h__ */

Modified: trunk/src/lincity/modules/shanty.cpp
===================================================================
--- trunk/src/lincity/modules/shanty.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/shanty.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -11,112 +11,102 @@
 
 #include <stdlib.h>
 
-void
-add_a_shanty (void)
+void add_a_shanty(void)
 {
-  int r, x, y;
-  x = rand () % WORLD_SIDE_LEN;
-  y = rand () % WORLD_SIDE_LEN;
-  if (numof_shanties > 0 && rand () % 8 != 0)
-    {
-      r = spiral_find_group (x, y, GROUP_SHANTY);
-      if (r == -1)
-	{
-	  printf ("Looked for a shanty, without any! x=%d y=%d\n", x, y);
-	  return;
-	}
-      y = r / WORLD_SIDE_LEN;
-      x = r % WORLD_SIDE_LEN;
-      r = spiral_find_2x2 (x, y);
-      if (r == -1)
-	{
-#ifdef commentout /* wck: These are annoying when the map is full */
-	 	  printf ("Adding a shanty (s), no space for it?!\n");
+    int r, x, y;
+    x = rand() % WORLD_SIDE_LEN;
+    y = rand() % WORLD_SIDE_LEN;
+    if (numof_shanties > 0 && rand() % 8 != 0) {
+        r = spiral_find_group(x, y, GROUP_SHANTY);
+        if (r == -1) {
+            printf("Looked for a shanty, without any! x=%d y=%d\n", x, y);
+            return;
+        }
+        y = r / WORLD_SIDE_LEN;
+        x = r % WORLD_SIDE_LEN;
+        r = spiral_find_2x2(x, y);
+        if (r == -1) {
+#ifdef commentout               /* wck: These are annoying when the map is full */
+            printf("Adding a shanty (s), no space for it?!\n");
 #endif
-	  return;
-	}
-      y = r / WORLD_SIDE_LEN;
-      x = r % WORLD_SIDE_LEN;
-    }
-  else
-    {
-      r = spiral_find_group (x, y, GROUP_MARKET);
-      if (r == -1)
-	return;			/* silently return, we havn't started yet. */
+            return;
+        }
+        y = r / WORLD_SIDE_LEN;
+        x = r % WORLD_SIDE_LEN;
+    } else {
+        r = spiral_find_group(x, y, GROUP_MARKET);
+        if (r == -1)
+            return;             /* silently return, we havn't started yet. */
 
-      y = r / WORLD_SIDE_LEN;
-      x = r % WORLD_SIDE_LEN;
-      r = spiral_find_2x2 (x, y);
-      if (r == -1)
-	{
-#ifdef commentout /* see above */
-	  printf ("Adding a shanty (r), no space for it?!\n");
+        y = r / WORLD_SIDE_LEN;
+        x = r % WORLD_SIDE_LEN;
+        r = spiral_find_2x2(x, y);
+        if (r == -1) {
+#ifdef commentout               /* see above */
+            printf("Adding a shanty (r), no space for it?!\n");
 #endif
-	  return;
-	}
-      y = r / WORLD_SIDE_LEN;
-      x = r % WORLD_SIDE_LEN;
+            return;
+        }
+        y = r / WORLD_SIDE_LEN;
+        x = r % WORLD_SIDE_LEN;
     }
-  set_mappoint (x, y, CST_SHANTY);
-  numof_shanties++;
+    set_mappoint(x, y, CST_SHANTY);
+    numof_shanties++;
 }
 
-void remove_a_shanty (int x, int y)
+void remove_a_shanty(int x, int y)
 {
     numof_shanties--;
     /* ATTENTION:
      * fire_area calls bulldoze_item which calls remove shanty.
      */
-    do_bulldoze_area(CST_FIRE_1,x,y);
+    do_bulldoze_area(CST_FIRE_1, x, y);
 }
 
-void
-update_shanty (void)
+void update_shanty(void)
 {
-  int i, pp;
-  pp = people_pool - (COMMUNE_POP * numof_communes);
-  i = (pp - SHANTY_MIN_PP) / SHANTY_POP;
-  if (i > numof_shanties) {
-      add_a_shanty ();
-  } else if ( numof_shanties > 0 && 
-                    ( i < (numof_shanties - 1) || rand () % 100 == 1) ) {
+    int i, pp;
+    pp = people_pool - (COMMUNE_POP * numof_communes);
+    i = (pp - SHANTY_MIN_PP) / SHANTY_POP;
+    if (i > numof_shanties) {
+        add_a_shanty();
+    } else if (numof_shanties > 0 && (i < (numof_shanties - 1) || rand() % 100 == 1)) {
         int x, y, r;
-        x = rand () % WORLD_SIDE_LEN;
-        y = rand () % WORLD_SIDE_LEN;
-        r = spiral_find_group (x, y, GROUP_SHANTY);
+        x = rand() % WORLD_SIDE_LEN;
+        y = rand() % WORLD_SIDE_LEN;
+        r = spiral_find_group(x, y, GROUP_SHANTY);
         if (r == -1) {
-            fprintf (stderr,"Can't find a shanty to remove!\n");
+            fprintf(stderr, "Can't find a shanty to remove!\n");
             return;
         }
         y = r / WORLD_SIDE_LEN;
         x = r % WORLD_SIDE_LEN;
-        remove_a_shanty(x,y);  /* this will fire_area */
+        remove_a_shanty(x, y);  /* this will fire_area */
         /* now put the fire out: it becomes impossible to bulldoze */
-        MP_INFO(x,y).int_2 = FIRE_LENGTH + 1;
-        MP_INFO(x + 1,y).int_2 = FIRE_LENGTH + 1;
-        MP_INFO(x,y + 1).int_2 = FIRE_LENGTH + 1;
-        MP_INFO(x + 1,y + 1).int_2 = FIRE_LENGTH + 1;
-  }
+        MP_INFO(x, y).int_2 = FIRE_LENGTH + 1;
+        MP_INFO(x + 1, y).int_2 = FIRE_LENGTH + 1;
+        MP_INFO(x, y + 1).int_2 = FIRE_LENGTH + 1;
+        MP_INFO(x + 1, y + 1).int_2 = FIRE_LENGTH + 1;
+    }
 }
 
-void
-do_shanty (int x, int y)
-{				/* just steal some stuff and make pollution. */
+void do_shanty(int x, int y)
+{                               /* just steal some stuff and make pollution. */
 
-  get_food (x, y, SHANTY_GET_FOOD);
-  if (get_goods (x, y, SHANTY_GET_GOODS) != 0)
-    if ((goods_tax -= SHANTY_GET_GOODS * 2) < 0)
-      goods_tax = 0;
-  get_ore (x, y, SHANTY_GET_ORE);
-  get_steel (x, y, SHANTY_GET_STEEL);
-  if (get_jobs (x, y, SHANTY_GET_JOBS) != 0)
-    if ((income_tax -= SHANTY_GET_JOBS * 2) < 0)
-      income_tax = 0;
-  if (get_coal (x, y, SHANTY_GET_COAL) != 0)
-    if ((coal_tax -= SHANTY_GET_COAL * 2) < 0)
-      coal_tax = 0;
-  if ((total_time & 1) == 0)
-    MP_POL(x,y)++;
-  else
-    MP_POL(x+1,y+1)++;
+    get_food(x, y, SHANTY_GET_FOOD);
+    if (get_goods(x, y, SHANTY_GET_GOODS) != 0)
+        if ((goods_tax -= SHANTY_GET_GOODS * 2) < 0)
+            goods_tax = 0;
+    get_ore(x, y, SHANTY_GET_ORE);
+    get_steel(x, y, SHANTY_GET_STEEL);
+    if (get_jobs(x, y, SHANTY_GET_JOBS) != 0)
+        if ((income_tax -= SHANTY_GET_JOBS * 2) < 0)
+            income_tax = 0;
+    if (get_coal(x, y, SHANTY_GET_COAL) != 0)
+        if ((coal_tax -= SHANTY_GET_COAL * 2) < 0)
+            coal_tax = 0;
+    if ((total_time & 1) == 0)
+        MP_POL(x, y)++;
+    else
+        MP_POL(x + 1, y + 1)++;
 }

Modified: trunk/src/lincity/modules/solar_power.cpp
===================================================================
--- trunk/src/lincity/modules/solar_power.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/solar_power.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -21,46 +21,42 @@
   int_7 is a grid mapping timestamp
 */
 
-void
-do_power_source (int x, int y)
+void do_power_source(int x, int y)
 {
     /* Al1: fix for stupid bug i introduced before 1.1.1 => int1 and int3 had wrong valued as if tech = 0 ! */
-    MP_INFO(x,y).int_1 = (int)(POWERS_SOLAR_OUTPUT
-            + (((double) MP_INFO(x,y).int_2 * POWERS_SOLAR_OUTPUT) / MAX_TECH_LEVEL));
-    MP_INFO(x,y).int_3 = MP_INFO(x,y).int_1;
+    MP_INFO(x, y).int_1 = (int)(POWERS_SOLAR_OUTPUT
+                                + (((double)MP_INFO(x, y).int_2 * POWERS_SOLAR_OUTPUT) / MAX_TECH_LEVEL));
+    MP_INFO(x, y).int_3 = MP_INFO(x, y).int_1;
     /* end of fix */
 
     if (get_jobs(x, y, SOLAR_POWER_JOBS)) {
-	MP_INFO(x,y).int_5 = MP_INFO(x,y).int_3;
-	grid[MP_INFO(x,y).int_6]->avail_power += MP_INFO(x,y).int_3;
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_3;
+        grid[MP_INFO(x, y).int_6]->avail_power += MP_INFO(x, y).int_3;
     } else {
-	MP_INFO(x,y).int_5 = 0;
+        MP_INFO(x, y).int_5 = 0;
     }
 }
 
-
-void
-mps_solar_power (int x, int y)
+void mps_solar_power(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  char s[12];
+    char s[12];
 
-  mps_store_title(i++,_("Solar"));
-  mps_store_title(i++,_("Power Station"));
-  i++;
+    mps_store_title(i++, _("Solar"));
+    mps_store_title(i++, _("Power Station"));
+    i++;
 
-  format_power (s, sizeof(s), MP_INFO(x,y).int_3);
-  mps_store_title(i++,_("Max Output"));
-  mps_store_title(i++,s);
-  i++;
+    format_power(s, sizeof(s), MP_INFO(x, y).int_3);
+    mps_store_title(i++, _("Max Output"));
+    mps_store_title(i++, s);
+    i++;
 
-  format_power (s, sizeof(s), MP_INFO(x,y).int_5);
-  mps_store_title(i++,_("Current Output"));
-  mps_store_title(i++,s);
-  i++;
+    format_power(s, sizeof(s), MP_INFO(x, y).int_5);
+    mps_store_title(i++, _("Current Output"));
+    mps_store_title(i++, s);
+    i++;
 
-  mps_store_sfp(i++,_("Tech"),
-		MP_INFO(x,y).int_2 * 100.0 / MAX_TECH_LEVEL);  
-  mps_store_sd(i++,_("Grid ID"), MP_INFO(x,y).int_6);
+    mps_store_sfp(i++, _("Tech"), MP_INFO(x, y).int_2 * 100.0 / MAX_TECH_LEVEL);
+    mps_store_sd(i++, _("Grid ID"), MP_INFO(x, y).int_6);
 }

Modified: trunk/src/lincity/modules/substation.cpp
===================================================================
--- trunk/src/lincity/modules/substation.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/substation.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -23,97 +23,93 @@
  * int_7 is a grid timestamp
  */
 
-void 
-do_power_substation (int x, int y) 
+void do_power_substation(int x, int y)
 {
-    switch(grid[MP_INFO(x,y).int_6]->powered) {
-    case -1: {
-	MP_TYPE(x,y) = CST_SUBSTATION_R; 
-    } break;
-    case 0 : {
-	MP_TYPE(x,y) = CST_SUBSTATION_RG;
-    } break;
-    case 1 : {
-	MP_TYPE(x,y) = CST_SUBSTATION_G;
-    } break;
-    default : {
-	printf("Default case in do_power_substation\n");
-    } break;
+    switch (grid[MP_INFO(x, y).int_6]->powered) {
+    case -1:{
+            MP_TYPE(x, y) = CST_SUBSTATION_R;
+        }
+        break;
+    case 0:{
+            MP_TYPE(x, y) = CST_SUBSTATION_RG;
+        }
+        break;
+    case 1:{
+            MP_TYPE(x, y) = CST_SUBSTATION_G;
+        }
+        break;
+    default:{
+            printf("Default case in do_power_substation\n");
+        }
+        break;
     }
 }
 
-int
-add_a_substation (int x, int y)	/* add to substationx substationy to list */
-{
-  if (numof_substations >= MAX_NUMOF_SUBSTATIONS)
-    return (0);
-  substationx[numof_substations] = x;
-  substationy[numof_substations] = y;
-  numof_substations++;
-  return (1);
+int add_a_substation(int x, int y)
+{                               /* add to substationx substationy to list */
+    if (numof_substations >= MAX_NUMOF_SUBSTATIONS)
+        return (0);
+    substationx[numof_substations] = x;
+    substationy[numof_substations] = y;
+    numof_substations++;
+    return (1);
 }
 
-void
-remove_a_substation (int x, int y)
+void remove_a_substation(int x, int y)
 {
-  int q;
-  for (q = 0; q < numof_substations; q++)
-    if (substationx[q] == x && substationy[q] == y)
-      break;
-  for (; q < numof_substations; q++)
-    {
-      substationx[q] = substationx[q + 1];
-      substationy[q] = substationy[q + 1];
+    int q;
+    for (q = 0; q < numof_substations; q++)
+        if (substationx[q] == x && substationy[q] == y)
+            break;
+    for (; q < numof_substations; q++) {
+        substationx[q] = substationx[q + 1];
+        substationy[q] = substationy[q + 1];
     }
-  numof_substations--;
+    numof_substations--;
 }
 
-void
-shuffle_substations (void)
+void shuffle_substations(void)
 {
-  int q, x, r, m;
-  m = (numof_substations / 2) + 1;
-  for (x = 0; x < m; x++)
-    {
-      r = rand () % numof_substations;
-      if (r == x)
-	continue;
-      q = substationx[x];
-      substationx[x] = substationx[r];
-      substationx[r] = q;
-      q = substationy[x];
-      substationy[x] = substationy[r];
-      substationy[r] = q;
+    int q, x, r, m;
+    m = (numof_substations / 2) + 1;
+    for (x = 0; x < m; x++) {
+        r = rand() % numof_substations;
+        if (r == x)
+            continue;
+        q = substationx[x];
+        substationx[x] = substationx[r];
+        substationx[r] = q;
+        q = substationy[x];
+        substationy[x] = substationy[r];
+        substationy[r] = q;
     }
 }
 
-void
-mps_substation (int x, int y)
+void mps_substation(int x, int y)
 {
     int i = 0;
     char s[12];
-    
-    mps_store_title(i++,_("Substation"));
+
+    mps_store_title(i++, _("Substation"));
     i++;
 
-    format_power (s, sizeof(s), MP_INFO(x,y).int_4);    
-    mps_store_title(i++,_("Local Demand"));
-    mps_store_title(i++,s);
+    format_power(s, sizeof(s), MP_INFO(x, y).int_4);
+    mps_store_title(i++, _("Local Demand"));
+    mps_store_title(i++, s);
     i++;
 
-    mps_store_title(i++,_("Grid Status"));
+    mps_store_title(i++, _("Grid Status"));
 
-    format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->max_power);
-    mps_store_ss(i++,_("T. Cap."), s);
+    format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->max_power);
+    mps_store_ss(i++, _("T. Cap."), s);
 
-    format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->avail_power);
-    mps_store_ss(i++,_("A. Cap."), s);
-    
-    format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->demand);
-    mps_store_ss(i++,_("Demand"), s);
+    format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->avail_power);
+    mps_store_ss(i++, _("A. Cap."), s);
+
+    format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->demand);
+    mps_store_ss(i++, _("Demand"), s);
     i++;
 
-    mps_store_sd(i++,_("Grid ID"), MP_INFO(x,y).int_6);
+    mps_store_sd(i++, _("Grid ID"), MP_INFO(x, y).int_6);
 
-
 }

Modified: trunk/src/lincity/modules/substation.h
===================================================================
--- trunk/src/lincity/modules/substation.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/substation.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -13,7 +13,6 @@
 void remove_a_substation(int x, int y);
 void shuffle_substations(void);
 
-void mps_substation (int x, int y);
+void mps_substation(int x, int y);
 
-
 #endif /* __substation_h__ */

Modified: trunk/src/lincity/modules/tip.cpp
===================================================================
--- trunk/src/lincity/modules/tip.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/tip.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,117 +8,107 @@
 #include "modules.h"
 #include "tip.h"
 
-
-void
-do_tip (int x, int y)
+void do_tip(int x, int y)
 {
-  /*
-     // int_1 is the amount of waste on the site.
-     // int_2 if the amount that has flowed in so far this month
-     // int_3 is the amount stored last month.
-     // int_4 counts up starting when tip fills, controlling how
-              long until the land is useful again.
-   */
-  int i;
+    /*
+       // int_1 is the amount of waste on the site.
+       // int_2 if the amount that has flowed in so far this month
+       // int_3 is the amount stored last month.
+       // int_4 counts up starting when tip fills, controlling how
+       long until the land is useful again.
+     */
+    int i;
 
 /* XXX: put this in a header somewhere */
 
 /* If the tip is full, age it until it degrades into useful soil */
 
-  if (MP_TYPE(x,y) == CST_TIP_8) {
-      MP_INFO(x,y).int_4++;
-      if (MP_INFO(x,y).int_4 >= TIP_DEGRADE_TIME) {
-          if (use_waterwell) {
-              do_bulldoze_area (CST_DESERT, x, y);
-          } else {
-              do_bulldoze_area(CST_GREEN,x,y);
-          }
-      }
-      return;
-  }
+    if (MP_TYPE(x, y) == CST_TIP_8) {
+        MP_INFO(x, y).int_4++;
+        if (MP_INFO(x, y).int_4 >= TIP_DEGRADE_TIME) {
+            if (use_waterwell) {
+                do_bulldoze_area(CST_DESERT, x, y);
+            } else {
+                do_bulldoze_area(CST_GREEN, x, y);
+            }
+        }
+        return;
+    }
 
-  /* just grab as much as we can from transport */
-  if (x > 0 && (MP_INFO(x - 1,y).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      i = MP_INFO(x - 1,y).int_7 / 10;
-      MP_INFO(x,y).int_1 += i;
-      MP_INFO(x,y).int_2 += i;
-      MP_INFO(x - 1,y).int_7 -= i * 10;
-      sust_dig_ore_coal_tip_flag = 0;
+    /* just grab as much as we can from transport */
+    if (x > 0 && (MP_INFO(x - 1, y).flags & FLAG_IS_TRANSPORT) != 0) {
+        i = MP_INFO(x - 1, y).int_7 / 10;
+        MP_INFO(x, y).int_1 += i;
+        MP_INFO(x, y).int_2 += i;
+        MP_INFO(x - 1, y).int_7 -= i * 10;
+        sust_dig_ore_coal_tip_flag = 0;
     }
-  if (y > 0 && (MP_INFO(x,y - 1).flags & FLAG_IS_TRANSPORT) != 0)
-    {
-      i = MP_INFO(x,y - 1).int_7 / 10;
-      MP_INFO(x,y).int_1 += i;
-      MP_INFO(x,y).int_2 += i;
-      MP_INFO(x,y - 1).int_7 -= i * 10;
-      sust_dig_ore_coal_tip_flag = 0;
+    if (y > 0 && (MP_INFO(x, y - 1).flags & FLAG_IS_TRANSPORT) != 0) {
+        i = MP_INFO(x, y - 1).int_7 / 10;
+        MP_INFO(x, y).int_1 += i;
+        MP_INFO(x, y).int_2 += i;
+        MP_INFO(x, y - 1).int_7 -= i * 10;
+        sust_dig_ore_coal_tip_flag = 0;
     }
-
 #if defined (commentout)
-  /* Increment the "ore" reserve; this prevents a new tip from being
-     built on top of a degraded one. */
-  MP_INFO(x,y).ore_reserve++;
+    /* Increment the "ore" reserve; this prevents a new tip from being
+       built on top of a degraded one. */
+    MP_INFO(x, y).ore_reserve++;
 #endif
 
-  /* now choose an icon. */
-  if ((total_time % NUMOF_DAYS_IN_MONTH) == 0)
-    {
-      i = (MP_INFO(x,y).int_1 * 7) / MAX_WASTE_AT_TIP;
-      if (MP_INFO(x,y).int_1 > 0)
-	i++;
-      switch (i)
-	{
-	case (0):
-	  MP_TYPE(x,y) = CST_TIP_0;
-	  break;
-	case (1):
-	  MP_TYPE(x,y) = CST_TIP_1;
-	  break;
-	case (2):
-	  MP_TYPE(x,y) = CST_TIP_2;
-	  break;
-	case (3):
-	  MP_TYPE(x,y) = CST_TIP_3;
-	  break;
-	case (4):
-	  MP_TYPE(x,y) = CST_TIP_4;
-	  break;
-	case (5):
-	  MP_TYPE(x,y) = CST_TIP_5;
-	  break;
-	case (6):
-	  MP_TYPE(x,y) = CST_TIP_6;
-	  break;
-	case (7):
-	  MP_TYPE(x,y) = CST_TIP_7;
-	  break;
-	case (8):
-	  MP_TYPE(x,y) = CST_TIP_8;
-	  MP_INFO(x,y).int_2 = 0;
-	  MP_INFO(x,y).int_4 = 0;
-	  break;
+    /* now choose an icon. */
+    if ((total_time % NUMOF_DAYS_IN_MONTH) == 0) {
+        i = (MP_INFO(x, y).int_1 * 7) / MAX_WASTE_AT_TIP;
+        if (MP_INFO(x, y).int_1 > 0)
+            i++;
+        switch (i) {
+        case (0):
+            MP_TYPE(x, y) = CST_TIP_0;
+            break;
+        case (1):
+            MP_TYPE(x, y) = CST_TIP_1;
+            break;
+        case (2):
+            MP_TYPE(x, y) = CST_TIP_2;
+            break;
+        case (3):
+            MP_TYPE(x, y) = CST_TIP_3;
+            break;
+        case (4):
+            MP_TYPE(x, y) = CST_TIP_4;
+            break;
+        case (5):
+            MP_TYPE(x, y) = CST_TIP_5;
+            break;
+        case (6):
+            MP_TYPE(x, y) = CST_TIP_6;
+            break;
+        case (7):
+            MP_TYPE(x, y) = CST_TIP_7;
+            break;
+        case (8):
+            MP_TYPE(x, y) = CST_TIP_8;
+            MP_INFO(x, y).int_2 = 0;
+            MP_INFO(x, y).int_4 = 0;
+            break;
 
-	}
-      MP_INFO(x,y).int_3 = MP_INFO(x,y).int_2;
-      MP_INFO(x,y).int_2 = 0;
+        }
+        MP_INFO(x, y).int_3 = MP_INFO(x, y).int_2;
+        MP_INFO(x, y).int_2 = 0;
     }
 }
 
-void
-mps_tip (int x, int y)
+void mps_tip(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Landfill"));
-  i++;
+    mps_store_title(i++, _("Landfill"));
+    i++;
 
-  mps_store_title(i++,_("Last Month"));
-  mps_store_sd(i++,_("Tons"), MP_INFO(x,y).int_3);
-  mps_store_sfp(i++,_("Percent"), 
-	       MP_INFO(x,y).int_3 * 100.0 / MAX_WASTE_AT_TIP);
-  i++;
-  mps_store_title(i++,_("% Filled"));
-  mps_store_fp(i++,
-	       MP_INFO(x,y).int_1 * 100.0 / MAX_WASTE_AT_TIP);
+    mps_store_title(i++, _("Last Month"));
+    mps_store_sd(i++, _("Tons"), MP_INFO(x, y).int_3);
+    mps_store_sfp(i++, _("Percent"), MP_INFO(x, y).int_3 * 100.0 / MAX_WASTE_AT_TIP);
+    i++;
+    mps_store_title(i++, _("% Filled"));
+    mps_store_fp(i++, MP_INFO(x, y).int_1 * 100.0 / MAX_WASTE_AT_TIP);
 }

Modified: trunk/src/lincity/modules/tip.h
===================================================================
--- trunk/src/lincity/modules/tip.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/tip.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,6 +9,6 @@
 #define __tip_h__
 
 void do_tip(int x, int y);
-void mps_tip (int x, int y);
+void mps_tip(int x, int y);
 
 #endif /* __tip_h__ */

Modified: trunk/src/lincity/modules/track.cpp
===================================================================
--- trunk/src/lincity/modules/track.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/track.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -21,36 +21,25 @@
    int_7 contains the amount of waste
   --------------------------------------------------------------------- */
 
-
-void
-do_track (int x, int y)
+void do_track(int x, int y)
 {
     static int wb_count = 0;
-    general_transport (&MP_INFO(x,y), &MP_POL(x,y),
-		       MAX_WASTE_ON_TRACK, &wb_count);
+    general_transport(&MP_INFO(x, y), &MP_POL(x, y), MAX_WASTE_ON_TRACK, &wb_count);
 }
 
-void
-mps_track (int x, int y)
+void mps_track(int x, int y)
 {
-  int i = 0;
+    int i = 0;
 
-  mps_store_title(i++,_("Track"));
-  i++;
+    mps_store_title(i++, _("Track"));
+    i++;
 
-  mps_store_sfp(i++,_("Food"), 
-		MP_INFO(x,y).int_1 * 100.0 / MAX_FOOD_ON_TRACK);
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_2 * 100.0 / MAX_JOBS_ON_TRACK);
-  mps_store_sfp(i++,_("Coal"), 
-		MP_INFO(x,y).int_3 * 100.0 / MAX_COAL_ON_TRACK);
-  mps_store_sfp(i++,_("Goods"), 
-		MP_INFO(x,y).int_4 * 100.0 / MAX_GOODS_ON_TRACK);
-  mps_store_sfp(i++,_("Ore"), 
-		MP_INFO(x,y).int_5 * 100.0 / MAX_ORE_ON_TRACK);
-  mps_store_sfp(i++,_("Steel"), 
-		MP_INFO(x,y).int_6 * 100.0 / MAX_STEEL_ON_TRACK);
-  mps_store_sfp(i++,_("Waste"), 
-		MP_INFO(x,y).int_7 * 100.0 / MAX_WASTE_ON_TRACK);
+    mps_store_sfp(i++, _("Food"), MP_INFO(x, y).int_1 * 100.0 / MAX_FOOD_ON_TRACK);
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_2 * 100.0 / MAX_JOBS_ON_TRACK);
+    mps_store_sfp(i++, _("Coal"), MP_INFO(x, y).int_3 * 100.0 / MAX_COAL_ON_TRACK);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_4 * 100.0 / MAX_GOODS_ON_TRACK);
+    mps_store_sfp(i++, _("Ore"), MP_INFO(x, y).int_5 * 100.0 / MAX_ORE_ON_TRACK);
+    mps_store_sfp(i++, _("Steel"), MP_INFO(x, y).int_6 * 100.0 / MAX_STEEL_ON_TRACK);
+    mps_store_sfp(i++, _("Waste"), MP_INFO(x, y).int_7 * 100.0 / MAX_WASTE_ON_TRACK);
 
 }

Modified: trunk/src/lincity/modules/university.cpp
===================================================================
--- trunk/src/lincity/modules/university.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/university.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -9,72 +9,61 @@
 #include "../lcconfig.h"
 #include "university.h"
 
-void
-do_university (int x, int y)
+void do_university(int x, int y)
 {
-  /*
-     // You need UNIVERSITY_JOBS and UNIVERSITY_GOODS to add 1 to tech_level
-     // int_1 is the stored jobs
-     // int_2 is the stored goods
-     // int_3 is the total tech points made by this uni.
-     // int_4 is the count so far in this 100 days
-     // int_5 is the count in the last 100 days to give a percent value
-     // get some jobs
-   */
-  if (MP_INFO(x,y).int_1 < UNIVERSITY_JOBS_STORE)
-    {
-      if (get_jobs (x, y, UNIVERSITY_JOBS + 10) != 0)
-	MP_INFO(x,y).int_1 += UNIVERSITY_JOBS + 10;
+    /*
+       // You need UNIVERSITY_JOBS and UNIVERSITY_GOODS to add 1 to tech_level
+       // int_1 is the stored jobs
+       // int_2 is the stored goods
+       // int_3 is the total tech points made by this uni.
+       // int_4 is the count so far in this 100 days
+       // int_5 is the count in the last 100 days to give a percent value
+       // get some jobs
+     */
+    if (MP_INFO(x, y).int_1 < UNIVERSITY_JOBS_STORE) {
+        if (get_jobs(x, y, UNIVERSITY_JOBS + 10) != 0)
+            MP_INFO(x, y).int_1 += UNIVERSITY_JOBS + 10;
     }
-  /* get goods */
-  if (MP_INFO(x,y).int_2 < UNIVERSITY_GOODS_STORE)
-    {
-      if (get_goods (x, y, UNIVERSITY_GOODS + 10) != 0)
-	MP_INFO(x,y).int_2 += UNIVERSITY_GOODS + 10;
-      else if (get_goods (x, y, UNIVERSITY_GOODS / 5) != 0)
-	MP_INFO(x,y).int_2 += UNIVERSITY_GOODS / 5;
-      else if (get_goods (x, y, UNIVERSITY_GOODS / 20) != 0)
-	MP_INFO(x,y).int_2 += UNIVERSITY_GOODS / 20;
+    /* get goods */
+    if (MP_INFO(x, y).int_2 < UNIVERSITY_GOODS_STORE) {
+        if (get_goods(x, y, UNIVERSITY_GOODS + 10) != 0)
+            MP_INFO(x, y).int_2 += UNIVERSITY_GOODS + 10;
+        else if (get_goods(x, y, UNIVERSITY_GOODS / 5) != 0)
+            MP_INFO(x, y).int_2 += UNIVERSITY_GOODS / 5;
+        else if (get_goods(x, y, UNIVERSITY_GOODS / 20) != 0)
+            MP_INFO(x, y).int_2 += UNIVERSITY_GOODS / 20;
     }
-  /* now do some research */
-  if (MP_INFO(x,y).int_1 >= UNIVERSITY_JOBS
-      && MP_INFO(x,y).int_2 >= UNIVERSITY_GOODS)
-    {
-      MP_INFO(x,y).int_1 -= UNIVERSITY_JOBS;
-      MP_INFO(x,y).int_2 -= UNIVERSITY_GOODS;
-      goods_used += UNIVERSITY_GOODS;
-      if (university_intake_rate >= (total_time % 100))
-	{
-	  MP_INFO(x,y).int_3 += UNIVERSITY_TECH_MADE;
-	  tech_level += UNIVERSITY_TECH_MADE;
-	  MP_INFO(x,y).int_4++;
-	}
+    /* now do some research */
+    if (MP_INFO(x, y).int_1 >= UNIVERSITY_JOBS && MP_INFO(x, y).int_2 >= UNIVERSITY_GOODS) {
+        MP_INFO(x, y).int_1 -= UNIVERSITY_JOBS;
+        MP_INFO(x, y).int_2 -= UNIVERSITY_GOODS;
+        goods_used += UNIVERSITY_GOODS;
+        if (university_intake_rate >= (total_time % 100)) {
+            MP_INFO(x, y).int_3 += UNIVERSITY_TECH_MADE;
+            tech_level += UNIVERSITY_TECH_MADE;
+            MP_INFO(x, y).int_4++;
+        }
     }
-  if (total_time % 100 == 0)
-    {
-      MP_INFO(x,y).int_5 = MP_INFO(x,y).int_4;
-      MP_INFO(x,y).int_4 = 0;
+    if (total_time % 100 == 0) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_4;
+        MP_INFO(x, y).int_4 = 0;
     }
-  university_cost += UNIVERSITY_RUNNING_COST;
+    university_cost += UNIVERSITY_RUNNING_COST;
 }
 
-void
-mps_university (int x, int y)
+void mps_university(int x, int y)
 {
-  int i = 0;
-  char s[12];
+    int i = 0;
+    char s[12];
 
-  mps_store_title(i++,_("University"));
-  i++;
-  mps_store_title(i++,_("Tech Produced"));
-  snprintf (s, sizeof(s), "%6.1f", 
-	    MP_INFO(x,y).int_3 * 100.0 / MAX_TECH_LEVEL);  
-  mps_store_title(i++,s);
-  i++;
-  mps_store_title(i++,_("Inventory"));
-  mps_store_sfp(i++,_("Jobs"), 
-		MP_INFO(x,y).int_1 * 100.0 / UNIVERSITY_JOBS_STORE);
-  mps_store_sfp(i++,_("Goods"),
-		MP_INFO(x,y).int_2 * 100.0 / UNIVERSITY_GOODS_STORE);
-  mps_store_sfp(i++,_("Capacity"), MP_INFO(x,y).int_4);
+    mps_store_title(i++, _("University"));
+    i++;
+    mps_store_title(i++, _("Tech Produced"));
+    snprintf(s, sizeof(s), "%6.1f", MP_INFO(x, y).int_3 * 100.0 / MAX_TECH_LEVEL);
+    mps_store_title(i++, s);
+    i++;
+    mps_store_title(i++, _("Inventory"));
+    mps_store_sfp(i++, _("Jobs"), MP_INFO(x, y).int_1 * 100.0 / UNIVERSITY_JOBS_STORE);
+    mps_store_sfp(i++, _("Goods"), MP_INFO(x, y).int_2 * 100.0 / UNIVERSITY_GOODS_STORE);
+    mps_store_sfp(i++, _("Capacity"), MP_INFO(x, y).int_4);
 }

Modified: trunk/src/lincity/modules/water.cpp
===================================================================
--- trunk/src/lincity/modules/water.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/water.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,18 +8,15 @@
 #include "modules.h"
 #include "water.h"
 
-
-void
-mps_water (int x, int y)
+void mps_water(int x, int y)
 {
     int i = 0;
 
-    const char * p;
+    const char *p;
 
-    mps_store_title(i++,_("Water"));
+    mps_store_title(i++, _("Water"));
     i++;
 
-    p = (MP_INFO(x,y).flags & FLAG_IS_RIVER) ? _("Yes") : _("No");
-    mps_store_ss(i++,_("Navigable"),p);
+    p = (MP_INFO(x, y).flags & FLAG_IS_RIVER) ? _("Yes") : _("No");
+    mps_store_ss(i++, _("Navigable"), p);
 }
-

Modified: trunk/src/lincity/modules/water.h
===================================================================
--- trunk/src/lincity/modules/water.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/water.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,6 +8,6 @@
 #ifndef __water_h__
 #define __water_h__
 
-void mps_water (int x, int y);
+void mps_water(int x, int y);
 
 #endif /* __water_h__ */

Modified: trunk/src/lincity/modules/waterwell.cpp
===================================================================
--- trunk/src/lincity/modules/waterwell.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/waterwell.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -8,51 +8,46 @@
 #include "modules.h"
 #include "waterwell.h"
 
-
-void
-do_waterwell_cover (int x, int y)
+void do_waterwell_cover(int x, int y)
 {
-  int xx, x1, x2, y1, y2;
+    int xx, x1, x2, y1, y2;
 #ifdef DEBUG_WATERWELL
-  if (use_waterwell)
-  	fprintf(stderr," doing waterwell cover\n");
-  else 
-  	return;
+    if (use_waterwell)
+        fprintf(stderr, " doing waterwell cover\n");
+    else
+        return;
 #endif
 
-  x1 = x - WATERWELL_RANGE;
-  if (x1 < 0)
-    x1 = 0;
-  x2 = x + WATERWELL_RANGE;
-  if (x2 > WORLD_SIDE_LEN)
-    x2 = WORLD_SIDE_LEN;
-  y1 = y - WATERWELL_RANGE;
-  if (y1 < 0)
-    y1 = 0;
-  y2 = y + WATERWELL_RANGE;
-  if (y2 > WORLD_SIDE_LEN)
-    y2 = WORLD_SIDE_LEN;
-  for (; y1 < y2; y1++)
-    for (xx = x1; xx < x2; xx++)
-      MP_INFO(xx,y1).flags |= FLAG_WATERWELL_COVER;
+    x1 = x - WATERWELL_RANGE;
+    if (x1 < 0)
+        x1 = 0;
+    x2 = x + WATERWELL_RANGE;
+    if (x2 > WORLD_SIDE_LEN)
+        x2 = WORLD_SIDE_LEN;
+    y1 = y - WATERWELL_RANGE;
+    if (y1 < 0)
+        y1 = 0;
+    y2 = y + WATERWELL_RANGE;
+    if (y2 > WORLD_SIDE_LEN)
+        y2 = WORLD_SIDE_LEN;
+    for (; y1 < y2; y1++)
+        for (xx = x1; xx < x2; xx++)
+            MP_INFO(xx, y1).flags |= FLAG_WATERWELL_COVER;
 }
 
-
-void
-mps_waterwell (int x, int y)
+void mps_waterwell(int x, int y)
 {
     int i = 0;
 
-    const char * p;
+    const char *p;
 
-    mps_store_title(i++,_("Water_well"));
-    i++; /* blank line */
+    mps_store_title(i++, _("Water_well"));
+    i++;                        /* blank line */
 
-    mps_store_sd(i++, _("Pollution"), MP_POL(x,y));
+    mps_store_sd(i++, _("Pollution"), MP_POL(x, y));
 
     /* p = (MP_INFO(x,y).flags & FLAG_IS_RIVER) ? _("Yes") : _("No"); */
     p = _("Yes");
-    mps_store_ss(i++,_("Drinkable"),p);
+    mps_store_ss(i++, _("Drinkable"), p);
 
 }
-

Modified: trunk/src/lincity/modules/waterwell.h
===================================================================
--- trunk/src/lincity/modules/waterwell.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/waterwell.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -10,7 +10,7 @@
 
 #undef DEBUG_WATERWELL
 
-void do_waterwell_cover (int x, int y);
-void mps_waterwell (int x, int y);
+void do_waterwell_cover(int x, int y);
+void mps_waterwell(int x, int y);
 
 #endif /* __waterwell_h__ */

Modified: trunk/src/lincity/modules/windmill.cpp
===================================================================
--- trunk/src/lincity/modules/windmill.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/modules/windmill.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -23,87 +23,82 @@
   //  int_2 reserved = y
   //  int_3 is the last real time that a sail was turned
 */
-void
-do_windmill (int x, int y) 
+void do_windmill(int x, int y)
 {
-  int anim_tile; 
+    int anim_tile;
 
-  if (get_jobs (x, y, WINDMILL_JOBS) != 0) {
-    MP_INFO(x,y).int_5 = MP_INFO(x,y).int_1;
-    grid[MP_INFO(x,y).int_6]->avail_power += MP_INFO(x,y).int_1;
-  } else {
-    MP_INFO(x + 1, y).int_3 = real_time + MODERN_WINDMILL_ANIM_SPEED;
-    return;
-  }
-
-  /* update animation. ATTENTION: (x,y) and (x+1,y) are used to store info */
-  if (real_time > MP_INFO(x + 1, y).int_3) {
-    MP_INFO(x,y).int_3++;
-    if (MP_INFO(x,y).int_2 < MODERN_WINDMILL_TECH) {
-      MP_INFO(x + 1, y).int_3 = real_time + ANTIQUE_WINDMILL_ANIM_SPEED;
+    if (get_jobs(x, y, WINDMILL_JOBS) != 0) {
+        MP_INFO(x, y).int_5 = MP_INFO(x, y).int_1;
+        grid[MP_INFO(x, y).int_6]->avail_power += MP_INFO(x, y).int_1;
     } else {
-      MP_INFO(x + 1, y).int_3 = real_time + MODERN_WINDMILL_ANIM_SPEED;
+        MP_INFO(x + 1, y).int_3 = real_time + MODERN_WINDMILL_ANIM_SPEED;
+        return;
     }
-  }
 
-  /* figure out which tile to use */
-  anim_tile = (MP_INFO(x,y).int_3 % 3);
+    /* update animation. ATTENTION: (x,y) and (x+1,y) are used to store info */
+    if (real_time > MP_INFO(x + 1, y).int_3) {
+        MP_INFO(x, y).int_3++;
+        if (MP_INFO(x, y).int_2 < MODERN_WINDMILL_TECH) {
+            MP_INFO(x + 1, y).int_3 = real_time + ANTIQUE_WINDMILL_ANIM_SPEED;
+        } else {
+            MP_INFO(x + 1, y).int_3 = real_time + MODERN_WINDMILL_ANIM_SPEED;
+        }
+    }
 
-  if (MP_INFO(x,y).int_2 < MODERN_WINDMILL_TECH)
-    MP_TYPE(x,y) = CST_WINDMILL_1_W + anim_tile;
-  else
-    switch(grid[MP_INFO(x,y).int_6]->powered) 
-      {
-      case -1: 
-	MP_TYPE(x,y) = CST_WINDMILL_1_R + anim_tile; 
-	break;
-      case 0 : 
-	MP_TYPE(x,y) = CST_WINDMILL_1_RG + anim_tile;
-	break;
-      case 1 : 
-	MP_TYPE(x,y) = CST_WINDMILL_1_G + anim_tile;
-	break;
-      default : 
-	printf("Default case in do_power_substation\n");
-	break;
-      }      
+    /* figure out which tile to use */
+    anim_tile = (MP_INFO(x, y).int_3 % 3);
+
+    if (MP_INFO(x, y).int_2 < MODERN_WINDMILL_TECH)
+        MP_TYPE(x, y) = CST_WINDMILL_1_W + anim_tile;
+    else
+        switch (grid[MP_INFO(x, y).int_6]->powered) {
+        case -1:
+            MP_TYPE(x, y) = CST_WINDMILL_1_R + anim_tile;
+            break;
+        case 0:
+            MP_TYPE(x, y) = CST_WINDMILL_1_RG + anim_tile;
+            break;
+        case 1:
+            MP_TYPE(x, y) = CST_WINDMILL_1_G + anim_tile;
+            break;
+        default:
+            printf("Default case in do_power_substation\n");
+            break;
+        }
 }
 
-void
-mps_windmill (int x, int y)
+void mps_windmill(int x, int y)
 {
     int i = 0;
     char s[12];
-    
-    mps_store_title(i++,_("Windmill"));
-    mps_store_sfp(i++,_("Tech"),
-		  MP_INFO(x,y).int_2 * 100.0 / MAX_TECH_LEVEL);  
+
+    mps_store_title(i++, _("Windmill"));
+    mps_store_sfp(i++, _("Tech"), MP_INFO(x, y).int_2 * 100.0 / MAX_TECH_LEVEL);
     i++;
-   
-    if (MP_INFO(x,y).int_2 >= MODERN_WINDMILL_TECH) {
-	mps_store_title(i++,_("Local Status"));
 
-	format_power (s, sizeof(s), MP_INFO(x,y).int_5);    
-	mps_store_ss(i++,_("Prod."),s);
+    if (MP_INFO(x, y).int_2 >= MODERN_WINDMILL_TECH) {
+        mps_store_title(i++, _("Local Status"));
 
-	format_power (s, sizeof(s), MP_INFO(x,y).int_4);    
-	mps_store_ss(i++,_("Demand"),s);
+        format_power(s, sizeof(s), MP_INFO(x, y).int_5);
+        mps_store_ss(i++, _("Prod."), s);
 
-	i++;
-	
-	mps_store_title(i++,_("Grid Status"));
-	
-	format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->max_power);
-	mps_store_ss(i++,_("T. Cap."), s);
-	
-	format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->avail_power);
-	mps_store_ss(i++,_("A. Cap."), s);
-	
-	format_power (s, sizeof(s), grid[MP_INFO(x,y).int_6]->demand);
-	mps_store_ss(i++,_("Demand"), s);
-	i++;
-	
-	mps_store_sd(i++,_("Grid ID"), MP_INFO(x,y).int_6);
+        format_power(s, sizeof(s), MP_INFO(x, y).int_4);
+        mps_store_ss(i++, _("Demand"), s);
+
+        i++;
+
+        mps_store_title(i++, _("Grid Status"));
+
+        format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->max_power);
+        mps_store_ss(i++, _("T. Cap."), s);
+
+        format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->avail_power);
+        mps_store_ss(i++, _("A. Cap."), s);
+
+        format_power(s, sizeof(s), grid[MP_INFO(x, y).int_6]->demand);
+        mps_store_ss(i++, _("Demand"), s);
+        i++;
+
+        mps_store_sd(i++, _("Grid ID"), MP_INFO(x, y).int_6);
     }
 }
-

Modified: trunk/src/lincity/power.cpp
===================================================================
--- trunk/src/lincity/power.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/power.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -1,9 +1,9 @@
  /* ---------------------------------------------------------------------- *
- * 
- * This file is part of lincity.
- * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
- * (c) Corey Keasling 2001-2004.
- * ---------------------------------------------------------------------- */
+  * 
+  * This file is part of lincity.
+  * Lincity is copyright (c) I J Peters 1995-1997, (c) Greg Sharp 1997-2001.
+  * (c) Corey Keasling 2001-2004.
+  * ---------------------------------------------------------------------- */
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -17,7 +17,7 @@
 #include "simulate.h"
 #include "lcintl.h"
 #include "power.h"
-#include "transport.h" /* for XY_IS_TRANSPORT */
+#include "transport.h"          /* for XY_IS_TRANSPORT */
 
 #include "gui_interface/dialbox_interface.h"
 
@@ -28,88 +28,84 @@
    used to determine if a square has been mapped */
 int grid_inc = 0;
 
-Grid * grid[MAX_GRIDS];
+Grid *grid[MAX_GRIDS];
 
 /* power_time_step 
    Take the avail_power from last timestep, and move in into the 
    total_power, which will be used during this timestep on a first-come 
    first-served basis.
 */
-void
-power_time_step () 
+void power_time_step()
 {
     int gi;
-    int net; /* net power */
+    int net;                    /* net power */
 
     if (grid_num == 0)
-	return;
+        return;
 
     /* AL1: Do we want to shuffle substations ? It is not done in NG 1.1
      *     shuffle_substations();
      */
     for (gi = 1; gi <= grid_num; gi++) {
-	grid[gi]->total_power = grid[gi]->avail_power - 
-		(grid[gi]->power_lines * POWER_LINE_LOSS);
+        grid[gi]->total_power = grid[gi]->avail_power - (grid[gi]->power_lines * POWER_LINE_LOSS);
 
-	net = (grid[gi]->total_power - grid[gi]->demand);
+        net = (grid[gi]->total_power - grid[gi]->demand);
         /* ->powered is used only for animation of power_lines,
          * substations and windmills
          */
-	if (net < 0)
-	    grid[gi]->powered = -1;
-	else if (net < (grid[gi]->avail_power / 4))
-	    grid[gi]->powered = 0;
-	else 
-	    grid[gi]->powered = 1;
+        if (net < 0)
+            grid[gi]->powered = -1;
+        else if (net < (grid[gi]->avail_power / 4))
+            grid[gi]->powered = 0;
+        else
+            grid[gi]->powered = 1;
 
-	grid[gi]->avail_power = 0;
-	grid[gi]->demand = 0;
+        grid[gi]->avail_power = 0;
+        grid[gi]->demand = 0;
     }
 
     /* Clear substation 'Here' counter */
     /*  int_4 is the local power demand in the substation */
-    for (gi = 0; gi < numof_substations; gi++) 
-	MP_INFO(substationx[gi],substationy[gi]).int_4 = 0;
+    for (gi = 0; gi < numof_substations; gi++)
+        MP_INFO(substationx[gi], substationy[gi]).int_4 = 0;
 }
 
-void 
-map_power_grid (bool resetgrids)
+void map_power_grid(bool resetgrids)
 {
     int mapx, mapy;
-    grid_num = 0;  /* how many grids found so far */
-    grid_inc++; /* how many times have we run map_power_grid */
+    grid_num = 0;               /* how many grids found so far */
+    grid_inc++;                 /* how many times have we run map_power_grid */
 
     // used to fix up bad int_7 values after loading a map
-    if(resetgrids) {
-        for(int mapx = 0; mapx < WORLD_SIDE_LEN; mapx++) {
-            for(int mapy = 0; mapy < WORLD_SIDE_LEN; mapy++) {
-	    	if (XY_IS_GRID(mapx,mapy))
-                	MP_INFO(mapx,mapy).int_7 = grid_inc-1;
+    if (resetgrids) {
+        for (int mapx = 0; mapx < WORLD_SIDE_LEN; mapx++) {
+            for (int mapy = 0; mapy < WORLD_SIDE_LEN; mapy++) {
+                if (XY_IS_GRID(mapx, mapy))
+                    MP_INFO(mapx, mapy).int_7 = grid_inc - 1;
             }
         }
     }
     for (mapx = 0; mapx < WORLD_SIDE_LEN; mapx++) {
-	for (mapy = 0; mapy < WORLD_SIDE_LEN; mapy++) {
-	    if (XY_IS_GRID(mapx,mapy)) {
-		if (MP_INFO(mapx,mapy).int_7 != grid_inc) {
-		    if (grid_num == MAX_GRIDS) {
-			ok_dial_box("warning.mes", BAD,
-                                _("You have too many power grids. Join some of them"));
-			return;
-		    }
-		    grid[++grid_num] = (Grid *)lcalloc(sizeof(Grid));
-		    grid[grid_num]->total_power = 0;
-		    grid[grid_num]->power_lines = 0;
-		    grid[grid_num]->demand = 0;
-		    grid[grid_num]->max_power = 0;
+        for (mapy = 0; mapy < WORLD_SIDE_LEN; mapy++) {
+            if (XY_IS_GRID(mapx, mapy)) {
+                if (MP_INFO(mapx, mapy).int_7 != grid_inc) {
+                    if (grid_num == MAX_GRIDS) {
+                        ok_dial_box("warning.mes", BAD, _("You have too many power grids. Join some of them"));
+                        return;
+                    }
+                    grid[++grid_num] = (Grid *) lcalloc(sizeof(Grid));
+                    grid[grid_num]->total_power = 0;
+                    grid[grid_num]->power_lines = 0;
+                    grid[grid_num]->demand = 0;
+                    grid[grid_num]->max_power = 0;
 
-		    recurse_power_grid(mapx,mapy,0);
-		}
-	    }
-	}
+                    recurse_power_grid(mapx, mapy, 0);
+                }
+            }
+        }
     }
 #ifdef DEBUG_POWER
-    printf("grid_inc: %d found %d grids\n",grid_inc, grid_num);
+    printf("grid_inc: %d found %d grids\n", grid_inc, grid_num);
 #endif
 }
 
@@ -123,162 +119,164 @@
 total.  Now set it to our grid.  If it is a power line, return
 1, otherwise 0. */
 
-int 
-check_grid(int x, int y, int xi, int yi) 
+int check_grid(int x, int y, int xi, int yi)
 {
-  if (XY_IS_GRID(x,y) && !IS_OLD_WINDMILL(x,y)) {
-    if (GRID_CURRENT(x,y)) {
-        if (MP_INFO(x,y).int_6 != grid_num) {
+    if (XY_IS_GRID(x, y) && !IS_OLD_WINDMILL(x, y)) {
+        if (GRID_CURRENT(x, y)) {
+            if (MP_INFO(x, y).int_6 != grid_num) {
                 /* XXX: This can occur if connecting to a power source at different
-	         *   locations.
-	         *   Treat a power source or a substation as a power line in order to
+                 *   locations.
+                 *   Treat a power source or a substation as a power line in order to
                  *   have both output with the same grid ID.
-	         */
+                 */
                 return 1;
-        }
-    } else if (!IS_POWER_LINE(x,y)) {
-        if (IS_POWER_SOURCE(x,y)) {
+            }
+        } else if (!IS_POWER_LINE(x, y)) {
+            if (IS_POWER_SOURCE(x, y)) {
                 /* Pick the produced power from power sources */
-                grid[grid_num]->total_power += MP_INFO(x,y).int_5;
-                grid[grid_num]->max_power += MP_INFO(x,y).int_1;
+                grid[grid_num]->total_power += MP_INFO(x, y).int_5;
+                grid[grid_num]->max_power += MP_INFO(x, y).int_1;
 
-        } /* else = is pure substation */
-        MP_INFO(x,y).int_6 = grid_num;
-        MP_INFO(x,y).int_7 = grid_inc;
-        return 1; /* say power sources and substation are power line */
-    } else /* is a power line */
-        return 1;
+            }                   /* else = is pure substation */
+            MP_INFO(x, y).int_6 = grid_num;
+            MP_INFO(x, y).int_7 = grid_inc;
+            return 1;           /* say power sources and substation are power line */
+        } else                  /* is a power line */
+            return 1;
 
-  } else if (XY_IS_TRANSPORT(x,y) || XY_IS_WATER(x,y)) { /* can we step over?*/
+    } else if (XY_IS_TRANSPORT(x, y) || XY_IS_WATER(x, y)) {    /* can we step over? */
         if (xi == 0 && yi == 0) /* already stepped */
-                return 0;
-        if (x+xi >= 1 && x+xi < WORLD_SIDE_LEN &&
-                        y+yi >= 1 && y+yi < WORLD_SIDE_LEN)
-                return (check_grid(x+xi,y+yi,0,0) ? 2 : 0);
+            return 0;
+        if (x + xi >= 1 && x + xi < WORLD_SIDE_LEN && y + yi >= 1 && y + yi < WORLD_SIDE_LEN)
+            return (check_grid(x + xi, y + yi, 0, 0) ? 2 : 0);
         else
-                return 0;
-  }
-  return 0;
+            return 0;
+    }
+    return 0;
 }
-  
+
 /* Go through the power grid and figure out what is connected.  This
 should really handle the connect_transport bit for power lines.  That
 would help perspicuity anyway. */
 
-void 
-recurse_power_grid (int startx, int starty, int steps) 
+void recurse_power_grid(int startx, int starty, int steps)
 {
-    static int level;             /* debug: levels of recursion encountered */
-    int count = steps;            /* number of steps taken - for animation */
-    short dir = -1;   /* -1 undetermined, 0 nothing left, Direction #defines */
-    int mapx = startx, mapy = starty;                     /* to move about */
-    int inc;           /* handles special case of stepping over transport */
-  
+    static int level;           /* debug: levels of recursion encountered */
+    int count = steps;          /* number of steps taken - for animation */
+    short dir = -1;             /* -1 undetermined, 0 nothing left, Direction #defines */
+    int mapx = startx, mapy = starty;   /* to move about */
+    int inc;                    /* handles special case of stepping over transport */
+
     level++;
     if (count % POWER_MODULUS == 0)
-	count = 0;
+        count = 0;
 
     /* Old windmills aren't grid connected, so they are on their own 'grid'.  We
        ignore them in the main loop.  This case should only be reached from a 
        call from map_power_grid with a new grid_num, not from a new path in the
        code below */
     if (IS_OLD_WINDMILL(mapx, mapy)) {
-	MP_INFO(mapx,mapy).int_6 = grid_num;
-	MP_INFO(mapx,mapy).int_7 = grid_inc;
-	grid[grid_num]->max_power += MP_INFO(mapx,mapy).int_1;
-	level--;
-	return;
+        MP_INFO(mapx, mapy).int_6 = grid_num;
+        MP_INFO(mapx, mapy).int_7 = grid_inc;
+        grid[grid_num]->max_power += MP_INFO(mapx, mapy).int_1;
+        level--;
+        return;
     }
 
     /* Crawl about the grid, finding paths and what not.  */
     while (dir != 0) {
-	/* Set to current grid */
-	/* figure out what we are on */
-	if (IS_POWER_LINE(mapx,mapy)) {
-	    grid[grid_num]->power_lines++;
-	    MP_INFO(mapx,mapy).int_5 = (count++ % POWER_MODULUS);
-	    if ((MP_TYPE(mapx,mapy) >= 1) && (MP_TYPE(mapx,mapy) <= 11))
-		MP_TYPE(mapx,mapy) += 11;
-	}
-	MP_INFO(mapx,mapy).int_6 = grid_num;
-	MP_INFO(mapx,mapy).int_7 = grid_inc;
+        /* Set to current grid */
+        /* figure out what we are on */
+        if (IS_POWER_LINE(mapx, mapy)) {
+            grid[grid_num]->power_lines++;
+            MP_INFO(mapx, mapy).int_5 = (count++ % POWER_MODULUS);
+            if ((MP_TYPE(mapx, mapy) >= 1) && (MP_TYPE(mapx, mapy) <= 11))
+                MP_TYPE(mapx, mapy) += 11;
+        }
+        MP_INFO(mapx, mapy).int_6 = grid_num;
+        MP_INFO(mapx, mapy).int_7 = grid_inc;
 
-	/* For each direction, check map bounds, check if there is power stuff
-	   there, then either remember to follow it later or start a new
-	   recursion to follow the path now */
+        /* For each direction, check map bounds, check if there is power stuff
+           there, then either remember to follow it later or start a new
+           recursion to follow the path now */
 
-	/* West */
-	if (mapx >= 1)
-	    if ((inc = check_grid(mapx - 1, mapy, -1, 0)))
-		if (dir < 1)
-		    dir = WEST;
-		else
-		    recurse_power_grid(mapx - inc, mapy, count + 1);
-	/* North */
-	if (mapy >= 1) 
-	    if ((inc = check_grid(mapx, mapy - 1, 0, -1)))
-		if (dir < 1)
-		    dir = NORTH;
-		else
-		    recurse_power_grid(mapx, mapy - inc, count + 1);
-	/* East */    
-	if (mapx < WORLD_SIDE_LEN)
-	    if ((inc = check_grid(mapx + 1, mapy, 1, 0)))
-		if (dir < 1)
-		    dir = EAST;
-		else 
-		    recurse_power_grid(mapx + inc, mapy, count + 1);
-	/* South */    
-	if (mapy < WORLD_SIDE_LEN)
-	    if ((inc = check_grid(mapx, mapy + 1, 0, 1)))
-		if (dir < 1)
-		    dir = SOUTH;
-		else 
-		    recurse_power_grid(mapx, mapy + inc, count + 1);
+        /* West */
+        if (mapx >= 1)
+            if ((inc = check_grid(mapx - 1, mapy, -1, 0)))
+                if (dir < 1)
+                    dir = WEST;
+                else
+                    recurse_power_grid(mapx - inc, mapy, count + 1);
+        /* North */
+        if (mapy >= 1)
+            if ((inc = check_grid(mapx, mapy - 1, 0, -1)))
+                if (dir < 1)
+                    dir = NORTH;
+                else
+                    recurse_power_grid(mapx, mapy - inc, count + 1);
+        /* East */
+        if (mapx < WORLD_SIDE_LEN)
+            if ((inc = check_grid(mapx + 1, mapy, 1, 0)))
+                if (dir < 1)
+                    dir = EAST;
+                else
+                    recurse_power_grid(mapx + inc, mapy, count + 1);
+        /* South */
+        if (mapy < WORLD_SIDE_LEN)
+            if ((inc = check_grid(mapx, mapy + 1, 0, 1)))
+                if (dir < 1)
+                    dir = SOUTH;
+                else
+                    recurse_power_grid(mapx, mapy + inc, count + 1);
 
-	/* Move to a new square if the chosen direction is not already mapped. */
-	switch (dir) {
-	case (-1):  /* Didn't find one, must not be any.  Stop looping */ 
-	    {
-		dir = 0; 
-	    } break;
-	case WEST: {
-		if (mapx >= 1)
-		    if ((inc = check_grid(mapx - 1, mapy, -1, 0))) {
-			mapx -= inc;
-			dir = -1;
-		    } else
-			dir = 0;
-	    } break;
-	case NORTH: {
-		if (mapy >= 1)
-		    if ((inc = check_grid(mapx, mapy - 1, 0, -1))) {
-			mapy -= inc;
-			dir = -1;
-		    } else
-			dir = 0;
-	    } break;
-	case EAST: {
-		if (mapx < WORLD_SIDE_LEN)
-		    if ((inc = check_grid(mapx + 1, mapy, 1, 0))) {
-			mapx += inc;
-			dir = -1;
-		    } else
-			dir = 0;
-	    } break;
-	case SOUTH: { 
-		if (mapy < WORLD_SIDE_LEN)
-		    if ((inc = check_grid(mapx, mapy + 1, 0, 1))) {
-			mapy += inc;
-			dir = -1;
-		    } else
-			dir = 0;
-	    } break;
-	} /* switch dir */
-    } /* while dir !=0 */
+        /* Move to a new square if the chosen direction is not already mapped. */
+        switch (dir) {
+        case (-1):             /* Didn't find one, must not be any.  Stop looping */
+            {
+                dir = 0;
+            }
+            break;
+        case WEST:{
+                if (mapx >= 1)
+                    if ((inc = check_grid(mapx - 1, mapy, -1, 0))) {
+                        mapx -= inc;
+                        dir = -1;
+                    } else
+                        dir = 0;
+            }
+            break;
+        case NORTH:{
+                if (mapy >= 1)
+                    if ((inc = check_grid(mapx, mapy - 1, 0, -1))) {
+                        mapy -= inc;
+                        dir = -1;
+                    } else
+                        dir = 0;
+            }
+            break;
+        case EAST:{
+                if (mapx < WORLD_SIDE_LEN)
+                    if ((inc = check_grid(mapx + 1, mapy, 1, 0))) {
+                        mapx += inc;
+                        dir = -1;
+                    } else
+                        dir = 0;
+            }
+            break;
+        case SOUTH:{
+                if (mapy < WORLD_SIDE_LEN)
+                    if ((inc = check_grid(mapx, mapy + 1, 0, 1))) {
+                        mapy += inc;
+                        dir = -1;
+                    } else
+                        dir = 0;
+            }
+            break;
+        }                       /* switch dir */
+    }                           /* while dir !=0 */
 
     level--;
-    /*  printf("exiting recurse_power_grid:level %d\n",level);*/
+    /*  printf("exiting recurse_power_grid:level %d\n",level); */
 }
 
 /* get_power
@@ -287,44 +285,41 @@
    and then try and get power from it's grid.  If we can't, continue.
 */
 
-int 
-get_power (int x, int y, int power, int block_industry)
+int get_power(int x, int y, int power, int block_industry)
 {
-  /* block_industry = 1 for industries and recyclers */
-  int i;
-  int xi, yi;
-  int grid_tmp; /* for simplicity */
+    /* block_industry = 1 for industries and recyclers */
+    int i;
+    int xi, yi;
+    int grid_tmp;               /* for simplicity */
 
-  MP_INFO(x,y).flags |= FLAG_ASKED_FOR_POWER;
-  if (numof_substations == 0)
-    return(0);
+    MP_INFO(x, y).flags |= FLAG_ASKED_FOR_POWER;
+    if (numof_substations == 0)
+        return (0);
 
-  for (i = 0; i < numof_substations; i++) 
-    {
-      xi = substationx[i];
-      yi = substationy[i];
-      if (abs (xi - x) < SUBSTATION_RANGE && 
-	  abs (yi - y) < SUBSTATION_RANGE) {
+    for (i = 0; i < numof_substations; i++) {
+        xi = substationx[i];
+        yi = substationy[i];
+        if (abs(xi - x) < SUBSTATION_RANGE && abs(yi - y) < SUBSTATION_RANGE) {
 
-	if (block_industry != 0 && MP_GROUP(xi, yi) == GROUP_WINDMILL)
-	  continue;
+            if (block_industry != 0 && MP_GROUP(xi, yi) == GROUP_WINDMILL)
+                continue;
 
-	grid_tmp = MP_INFO(xi,yi).int_6;
+            grid_tmp = MP_INFO(xi, yi).int_6;
 
-        /* FIXME: in case of unsatisfied demand, the demand may be counted 
-         * several times in differents substations (in the same grid or not)
-         * and thus diplayed informations are misleading.
-         */
-	grid[grid_tmp]->demand += power;
+            /* FIXME: in case of unsatisfied demand, the demand may be counted 
+             * several times in differents substations (in the same grid or not)
+             * and thus diplayed informations are misleading.
+             */
+            grid[grid_tmp]->demand += power;
 
-	if (grid[grid_tmp]->total_power >= power) {
-	  grid[grid_tmp]->total_power -= power;
-	  MP_INFO(xi,yi).int_4 += power; // local demand in substation xi yi
-          MP_INFO(x,y).flags |= FLAG_GOT_POWER;
-	  return 1;
-	}
-	
-      }
+            if (grid[grid_tmp]->total_power >= power) {
+                grid[grid_tmp]->total_power -= power;
+                MP_INFO(xi, yi).int_4 += power; // local demand in substation xi yi
+                MP_INFO(x, y).flags |= FLAG_GOT_POWER;
+                return 1;
+            }
+
+        }
     }
-  return 0;
+    return 0;
 }

Modified: trunk/src/lincity/power.h
===================================================================
--- trunk/src/lincity/power.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/power.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -4,36 +4,36 @@
 #undef DEBUG_POWER
 
 struct grid_struct {
-  int power_lines;
-  long total_power; 
-  long avail_power; /* Capacity available */
-  long max_power;
-  long demand;
-  short powered;
+    int power_lines;
+    long total_power;
+    long avail_power;           /* Capacity available */
+    long max_power;
+    long demand;
+    short powered;
 };
 
 typedef struct grid_struct Grid;
 
 /* public */
-#define MAX_GRIDS 128 // How many grids in the array, not how many to allocate
-extern Grid* grid[MAX_GRIDS];
+#define MAX_GRIDS 128           // How many grids in the array, not how many to allocate
+extern Grid *grid[MAX_GRIDS];
 
 void map_power_grid(bool resetgrids = false);
-int get_power (int x, int y, int power, int block_industry);
+int get_power(int x, int y, int power, int block_industry);
 void do_windmill(int x, int y);
 void do_power_substation(int x, int y);
 void do_power_source(int x, int y);
 void do_power_source_coal(int x, int y);
 void do_power_line(int x, int y);
-void power_time_step ();
+void power_time_step();
 
 /* intended private */
-void recurse_power_grid (int startx, int starty, int steps);
+void recurse_power_grid(int startx, int starty, int steps);
 int check_grid(int x, int y, int xi, int yi);
 void project_power(int x, int y);
 
-#define POWER_LINE_LOSS 1 /* one KW */
-#define POWER_MODULUS 25 /* Controls how often we see a packet in anim */
+#define POWER_LINE_LOSS 1       /* one KW */
+#define POWER_MODULUS 25        /* Controls how often we see a packet in anim */
 
 #define WEST 1
 #define NORTH 2

Modified: trunk/src/lincity/shrglobs.cpp
===================================================================
--- trunk/src/lincity/shrglobs.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/shrglobs.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -55,7 +55,7 @@
 int sust_old_money_count = 0, sust_old_population = 0, sust_old_population_count = 0;
 int sust_old_tech = 0, sust_old_tech_count = 0, sust_fire_count = 0;
 
-int total_time = 0;    /* game time */
+int total_time = 0;             /* game time */
 
 int population, starving_population;
 int housed_population;
@@ -85,14 +85,11 @@
 
 int selected_type_cost;
 
-int ex_tax_dis[NUMOF_DISCOUNT_TRIGGERS] =
-{
-  EX_DISCOUNT_TRIGGER_1,
-  EX_DISCOUNT_TRIGGER_2,
-  EX_DISCOUNT_TRIGGER_3,
-  EX_DISCOUNT_TRIGGER_4,
-  EX_DISCOUNT_TRIGGER_5,
-  EX_DISCOUNT_TRIGGER_6,
+int ex_tax_dis[NUMOF_DISCOUNT_TRIGGERS] = {
+    EX_DISCOUNT_TRIGGER_1,
+    EX_DISCOUNT_TRIGGER_2,
+    EX_DISCOUNT_TRIGGER_3,
+    EX_DISCOUNT_TRIGGER_4,
+    EX_DISCOUNT_TRIGGER_5,
+    EX_DISCOUNT_TRIGGER_6,
 };
-
-

Modified: trunk/src/lincity/shrtypes.cpp
===================================================================
--- trunk/src/lincity/shrtypes.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/shrtypes.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -14,515 +14,478 @@
 //#include "cliglobs.h"
 #include "engglobs.h"
 
-void
-set_mappoint_used (int fromx, int fromy, int x, int y)
+void set_mappoint_used(int fromx, int fromy, int x, int y)
 {
-    MP_TYPE(x,y) = CST_USED;
-    MP_GROUP(x,y) = GROUP_USED;
-    MP_INFO(x,y).int_1 = fromx;
-    MP_INFO(x,y).int_2 = fromy;
+    MP_TYPE(x, y) = CST_USED;
+    MP_GROUP(x, y) = GROUP_USED;
+    MP_INFO(x, y).int_1 = fromx;
+    MP_INFO(x, y).int_2 = fromy;
 }
 
-  
-void
-set_mappoint (int x, int y, short selected_type)
+void set_mappoint(int x, int y, short selected_type)
 {
-  int grp;
+    int grp;
 
-  if ((grp = get_group_of_type(selected_type)) < 0) return;
+    if ((grp = get_group_of_type(selected_type)) < 0)
+        return;
 
-  MP_TYPE(x,y) = selected_type;
-  MP_GROUP(x,y) = grp;
+    MP_TYPE(x, y) = selected_type;
+    MP_GROUP(x, y) = grp;
 
-  if (main_groups[grp].size == 2)
-    {
-      set_mappoint_used (x, y, x + 1, y);
-      set_mappoint_used (x, y, x, y + 1);
-      set_mappoint_used (x, y, x + 1, y + 1);
-    }
-  else if (main_groups[grp].size == 3)
-    {
-      set_mappoint_used (x, y, x + 1, y);
-      set_mappoint_used (x, y, x + 2, y);
-      set_mappoint_used (x, y, x + 1, y + 1);
-      set_mappoint_used (x, y, x + 2, y + 1);
-      set_mappoint_used (x, y, x + 1, y + 2);
-      set_mappoint_used (x, y, x + 2, y + 2);
-      set_mappoint_used (x, y, x, y + 1);
-      set_mappoint_used (x, y, x, y + 2);
-    }
-  else if (main_groups[grp].size == 4)
-    {
-      set_mappoint_used (x, y, x + 1, y);
-      set_mappoint_used (x, y, x + 2, y);
-      set_mappoint_used (x, y, x + 1, y + 1);
-      set_mappoint_used (x, y, x + 2, y + 1);
-      set_mappoint_used (x, y, x + 1, y + 2);
-      set_mappoint_used (x, y, x + 2, y + 2);
-      set_mappoint_used (x, y, x, y + 1);
-      set_mappoint_used (x, y, x, y + 2);
+    if (main_groups[grp].size == 2) {
+        set_mappoint_used(x, y, x + 1, y);
+        set_mappoint_used(x, y, x, y + 1);
+        set_mappoint_used(x, y, x + 1, y + 1);
+    } else if (main_groups[grp].size == 3) {
+        set_mappoint_used(x, y, x + 1, y);
+        set_mappoint_used(x, y, x + 2, y);
+        set_mappoint_used(x, y, x + 1, y + 1);
+        set_mappoint_used(x, y, x + 2, y + 1);
+        set_mappoint_used(x, y, x + 1, y + 2);
+        set_mappoint_used(x, y, x + 2, y + 2);
+        set_mappoint_used(x, y, x, y + 1);
+        set_mappoint_used(x, y, x, y + 2);
+    } else if (main_groups[grp].size == 4) {
+        set_mappoint_used(x, y, x + 1, y);
+        set_mappoint_used(x, y, x + 2, y);
+        set_mappoint_used(x, y, x + 1, y + 1);
+        set_mappoint_used(x, y, x + 2, y + 1);
+        set_mappoint_used(x, y, x + 1, y + 2);
+        set_mappoint_used(x, y, x + 2, y + 2);
+        set_mappoint_used(x, y, x, y + 1);
+        set_mappoint_used(x, y, x, y + 2);
 
-      set_mappoint_used (x, y, x + 3, y);
-      set_mappoint_used (x, y, x + 3, y + 1);
-      set_mappoint_used (x, y, x + 3, y + 2);
-      set_mappoint_used (x, y, x + 3, y + 3);
-      set_mappoint_used (x, y, x, y + 3);
-      set_mappoint_used (x, y, x + 1, y + 3);
-      set_mappoint_used (x, y, x + 2, y + 3);
+        set_mappoint_used(x, y, x + 3, y);
+        set_mappoint_used(x, y, x + 3, y + 1);
+        set_mappoint_used(x, y, x + 3, y + 2);
+        set_mappoint_used(x, y, x + 3, y + 3);
+        set_mappoint_used(x, y, x, y + 3);
+        set_mappoint_used(x, y, x + 1, y + 3);
+        set_mappoint_used(x, y, x + 2, y + 3);
     }
 }
 
-
-void
-connect_transport (int originx, int originy, int w, int h)
+void connect_transport(int originx, int originy, int w, int h)
 {
-  int x, y, mask, tflags;
-  short group, type;
+    int x, y, mask, tflags;
+    short group, type;
 
-  static const short power_table[16] =
-  {
-    CST_POWERL_H_D, CST_POWERL_V_D, CST_POWERL_H_D, CST_POWERL_RD_D,
-    CST_POWERL_H_D, CST_POWERL_LD_D, CST_POWERL_H_D, CST_POWERL_LDR_D,
-    CST_POWERL_V_D, CST_POWERL_V_D, CST_POWERL_RU_D, CST_POWERL_UDR_D,
-    CST_POWERL_LU_D, CST_POWERL_LDU_D, CST_POWERL_LUR_D, CST_POWERL_LUDR_D
-  };
-  static const short track_table[16] =
-  {
-    CST_TRACK_LR, CST_TRACK_LR, CST_TRACK_UD, CST_TRACK_LU,
-    CST_TRACK_LR, CST_TRACK_LR, CST_TRACK_UR, CST_TRACK_LUR,
-    CST_TRACK_UD, CST_TRACK_LD, CST_TRACK_UD, CST_TRACK_LUD,
-    CST_TRACK_DR, CST_TRACK_LDR, CST_TRACK_UDR, CST_TRACK_LUDR
-  };
-  static const short road_table[16] =
-  {
-    CST_ROAD_LR, CST_ROAD_LR, CST_ROAD_UD, CST_ROAD_LU,
-    CST_ROAD_LR, CST_ROAD_LR, CST_ROAD_UR, CST_ROAD_LUR,
-    CST_ROAD_UD, CST_ROAD_LD, CST_ROAD_UD, CST_ROAD_LUD,
-    CST_ROAD_DR, CST_ROAD_LDR, CST_ROAD_UDR, CST_ROAD_LUDR
-  };
-  static const short rail_table[16] =
-  {
-    CST_RAIL_LR, CST_RAIL_LR, CST_RAIL_UD, CST_RAIL_LU,
-    CST_RAIL_LR, CST_RAIL_LR, CST_RAIL_UR, CST_RAIL_LUR,
-    CST_RAIL_UD, CST_RAIL_LD, CST_RAIL_UD, CST_RAIL_LUD,
-    CST_RAIL_DR, CST_RAIL_LDR, CST_RAIL_UDR, CST_RAIL_LUDR
-  }; 
-  static const short water_table[16] =
-  {
-    CST_WATER, CST_WATER_D, CST_WATER_R, CST_WATER_RD,
-    CST_WATER_L, CST_WATER_LD, CST_WATER_LR, CST_WATER_LRD,
-    CST_WATER_U, CST_WATER_UD, CST_WATER_UR, CST_WATER_URD,
-    CST_WATER_LU, CST_WATER_LUD, CST_WATER_LUR, CST_WATER_LURD
-  };
+    static const short power_table[16] = {
+        CST_POWERL_H_D, CST_POWERL_V_D, CST_POWERL_H_D, CST_POWERL_RD_D,
+        CST_POWERL_H_D, CST_POWERL_LD_D, CST_POWERL_H_D, CST_POWERL_LDR_D,
+        CST_POWERL_V_D, CST_POWERL_V_D, CST_POWERL_RU_D, CST_POWERL_UDR_D,
+        CST_POWERL_LU_D, CST_POWERL_LDU_D, CST_POWERL_LUR_D, CST_POWERL_LUDR_D
+    };
+    static const short track_table[16] = {
+        CST_TRACK_LR, CST_TRACK_LR, CST_TRACK_UD, CST_TRACK_LU,
+        CST_TRACK_LR, CST_TRACK_LR, CST_TRACK_UR, CST_TRACK_LUR,
+        CST_TRACK_UD, CST_TRACK_LD, CST_TRACK_UD, CST_TRACK_LUD,
+        CST_TRACK_DR, CST_TRACK_LDR, CST_TRACK_UDR, CST_TRACK_LUDR
+    };
+    static const short road_table[16] = {
+        CST_ROAD_LR, CST_ROAD_LR, CST_ROAD_UD, CST_ROAD_LU,
+        CST_ROAD_LR, CST_ROAD_LR, CST_ROAD_UR, CST_ROAD_LUR,
+        CST_ROAD_UD, CST_ROAD_LD, CST_ROAD_UD, CST_ROAD_LUD,
+        CST_ROAD_DR, CST_ROAD_LDR, CST_ROAD_UDR, CST_ROAD_LUDR
+    };
+    static const short rail_table[16] = {
+        CST_RAIL_LR, CST_RAIL_LR, CST_RAIL_UD, CST_RAIL_LU,
+        CST_RAIL_LR, CST_RAIL_LR, CST_RAIL_UR, CST_RAIL_LUR,
+        CST_RAIL_UD, CST_RAIL_LD, CST_RAIL_UD, CST_RAIL_LUD,
+        CST_RAIL_DR, CST_RAIL_LDR, CST_RAIL_UDR, CST_RAIL_LUDR
+    };
+    static const short water_table[16] = {
+        CST_WATER, CST_WATER_D, CST_WATER_R, CST_WATER_RD,
+        CST_WATER_L, CST_WATER_LD, CST_WATER_LR, CST_WATER_LRD,
+        CST_WATER_U, CST_WATER_UD, CST_WATER_UR, CST_WATER_URD,
+        CST_WATER_LU, CST_WATER_LUD, CST_WATER_LUR, CST_WATER_LURD
+    };
 
-  /* Adjust originx,originy,w,h to proper range */
-  if (originx <= 0) {
-    w -= 1 - originx;
-    originx = 1;
-  }
-  if (originy <= 0) {
-    h -= 1 - originy;
-    originy = 1;
-  }
-  if (originx + w >= WORLD_SIDE_LEN) {
-    w = WORLD_SIDE_LEN - originx;
-  }
-  if (originy + h >= WORLD_SIDE_LEN) {
-    h = WORLD_SIDE_LEN - originy;
-  }
-  
-  for (x = originx; x < originx + w; x++) {
-    for (y = originy; y < originy + h; y++) {
-      switch (MP_GROUP(x,y))
-	{
-	case GROUP_POWER_LINE:
-	  /* First, set up a mask indicating into which directions 
-	     power may be transferred */
-	  mask = 0;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y > 0)
+    /* Adjust originx,originy,w,h to proper range */
+    if (originx <= 0) {
+        w -= 1 - originx;
+        originx = 1;
+    }
+    if (originy <= 0) {
+        h -= 1 - originy;
+        originy = 1;
+    }
+    if (originx + w >= WORLD_SIDE_LEN) {
+        w = WORLD_SIDE_LEN - originx;
+    }
+    if (originy + h >= WORLD_SIDE_LEN) {
+        h = WORLD_SIDE_LEN - originy;
+    }
+
+    for (x = originx; x < originx + w; x++) {
+        for (y = originy; y < originy + h; y++) {
+            switch (MP_GROUP(x, y)) {
+            case GROUP_POWER_LINE:
+                /* First, set up a mask indicating into which directions 
+                   power may be transferred */
+                mask = 0;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y > 0)
 #endif
-	    {		/* up -- (ThMO) */
-	      group = MP_GROUP(x,y-1);
+                {               /* up -- (ThMO) */
+                    group = MP_GROUP(x, y - 1);
 
-	      /* see if dug under track, rail or road */
+                    /* see if dug under track, rail or road */
 
-	      if (y > 1 && (group == GROUP_TRACK
-			    || group == GROUP_RAIL
-			    || group == GROUP_ROAD
-			    || group == GROUP_WATER))
-		group = MP_GROUP(x,y-2);
-	      switch (group)
-		{
-		case GROUP_POWER_LINE:
-		case GROUP_SOLAR_POWER:
-		case GROUP_SUBSTATION:
-		case GROUP_COAL_POWER:
-		  mask |= 8;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x > 0)
+                    if (y > 1 && (group == GROUP_TRACK
+                                  || group == GROUP_RAIL || group == GROUP_ROAD || group == GROUP_WATER))
+                        group = MP_GROUP(x, y - 2);
+                    switch (group) {
+                    case GROUP_POWER_LINE:
+                    case GROUP_SOLAR_POWER:
+                    case GROUP_SUBSTATION:
+                    case GROUP_COAL_POWER:
+                        mask |= 8;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x > 0)
 #endif
-	    {		/* left -- (ThMO) */
-	      group = MP_GROUP(x-1,y);
-	      if (x > 1 && (group == GROUP_TRACK
-			    || group == GROUP_RAIL
-			    || group == GROUP_ROAD
-			    || group == GROUP_WATER))
-		group = MP_GROUP(x-2,y);
-	      switch (group)
-		{
-		case GROUP_POWER_LINE:
-		case GROUP_SOLAR_POWER:
-		case GROUP_SUBSTATION:
-		case GROUP_COAL_POWER:
-		  mask |= 4;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x < WORLD_SIDE_LEN - 1)
+                {               /* left -- (ThMO) */
+                    group = MP_GROUP(x - 1, y);
+                    if (x > 1 && (group == GROUP_TRACK
+                                  || group == GROUP_RAIL || group == GROUP_ROAD || group == GROUP_WATER))
+                        group = MP_GROUP(x - 2, y);
+                    switch (group) {
+                    case GROUP_POWER_LINE:
+                    case GROUP_SOLAR_POWER:
+                    case GROUP_SUBSTATION:
+                    case GROUP_COAL_POWER:
+                        mask |= 4;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x < WORLD_SIDE_LEN - 1)
 #endif
-	    {		/* right -- (ThMO) */
-	      group = MP_GROUP(x+1,y);
-	      if (x < WORLD_SIDE_LEN - 2 && (group == GROUP_TRACK
-					     || group == GROUP_RAIL
-					     || group == GROUP_ROAD
-					     || group == GROUP_WATER))
-		group = MP_GROUP(x+2,y);
-	      switch (group)
-		{
-		case GROUP_WINDMILL:
-		  if (MP_INFO(x + 1,y).int_2 < MODERN_WINDMILL_TECH)
-		    break;
-		case GROUP_POWER_LINE:
-		case GROUP_SOLAR_POWER:
-		case GROUP_SUBSTATION:
-		case GROUP_COAL_POWER:
-		  mask |= 2;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y < WORLD_SIDE_LEN - 1)
+                {               /* right -- (ThMO) */
+                    group = MP_GROUP(x + 1, y);
+                    if (x < WORLD_SIDE_LEN - 2 && (group == GROUP_TRACK
+                                                   || group == GROUP_RAIL
+                                                   || group == GROUP_ROAD || group == GROUP_WATER))
+                        group = MP_GROUP(x + 2, y);
+                    switch (group) {
+                    case GROUP_WINDMILL:
+                        if (MP_INFO(x + 1, y).int_2 < MODERN_WINDMILL_TECH)
+                            break;
+                    case GROUP_POWER_LINE:
+                    case GROUP_SOLAR_POWER:
+                    case GROUP_SUBSTATION:
+                    case GROUP_COAL_POWER:
+                        mask |= 2;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y < WORLD_SIDE_LEN - 1)
 #endif
-	    {		/* down -- (ThMO) */
-	      group = MP_GROUP(x,y+1);
-	      if (y < WORLD_SIDE_LEN - 2 && (group == GROUP_TRACK
-					     || group == GROUP_RAIL
-					     || group == GROUP_ROAD
-					     || group == GROUP_WATER))
-		group = MP_GROUP(x,y+2);
-	      switch (group)
-		{
-		case GROUP_WINDMILL:
-		  if (MP_INFO(x,y + 1).int_2 < MODERN_WINDMILL_TECH)
-		    break;
-		case GROUP_POWER_LINE:
-		case GROUP_SOLAR_POWER:
-		case GROUP_SUBSTATION:
-		case GROUP_COAL_POWER:
-		  ++mask;
-		  break;
-		}
-	    }
-	  /* Next, set the connectivity into MP_TYPE */
-	  MP_TYPE(x,y) = power_table[mask];
-	  /* Finally, adjust MP_TYPE to show electon bolt */
+                {               /* down -- (ThMO) */
+                    group = MP_GROUP(x, y + 1);
+                    if (y < WORLD_SIDE_LEN - 2 && (group == GROUP_TRACK
+                                                   || group == GROUP_RAIL
+                                                   || group == GROUP_ROAD || group == GROUP_WATER))
+                        group = MP_GROUP(x, y + 2);
+                    switch (group) {
+                    case GROUP_WINDMILL:
+                        if (MP_INFO(x, y + 1).int_2 < MODERN_WINDMILL_TECH)
+                            break;
+                    case GROUP_POWER_LINE:
+                    case GROUP_SOLAR_POWER:
+                    case GROUP_SUBSTATION:
+                    case GROUP_COAL_POWER:
+                        ++mask;
+                        break;
+                    }
+                }
+                /* Next, set the connectivity into MP_TYPE */
+                MP_TYPE(x, y) = power_table[mask];
+                /* Finally, adjust MP_TYPE to show electon bolt */
 #ifdef commentout
-	   WCK: This is done in do_power_line now 
-	  	  if (MP_INFO(x,y).int_1 != 0)
-		  MP_TYPE(x,y) -= 11; 
+              WCK:This is done in do_power_line now if (MP_INFO(x, y).int_1 != 0)
+                    MP_TYPE(x, y) -= 11;
 #endif
-	  break;
+                break;
 
-	case GROUP_TRACK:
+            case GROUP_TRACK:
 #if	FLAG_LEFT != 1 || FLAG_UP != 2 || FLAG_RIGHT != 4 || FLAG_DOWN != 8
 #error  check_track_graphics(): you loose
 #error  this algorithm depends on proper flag settings -- (ThMO)
 #endif
-	  mask = 0;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y > 0)
+                mask = 0;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y > 0)
 #endif
-	    {
-	      if (MP_GROUP(x,y-1) == GROUP_TRACK)
-		mask |= FLAG_UP;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x > 0)
+                {
+                    if (MP_GROUP(x, y - 1) == GROUP_TRACK)
+                        mask |= FLAG_UP;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x > 0)
 #endif
-	    {
-	      if (MP_GROUP(x-1,y) == GROUP_TRACK)
-		mask |= FLAG_LEFT;
-	    }
-	  tflags = mask;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x < WORLD_SIDE_LEN - 1)
+                {
+                    if (MP_GROUP(x - 1, y) == GROUP_TRACK)
+                        mask |= FLAG_LEFT;
+                }
+                tflags = mask;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x+1,y))
-		{
-		case GROUP_TRACK:
-		  tflags |= FLAG_RIGHT;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_RIGHT;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (y > 0)
+                {
+                    switch (MP_GROUP(x + 1, y)) {
+                    case GROUP_TRACK:
+                        tflags |= FLAG_RIGHT;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_RIGHT;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (y > 0)
 #endif
-		    if (MP_GROUP(x+1,y-1) == GROUP_COAL_POWER)
-		      mask |= FLAG_RIGHT;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y < WORLD_SIDE_LEN - 1)
+                            if (MP_GROUP(x + 1, y - 1) == GROUP_COAL_POWER)
+                                mask |= FLAG_RIGHT;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x,y+1))
-		{
-		case GROUP_TRACK:
-		  tflags |= FLAG_DOWN;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_DOWN;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (x > 0)
+                {
+                    switch (MP_GROUP(x, y + 1)) {
+                    case GROUP_TRACK:
+                        tflags |= FLAG_DOWN;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_DOWN;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (x > 0)
 #endif
-		    if (MP_GROUP(x-1,y+1) == GROUP_COAL_POWER)
-		      mask |= FLAG_DOWN;
-		  break;
-		}
-	    }
-	  MP_INFO(x,y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT
-				  | FLAG_RIGHT);
-	  MP_INFO(x,y).flags |= tflags;
-	  MP_TYPE(x,y) = track_table[mask];
-	  break;
+                            if (MP_GROUP(x - 1, y + 1) == GROUP_COAL_POWER)
+                                mask |= FLAG_DOWN;
+                        break;
+                    }
+                }
+                MP_INFO(x, y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT | FLAG_RIGHT);
+                MP_INFO(x, y).flags |= tflags;
+                MP_TYPE(x, y) = track_table[mask];
+                break;
 
-	case GROUP_ROAD:
+            case GROUP_ROAD:
 #if	FLAG_LEFT != 1 || FLAG_UP != 2 || FLAG_RIGHT != 4 || FLAG_DOWN != 8
 #error  check_road_graphics(): you loose
 #error  this algorithm depends on proper flag settings -- (ThMO)
 #endif
-	  mask = 0;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y > 0)
+                mask = 0;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y > 0)
 #endif
-	    {
-	      if (MP_GROUP(x,y-1) == GROUP_ROAD)
-		mask |= FLAG_UP;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x > 0)
+                {
+                    if (MP_GROUP(x, y - 1) == GROUP_ROAD)
+                        mask |= FLAG_UP;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x > 0)
 #endif
-	    {
-	      if (MP_GROUP(x-1,y) == GROUP_ROAD)
-		mask |= FLAG_LEFT;
-	    }
-	  tflags = mask;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x < WORLD_SIDE_LEN - 1)
+                {
+                    if (MP_GROUP(x - 1, y) == GROUP_ROAD)
+                        mask |= FLAG_LEFT;
+                }
+                tflags = mask;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x+1,y))
-		{
-		case GROUP_ROAD:
-		  tflags |= FLAG_RIGHT;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_RIGHT;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (y > 0)
+                {
+                    switch (MP_GROUP(x + 1, y)) {
+                    case GROUP_ROAD:
+                        tflags |= FLAG_RIGHT;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_RIGHT;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (y > 0)
 #endif
-		    if (MP_GROUP(x+1,y-1) == GROUP_COAL_POWER)
-		      mask |= FLAG_RIGHT;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y < WORLD_SIDE_LEN - 1)
+                            if (MP_GROUP(x + 1, y - 1) == GROUP_COAL_POWER)
+                                mask |= FLAG_RIGHT;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x,y+1))
-		{
-		case GROUP_ROAD:
-		  tflags |= FLAG_DOWN;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_DOWN;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (x > 0)
+                {
+                    switch (MP_GROUP(x, y + 1)) {
+                    case GROUP_ROAD:
+                        tflags |= FLAG_DOWN;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_DOWN;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (x > 0)
 #endif
-		    if (MP_GROUP(x-1,y+1) == GROUP_COAL_POWER)
-		      mask |= FLAG_DOWN;
-		  break;
-		}
-	    }
-	  MP_INFO(x,y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT
-				  | FLAG_RIGHT);
-	  MP_INFO(x,y).flags |= tflags;
-	  MP_TYPE(x,y) = road_table[mask];
-	  break;
+                            if (MP_GROUP(x - 1, y + 1) == GROUP_COAL_POWER)
+                                mask |= FLAG_DOWN;
+                        break;
+                    }
+                }
+                MP_INFO(x, y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT | FLAG_RIGHT);
+                MP_INFO(x, y).flags |= tflags;
+                MP_TYPE(x, y) = road_table[mask];
+                break;
 
-	case GROUP_RAIL:
+            case GROUP_RAIL:
 #if	FLAG_LEFT != 1 || FLAG_UP != 2 || FLAG_RIGHT != 4 || FLAG_DOWN != 8
 #error  check_rail_graphics(): you loose
 #error  this algorithm depends on proper flag settings -- (ThMO)
 #endif
-	  mask = 0;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y > 0)
+                mask = 0;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y > 0)
 #endif
-	    {
-	      if (MP_GROUP(x,y-1) == GROUP_RAIL)
-		mask |= FLAG_UP;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x > 0)
+                {
+                    if (MP_GROUP(x, y - 1) == GROUP_RAIL)
+                        mask |= FLAG_UP;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x > 0)
 #endif
-	    {
-	      if (MP_GROUP(x-1,y) == GROUP_RAIL)
-		mask |= FLAG_LEFT;
-	    }
-	  tflags = mask;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x < WORLD_SIDE_LEN - 1)
+                {
+                    if (MP_GROUP(x - 1, y) == GROUP_RAIL)
+                        mask |= FLAG_LEFT;
+                }
+                tflags = mask;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x+1,y))
-		{
-		case GROUP_RAIL:
-		  tflags |= FLAG_RIGHT;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_RIGHT;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (y > 0)
+                {
+                    switch (MP_GROUP(x + 1, y)) {
+                    case GROUP_RAIL:
+                        tflags |= FLAG_RIGHT;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_RIGHT;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (y > 0)
 #endif
-		    if (MP_GROUP(x+1,y-1) == GROUP_COAL_POWER)
-		      mask |= FLAG_RIGHT;
-		  break;
-		}
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y < WORLD_SIDE_LEN - 1)
+                            if (MP_GROUP(x + 1, y - 1) == GROUP_COAL_POWER)
+                                mask |= FLAG_RIGHT;
+                        break;
+                    }
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y < WORLD_SIDE_LEN - 1)
 #endif
-	    {
-	      switch (MP_GROUP(x,y + 1))
-		{
-		case GROUP_RAIL:
-		  tflags |= FLAG_DOWN;
-		case GROUP_COMMUNE:
-		case GROUP_COALMINE:
-		case GROUP_OREMINE:
-		case GROUP_INDUSTRY_L:
-		case GROUP_INDUSTRY_H:
-		case GROUP_RECYCLE:
-		case GROUP_TIP:
-		case GROUP_PORT:
-		  mask |= FLAG_DOWN;
-		  break;
-		default:
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-		  if (x > 0)
+                {
+                    switch (MP_GROUP(x, y + 1)) {
+                    case GROUP_RAIL:
+                        tflags |= FLAG_DOWN;
+                    case GROUP_COMMUNE:
+                    case GROUP_COALMINE:
+                    case GROUP_OREMINE:
+                    case GROUP_INDUSTRY_L:
+                    case GROUP_INDUSTRY_H:
+                    case GROUP_RECYCLE:
+                    case GROUP_TIP:
+                    case GROUP_PORT:
+                        mask |= FLAG_DOWN;
+                        break;
+                    default:
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                        if (x > 0)
 #endif
-		    if (MP_GROUP(x - 1,y + 1)
-			== GROUP_COAL_POWER)
-		      mask |= FLAG_DOWN;
-		  break;
-		}
-	    }
-	  MP_INFO(x,y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT
-				  | FLAG_RIGHT);
-	  MP_INFO(x,y).flags |= tflags;
-	  MP_TYPE(x,y) = rail_table[mask];
-	  break;
+                            if (MP_GROUP(x - 1, y + 1)
+                                == GROUP_COAL_POWER)
+                                mask |= FLAG_DOWN;
+                        break;
+                    }
+                }
+                MP_INFO(x, y).flags &= ~(FLAG_UP | FLAG_DOWN | FLAG_LEFT | FLAG_RIGHT);
+                MP_INFO(x, y).flags |= tflags;
+                MP_TYPE(x, y) = rail_table[mask];
+                break;
 
-	case GROUP_WATER:
-	  mask = 0;
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y > 0)
+            case GROUP_WATER:
+                mask = 0;
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y > 0)
 #endif
-	    {		/* up -- (ThMO) */
-	      if (MP_GROUP(x,y - 1)
-		  == GROUP_WATER)
-		mask |= 8;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x > 0)
+                {               /* up -- (ThMO) */
+                    if (MP_GROUP(x, y - 1)
+                        == GROUP_WATER)
+                        mask |= 8;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x > 0)
 #endif
-	    {		/* left -- (ThMO) */
-	      type = MP_TYPE(x - 1,y);
-	      if ((type == CST_USED && 
-		   MP_GROUP(MP_INFO(x-1,y).int_1,MP_INFO(x-1,y).int_2)
-		   == GROUP_PORT)
-		  || get_group_of_type(type) == GROUP_WATER)
-		mask |= 4;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (x < WORLD_SIDE_LEN - 1)
+                {               /* left -- (ThMO) */
+                    type = MP_TYPE(x - 1, y);
+                    if ((type == CST_USED && MP_GROUP(MP_INFO(x - 1, y).int_1, MP_INFO(x - 1, y).int_2)
+                         == GROUP_PORT)
+                        || get_group_of_type(type) == GROUP_WATER)
+                        mask |= 4;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (x < WORLD_SIDE_LEN - 1)
 #endif
-	    {		/* right -- (ThMO) */
-	      if (MP_GROUP(x + 1,y)
-		  == GROUP_WATER)
-		mask |= 2;
-	    }
-#ifdef	THOMMY_MAY_BE_WRONG	/* just in case -- (ThMO) */
-	  if (y < WORLD_SIDE_LEN - 1)
+                {               /* right -- (ThMO) */
+                    if (MP_GROUP(x + 1, y)
+                        == GROUP_WATER)
+                        mask |= 2;
+                }
+#ifdef	THOMMY_MAY_BE_WRONG     /* just in case -- (ThMO) */
+                if (y < WORLD_SIDE_LEN - 1)
 #endif
-	    {		/* down -- (ThMO) */
-	      if (MP_GROUP(x,y + 1)
-		  == GROUP_WATER)
-		++mask;
-	    }
-	  MP_TYPE(x,y) = water_table[mask];
-	  break;
-	} /* end switch */
-    } /* end for */
-  } /* end for */
+                {               /* down -- (ThMO) */
+                    if (MP_GROUP(x, y + 1)
+                        == GROUP_WATER)
+                        ++mask;
+                }
+                MP_TYPE(x, y) = water_table[mask];
+                break;
+            }                   /* end switch */
+        }                       /* end for */
+    }                           /* end for */
 }
-

Modified: trunk/src/lincity/simulate.cpp
===================================================================
--- trunk/src/lincity/simulate.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/simulate.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -39,34 +39,33 @@
 #include "gui_interface/pbar_interface.h"
 //#include "module_buttons.h"
 
-extern void connect_rivers (void);
-extern void do_daily_ecology (void);
+extern void connect_rivers(void);
+extern void do_daily_ecology(void);
 
 /* ---------------------------------------------------------------------- *
  * Private Fn Prototypes
  * ---------------------------------------------------------------------- */
-static void do_periodic_events (void);
-static void end_of_month_update (void);
-static void start_of_year_update (void);
-static void end_of_year_update (void);
-static void random_start (int* originx, int* originy);
-static void simulate_mappoints (void);
-static void quick_start_add (int x, int y, short type, int size);
-static void nullify_mappoint (int x, int y);
-static void setup_land (void);
+static void do_periodic_events(void);
+static void end_of_month_update(void);
+static void start_of_year_update(void);
+static void end_of_year_update(void);
+static void random_start(int *originx, int *originy);
+static void simulate_mappoints(void);
+static void quick_start_add(int x, int y, short type, int size);
+static void nullify_mappoint(int x, int y);
+static void setup_land(void);
 
 #define IS_RIVER(x,y) (MP_INFO(x,y).flags & FLAG_IS_RIVER)
 
 /* ---------------------------------------------------------------------- *
  * Public Functions
  * ---------------------------------------------------------------------- */
-void
-do_time_step (void)
+void do_time_step(void)
 {
     /* Increment game time */
     total_time++;
 #ifdef DEBUG_ENGINE
-    printf ("In do_time_step (%d)\n", total_time);
+    printf("In do_time_step (%d)\n", total_time);
 #endif
 
     /* Initialize daily accumulators */
@@ -74,281 +73,261 @@
 
     /* Initialize monthly accumulators */
     if (total_time % NUMOF_DAYS_IN_MONTH == 0) {
-	init_monthly();
+        init_monthly();
     }
 
     /* Initialize yearly accumulators */
     if ((total_time % NUMOF_DAYS_IN_YEAR) == 0) {
-	init_yearly();
+        init_yearly();
     }
 
     /* Clear the power grid */
-    power_time_step ();
+    power_time_step();
 
     /* Run through simulation equations for each farm, residence, etc. */
-    simulate_mappoints ();
+    simulate_mappoints();
 
     /* Now do the stuff that happens once a year, once a month, etc. */
-    do_periodic_events ();
+    do_periodic_events();
 }
 
-static void 
-nullify_mappoint (int x, int y)
+static void nullify_mappoint(int x, int y)
 {
-    MP_TYPE(x,y) = CST_GREEN;
-    MP_GROUP(x,y) = GROUP_BARE;
-    MP_SIZE(x,y) = 1;
-    MP_POL(x,y) = 0;
-    MP_INFO(x,y).population = 0;
-    MP_INFO(x,y).flags = 0;
-    MP_INFO(x,y).coal_reserve = 0;
-    MP_INFO(x,y).ore_reserve = 0;
-    MP_INFO(x,y).int_1 = 0;
-    MP_INFO(x,y).int_2 = 0;
-    MP_INFO(x,y).int_3 = 0;
-    MP_INFO(x,y).int_4 = 0;
-    MP_INFO(x,y).int_5 = 0;
-    MP_INFO(x,y).int_6 = 0;
-    MP_INFO(x,y).int_7 = 0;
+    MP_TYPE(x, y) = CST_GREEN;
+    MP_GROUP(x, y) = GROUP_BARE;
+    MP_SIZE(x, y) = 1;
+    MP_POL(x, y) = 0;
+    MP_INFO(x, y).population = 0;
+    MP_INFO(x, y).flags = 0;
+    MP_INFO(x, y).coal_reserve = 0;
+    MP_INFO(x, y).ore_reserve = 0;
+    MP_INFO(x, y).int_1 = 0;
+    MP_INFO(x, y).int_2 = 0;
+    MP_INFO(x, y).int_3 = 0;
+    MP_INFO(x, y).int_4 = 0;
+    MP_INFO(x, y).int_5 = 0;
+    MP_INFO(x, y).int_6 = 0;
+    MP_INFO(x, y).int_7 = 0;
 }
 
-static void 
-simulate_mappoints (void)
+static void simulate_mappoints(void)
 {
     int xx, yy;
-    shuffle_mappoint_array ();
+    shuffle_mappoint_array();
     for (yy = 0; yy < WORLD_SIDE_LEN; yy++) {
-	/* indirection to rand array to stop lots of linear effects */
-	int y = mappoint_array_y[yy];
-	for (xx = 0; xx < WORLD_SIDE_LEN; xx++) {
-	    int x = mappoint_array_x[xx];
-	    short grp = MP_GROUP(x,y);
-	    if (grp == GROUP_USED || GROUP_IS_BARE(grp))
-		continue;
-	    switch (grp) {
-	    case GROUP_TRACK:
-		do_track (x, y);
-		break;
-	    case GROUP_RAIL:
-		do_rail (x, y);
-		break;
-	    case GROUP_ROAD:
-		do_road (x, y);
-		break;
-	    case GROUP_ORGANIC_FARM:
-		do_organic_farm (x, y);
-		break;
-	    case GROUP_MARKET:
-		do_market (x, y);
-		break;
-	    case GROUP_RESIDENCE_LL:
-		do_residence (x, y);
-		break;
-	    case GROUP_RESIDENCE_ML:
-		do_residence (x, y);
-		break;
-	    case GROUP_RESIDENCE_HL:
-		do_residence (x, y);
-		break;
-	    case GROUP_RESIDENCE_LH:
-		do_residence (x, y);
-		break;
-	    case GROUP_RESIDENCE_MH:
-		do_residence (x, y);
-		break;
-	    case GROUP_RESIDENCE_HH:
-		do_residence (x, y);
-		break;
-	    case GROUP_POWER_LINE:
-	        do_power_line (x, y);
-		break;
-	    case GROUP_SOLAR_POWER:
-		do_power_source (x, y);
-		break;
-	    case GROUP_SUBSTATION:
-		do_power_substation (x, y);
-		break;
-	    case GROUP_COALMINE:
-		do_coalmine (x, y);
-		break;
-	    case GROUP_COAL_POWER:
-		do_power_source_coal (x, y);
-		break;
-	    case GROUP_INDUSTRY_L:
-		do_industry_l (x, y);
-		break;
-	    case GROUP_INDUSTRY_H:
-		do_industry_h (x, y);
-		break;
-	    case GROUP_COMMUNE:
-		do_commune (x, y);
-		break;
-	    case GROUP_OREMINE:
-		do_oremine (x, y);
-		break;
-	    case GROUP_PORT:
-		do_port (x, y);
-		break;
-	    case GROUP_TIP:
-		do_tip (x, y);
-		break;
-	    case GROUP_PARKLAND:
-		do_parkland (x, y);
-		break;
-	    case GROUP_UNIVERSITY:
-		do_university (x, y);
-		break;
-	    case GROUP_RECYCLE:
-		do_recycle (x, y);
-		break;
-	    case GROUP_HEALTH:
-		do_health_centre (x, y);
-		break;
-	    case GROUP_ROCKET:
-		do_rocket_pad (x, y);
-		break;
-	    case GROUP_WINDMILL:
-		do_windmill (x, y);
-		break;
-	    case GROUP_MONUMENT:
-		do_monument (x, y);
-		break;
-	    case GROUP_SCHOOL:
-		do_school (x, y);
-		break;
-	    case GROUP_BLACKSMITH:
-		do_blacksmith (x, y);
-		break;
-	    case GROUP_MILL:
-		do_mill (x, y);
-		break;
-	    case GROUP_POTTERY:
-		do_pottery (x, y);
-		break;
-	    case GROUP_FIRESTATION:
-		do_firestation (x, y);
-		break;
-	    case GROUP_CRICKET:
-		do_cricket (x, y);
-		break;
-	    case GROUP_FIRE:
-		do_fire (x, y);
-		break;
-	    case GROUP_SHANTY:
-		do_shanty (x, y);
-		break;
-	    }
-	}
+        /* indirection to rand array to stop lots of linear effects */
+        int y = mappoint_array_y[yy];
+        for (xx = 0; xx < WORLD_SIDE_LEN; xx++) {
+            int x = mappoint_array_x[xx];
+            short grp = MP_GROUP(x, y);
+            if (grp == GROUP_USED || GROUP_IS_BARE(grp))
+                continue;
+            switch (grp) {
+            case GROUP_TRACK:
+                do_track(x, y);
+                break;
+            case GROUP_RAIL:
+                do_rail(x, y);
+                break;
+            case GROUP_ROAD:
+                do_road(x, y);
+                break;
+            case GROUP_ORGANIC_FARM:
+                do_organic_farm(x, y);
+                break;
+            case GROUP_MARKET:
+                do_market(x, y);
+                break;
+            case GROUP_RESIDENCE_LL:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_ML:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_HL:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_LH:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_MH:
+                do_residence(x, y);
+                break;
+            case GROUP_RESIDENCE_HH:
+                do_residence(x, y);
+                break;
+            case GROUP_POWER_LINE:
+                do_power_line(x, y);
+                break;
+            case GROUP_SOLAR_POWER:
+                do_power_source(x, y);
+                break;
+            case GROUP_SUBSTATION:
+                do_power_substation(x, y);
+                break;
+            case GROUP_COALMINE:
+                do_coalmine(x, y);
+                break;
+            case GROUP_COAL_POWER:
+                do_power_source_coal(x, y);
+                break;
+            case GROUP_INDUSTRY_L:
+                do_industry_l(x, y);
+                break;
+            case GROUP_INDUSTRY_H:
+                do_industry_h(x, y);
+                break;
+            case GROUP_COMMUNE:
+                do_commune(x, y);
+                break;
+            case GROUP_OREMINE:
+                do_oremine(x, y);
+                break;
+            case GROUP_PORT:
+                do_port(x, y);
+                break;
+            case GROUP_TIP:
+                do_tip(x, y);
+                break;
+            case GROUP_PARKLAND:
+                do_parkland(x, y);
+                break;
+            case GROUP_UNIVERSITY:
+                do_university(x, y);
+                break;
+            case GROUP_RECYCLE:
+                do_recycle(x, y);
+                break;
+            case GROUP_HEALTH:
+                do_health_centre(x, y);
+                break;
+            case GROUP_ROCKET:
+                do_rocket_pad(x, y);
+                break;
+            case GROUP_WINDMILL:
+                do_windmill(x, y);
+                break;
+            case GROUP_MONUMENT:
+                do_monument(x, y);
+                break;
+            case GROUP_SCHOOL:
+                do_school(x, y);
+                break;
+            case GROUP_BLACKSMITH:
+                do_blacksmith(x, y);
+                break;
+            case GROUP_MILL:
+                do_mill(x, y);
+                break;
+            case GROUP_POTTERY:
+                do_pottery(x, y);
+                break;
+            case GROUP_FIRESTATION:
+                do_firestation(x, y);
+                break;
+            case GROUP_CRICKET:
+                do_cricket(x, y);
+                break;
+            case GROUP_FIRE:
+                do_fire(x, y);
+                break;
+            case GROUP_SHANTY:
+                do_shanty(x, y);
+                break;
+            }
+        }
     }
 }
 
 /* ---------------------------------------------------------------------- *
  * Private Functions
  * ---------------------------------------------------------------------- */
-static void
-do_periodic_events (void)
+static void do_periodic_events(void)
 {
-  add_daily_to_monthly();
-  do_daily_ecology ();
+    add_daily_to_monthly();
+    do_daily_ecology();
 
-  if ((total_time % NUMOF_DAYS_IN_YEAR) == 0) {
-    start_of_year_update ();
-  }
-  if ((total_time % DAYS_PER_POLLUTION) == 3) {
-    do_pollution ();
-  }
-  if ((total_time % DAYS_BETWEEN_FIRES) == 9
-      && tech_level > (GROUP_FIRESTATION_TECH * MAX_TECH_LEVEL / 1000)) {
-    do_random_fire (-1, -1, 1);
-  }
-  if ((total_time % DAYS_BETWEEN_COVER) == 75) {
-    clear_fire_health_and_cricket_cover ();
-    do_fire_health_and_cricket_cover ();
-  }
-  if ((total_time % DAYS_BETWEEN_SHANTY) == 85
-      && tech_level > (GROUP_HEALTH_TECH * MAX_TECH_LEVEL / 1000)) {
-   update_shanty ();
-  }
-  if (total_time % NUMOF_DAYS_IN_MONTH == (NUMOF_DAYS_IN_MONTH - 1)) {
-    end_of_month_update ();
-  }
-  if (total_time % NUMOF_DAYS_IN_YEAR == (NUMOF_DAYS_IN_YEAR - 1)) {
-    end_of_year_update ();
-  }
+    if ((total_time % NUMOF_DAYS_IN_YEAR) == 0) {
+        start_of_year_update();
+    }
+    if ((total_time % DAYS_PER_POLLUTION) == 3) {
+        do_pollution();
+    }
+    if ((total_time % DAYS_BETWEEN_FIRES) == 9 && tech_level > (GROUP_FIRESTATION_TECH * MAX_TECH_LEVEL / 1000)) {
+        do_random_fire(-1, -1, 1);
+    }
+    if ((total_time % DAYS_BETWEEN_COVER) == 75) {
+        clear_fire_health_and_cricket_cover();
+        do_fire_health_and_cricket_cover();
+    }
+    if ((total_time % DAYS_BETWEEN_SHANTY) == 85 && tech_level > (GROUP_HEALTH_TECH * MAX_TECH_LEVEL / 1000)) {
+        update_shanty();
+    }
+    if (total_time % NUMOF_DAYS_IN_MONTH == (NUMOF_DAYS_IN_MONTH - 1)) {
+        end_of_month_update();
+    }
+    if (total_time % NUMOF_DAYS_IN_YEAR == (NUMOF_DAYS_IN_YEAR - 1)) {
+        end_of_year_update();
+    }
 }
 
-
-static void 
-end_of_month_update (void)
+static void end_of_month_update(void)
 {
-  /* GCS FIX -- seems to be a bit of engine code embedded in 
-     do_monthgraph(), such as coal_made, coal_used, etc.
-     Check it out soon... */
-  housed_population = (tpopulation / NUMOF_DAYS_IN_MONTH);
-  if ((housed_population + people_pool) > max_pop_ever)
-    max_pop_ever = housed_population + people_pool;
+    /* GCS FIX -- seems to be a bit of engine code embedded in 
+       do_monthgraph(), such as coal_made, coal_used, etc.
+       Check it out soon... */
+    housed_population = (tpopulation / NUMOF_DAYS_IN_MONTH);
+    if ((housed_population + people_pool) > max_pop_ever)
+        max_pop_ever = housed_population + people_pool;
 
-  if (people_pool > 100) {
-    if (rand () % 1000 < people_pool)
-      people_pool -= 10;
-  }
-  if (people_pool < 0)
-    people_pool = 0;
+    if (people_pool > 100) {
+        if (rand() % 1000 < people_pool)
+            people_pool -= 10;
+    }
+    if (people_pool < 0)
+        people_pool = 0;
 
-  if (tech_level > TECH_LEVEL_LOSS_START)
-    {
-      tech_level-=(int)(tech_level*(1./TECH_LEVEL_LOSS)
-	*(1+(tpopulation
-	     *(1./NUMOF_DAYS_IN_MONTH/120
-	       /(TECH_LEVEL_LOSS-200)))));
+    if (tech_level > TECH_LEVEL_LOSS_START) {
+        tech_level -= (int)(tech_level * (1. / TECH_LEVEL_LOSS)
+                            * (1 + (tpopulation * (1. / NUMOF_DAYS_IN_MONTH / 120 / (TECH_LEVEL_LOSS - 200)))));
 
-    }
-  else
-    tech_level += TECH_LEVEL_UNAIDED;
-  /* we can go over 100, but it's even more difficult */
-  if (tech_level > MAX_TECH_LEVEL)
-    tech_level-=(int)((tech_level-MAX_TECH_LEVEL)
-      *(1./TECH_LEVEL_LOSS)
-      *(1+(tpopulation
-	   *(1./NUMOF_DAYS_IN_MONTH/120
-	     /(TECH_LEVEL_LOSS-100)))));
+    } else
+        tech_level += TECH_LEVEL_UNAIDED;
+    /* we can go over 100, but it's even more difficult */
+    if (tech_level > MAX_TECH_LEVEL)
+        tech_level -= (int)((tech_level - MAX_TECH_LEVEL)
+                            * (1. / TECH_LEVEL_LOSS)
+                            * (1 + (tpopulation * (1. / NUMOF_DAYS_IN_MONTH / 120 / (TECH_LEVEL_LOSS - 100)))));
 
-  if (highest_tech_level < tech_level)
-    highest_tech_level = tech_level;
+    if (highest_tech_level < tech_level)
+        highest_tech_level = tech_level;
 
-  deaths_cost += unnat_deaths * UNNAT_DEATHS_COST;
+    deaths_cost += unnat_deaths * UNNAT_DEATHS_COST;
 
 }
 
-
-static void 
-start_of_year_update (void)
+static void start_of_year_update(void)
 {
-  int u;
+    int u;
 
-  sustainability_test ();
+    sustainability_test();
 
-  pollution_deaths_history
-    -= pollution_deaths_history / 100.0;
-  starve_deaths_history
-    -= starve_deaths_history / 100.0;
-  unemployed_history
-    -= unemployed_history / 100.0;
-  u = count_groups (GROUP_UNIVERSITY);
-  if (u > 0) {
-    university_intake_rate = (count_groups (GROUP_SCHOOL) * 20) / u;
-    if (university_intake_rate > 100)
-      university_intake_rate = 100;
-  } else {
-    university_intake_rate = 50;
-  }
+    pollution_deaths_history -= pollution_deaths_history / 100.0;
+    starve_deaths_history -= starve_deaths_history / 100.0;
+    unemployed_history -= unemployed_history / 100.0;
+    u = count_groups(GROUP_UNIVERSITY);
+    if (u > 0) {
+        university_intake_rate = (count_groups(GROUP_SCHOOL) * 20) / u;
+        if (university_intake_rate > 100)
+            university_intake_rate = 100;
+    } else {
+        university_intake_rate = 50;
+    }
 
-  map_power_grid();
+    map_power_grid();
 }
 
-
-static void 
-end_of_year_update (void)
+static void end_of_year_update(void)
 {
     income_tax = (income_tax * income_tax_rate) / 100;
     ly_income_tax = income_tax;
@@ -359,23 +338,21 @@
     total_money += coal_tax;
 
     goods_tax = (goods_tax * goods_tax_rate) / 100;
-    goods_tax += (int) ((float) (goods_tax * goods_tax_rate)
-			   * (float) tech_level / 2000000.0);
+    goods_tax += (int)((float)(goods_tax * goods_tax_rate)
+                       * (float)tech_level / 2000000.0);
     ly_goods_tax = goods_tax;
     total_money += goods_tax;
 
     /* The price of exports on the world market drops as you export more.
        The exporters have to discount there wares, therefore the 
        tax take is less.
-    */
-    if (export_tax > ex_tax_dis[0])
-    {
-	int discount, disi;
-	discount = 0;
-	for (disi = 0; disi < NUMOF_DISCOUNT_TRIGGERS
-		     && export_tax > ex_tax_dis[disi]; disi++)
-	    discount += (export_tax - ex_tax_dis[disi]) / 10;
-	export_tax -= discount;
+     */
+    if (export_tax > ex_tax_dis[0]) {
+        int discount, disi;
+        discount = 0;
+        for (disi = 0; disi < NUMOF_DISCOUNT_TRIGGERS && export_tax > ex_tax_dis[disi]; disi++)
+            discount += (export_tax - ex_tax_dis[disi]) / 10;
+        export_tax -= discount;
     }
     ly_export_tax = export_tax;
     total_money += export_tax;
@@ -384,26 +361,22 @@
     ly_recycle_cost = recycle_cost;
     ly_deaths_cost = deaths_cost;
     ly_health_cost = (health_cost * (tech_level / 10000)
-		      * HEALTH_RUNNING_COST_MUL) / (MAX_TECH_LEVEL / 10000);
+                      * HEALTH_RUNNING_COST_MUL) / (MAX_TECH_LEVEL / 10000);
     ly_rocket_pad_cost = rocket_pad_cost;
     ly_school_cost = school_cost;
     ly_windmill_cost = windmill_cost;
     ly_fire_cost = (fire_cost * (tech_level / 10000)
-		    * FIRESTATION_RUNNING_COST_MUL) / (MAX_TECH_LEVEL / 10000);
+                    * FIRESTATION_RUNNING_COST_MUL) / (MAX_TECH_LEVEL / 10000);
     ly_cricket_cost = cricket_cost;
-    if (total_money < 0)
-    {
-	ly_interest = ((-total_money / 1000) * INTEREST_RATE);
-	if (ly_interest > 1000000)
-	    ly_interest = 1000000;
-    }
-    else
-	ly_interest = 0;
+    if (total_money < 0) {
+        ly_interest = ((-total_money / 1000) * INTEREST_RATE);
+        if (ly_interest > 1000000)
+            ly_interest = 1000000;
+    } else
+        ly_interest = 0;
 
     other_cost = university_cost + recycle_cost + deaths_cost
-	    + ly_health_cost + rocket_pad_cost + school_cost
-	    + ly_interest + windmill_cost + ly_fire_cost
-	    + ly_cricket_cost;
+        + ly_health_cost + rocket_pad_cost + school_cost + ly_interest + windmill_cost + ly_fire_cost + ly_cricket_cost;
     ly_other_cost = other_cost;
     total_money -= other_cost;
 
@@ -420,22 +393,20 @@
     total_money -= import_cost;
 
     if (total_money > 2000000000)
-	total_money = 2000000000;
+        total_money = 2000000000;
     else if (total_money < -2000000000)
-	total_money = -2000000000;
+        total_money = -2000000000;
 
-    print_total_money ();
+    print_total_money();
 }
 
-
-static void
-clear_game (void)
+static void clear_game(void)
 {
     int x, y;
     for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	    nullify_mappoint (x, y);
-	}
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            nullify_mappoint(x, y);
+        }
     }
     total_time = 0;
     coal_survey_done = 0;
@@ -460,348 +431,332 @@
     ldsv_version = MIN_WATERWELL_VERSION;
 }
 
-void
-new_city (int* originx, int* originy, int random_village)
+void new_city(int *originx, int *originy, int random_village)
 {
-    clear_game ();
-    coal_reserve_setup ();
-    setup_river ();
-    setup_land ();
-    ore_reserve_setup ();
-    init_pbars ();
+    clear_game();
+    coal_reserve_setup();
+    setup_river();
+    setup_land();
+    ore_reserve_setup();
+    init_pbars();
 
     /* Initial population is 100 for empty board or 200 
        for random village (100 are housed). */
     people_pool = 100;
 
     if (random_village != 0) {
-	random_start (originx, originy);
-	update_pbar(PPOP,200,1); /* So pbars don't flash */
+        random_start(originx, originy);
+        update_pbar(PPOP, 200, 1);      /* So pbars don't flash */
     } else {
-	*originx = *originy = WORLD_SIDE_LEN/2 ;
-	update_pbar(PPOP,100,1);
+        *originx = *originy = WORLD_SIDE_LEN / 2;
+        update_pbar(PPOP, 100, 1);
     }
-    connect_transport (1,1,WORLD_SIDE_LEN-2,WORLD_SIDE_LEN-2);
-    refresh_pbars ();
+    connect_transport(1, 1, WORLD_SIDE_LEN - 2, WORLD_SIDE_LEN - 2);
+    refresh_pbars();
 }
 
-void
-coal_reserve_setup (void)
+void coal_reserve_setup(void)
 {
-  int i, j, x, y, xx, yy;
-  for (i = 0; i < NUMOF_COAL_RESERVES / 5; i++)
-    {
-      x = (rand () % (WORLD_SIDE_LEN - 12)) + 6;
-      y = (rand () % (WORLD_SIDE_LEN - 10)) + 6;
-      do
-	{
-	  xx = (rand () % 3) - 1;
-	  yy = (rand () % 3) - 1;
-	}
-      while (xx == 0 && yy == 0);
-      for (j = 0; j < 5; j++)
-	{
-	  MP_INFO(x,y).coal_reserve
-	    += rand () % COAL_RESERVE_SIZE;
-	  x += xx;
-	  y += yy;
-	}
+    int i, j, x, y, xx, yy;
+    for (i = 0; i < NUMOF_COAL_RESERVES / 5; i++) {
+        x = (rand() % (WORLD_SIDE_LEN - 12)) + 6;
+        y = (rand() % (WORLD_SIDE_LEN - 10)) + 6;
+        do {
+            xx = (rand() % 3) - 1;
+            yy = (rand() % 3) - 1;
+        }
+        while (xx == 0 && yy == 0);
+        for (j = 0; j < 5; j++) {
+            MP_INFO(x, y).coal_reserve += rand() % COAL_RESERVE_SIZE;
+            x += xx;
+            y += yy;
+        }
     }
 }
 
-void
-ore_reserve_setup (void)
+void ore_reserve_setup(void)
 {
     int x, y;
     for (y = 0; y < WORLD_SIDE_LEN; y++)
-	for (x = 0; x < WORLD_SIDE_LEN; x++)
-	    MP_INFO(x,y).ore_reserve = ORE_RESERVE;
+        for (x = 0; x < WORLD_SIDE_LEN; x++)
+            MP_INFO(x, y).ore_reserve = ORE_RESERVE;
 }
 
-void
-setup_river (void)
+void setup_river(void)
 {
     int x, y, i, j;
-    x = (1 * WORLD_SIDE_LEN  + rand () % WORLD_SIDE_LEN) / 3 ;
+    x = (1 * WORLD_SIDE_LEN + rand() % WORLD_SIDE_LEN) / 3;
     y = WORLD_SIDE_LEN - 1;
-    i = (rand () % 12) + 6;
+    i = (rand() % 12) + 6;
     for (j = 0; j < i; j++) {
-	x += (rand () % 3) - 1;
-	MP_TYPE(x,y) = CST_WATER;
-	MP_GROUP(x,y) = GROUP_WATER;
-	MP_INFO(x,y).flags |= FLAG_IS_RIVER;
-	MP_TYPE(x+1,y) = CST_WATER;
-	MP_GROUP(x+1,y) = GROUP_WATER;
-	MP_INFO(x+1,y).flags |= FLAG_IS_RIVER;
-	MP_TYPE(x-1,y) = CST_WATER;
-	MP_GROUP(x-1,y) = GROUP_WATER;
-	MP_INFO(x-1,y).flags |= FLAG_IS_RIVER;
-	y--;
+        x += (rand() % 3) - 1;
+        MP_TYPE(x, y) = CST_WATER;
+        MP_GROUP(x, y) = GROUP_WATER;
+        MP_INFO(x, y).flags |= FLAG_IS_RIVER;
+        MP_TYPE(x + 1, y) = CST_WATER;
+        MP_GROUP(x + 1, y) = GROUP_WATER;
+        MP_INFO(x + 1, y).flags |= FLAG_IS_RIVER;
+        MP_TYPE(x - 1, y) = CST_WATER;
+        MP_GROUP(x - 1, y) = GROUP_WATER;
+        MP_INFO(x - 1, y).flags |= FLAG_IS_RIVER;
+        y--;
     }
-    MP_TYPE(x,y) = CST_WATER;
-    MP_GROUP(x,y) = GROUP_WATER;
-    MP_INFO(x,y).flags |= FLAG_IS_RIVER;
-    MP_TYPE(x+1,y) = CST_WATER;
-    MP_GROUP(x+1,y) = GROUP_WATER;
-    MP_INFO(x+1,y).flags |= FLAG_IS_RIVER;
-    MP_TYPE(x-1,y) = CST_WATER;
-    MP_GROUP(x-1,y) = GROUP_WATER;
-    MP_INFO(x-1,y).flags |= FLAG_IS_RIVER;
+    MP_TYPE(x, y) = CST_WATER;
+    MP_GROUP(x, y) = GROUP_WATER;
+    MP_INFO(x, y).flags |= FLAG_IS_RIVER;
+    MP_TYPE(x + 1, y) = CST_WATER;
+    MP_GROUP(x + 1, y) = GROUP_WATER;
+    MP_INFO(x + 1, y).flags |= FLAG_IS_RIVER;
+    MP_TYPE(x - 1, y) = CST_WATER;
+    MP_GROUP(x - 1, y) = GROUP_WATER;
+    MP_INFO(x - 1, y).flags |= FLAG_IS_RIVER;
 
-    setup_river2 (x - 1, y, -1);	/* left tributary */
-    setup_river2 (x + 1, y, 1);	/* right tributary */
+    setup_river2(x - 1, y, -1); /* left tributary */
+    setup_river2(x + 1, y, 1);  /* right tributary */
 }
 
-void
-setup_river2 (int x, int y, int d)
+void setup_river2(int x, int y, int d)
 {
     int i, j, r;
-    i = (rand () % 55) + 15;
-    for (j = 0; j < i; j++)
-    {
-	r = (rand () % 3) - 1 + (d * (rand () % 3));
-	if (r < -1)
-	    r = -1;
-	else if (r > 1)
-	    r = 1;
-	x += r;
-	if (!GROUP_IS_BARE(MP_GROUP(x+(d+d),y))
-	    || !GROUP_IS_BARE(MP_GROUP(x+(d+d+d),y)) )
-	    return;
-	if (x > 5 && x < WORLD_SIDE_LEN - 5)
-	{
-	    MP_TYPE(x,y) = CST_WATER;
-	    MP_GROUP(x,y) = GROUP_WATER;
-	    MP_INFO(x,y).flags |= FLAG_IS_RIVER;
-	    MP_TYPE(x + d,y) = CST_WATER;
-	    MP_GROUP(x+d,y) = GROUP_WATER;
-	    MP_INFO(x+d,y).flags |= FLAG_IS_RIVER;
-	}
-	if (--y < 10 || x < 5 || x > WORLD_SIDE_LEN - 5)
-	    break;
+    i = (rand() % 55) + 15;
+    for (j = 0; j < i; j++) {
+        r = (rand() % 3) - 1 + (d * (rand() % 3));
+        if (r < -1)
+            r = -1;
+        else if (r > 1)
+            r = 1;
+        x += r;
+        if (!GROUP_IS_BARE(MP_GROUP(x + (d + d), y))
+            || !GROUP_IS_BARE(MP_GROUP(x + (d + d + d), y)))
+            return;
+        if (x > 5 && x < WORLD_SIDE_LEN - 5) {
+            MP_TYPE(x, y) = CST_WATER;
+            MP_GROUP(x, y) = GROUP_WATER;
+            MP_INFO(x, y).flags |= FLAG_IS_RIVER;
+            MP_TYPE(x + d, y) = CST_WATER;
+            MP_GROUP(x + d, y) = GROUP_WATER;
+            MP_INFO(x + d, y).flags |= FLAG_IS_RIVER;
+        }
+        if (--y < 10 || x < 5 || x > WORLD_SIDE_LEN - 5)
+            break;
     }
-    if (y > 20)
-    {
-	if (x > 5 && x < WORLD_SIDE_LEN - 5)
-	    setup_river2 (x, y, -1);
-	if (x > 5 && x < WORLD_SIDE_LEN - 5)
-	    setup_river2 (x, y, 1);
+    if (y > 20) {
+        if (x > 5 && x < WORLD_SIDE_LEN - 5)
+            setup_river2(x, y, -1);
+        if (x > 5 && x < WORLD_SIDE_LEN - 5)
+            setup_river2(x, y, 1);
     }
 }
 
-void
-setup_land (void)
+void setup_land(void)
 {
-  int x, y, xw, yw;
-  int aridity = rand () %400 -150;
-  for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	    int d2w_min = 2 * WORLD_SIDE_LEN * WORLD_SIDE_LEN;
-	    int r;
-	    int arid=aridity;
+    int x, y, xw, yw;
+    int aridity = rand() % 400 - 150;
+    for (y = 0; y < WORLD_SIDE_LEN; y++) {
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            int d2w_min = 2 * WORLD_SIDE_LEN * WORLD_SIDE_LEN;
+            int r;
+            int arid = aridity;
 
-	    /* test against IS_RIVER to prevent terrible recursion */
-	    if ( IS_RIVER(x,y) || !GROUP_IS_BARE(MP_GROUP(x,y)))
-		continue;
+            /* test against IS_RIVER to prevent terrible recursion */
+            if (IS_RIVER(x, y) || !GROUP_IS_BARE(MP_GROUP(x, y)))
+                continue;
 
-  	    for (yw = 0; yw < WORLD_SIDE_LEN; yw++) {
-		  for (xw = 0; xw < WORLD_SIDE_LEN; xw++) {
-			int d2w;
-			if (!IS_RIVER(xw,yw))
-				continue;
-			d2w = (xw-x)*(xw-x) + (yw-y)*(yw-y);
-			if (d2w < d2w_min)
-				d2w_min = d2w;
-		  }
-	    }
+            for (yw = 0; yw < WORLD_SIDE_LEN; yw++) {
+                for (xw = 0; xw < WORLD_SIDE_LEN; xw++) {
+                    int d2w;
+                    if (!IS_RIVER(xw, yw))
+                        continue;
+                    d2w = (xw - x) * (xw - x) + (yw - y) * (yw - y);
+                    if (d2w < d2w_min)
+                        d2w_min = d2w;
+                }
+            }
 
-	    /* near river lower aridity */
-	    if (aridity > 0) {
-		if (d2w_min < 5)
-			arid = aridity/3;
-		else if (d2w_min < 17)
-			arid = (aridity*2)/3;
-	    }
-	    r = rand () % (d2w_min/3+1) + arid;
-	    if (r >= 300) {
-	        /* very dry land */
-	    	int r2 = rand() % 10;
-	    	if (r2 <= 6)
-		        set_mappoint(x, y, CST_DESERT);
-	    	else if (r2 <= 8)
-		        set_mappoint(x, y, CST_GREEN);
-	    	else 
-		        set_mappoint(x, y, CST_TREE);
-	    } else if (r >= 160) {
-	    	int r2 = rand() % 10;
-	        if (r2 <= 2)
-	    	    set_mappoint(x, y, CST_DESERT);
-		else if (r2 <= 6)
-	    	    set_mappoint(x, y, CST_GREEN);
-		else 
-	    	    set_mappoint(x, y, CST_TREE);
-	    } else if (r >= 80) {
-	    	int r2 = rand() % 10;
-		if (r2 <= 1)
-	    		set_mappoint(x, y, CST_DESERT);
+            /* near river lower aridity */
+            if (aridity > 0) {
+                if (d2w_min < 5)
+                    arid = aridity / 3;
+                else if (d2w_min < 17)
+                    arid = (aridity * 2) / 3;
+            }
+            r = rand() % (d2w_min / 3 + 1) + arid;
+            if (r >= 300) {
+                /* very dry land */
+                int r2 = rand() % 10;
+                if (r2 <= 6)
+                    set_mappoint(x, y, CST_DESERT);
+                else if (r2 <= 8)
+                    set_mappoint(x, y, CST_GREEN);
+                else
+                    set_mappoint(x, y, CST_TREE);
+            } else if (r >= 160) {
+                int r2 = rand() % 10;
+                if (r2 <= 2)
+                    set_mappoint(x, y, CST_DESERT);
+                else if (r2 <= 6)
+                    set_mappoint(x, y, CST_GREEN);
+                else
+                    set_mappoint(x, y, CST_TREE);
+            } else if (r >= 80) {
+                int r2 = rand() % 10;
+                if (r2 <= 1)
+                    set_mappoint(x, y, CST_DESERT);
                 else if (r2 <= 4)
-	    		set_mappoint(x, y, CST_GREEN);
+                    set_mappoint(x, y, CST_GREEN);
                 else if (r2 <= 6)
-                        set_mappoint(x, y, CST_TREE);
+                    set_mappoint(x, y, CST_TREE);
                 else
-	    		set_mappoint(x, y, CST_TREE2);
+                    set_mappoint(x, y, CST_TREE2);
             } else if (r >= 40) {
-	    	int r2 = rand() % 40;
-		    if (r2 == 0)
-	    		set_mappoint(x, y, CST_DESERT);
-		    else if (r2 <= 12)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 24)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 36)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    }  else if (r >= 0) {
-	    	    /* normal land */
-	    	    int r2 = rand() % 40;
-		    if (r2 <= 10)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 20)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 30)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    } else if (r >= -40) {
-	    	    /* forest */
-	    	    int r2 = rand() % 40;
-		    if (r2 <= 5)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 10)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 25)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    } else if (r >= -80) {
-	    	    int r2 = rand() % 40;
-		    if (r2 <= 0)
-			    MP_TYPE(x, y) = CST_WATER;
-		    else if (r2 <= 6)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 15)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 28)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    } else if (r >= -120) {
-	    	    int r2 = rand() % 40;
-		    if (r2 <= 1)
-			    MP_TYPE(x, y) = CST_WATER;
-		    else if (r2 <= 6)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 16)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 30)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    } else {
-	    	/* wetland */
-	    	int r2 = rand() % 40;
-		    if (r2 <= 3 )
-			    MP_TYPE(x, y) = CST_WATER;
-		    else if (r2 <= 8)
-	    		set_mappoint(x, y, CST_GREEN);
-		    else if (r2 <= 20)
-	    		set_mappoint(x, y, CST_TREE);
-		    else if (r2 <= 35)
-			    set_mappoint(x, y, CST_TREE2);
-		    else
-			    set_mappoint(x, y, CST_TREE3);
-	    }
-	    MP_POL(x,y) = 0;
+                int r2 = rand() % 40;
+                if (r2 == 0)
+                    set_mappoint(x, y, CST_DESERT);
+                else if (r2 <= 12)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 24)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 36)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            } else if (r >= 0) {
+                /* normal land */
+                int r2 = rand() % 40;
+                if (r2 <= 10)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 20)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 30)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            } else if (r >= -40) {
+                /* forest */
+                int r2 = rand() % 40;
+                if (r2 <= 5)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 10)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 25)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            } else if (r >= -80) {
+                int r2 = rand() % 40;
+                if (r2 <= 0)
+                    MP_TYPE(x, y) = CST_WATER;
+                else if (r2 <= 6)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 15)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 28)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            } else if (r >= -120) {
+                int r2 = rand() % 40;
+                if (r2 <= 1)
+                    MP_TYPE(x, y) = CST_WATER;
+                else if (r2 <= 6)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 16)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 30)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            } else {
+                /* wetland */
+                int r2 = rand() % 40;
+                if (r2 <= 3)
+                    MP_TYPE(x, y) = CST_WATER;
+                else if (r2 <= 8)
+                    set_mappoint(x, y, CST_GREEN);
+                else if (r2 <= 20)
+                    set_mappoint(x, y, CST_TREE);
+                else if (r2 <= 35)
+                    set_mappoint(x, y, CST_TREE2);
+                else
+                    set_mappoint(x, y, CST_TREE3);
+            }
+            MP_POL(x, y) = 0;
             /* preserve rivers, so that we can connect port later */
-            if (MP_TYPE(x,y) == CST_WATER){
-                int navigable = MP_INFO(x,y).flags & FLAG_IS_RIVER;
+            if (MP_TYPE(x, y) == CST_WATER) {
+                int navigable = MP_INFO(x, y).flags & FLAG_IS_RIVER;
                 set_mappoint(x, y, CST_WATER);
-                MP_INFO(x,y).flags |= navigable;
-                MP_INFO(x,y).flags |= FLAG_HAS_UNDERGROUND_WATER;            
-            } else if (MP_TYPE(x,y) != CST_DESERT) {
-            	MP_INFO(x,y).flags |= FLAG_HAS_UNDERGROUND_WATER;
-            }	
-  	    /* TODO Store square of distance to river for each tile */
-	    /* MP_DIST2RIVER(x,y) = d2w_min; */
+                MP_INFO(x, y).flags |= navigable;
+                MP_INFO(x, y).flags |= FLAG_HAS_UNDERGROUND_WATER;
+            } else if (MP_TYPE(x, y) != CST_DESERT) {
+                MP_INFO(x, y).flags |= FLAG_HAS_UNDERGROUND_WATER;
+            }
+            /* TODO Store square of distance to river for each tile */
+            /* MP_DIST2RIVER(x,y) = d2w_min; */
         }
     }
     connect_rivers();
 }
 
-int
-count_groups (int g)
+int count_groups(int g)
 {
-  int x, y, i;
-  i = 0;
-  for (y = 0; y < WORLD_SIDE_LEN; y++)
-    for (x = 0; x < WORLD_SIDE_LEN; x++)
-      if (MP_GROUP(x,y) == g)
-	i++;
-  return (i);
+    int x, y, i;
+    i = 0;
+    for (y = 0; y < WORLD_SIDE_LEN; y++)
+        for (x = 0; x < WORLD_SIDE_LEN; x++)
+            if (MP_GROUP(x, y) == g)
+                i++;
+    return (i);
 }
 
-void 
-count_all_groups (int* group_count)
+void count_all_groups(int *group_count)
 {
     int x, y;
     unsigned short t, g;
     for (x = 0; x < NUM_OF_GROUPS; x++)
-	group_count[x] = 0;
+        group_count[x] = 0;
     for (y = 0; y < WORLD_SIDE_LEN; y++) {
-	for (x = 0; x < WORLD_SIDE_LEN; x++) {
-	    t = MP_TYPE(x,y);
-	    if (t != CST_USED && !GROUP_IS_BARE(MP_GROUP(x,y)))  {
-		g = get_group_of_type(t);
-		group_count[g]++;
-	    }
-	}
+        for (x = 0; x < WORLD_SIDE_LEN; x++) {
+            t = MP_TYPE(x, y);
+            if (t != CST_USED && !GROUP_IS_BARE(MP_GROUP(x, y))) {
+                g = get_group_of_type(t);
+                group_count[g]++;
+            }
+        }
     }
 }
 
-static void
-random_start (int* originx, int* originy)
+static void random_start(int *originx, int *originy)
 {
     int x, y, xx, yy, flag, watchdog;
 
     /* first find a place that has some water. */
-    watchdog = 90;        /* if too many tries, random placement. */
+    watchdog = 90;              /* if too many tries, random placement. */
     do {
-	do {
-	    xx = rand () % (WORLD_SIDE_LEN - 25);
-	    yy = rand () % (WORLD_SIDE_LEN - 25);
-	    flag = 0;
-	    for (y = yy + 2; y < yy + 23; y++)
-		for (x = xx + 2; x < xx + 23; x++)
-		    if (IS_RIVER(x,y)) {
-			flag = 1;
-			x = xx + 23;   /* break out of loop */
-			y = yy + 23;   /* break out of loop */
-		    }
-	} while (flag == 0 && (--watchdog) > 1);
-	for (y = yy + 4; y < yy + 22; y++)
-	    for (x = xx + 4; x < xx + 22; x++)
+        do {
+            xx = rand() % (WORLD_SIDE_LEN - 25);
+            yy = rand() % (WORLD_SIDE_LEN - 25);
+            flag = 0;
+            for (y = yy + 2; y < yy + 23; y++)
+                for (x = xx + 2; x < xx + 23; x++)
+                    if (IS_RIVER(x, y)) {
+                        flag = 1;
+                        x = xx + 23;    /* break out of loop */
+                        y = yy + 23;    /* break out of loop */
+                    }
+        } while (flag == 0 && (--watchdog) > 1);
+        for (y = yy + 4; y < yy + 22; y++)
+            for (x = xx + 4; x < xx + 22; x++)
                 /* Don't put the village on a river, but don't care of
                  * isolated random water tiles putted by setup_land
                  */
-		if (IS_RIVER(x,y)) {
+                if (IS_RIVER(x, y)) {
                     flag = 0;
-                    x = xx + 22;   /* break out of loop */
-                    y = yy + 22;   /* break out of loop */
+                    x = xx + 22;        /* break out of loop */
+                    y = yy + 22;        /* break out of loop */
                 }
     } while (flag == 0 && (--watchdog) > 1);
 #ifdef DEBUG
-    fprintf(stderr,"random village watchdog = %i\n", watchdog);
+    fprintf(stderr, "random village watchdog = %i\n", watchdog);
 #endif
 
     /* These are going to be the main_screen_origin? vars */
@@ -809,196 +764,166 @@
     *originy = yy;
 
     /*  Draw the start scene. */
-    quick_start_add (xx + 5, yy + 5, CST_FARM_O0, 4);
+    quick_start_add(xx + 5, yy + 5, CST_FARM_O0, 4);
     /* The first two farms have more underground water */
     for (int i = 0; i < MP_SIZE(xx + 5, yy + 5); i++)
         for (int j = 0; j < MP_SIZE(xx + 5, yy + 5); j++)
             if (!HAS_UGWATER(xx + 5 + i, yy + 5 + j) && (rand() % 2))
-               MP_INFO(xx + 5 + i, yy + 5 + j).flags
-                              |= FLAG_HAS_UNDERGROUND_WATER;
- 
-    quick_start_add (xx + 9, yy + 6, CST_RESIDENCE_ML, 3);
-    MP_INFO(xx + 9,yy + 6).population = 50;
-    MP_INFO(xx + 9,yy + 6).flags 
-                |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
-    quick_start_add (xx + 9, yy + 9, CST_POTTERY_0, 2);
-    quick_start_add (xx + 16, yy + 9, CST_WATERWELL, 2);
+                MP_INFO(xx + 5 + i, yy + 5 + j).flags |= FLAG_HAS_UNDERGROUND_WATER;
 
-    quick_start_add (xx + 14, yy + 6, CST_RESIDENCE_ML, 3);
-    MP_INFO(xx + 14,yy + 6).population = 50;
-    MP_INFO(xx + 14,yy + 6).flags 
-                |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
-    quick_start_add (xx + 17, yy + 5, CST_FARM_O0, 4);
+    quick_start_add(xx + 9, yy + 6, CST_RESIDENCE_ML, 3);
+    MP_INFO(xx + 9, yy + 6).population = 50;
+    MP_INFO(xx + 9, yy + 6).flags |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
+    quick_start_add(xx + 9, yy + 9, CST_POTTERY_0, 2);
+    quick_start_add(xx + 16, yy + 9, CST_WATERWELL, 2);
+
+    quick_start_add(xx + 14, yy + 6, CST_RESIDENCE_ML, 3);
+    MP_INFO(xx + 14, yy + 6).population = 50;
+    MP_INFO(xx + 14, yy + 6).flags |= (FLAG_FED + FLAG_EMPLOYED + FLAG_WATERWELL_COVER);
+    quick_start_add(xx + 17, yy + 5, CST_FARM_O0, 4);
     for (int i = 0; i < MP_SIZE(xx + 17, yy + 5); i++)
         for (int j = 0; j < MP_SIZE(xx + 17, yy + 5); j++)
             if (!HAS_UGWATER(xx + 17 + i, yy + 5 + j) && (rand() % 2))
-                MP_INFO(xx + 17 + i, yy + 5 + j).flags 
-                              |= FLAG_HAS_UNDERGROUND_WATER; 
+                MP_INFO(xx + 17 + i, yy + 5 + j).flags |= FLAG_HAS_UNDERGROUND_WATER;
 
-    quick_start_add (xx + 14, yy + 9, CST_MARKET_EMPTY, 2);
+    quick_start_add(xx + 14, yy + 9, CST_MARKET_EMPTY, 2);
     marketx[numof_markets] = xx + 14;
     markety[numof_markets] = yy + 9;
     numof_markets++;
     /* Bootstrap markets with some stuff. */
-    MP_INFO(xx + 14,yy + 9).int_1 = 2000;
-    MP_INFO(xx + 14,yy + 9).int_2 = 10000;
-    MP_INFO(xx + 14,yy + 9).int_3 = 100;
-    MP_INFO(xx + 14,yy + 9).int_5 = 10000;
-    MP_INFO(xx + 14,yy + 9).flags 
-	    |= (FLAG_MB_FOOD + FLAG_MS_FOOD + FLAG_MB_JOBS
-		+ FLAG_MS_JOBS + FLAG_MB_COAL + FLAG_MS_COAL + FLAG_MB_ORE
-		+ FLAG_MS_ORE + FLAG_MB_GOODS + FLAG_MS_GOODS + FLAG_MB_STEEL
-		+ FLAG_MS_STEEL);
+    MP_INFO(xx + 14, yy + 9).int_1 = 2000;
+    MP_INFO(xx + 14, yy + 9).int_2 = 10000;
+    MP_INFO(xx + 14, yy + 9).int_3 = 100;
+    MP_INFO(xx + 14, yy + 9).int_5 = 10000;
+    MP_INFO(xx + 14, yy + 9).flags
+        |= (FLAG_MB_FOOD + FLAG_MS_FOOD + FLAG_MB_JOBS
+            + FLAG_MS_JOBS + FLAG_MB_COAL + FLAG_MS_COAL + FLAG_MB_ORE
+            + FLAG_MS_ORE + FLAG_MB_GOODS + FLAG_MS_GOODS + FLAG_MB_STEEL + FLAG_MS_STEEL);
 
-    for (x = 5; x < 19; x++)
-    {
-	quick_start_add (xx + x, yy + 11, CST_TRACK_LR, 1);
-	MP_INFO(xx + x,yy + 11).flags |= FLAG_IS_TRANSPORT;
+    for (x = 5; x < 19; x++) {
+        quick_start_add(xx + x, yy + 11, CST_TRACK_LR, 1);
+        MP_INFO(xx + x, yy + 11).flags |= FLAG_IS_TRANSPORT;
     }
-    quick_start_add (xx + 6, yy + 12, CST_COMMUNE_1, 4);
-    quick_start_add (xx + 6, yy + 17, CST_COMMUNE_1, 4);
-    quick_start_add (xx + 11, yy + 12, CST_COMMUNE_1, 4);
-    quick_start_add (xx + 11, yy + 17, CST_COMMUNE_1, 4);
-    quick_start_add (xx + 16, yy + 12, CST_COMMUNE_1, 4);
-    quick_start_add (xx + 16, yy + 17, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 6, yy + 12, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 6, yy + 17, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 11, yy + 12, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 11, yy + 17, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 16, yy + 12, CST_COMMUNE_1, 4);
+    quick_start_add(xx + 16, yy + 17, CST_COMMUNE_1, 4);
 }
 
 /* XXX: WCK: What is up with this?  Why not just use set_mappoint?! */
-static void
-quick_start_add (int x, int y, short type, int size)
+static void quick_start_add(int x, int y, short type, int size)
 {
-  int xx, yy;
-  if (size == 1) {
-      MP_TYPE(x,y) = type;
-      MP_GROUP(x,y) = get_group_of_type(type);
-      return;
-  }
-  for (yy = 0; yy < size; yy++) {
-    for (xx = 0; xx < size; xx++) {
-	if (xx == 0 && yy == 0)
-	  continue;
-	set_mappoint_used (x, y, x + xx, y + yy);
-      }
-  }
-  MP_TYPE(x,y) = type;
-  MP_GROUP(x,y) = get_group_of_type(type);
+    int xx, yy;
+    if (size == 1) {
+        MP_TYPE(x, y) = type;
+        MP_GROUP(x, y) = get_group_of_type(type);
+        return;
+    }
+    for (yy = 0; yy < size; yy++) {
+        for (xx = 0; xx < size; xx++) {
+            if (xx == 0 && yy == 0)
+                continue;
+            set_mappoint_used(x, y, x + xx, y + yy);
+        }
+    }
+    MP_TYPE(x, y) = type;
+    MP_GROUP(x, y) = get_group_of_type(type);
 }
 
-void
-sustainability_test (void)
+void sustainability_test(void)
 {
-  int i;
-  if (sust_dig_ore_coal_tip_flag == 0)
-    {
-      sust_dig_ore_coal_tip_flag = 1;
-      sust_dig_ore_coal_count = 0;
-    }
-  else
-    sust_dig_ore_coal_count++;
+    int i;
+    if (sust_dig_ore_coal_tip_flag == 0) {
+        sust_dig_ore_coal_tip_flag = 1;
+        sust_dig_ore_coal_count = 0;
+    } else
+        sust_dig_ore_coal_count++;
 
-  if (sust_port_flag == 0)
-    {
-      sust_port_flag = 1;
-      sust_port_count = 0;
-    }
-  else
-    sust_port_count++;
+    if (sust_port_flag == 0) {
+        sust_port_flag = 1;
+        sust_port_count = 0;
+    } else
+        sust_port_count++;
 
-  /* Money must be going up or the same. (ie can't build.) */
-  if (sust_old_money > total_money)
-    sust_old_money_count = 0;
-  else
-    sust_old_money_count++;
-  sust_old_money = total_money;
+    /* Money must be going up or the same. (ie can't build.) */
+    if (sust_old_money > total_money)
+        sust_old_money_count = 0;
+    else
+        sust_old_money_count++;
+    sust_old_money = total_money;
 
-  /* population must be withing 2% of when it started. */
-  i = (housed_population + people_pool) - sust_old_population;
-  if (abs (i) > (sust_old_population / 40)	/* 2.5%  */
-      || (housed_population + people_pool) < SUST_MIN_POPULATION)
-    {
-      sust_old_population = (housed_population + people_pool);
-      sust_old_population_count = 0;
-    }
-  else
-    sust_old_population_count++;
+    /* population must be withing 2% of when it started. */
+    i = (housed_population + people_pool) - sust_old_population;
+    if (abs(i) > (sust_old_population / 40)     /* 2.5%  */
+        ||(housed_population + people_pool) < SUST_MIN_POPULATION) {
+        sust_old_population = (housed_population + people_pool);
+        sust_old_population_count = 0;
+    } else
+        sust_old_population_count++;
 
-  /* tech level must be going up or not fall more than 0.5% from it's
-     highest during the sus count
-  */
-  i = tech_level - sust_old_tech;
-  if (i < 0 || tech_level < SUST_MIN_TECH_LEVEL)
-    {
-      i = -i;
-      if ((i > sust_old_tech / 100) || tech_level < SUST_MIN_TECH_LEVEL)
-	{
-	  sust_old_tech_count = 0;
-	  sust_old_tech = tech_level;
-	}
-      else
-	sust_old_tech_count++;
+    /* tech level must be going up or not fall more than 0.5% from it's
+       highest during the sus count
+     */
+    i = tech_level - sust_old_tech;
+    if (i < 0 || tech_level < SUST_MIN_TECH_LEVEL) {
+        i = -i;
+        if ((i > sust_old_tech / 100) || tech_level < SUST_MIN_TECH_LEVEL) {
+            sust_old_tech_count = 0;
+            sust_old_tech = tech_level;
+        } else
+            sust_old_tech_count++;
+    } else {
+        sust_old_tech_count++;
+        sust_old_tech = tech_level;
     }
-  else
-    {
-      sust_old_tech_count++;
-      sust_old_tech = tech_level;
-    }
 
-  /* check fire cover only every three years */
-  if (total_time % (NUMOF_DAYS_IN_YEAR * 3) == 0)
-    {
-      if (sust_fire_cover () != 0)
-	sust_fire_count += 3;
-      else
-	sust_fire_count = 0;
+    /* check fire cover only every three years */
+    if (total_time % (NUMOF_DAYS_IN_YEAR * 3) == 0) {
+        if (sust_fire_cover() != 0)
+            sust_fire_count += 3;
+        else
+            sust_fire_count = 0;
 
     }
 }
 
-int
-sust_fire_cover (void)
+int sust_fire_cover(void)
 {
-  int x, y;
-  for (x = 0; x < WORLD_SIDE_LEN; x++)
-    for (y = 0; y < WORLD_SIDE_LEN; y++)
-      {
-	if (GROUP_IS_BARE(MP_GROUP(x,y))
-	    || MP_TYPE(x,y) == CST_USED
-	    || MP_GROUP(x,y) == GROUP_WATER
-	    || MP_GROUP(x,y) == GROUP_POWER_LINE
-	    || MP_GROUP(x,y) == GROUP_OREMINE
-	    || MP_GROUP(x,y) == GROUP_ROCKET
-	    || MP_GROUP(x,y) == GROUP_MONUMENT
-	    || MP_GROUP(x,y) == GROUP_BURNT)
-	  ;			/* do nothing */
+    int x, y;
+    for (x = 0; x < WORLD_SIDE_LEN; x++)
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            if (GROUP_IS_BARE(MP_GROUP(x, y))
+                || MP_TYPE(x, y) == CST_USED || MP_GROUP(x, y) == GROUP_WATER || MP_GROUP(x, y) == GROUP_POWER_LINE \
+                                || MP_GROUP(x, y) == GROUP_OREMINE || MP_GROUP(x, y) == GROUP_ROCKET \
+                                || MP_GROUP(x, y) == GROUP_MONUMENT || MP_GROUP(x, y) == GROUP_BURNT) ;/* do nothing */
 
-	else if ((MP_INFO(x,y).flags & FLAG_FIRE_COVER) == 0)
-	  return (0);
-      }
-  return (1);
+            else if ((MP_INFO(x, y).flags & FLAG_FIRE_COVER) == 0)
+                return (0);
+        }
+    return (1);
 }
 
-void 
-debug_mappoints (void)
+void debug_mappoints(void)
 {
-  int x, y;
-  for (x = 0; x < WORLD_SIDE_LEN; x++) {
-    for (y = 0; y < WORLD_SIDE_LEN; y++) {
-      if ((MP_TYPE(x,y) < 0) || (MP_TYPE(x,y) > 400)) {
-	printf ("Error in mappoint %d %d (%d)\n", x, y, MP_TYPE(x,y));
-	exit(-1);
-      }
+    int x, y;
+    for (x = 0; x < WORLD_SIDE_LEN; x++) {
+        for (y = 0; y < WORLD_SIDE_LEN; y++) {
+            if ((MP_TYPE(x, y) < 0) || (MP_TYPE(x, y) > 400)) {
+                printf("Error in mappoint %d %d (%d)\n", x, y, MP_TYPE(x, y));
+                exit(-1);
+            }
+        }
     }
-  }
 }
 
-void
-initialize_tax_rates (void)
+void initialize_tax_rates(void)
 {
-  income_tax_rate = INCOME_TAX_RATE;
-  coal_tax_rate = COAL_TAX_RATE;
-  goods_tax_rate = GOODS_TAX_RATE;
-  dole_rate = DOLE_RATE;
-  transport_cost_rate = TRANSPORT_COST_RATE;
-  import_cost_rate = IM_PORT_COST_RATE;
+    income_tax_rate = INCOME_TAX_RATE;
+    coal_tax_rate = COAL_TAX_RATE;
+    goods_tax_rate = GOODS_TAX_RATE;
+    dole_rate = DOLE_RATE;
+    transport_cost_rate = TRANSPORT_COST_RATE;
+    import_cost_rate = IM_PORT_COST_RATE;
 }
-

Modified: trunk/src/lincity/simulate.h
===================================================================
--- trunk/src/lincity/simulate.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/simulate.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -6,8 +6,8 @@
 #ifndef __simulate_h__
 #define __simulate_h__
 
-void new_city (int* originx, int* originy, int random_village);
-void count_all_groups (int* group_count);
-void do_time_step (void);
+void new_city(int *originx, int *originy, int random_village);
+void count_all_groups(int *group_count);
+void do_time_step(void);
 
-#endif	/* __simulate_h__ */
+#endif /* __simulate_h__ */

Modified: trunk/src/lincity/stats.cpp
===================================================================
--- trunk/src/lincity/stats.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/stats.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -23,9 +23,9 @@
 int jobs_in_markets;
 int coal_in_markets;
 int goods_in_markets;
-int ore_in_markets; 
-int steel_in_markets; 
-int waste_in_markets; 
+int ore_in_markets;
+int steel_in_markets;
+int waste_in_markets;
 
 /* Monthly accumulators */
 int tfood_in_markets;
@@ -40,22 +40,22 @@
 int tunemployed_population;
 
 /* yearly */
-int income_tax; 
-int coal_tax; 
-int goods_tax; 
-int export_tax; 
+int income_tax;
+int coal_tax;
+int goods_tax;
+int export_tax;
 int import_cost;
-int unemployment_cost; 
-int transport_cost; 
-int windmill_cost; 
-int university_cost; 
-int recycle_cost; 
-int deaths_cost; 
-int health_cost; 
-int rocket_pad_cost; 
-int school_cost; 
-int fire_cost; 
-int cricket_cost; 
+int unemployment_cost;
+int transport_cost;
+int windmill_cost;
+int university_cost;
+int recycle_cost;
+int deaths_cost;
+int health_cost;
+int rocket_pad_cost;
+int school_cost;
+int fire_cost;
+int cricket_cost;
 int other_cost;
 
 /* Last Year's totals */
@@ -81,15 +81,12 @@
 /* Averaging variables */
 int data_last_month;
 
-
 /* ---------------------------------------------------------------------- *
  * Private Function Prototypes
  * ---------------------------------------------------------------------- */
 void inventory_market(int x, int y);
 
-
-void
-init_daily(void)
+void init_daily(void)
 {
     population = 0;
     starving_population = 0;
@@ -102,11 +99,10 @@
     steel_in_markets = 0;
 }
 
-void
-init_monthly(void)
+void init_monthly(void)
 {
     data_last_month = 0;
-    
+
     tpopulation = 0;
     tstarving_population = 0;
     tfood_in_markets = 0;
@@ -119,8 +115,7 @@
     unnat_deaths = 0;
 }
 
-void
-init_yearly(void)
+void init_yearly(void)
 {
     income_tax = 0;
     coal_tax = 0;
@@ -140,8 +135,7 @@
     cricket_cost = 0;
 }
 
-void
-init_lastyear(void)
+void init_lastyear(void)
 {
     ly_income_tax = 0;
     ly_coal_tax = 0;
@@ -163,27 +157,24 @@
     ly_fire_cost = 0;
 }
 
-void
-inventory(int x, int y)
+void inventory(int x, int y)
 {
 
-    switch(get_group_of_type(MP_TYPE(x,y))) {
+    switch (get_group_of_type(MP_TYPE(x, y))) {
 
-    case GROUP_MARKET: 
-	inventory_market(x, y); 
-	break;
-    
-    default: {
-	printf("Default in inventory(%d,%d): got %d\n", 
-	    x, y, get_group_of_type(MP_TYPE(x,y)));
-	break;
-    }
+    case GROUP_MARKET:
+        inventory_market(x, y);
+        break;
 
+    default:{
+            printf("Default in inventory(%d,%d): got %d\n", x, y, get_group_of_type(MP_TYPE(x, y)));
+            break;
+        }
+
     }
 }
 
-void
-init_inventory(void)
+void init_inventory(void)
 {
     init_daily();
     init_monthly();
@@ -191,27 +182,24 @@
     init_lastyear();
 }
 
-void
-inventory_market(int x, int y) 
+void inventory_market(int x, int y)
 {
-    food_in_markets += MP_INFO(x,y).int_1;
-    jobs_in_markets += MP_INFO(x,y).int_2;
-    coal_in_markets += MP_INFO(x,y).int_3;
-    goods_in_markets += MP_INFO(x,y).int_4;
-    ore_in_markets += MP_INFO(x,y).int_5;
-    steel_in_markets += MP_INFO(x,y).int_6;
-    waste_in_markets += MP_INFO(x,y).int_7;
+    food_in_markets += MP_INFO(x, y).int_1;
+    jobs_in_markets += MP_INFO(x, y).int_2;
+    coal_in_markets += MP_INFO(x, y).int_3;
+    goods_in_markets += MP_INFO(x, y).int_4;
+    ore_in_markets += MP_INFO(x, y).int_5;
+    steel_in_markets += MP_INFO(x, y).int_6;
+    waste_in_markets += MP_INFO(x, y).int_7;
 }
 
-
 /* XXX: WCK:  Why oh why must we divide by arbitrary values, below? */
 /* If this is fixed, make sure to fix it in pbar also! */
 
-void
-add_daily_to_monthly(void)
+void add_daily_to_monthly(void)
 {
     data_last_month++;
-    
+
     tpopulation += population;
     tstarving_population += starving_population;
     tfood_in_markets += food_in_markets / 1000;

Modified: trunk/src/lincity/stats.h
===================================================================
--- trunk/src/lincity/stats.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/stats.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -6,7 +6,7 @@
  * ---------------------------------------------------------------------- */
 
 #ifndef __stats_h__
-#define __stats_h__ 
+#define __stats_h__
 
 /* Statistics, Accumulators and Counters all reside here */
 
@@ -29,63 +29,63 @@
 */
 
 /* daily */
-extern int food_in_markets; 
-extern int jobs_in_markets; 
-extern int coal_in_markets; 
-extern int goods_in_markets; 
-extern int ore_in_markets; 
-extern int steel_in_markets; 
-extern int waste_in_markets; 
+extern int food_in_markets;
+extern int jobs_in_markets;
+extern int coal_in_markets;
+extern int goods_in_markets;
+extern int ore_in_markets;
+extern int steel_in_markets;
+extern int waste_in_markets;
 
 /* monthly */
-extern int tfood_in_markets; 
-extern int tjobs_in_markets; 
-extern int tcoal_in_markets; 
-extern int tgoods_in_markets; 
-extern int tore_in_markets; 
-extern int tsteel_in_markets; 
+extern int tfood_in_markets;
+extern int tjobs_in_markets;
+extern int tcoal_in_markets;
+extern int tgoods_in_markets;
+extern int tore_in_markets;
+extern int tsteel_in_markets;
 extern int twaste_in_markets;
-extern int tpopulation; 
-extern int tstarving_population; 
-extern int tunemployed_population; 
+extern int tpopulation;
+extern int tstarving_population;
+extern int tunemployed_population;
 extern int twaste_in_markets;
 
 /* yearly */
-extern int income_tax; 
-extern int coal_tax; 
-extern int goods_tax; 
-extern int export_tax; 
+extern int income_tax;
+extern int coal_tax;
+extern int goods_tax;
+extern int export_tax;
 extern int import_cost;
-extern int unemployment_cost; 
-extern int transport_cost; 
-extern int windmill_cost; 
-extern int university_cost; 
-extern int recycle_cost; 
-extern int deaths_cost; 
-extern int health_cost; 
-extern int rocket_pad_cost; 
-extern int school_cost; 
-extern int fire_cost; 
-extern int cricket_cost; 
+extern int unemployment_cost;
+extern int transport_cost;
+extern int windmill_cost;
+extern int university_cost;
+extern int recycle_cost;
+extern int deaths_cost;
+extern int health_cost;
+extern int rocket_pad_cost;
+extern int school_cost;
+extern int fire_cost;
+extern int cricket_cost;
 extern int other_cost;
 
 /* yearly */
-extern int ly_income_tax; 
-extern int ly_coal_tax; 
-extern int ly_goods_tax; 
-extern int ly_export_tax; 
-extern int ly_import_cost; 
-extern int ly_other_cost; 
-extern int ly_unemployment_cost; 
-extern int ly_transport_cost; 
-extern int ly_fire_cost; 
-extern int ly_university_cost; 
-extern int ly_recycle_cost; 
-extern int ly_school_cost; 
-extern int ly_deaths_cost; 
-extern int ly_health_cost; 
-extern int ly_rocket_pad_cost; 
-extern int ly_interest; 
+extern int ly_income_tax;
+extern int ly_coal_tax;
+extern int ly_goods_tax;
+extern int ly_export_tax;
+extern int ly_import_cost;
+extern int ly_other_cost;
+extern int ly_unemployment_cost;
+extern int ly_transport_cost;
+extern int ly_fire_cost;
+extern int ly_university_cost;
+extern int ly_recycle_cost;
+extern int ly_school_cost;
+extern int ly_deaths_cost;
+extern int ly_health_cost;
+extern int ly_rocket_pad_cost;
+extern int ly_interest;
 extern int ly_windmill_cost;
 extern int ly_cricket_cost;
 

Modified: trunk/src/lincity/transport.cpp
===================================================================
--- trunk/src/lincity/transport.cpp	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/transport.cpp	2007-11-25 19:15:34 UTC (rev 1286)
@@ -11,7 +11,7 @@
 #include "lin-city.h"
 #include "transport.h"
 #include "power.h"
-#include "stats.h" /* for transport_cost */
+#include "stats.h"              /* for transport_cost */
 
 /* ---------------------------------------------------------------------
    For track, road and rail:
@@ -25,9 +25,7 @@
    int_7 contains the amount of waste
   --------------------------------------------------------------------- */
 
-void
-general_transport (Map_Point_Info *minfo, int *pol,
-		   int max_waste, int *waste_count)
+void general_transport(Map_Point_Info * minfo, int *pol, int max_waste, int *waste_count)
 {
     int tot, av, *base, xm1, xp1, ym1, yp1;
 
@@ -50,186 +48,184 @@
      */
 
     base = &minfo->int_1;
-    switch (minfo->flags & 0x0F)
-    {
+    switch (minfo->flags & 0x0F) {
     case 0:
-	return;
+        return;
 
-    case 1:			/* inlined t_av_l() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	do {
-	    tot = *base + base[xm1];
-	    av = tot / 2;
-	    base[xm1] = av;
-	    *base++ = av + tot % 2;
-	} while (base <= &minfo->int_7);
-	break;
+    case 1:                    /* inlined t_av_l() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        do {
+            tot = *base + base[xm1];
+            av = tot / 2;
+            base[xm1] = av;
+            *base++ = av + tot % 2;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 2:			/* inlined t_av_u() -- (ThMO) */
-	ym1 = &minfo[-1].int_1 - base;
-	do {
-	    tot = *base + base[ym1];
-	    av = tot / 2;
-	    base[ym1] = av;
-	    *base++ = av + tot % 2;
-	} while (base <= &minfo->int_7);
-	break;
+    case 2:                    /* inlined t_av_u() -- (ThMO) */
+        ym1 = &minfo[-1].int_1 - base;
+        do {
+            tot = *base + base[ym1];
+            av = tot / 2;
+            base[ym1] = av;
+            *base++ = av + tot % 2;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 3:			/* inlined t_av_lu() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	ym1 = &minfo[-1].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[ym1];
-	    av = tot / 3;
-	    base[xm1] = base[ym1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 3:                    /* inlined t_av_lu() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        ym1 = &minfo[-1].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[ym1];
+            av = tot / 3;
+            base[xm1] = base[ym1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 4:			/* inlined t_av_r() -- (ThMO) */
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	do {
-	    tot = *base + base[xp1];
-	    av = tot / 2;
-	    base[xp1] = av;
-	    *base++ = av + tot % 2;
-	} while (base <= &minfo->int_7);
-	break;
+    case 4:                    /* inlined t_av_r() -- (ThMO) */
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        do {
+            tot = *base + base[xp1];
+            av = tot / 2;
+            base[xp1] = av;
+            *base++ = av + tot % 2;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 5:			/* inlined t_av_lr() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[xp1];
-	    av = tot / 3;
-	    base[xm1] = base[xp1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 5:                    /* inlined t_av_lr() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[xp1];
+            av = tot / 3;
+            base[xm1] = base[xp1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 6:			/* inline t_av_ur() -- (ThMO) */
-	ym1 = &minfo[-1].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	do {
-	    tot = *base + base[ym1] + base[xp1];
-	    av = tot / 3;
-	    base[ym1] = base[xp1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 6:                    /* inline t_av_ur() -- (ThMO) */
+        ym1 = &minfo[-1].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        do {
+            tot = *base + base[ym1] + base[xp1];
+            av = tot / 3;
+            base[ym1] = base[xp1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 7:			/* inlined t_av_lur() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	ym1 = &minfo[-1].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[ym1] + base[xp1];
-	    av = tot / 4;
-	    base[xm1] = base[ym1] = base[xp1] = av;
-	    *base++ = av + tot % 4;
-	} while (base <= &minfo->int_7);
-	break;
+    case 7:                    /* inlined t_av_lur() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        ym1 = &minfo[-1].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[ym1] + base[xp1];
+            av = tot / 4;
+            base[xm1] = base[ym1] = base[xp1] = av;
+            *base++ = av + tot % 4;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 8:			/* inlined t_av_d() -- (ThMO) */
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[yp1];
-	    av = tot / 2;
-	    base[yp1] = av;
-	    *base++ = av + tot % 2;
-	} while (base <= &minfo->int_7);
-	break;
+    case 8:                    /* inlined t_av_d() -- (ThMO) */
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[yp1];
+            av = tot / 2;
+            base[yp1] = av;
+            *base++ = av + tot % 2;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 9:			/* inlined t_av_ld() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[yp1];
-	    av = tot / 3;
-	    base[xm1] = base[yp1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 9:                    /* inlined t_av_ld() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[yp1];
+            av = tot / 3;
+            base[xm1] = base[yp1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 10:			/* inlined t_av_ud() -- (ThMO) */
-	ym1 = &minfo[-1].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[ym1] + base[yp1];
-	    av = tot / 3;
-	    base[ym1] = base[yp1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 10:                   /* inlined t_av_ud() -- (ThMO) */
+        ym1 = &minfo[-1].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[ym1] + base[yp1];
+            av = tot / 3;
+            base[ym1] = base[yp1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 11:			/* inlined t_av_lud() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	ym1 = &minfo[-1].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[ym1] + base[yp1];
-	    av = tot / 4;
-	    base[xm1] = base[ym1] = base[yp1] = av;
-	    *base++ = av + tot % 4;
-	} while (base <= &minfo->int_7);
-	break;
+    case 11:                   /* inlined t_av_lud() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        ym1 = &minfo[-1].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[ym1] + base[yp1];
+            av = tot / 4;
+            base[xm1] = base[ym1] = base[yp1] = av;
+            *base++ = av + tot % 4;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 12:			/* inlined t_av_rd() -- (ThMO) */
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[xp1] + base[yp1];
-	    av = tot / 3;
-	    base[xp1] = base[yp1] = av;
-	    *base++ = av + tot % 3;
-	} while (base <= &minfo->int_7);
-	break;
+    case 12:                   /* inlined t_av_rd() -- (ThMO) */
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[xp1] + base[yp1];
+            av = tot / 3;
+            base[xp1] = base[yp1] = av;
+            *base++ = av + tot % 3;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 13:			/* inlined t_av_lrd() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[xp1] + base[yp1];
-	    av = tot / 4;
-	    base[xm1] = base[xp1] = base[yp1] = av;
-	    *base++ = av + tot % 4;
-	} while (base <= &minfo->int_7);
-	break;
+    case 13:                   /* inlined t_av_lrd() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[xp1] + base[yp1];
+            av = tot / 4;
+            base[xm1] = base[xp1] = base[yp1] = av;
+            *base++ = av + tot % 4;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 14:			/* inlined t_av_urd() -- (ThMO) */
-	ym1 = &minfo[-1].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[ym1] + base[xp1] + base[yp1];
-	    av = tot / 4;
-	    base[ym1] = base[xp1] = base[yp1] = av;
-	    *base++ = av + tot % 4;
-	} while (base <= &minfo->int_7);
-	break;
+    case 14:                   /* inlined t_av_urd() -- (ThMO) */
+        ym1 = &minfo[-1].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[ym1] + base[xp1] + base[yp1];
+            av = tot / 4;
+            base[ym1] = base[xp1] = base[yp1] = av;
+            *base++ = av + tot % 4;
+        } while (base <= &minfo->int_7);
+        break;
 
-    case 15:			/* inlined t_av_lurd() -- (ThMO) */
-	xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
-	ym1 = &minfo[-1].int_1 - base;
-	xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
-	yp1 = &minfo[1].int_1 - base;
-	do {
-	    tot = *base + base[xm1] + base[ym1] + base[xp1] + base[yp1];
-	    av = tot / 5;
-	    base[xm1] = base[ym1] = base[xp1] = base[yp1] = av;
-	    *base++ = av + tot % 5;
-	} while (base <= &minfo->int_7);
-	break;
+    case 15:                   /* inlined t_av_lurd() -- (ThMO) */
+        xm1 = &minfo[-WORLD_SIDE_LEN].int_1 - base;
+        ym1 = &minfo[-1].int_1 - base;
+        xp1 = &minfo[WORLD_SIDE_LEN].int_1 - base;
+        yp1 = &minfo[1].int_1 - base;
+        do {
+            tot = *base + base[xm1] + base[ym1] + base[xp1] + base[yp1];
+            av = tot / 5;
+            base[xm1] = base[ym1] = base[xp1] = base[yp1] = av;
+            *base++ = av + tot % 5;
+        } while (base <= &minfo->int_7);
+        break;
     }
     if (*--base >= max_waste) {
-	*base -= WASTE_BURN_ON_TRANSPORT;
-	++*pol;
-	if (*waste_count > TRANSPORT_BURN_WASTE_COUNT) {
-	    *waste_count = 0;
-	} else {
-	    ++ * waste_count;
-	}
+        *base -= WASTE_BURN_ON_TRANSPORT;
+        ++*pol;
+        if (*waste_count > TRANSPORT_BURN_WASTE_COUNT) {
+            *waste_count = 0;
+        } else {
+            ++*waste_count;
+        }
     }
 }
-

Modified: trunk/src/lincity/transport.h
===================================================================
--- trunk/src/lincity/transport.h	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/lincity/transport.h	2007-11-25 19:15:34 UTC (rev 1286)
@@ -15,5 +15,4 @@
  (MP_GROUP(x,y) == GROUP_RAIL) || \
  (MP_GROUP(x,y) == GROUP_POWER_LINE))
 
-
 #endif

Deleted: trunk/src/tools/Lindent-2.6.23.8.sh
===================================================================
--- trunk/src/tools/Lindent-2.6.23.8.sh	2007-11-25 19:00:26 UTC (rev 1285)
+++ trunk/src/tools/Lindent-2.6.23.8.sh	2007-11-25 19:15:34 UTC (rev 1286)
@@ -1,11 +0,0 @@
-#!/bin/sh
-# The original tiny script is use to put linux code in corformance with
-# the Linux Coding Style. You should read it :-)
-#indent -npro -kr -i8 -ts8 -sob -l80 -ss -ncs -cp1 "$@"
-
-# However for Lincity-ng, due to
-# - C++ code which tends to have longs lines
-# - NG is graphic so run on rather good hardware => we can afford longer line (120) than linux kernel (80)
-# - indent 8 is too much for existing code => indent is 4
-# - tabs causes trouble to some we use spaces intead of tabs.
-indent -npro -kr -i4 --no-tabs -sob -l120 -ss -ncs -cp1 "$@"

Copied: trunk/src/tools/Lindent.sh (from rev 1285, trunk/src/tools/Lindent-2.6.23.8.sh)



From alainb at mail.berlios.de  Thu Nov 29 21:38:15 2007
From: alainb at mail.berlios.de (alainb at BerliOS)
Date: Thu, 29 Nov 2007 20:38:15 -0000
Subject: [Lincity-ng-commit] r1290 - in trunk/data/locale: . gui
Message-ID: <200711292037.lATKbDrD020413@sheep.berlios.de>

Author: alainb
Date: 2007-11-29 21:37:08 +0100 (Thu, 29 Nov 2007)
New Revision: 1290

Modified:
   trunk/data/locale/ca.po
   trunk/data/locale/cs.po
   trunk/data/locale/de.po
   trunk/data/locale/es.po
   trunk/data/locale/fr.po
   trunk/data/locale/gui/ca.po
   trunk/data/locale/gui/cs.po
   trunk/data/locale/gui/de.po
   trunk/data/locale/gui/es.po
   trunk/data/locale/gui/fr.po
   trunk/data/locale/gui/nl.po
   trunk/data/locale/gui/pl.po
   trunk/data/locale/gui/pt_BR.po
   trunk/data/locale/gui/ru.po
   trunk/data/locale/gui/sv.po
   trunk/data/locale/nl.po
   trunk/data/locale/pl.po
   trunk/data/locale/pt_BR.po
   trunk/data/locale/ru.po
   trunk/data/locale/sv.po
Log:
update all po files to include new messages. (just need to be translated now :)

Modified: trunk/data/locale/ca.po
===================================================================
--- trunk/data/locale/ca.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/ca.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -1,7 +1,6 @@
 # translation of ca.po to Catal??
 # This file is distributed under the same license as the Lincity-NG
 # package. # Copyright (C) 2007 Joan <info at lutesor.com>
-
 msgid ""
 msgstr ""
 "Project-Id-Version: ca\n"
@@ -28,58 +27,52 @@
 msgid "Couldn't create the save directory '%s'\n"
 msgstr "No s'ha pogut crear el directori '%s'\n"
 
-#: src/lincity/fileutil.cpp:589
-#, c-format
-msgid "Couldn't create the save directory %s\n"
-msgstr "No s'ha pogut crear el directori de desar %s\n"
-
 #: src/lincity/fileutil.cpp:635
 #, c-format
 msgid "Out of memory: malloc failure\n"
 msgstr "Mem??ria insuficient: fallida general\n"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Desa fitxer<%s> - "
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr ""
 
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "No es pot obrir el fitxer de desar!"
+#: src/lincity/engine.cpp:121
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
 
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Desant escena"
+#: src/lincity/engine.cpp:147
+msgid "Port must be connected to river all along right side."
+msgstr ""
 
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "No es pot obrir <%s> (gzipped)"
+#: src/lincity/engine.cpp:156 src/lincity/engine.cpp:165
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr ""
 
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Obrint escena"
+#: src/lincity/engine.cpp:195
+msgid "Too many markets. You cannot build one more"
+msgstr ""
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "No pots construir aqu??"
+#: src/lincity/engine.cpp:218
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr ""
 
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Aquesta area era un abocador"
+#: src/lincity/engine.cpp:243
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr ""
 
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "D'acord"
+#: src/lincity/engine.cpp:247
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr ""
 
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "No pots construir la mine aqui"
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "No queda coure en aquest lloc"
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
 
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
@@ -353,11 +346,60 @@
 msgid "Residential HL"
 msgstr "Residencia HL"
 
-#: src/lincity/lintypes.cpp:482 src/lincity/lintypes.cpp:494
-#: src/lincity/lintypes.cpp:506
-msgid "Residential"
-msgstr "Residencia"
+#: src/lincity/lintypes.cpp:444
+msgid "Residential LH"
+msgstr ""
 
+#: src/lincity/lintypes.cpp:455
+msgid "Residential MH"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:466
+msgid "Residential HH"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Desa fitxer<%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "No es pot obrir el fitxer de desar!"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Desant escena"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "No es pot obrir <%s> (gzipped)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Obrint escena"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Gener"
@@ -406,6 +448,56 @@
 msgid "Dec"
 msgstr "Dec."
 
+#: src/lincity/modules/health_centre.cpp:66
+msgid "Health Centre"
+msgstr "Hospital"
+
+#: src/lincity/modules/firestation.cpp:121 src/lincity/modules/cricket.cpp:101
+#: src/lincity/modules/university.cpp:74
+#: src/lincity/modules/health_centre.cpp:68
+#: src/lincity/modules/rocket_pad.cpp:169
+#: src/lincity/modules/blacksmith.cpp:102 src/lincity/modules/recycle.cpp:181
+#: src/lincity/modules/school.cpp:54 src/lincity/modules/mill.cpp:107
+#: src/lincity/modules/pottery.cpp:123
+msgid "Inventory"
+msgstr "Inventari"
+
+#: src/lincity/modules/firestation.cpp:122 src/lincity/modules/cricket.cpp:102
+#: src/lincity/modules/market.cpp:1149 src/lincity/modules/university.cpp:75
+#: src/lincity/modules/health_centre.cpp:69
+#: src/lincity/modules/rocket_pad.cpp:170 src/lincity/modules/road.cpp:52
+#: src/lincity/modules/rail.cpp:55 src/lincity/modules/school.cpp:55
+#: src/lincity/modules/pottery.cpp:124 src/lincity/modules/coal_power.cpp:105
+#: src/lincity/modules/track.cpp:43
+msgid "Jobs"
+msgstr "Ocupaci??"
+
+#: src/lincity/modules/firestation.cpp:124 src/lincity/modules/cricket.cpp:104
+#: src/lincity/modules/market.cpp:1153 src/lincity/modules/university.cpp:77
+#: src/lincity/modules/health_centre.cpp:71
+#: src/lincity/modules/rocket_pad.cpp:172 src/lincity/modules/road.cpp:56
+#: src/lincity/modules/blacksmith.cpp:103 src/lincity/modules/port.cpp:219
+#: src/lincity/modules/rail.cpp:59 src/lincity/modules/school.cpp:57
+#: src/lincity/modules/mill.cpp:108 src/lincity/modules/pottery.cpp:126
+#: src/lincity/modules/track.cpp:47 src/lincity-ng/MpsInterface.cpp:445
+msgid "Goods"
+msgstr "Mercader??es"
+
+#: src/lincity/modules/rocket_pad.cpp:163
+msgid "Rocket Pad"
+msgstr "Plataforma de cohets"
+
+#: src/lincity/modules/rocket_pad.cpp:166
+msgid "Completion"
+msgstr "Acabat"
+
+#: src/lincity/modules/commune.cpp:152 src/lincity/modules/market.cpp:1157
+#: src/lincity/modules/rocket_pad.cpp:174 src/lincity/modules/road.cpp:60
+#: src/lincity/modules/port.cpp:223 src/lincity/modules/rail.cpp:63
+#: src/lincity/modules/light_industry.cpp:368 src/lincity/modules/track.cpp:51
+msgid "Steel"
+msgstr "Acer"
+
 #: src/lincity/modules/windmill.cpp:77 src/lincity/modules/windmill.cpp:88
 #: src/lincity/modules/recycle.cpp:178 src/lincity/modules/coal_power.cpp:107
 #: src/lincity/modules/organic_farm.cpp:196
@@ -445,6 +537,81 @@
 msgid "Grid ID"
 msgstr "Graella ID"
 
+#: src/lincity/modules/commune.cpp:147 src/lincity/modules/commune.cpp:149
+#: src/lincity/modules/commune.cpp:151 src/lincity/modules/commune.cpp:153
+#: src/lincity/modules/water.cpp:22 src/lincity-ng/MpsInterface.cpp:376
+#: src/lincity-ng/MpsInterface.cpp:379 src/lincity-ng/MpsInterface.cpp:382
+msgid "Yes"
+msgstr "Si"
+
+#: src/lincity/modules/commune.cpp:147 src/lincity/modules/commune.cpp:149
+#: src/lincity/modules/commune.cpp:151 src/lincity/modules/commune.cpp:153
+#: src/lincity/modules/water.cpp:22 src/lincity-ng/MpsInterface.cpp:376
+#: src/lincity-ng/MpsInterface.cpp:379 src/lincity-ng/MpsInterface.cpp:382
+msgid "No"
+msgstr "No"
+
+#: src/lincity/modules/water.cpp:23
+msgid "Navigable"
+msgstr "Navegable"
+
+#: src/lincity/modules/recycle.cpp:169
+msgid "Recycling"
+msgstr "Reciclar"
+
+#: src/lincity/modules/recycle.cpp:170
+msgid "Center"
+msgstr "Centre"
+
+#: src/lincity/modules/university.cpp:79
+#: src/lincity/modules/blacksmith.cpp:100
+#: src/lincity/modules/light_industry.cpp:370
+#: src/lincity/modules/recycle.cpp:173 src/lincity/modules/school.cpp:60
+#: src/lincity/modules/mill.cpp:105 src/lincity/modules/pottery.cpp:121
+#: src/lincity/modules/heavy_industry.cpp:346
+msgid "Capacity"
+msgstr "Capacitat"
+
+#: src/lincity/modules/light_industry.cpp:359
+#: src/lincity/modules/recycle.cpp:175
+#: src/lincity/modules/organic_farm.cpp:188
+#: src/lincity/modules/residence.cpp:279 src/lincity/modules/residence.cpp:282
+#: src/lincity/modules/residence.cpp:285 src/lincity/modules/residence.cpp:288
+#: src/lincity/modules/residence.cpp:291 src/lincity/modules/residence.cpp:294
+msgid "YES"
+msgstr "Si"
+
+#: src/lincity/modules/light_industry.cpp:359
+#: src/lincity/modules/recycle.cpp:175
+#: src/lincity/modules/heavy_industry.cpp:334
+#: src/lincity/modules/residence.cpp:279 src/lincity/modules/residence.cpp:282
+#: src/lincity/modules/residence.cpp:285 src/lincity/modules/residence.cpp:288
+#: src/lincity/modules/residence.cpp:291 src/lincity/modules/residence.cpp:294
+msgid "NO"
+msgstr "No"
+
+#: src/lincity/modules/light_industry.cpp:360
+#: src/lincity/modules/recycle.cpp:176
+#: src/lincity/modules/heavy_industry.cpp:337
+#: src/lincity/modules/organic_farm.cpp:193
+#: src/lincity/modules/residence.cpp:280
+msgid "Power"
+msgstr "Energ??a"
+
+#: src/lincity/modules/commune.cpp:150 src/lincity/modules/market.cpp:1155
+#: src/lincity/modules/road.cpp:58 src/lincity/modules/port.cpp:215
+#: src/lincity/modules/rail.cpp:61 src/lincity/modules/light_industry.cpp:366
+#: src/lincity/modules/recycle.cpp:182 src/lincity/modules/pottery.cpp:128
+#: src/lincity/modules/heavy_industry.cpp:342 src/lincity/modules/track.cpp:49
+msgid "Ore"
+msgstr "Coure"
+
+#: src/lincity/modules/commune.cpp:154 src/lincity/modules/market.cpp:1159
+#: src/lincity/modules/road.cpp:62 src/lincity/modules/rail.cpp:65
+#: src/lincity/modules/recycle.cpp:184 src/lincity/modules/track.cpp:53
+msgid "Waste"
+msgstr "Escombrer??es"
+
 #: src/lincity/modules/coalmine.cpp:168
 msgid "Coal Mine"
 msgstr "Mina de carb??"
@@ -462,6 +629,47 @@
 msgid "EMPTY"
 msgstr "BUIT"
 
+#: src/lincity/modules/residence.cpp:273
+msgid "Residence"
+msgstr "Residencia"
+
+#: src/lincity/modules/residence.cpp:277
+msgid "People"
+msgstr "Persones"
+
+#: src/lincity/modules/residence.cpp:283
+msgid "Fed"
+msgstr "Menjar"
+
+#: src/lincity/modules/residence.cpp:286
+msgid "Employed"
+msgstr "Ampleats"
+
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:390
+msgid "good"
+msgstr "B??"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "Pobres"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Treballs"
+
+#: src/lincity/modules/residence.cpp:289
+msgid "Health Cvr"
+msgstr "Salud Cvr"
+
+#: src/lincity/modules/residence.cpp:295 src/lincity-ng/MpsInterface.cpp:383
+#: src/lincity-ng/MpsInterface.cpp:511
+msgid "Sport"
+msgstr "Esport"
+
+#: src/lincity/modules/residence.cpp:297 src/lincity-ng/MpsInterface.cpp:385
+msgid "Pollution"
+msgstr "Contaminaci??"
+
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr ""
@@ -471,24 +679,15 @@
 msgid "% Complete"
 msgstr "%Complert"
 
-#: src/lincity/modules/commune.cpp:145
-msgid "Activity"
-msgstr "Activitat"
+#: src/lincity/modules/heavy_industry.cpp:323
+msgid "Heavy"
+msgstr "Force"
 
-#: src/lincity/modules/commune.cpp:147 src/lincity/modules/commune.cpp:149
-#: src/lincity/modules/commune.cpp:151 src/lincity/modules/commune.cpp:153
-#: src/lincity/modules/water.cpp:22 src/lincity-ng/MpsInterface.cpp:376
-#: src/lincity-ng/MpsInterface.cpp:379 src/lincity-ng/MpsInterface.cpp:382
-msgid "Yes"
-msgstr "Si"
+#: src/lincity/modules/light_industry.cpp:355
+#: src/lincity/modules/heavy_industry.cpp:324
+msgid "Industry"
+msgstr "Industria"
 
-#: src/lincity/modules/commune.cpp:147 src/lincity/modules/commune.cpp:149
-#: src/lincity/modules/commune.cpp:151 src/lincity/modules/commune.cpp:153
-#: src/lincity/modules/water.cpp:22 src/lincity-ng/MpsInterface.cpp:376
-#: src/lincity-ng/MpsInterface.cpp:379 src/lincity-ng/MpsInterface.cpp:382
-msgid "No"
-msgstr "No"
-
 #: src/lincity/modules/commune.cpp:148 src/lincity/modules/market.cpp:1151
 #: src/lincity/modules/road.cpp:54 src/lincity/modules/blacksmith.cpp:105
 #: src/lincity/modules/port.cpp:211 src/lincity/modules/rail.cpp:57
@@ -501,108 +700,72 @@
 msgid "Coal"
 msgstr "Carb??"
 
-#: src/lincity/modules/commune.cpp:150 src/lincity/modules/market.cpp:1155
-#: src/lincity/modules/road.cpp:58 src/lincity/modules/port.cpp:215
-#: src/lincity/modules/rail.cpp:61 src/lincity/modules/light_industry.cpp:366
-#: src/lincity/modules/recycle.cpp:182 src/lincity/modules/pottery.cpp:128
-#: src/lincity/modules/heavy_industry.cpp:342 src/lincity/modules/track.cpp:49
-msgid "Ore"
-msgstr "Coure"
+#: src/lincity/modules/heavy_industry.cpp:331
+msgid "Grid"
+msgstr "Graella"
 
-#: src/lincity/modules/commune.cpp:152 src/lincity/modules/market.cpp:1157
-#: src/lincity/modules/rocket_pad.cpp:174 src/lincity/modules/road.cpp:60
-#: src/lincity/modules/port.cpp:223 src/lincity/modules/rail.cpp:63
-#: src/lincity/modules/light_industry.cpp:368 src/lincity/modules/track.cpp:51
-msgid "Steel"
-msgstr "Acer"
+#: src/lincity/modules/light_industry.cpp:362
+#: src/lincity/modules/heavy_industry.cpp:339
+msgid "Output"
+msgstr "Sortida"
 
-#: src/lincity/modules/commune.cpp:154 src/lincity/modules/market.cpp:1159
-#: src/lincity/modules/road.cpp:62 src/lincity/modules/rail.cpp:65
-#: src/lincity/modules/recycle.cpp:184 src/lincity/modules/track.cpp:53
-msgid "Waste"
-msgstr "Escombrer??es"
+#: src/lincity/modules/light_industry.cpp:364
+#: src/lincity/modules/heavy_industry.cpp:340
+msgid "Store"
+msgstr "Magatzem"
 
-#: src/lincity/modules/firestation.cpp:119
-msgid "Fire Station"
-msgstr "Bombers"
-
-#: src/lincity/modules/firestation.cpp:121 src/lincity/modules/cricket.cpp:101
-#: src/lincity/modules/university.cpp:74
-#: src/lincity/modules/health_centre.cpp:68
-#: src/lincity/modules/rocket_pad.cpp:169
-#: src/lincity/modules/blacksmith.cpp:102 src/lincity/modules/recycle.cpp:181
-#: src/lincity/modules/school.cpp:54 src/lincity/modules/mill.cpp:107
-#: src/lincity/modules/pottery.cpp:123
-msgid "Inventory"
-msgstr "Inventari"
-
-#: src/lincity/modules/firestation.cpp:122 src/lincity/modules/cricket.cpp:102
-#: src/lincity/modules/market.cpp:1149 src/lincity/modules/university.cpp:75
-#: src/lincity/modules/health_centre.cpp:69
-#: src/lincity/modules/rocket_pad.cpp:170 src/lincity/modules/road.cpp:52
-#: src/lincity/modules/rail.cpp:55 src/lincity/modules/school.cpp:55
-#: src/lincity/modules/pottery.cpp:124 src/lincity/modules/coal_power.cpp:105
-#: src/lincity/modules/track.cpp:43
-msgid "Jobs"
-msgstr "Ocupaci??"
-
-#: src/lincity/modules/firestation.cpp:124 src/lincity/modules/cricket.cpp:104
-#: src/lincity/modules/market.cpp:1153 src/lincity/modules/university.cpp:77
-#: src/lincity/modules/health_centre.cpp:71
-#: src/lincity/modules/rocket_pad.cpp:172 src/lincity/modules/road.cpp:56
-#: src/lincity/modules/blacksmith.cpp:103 src/lincity/modules/port.cpp:219
-#: src/lincity/modules/rail.cpp:59 src/lincity/modules/school.cpp:57
-#: src/lincity/modules/mill.cpp:108 src/lincity/modules/pottery.cpp:126
-#: src/lincity/modules/track.cpp:47 src/lincity-ng/MpsInterface.cpp:445
-msgid "Goods"
-msgstr "Mercader??es"
-
 #: src/lincity/modules/market.cpp:1147 src/lincity/modules/road.cpp:50
 #: src/lincity/modules/port.cpp:207 src/lincity/modules/rail.cpp:53
 #: src/lincity/modules/mill.cpp:110 src/lincity/modules/track.cpp:41
 msgid "Food"
 msgstr "Aliment"
 
-#: src/lincity/modules/university.cpp:69
-msgid "Tech Produced"
-msgstr "Tecnologies produides"
+#: src/lincity/modules/port.cpp:227 src/lincity-ng/MpsInterface.cpp:527
+msgid "Total"
+msgstr "Total"
 
-#: src/lincity/modules/university.cpp:79
-#: src/lincity/modules/blacksmith.cpp:100
-#: src/lincity/modules/light_industry.cpp:370
-#: src/lincity/modules/recycle.cpp:173 src/lincity/modules/school.cpp:60
-#: src/lincity/modules/mill.cpp:105 src/lincity/modules/pottery.cpp:121
-#: src/lincity/modules/heavy_industry.cpp:346
-msgid "Capacity"
-msgstr "Capacitat"
+#: src/lincity/modules/rail.cpp:50
+msgid "Rail"
+msgstr "Via"
 
-#: src/lincity/modules/water.cpp:23
-msgid "Navigable"
-msgstr "Navegable"
+#: src/lincity/modules/coal_power.cpp:90
+#: src/lincity/modules/solar_power.cpp:45
+msgid "Power Station"
+msgstr "Central el??ctrica"
 
-#: src/lincity/modules/health_centre.cpp:66
-msgid "Health Centre"
-msgstr "Hospital"
+#: src/lincity/modules/coal_power.cpp:94
+#: src/lincity/modules/solar_power.cpp:49
+msgid "Max Output"
+msgstr "Sortida m??xima"
 
-#: src/lincity/modules/rocket_pad.cpp:163
-msgid "Rocket Pad"
-msgstr "Plataforma de cohets"
+#: src/lincity/modules/coal_power.cpp:99
+#: src/lincity/modules/solar_power.cpp:54
+msgid "Current Output"
+msgstr "Sortida actual"
 
-#: src/lincity/modules/rocket_pad.cpp:166
-msgid "Completion"
-msgstr "Acabat"
+#: src/lincity/modules/substation.cpp:95
+msgid "Local Demand"
+msgstr "Demanda Local"
 
+#: src/lincity/modules/mill.cpp:103
+msgid "Textile Mill"
+msgstr "F??brica t??xtil"
+
+#: src/lincity/modules/oremine.cpp:184
+msgid "Ore Mine"
+msgstr "Mine de coure"
+
 #: src/lincity/modules/power_line.cpp:50
 msgid "Power Line"
 msgstr "Linea electrica"
 
-#: src/lincity/modules/port.cpp:227 src/lincity-ng/MpsInterface.cpp:527
-msgid "Total"
-msgstr "Total"
+#: src/lincity/modules/light_industry.cpp:354
+msgid "Light"
+msgstr "Electricitat"
 
-#: src/lincity/modules/rail.cpp:50
-msgid "Rail"
-msgstr "Via"
+#: src/lincity/modules/university.cpp:69
+msgid "Tech Produced"
+msgstr "Tecnologies produides"
 
 #: src/lincity/modules/tip.cpp:109
 msgid "Landfill"
@@ -625,94 +788,18 @@
 msgid "% Filled"
 msgstr "% Pl??"
 
-#: src/lincity/modules/light_industry.cpp:354
-msgid "Light"
-msgstr "Electricitat"
+#: src/lincity/modules/commune.cpp:145
+msgid "Activity"
+msgstr "Activitat"
 
-#: src/lincity/modules/light_industry.cpp:355
-#: src/lincity/modules/heavy_industry.cpp:324
-msgid "Industry"
-msgstr "Industria"
-
-#: src/lincity/modules/light_industry.cpp:359
-#: src/lincity/modules/recycle.cpp:175
-#: src/lincity/modules/organic_farm.cpp:188
-#: src/lincity/modules/residence.cpp:279 src/lincity/modules/residence.cpp:282
-#: src/lincity/modules/residence.cpp:285 src/lincity/modules/residence.cpp:288
-#: src/lincity/modules/residence.cpp:291 src/lincity/modules/residence.cpp:294
-msgid "YES"
-msgstr "Si"
-
-#: src/lincity/modules/light_industry.cpp:359
-#: src/lincity/modules/recycle.cpp:175
-#: src/lincity/modules/heavy_industry.cpp:334
-#: src/lincity/modules/residence.cpp:279 src/lincity/modules/residence.cpp:282
-#: src/lincity/modules/residence.cpp:285 src/lincity/modules/residence.cpp:288
-#: src/lincity/modules/residence.cpp:291 src/lincity/modules/residence.cpp:294
-msgid "NO"
-msgstr "No"
-
-#: src/lincity/modules/light_industry.cpp:360
-#: src/lincity/modules/recycle.cpp:176
-#: src/lincity/modules/heavy_industry.cpp:337
-#: src/lincity/modules/organic_farm.cpp:193
-#: src/lincity/modules/residence.cpp:280
-msgid "Power"
-msgstr "Energ??a"
-
-#: src/lincity/modules/light_industry.cpp:362
-#: src/lincity/modules/heavy_industry.cpp:339
-msgid "Output"
-msgstr "Sortida"
-
-#: src/lincity/modules/light_industry.cpp:364
-#: src/lincity/modules/heavy_industry.cpp:340
-msgid "Store"
-msgstr "Magatzem"
-
-#: src/lincity/modules/recycle.cpp:169
-msgid "Recycling"
-msgstr "Reciclar"
-
-#: src/lincity/modules/recycle.cpp:170
-msgid "Center"
-msgstr "Centre"
-
 #: src/lincity/modules/school.cpp:51
 msgid "Lessons Learned"
 msgstr "Llisons apreses"
 
-#: src/lincity/modules/oremine.cpp:184
-msgid "Ore Mine"
-msgstr "Mine de coure"
+#: src/lincity/modules/firestation.cpp:119
+msgid "Fire Station"
+msgstr "Bombers"
 
-#: src/lincity/modules/mill.cpp:103
-msgid "Textile Mill"
-msgstr "F??brica t??xtil"
-
-#: src/lincity/modules/coal_power.cpp:90
-#: src/lincity/modules/solar_power.cpp:45
-msgid "Power Station"
-msgstr "Central el??ctrica"
-
-#: src/lincity/modules/coal_power.cpp:94
-#: src/lincity/modules/solar_power.cpp:49
-msgid "Max Output"
-msgstr "Sortida m??xima"
-
-#: src/lincity/modules/coal_power.cpp:99
-#: src/lincity/modules/solar_power.cpp:54
-msgid "Current Output"
-msgstr "Sortida actual"
-
-#: src/lincity/modules/heavy_industry.cpp:323
-msgid "Heavy"
-msgstr "Force"
-
-#: src/lincity/modules/heavy_industry.cpp:331
-msgid "Grid"
-msgstr "Graella"
-
 #: src/lincity/modules/organic_farm.cpp:183
 msgid "Organic Farm"
 msgstr "Grange org??nique"
@@ -725,96 +812,239 @@
 msgid "Prod"
 msgstr "Prod"
 
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "Solar"
 
-#: src/lincity/modules/substation.cpp:95
-msgid "Local Demand"
-msgstr "Demanda Local"
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
 
-#: src/lincity/modules/residence.cpp:273
-msgid "Residence"
-msgstr "Residencia"
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
 
-#: src/lincity/modules/residence.cpp:277
-msgid "People"
-msgstr "Persones"
+#: src/lincity-ng/Dialog.cpp:173
+msgid "Launchsite"
+msgstr "Zona de Llansament"
 
-#: src/lincity/modules/residence.cpp:283
-msgid "Fed"
-msgstr "Menjar"
+#: src/lincity-ng/Dialog.cpp:341 src/lincity-ng/Dialog.cpp:342
+msgid "----- IN TEST MODE -------"
+msgstr "-----MODE PROBA--------"
 
-#: src/lincity/modules/residence.cpp:286
-msgid "Employed"
-msgstr "Ampleats"
+#: src/lincity-ng/Dialog.cpp:344
+#, c-format
+msgid "Game statistics from LinCity-NG Version %s"
+msgstr "Estad??stiques de joc per la versi?? %s de LinCity-NG"
 
-#: src/lincity/modules/residence.cpp:289
-msgid "Health Cvr"
-msgstr "Salud Cvr"
+#: src/lincity-ng/Dialog.cpp:348
+#, c-format
+msgid "Initial loaded scene - %s"
+msgstr "Escenari inicial carregat - %s"
 
-#: src/lincity/modules/residence.cpp:295 src/lincity-ng/MpsInterface.cpp:383
-#: src/lincity-ng/MpsInterface.cpp:511
-msgid "Sport"
-msgstr "Esport"
+#: src/lincity-ng/Dialog.cpp:353
+#, c-format
+msgid "Economy is sustainable"
+msgstr "L'econom??a es sustanible"
 
-#: src/lincity/modules/residence.cpp:297 src/lincity-ng/MpsInterface.cpp:385
-msgid "Pollution"
-msgstr "Contaminaci??"
+#: src/lincity-ng/Dialog.cpp:357
+#, c-format
+msgid "Population  %d  of which  %d  are not housed."
+msgstr "Poblaci??  %d dels que un %d no viuan en casas"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:390
-msgid "good"
-msgstr "B??"
+#: src/lincity-ng/Dialog.cpp:362
+#, c-format
+msgid "Max population %d  Number evacuated %d Total births %d"
+msgstr "Maxime poblaci??%d  Nombre evacuats%d Total nascuts%d"
 
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "Pobres"
+#: src/lincity-ng/Dialog.cpp:367
+#, c-format
+msgid "Date %s %04d  Money %8d   Tech-level %5.1f (%5.1f)"
+msgstr "Date%s %04d  Capital %8d  Nivell Tecnic %5.1f (%5.1f)"
 
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Treballs"
+#: src/lincity-ng/Dialog.cpp:374
+#, c-format
+msgid ".Deaths by starvation %7d   History %8.3f"
+msgstr "Morts per fam %7d   Hist??ric %8.3f"
 
+#: src/lincity-ng/Dialog.cpp:379
+#, c-format
+msgid "Deaths from pollution %7d   History %8.3f"
+msgstr "Morts per contaminaci?? %7d Hist??ric %8.3f"
+
+#: src/lincity-ng/Dialog.cpp:383
+#, c-format
+msgid "Years of unemployment %7d   History %8.3f"
+msgstr "Anys de paro"
+
+#: src/lincity-ng/Dialog.cpp:387
+#, c-format
+msgid "Rockets launched %2d  Successful launches %2d"
+msgstr "Cohets llansats%2d Pr??xim llansament% 2d"
+
+#: src/lincity-ng/Dialog.cpp:397
+#, c-format
+msgid ".   Residences %4d         Markets %4d            Farms %4d"
+msgstr ".Residencias%4d         Mercats%4d             Granges%4d"
+
+#: src/lincity-ng/Dialog.cpp:418
+#, c-format
+msgid ".    Monuments %4d         Schools %4d     Universities %4d"
+msgstr ".   Monuments%4d          Escoles%4d      Universitats%4d"
+
+#: src/lincity-ng/Dialog.cpp:423
+#, c-format
+msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
+msgstr ".Bombers%4d                 Parcs%4d     Esports%4d"
+
+#: src/lincity-ng/Dialog.cpp:449
+#, c-format
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr "Centres Salut   t%4d          Abodcadors%4d      Pipicans %4d"
+
+#: src/lincity-ng/Dialog.cpp:433
+#, c-format
+msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
+msgstr ".    Molins%4d     Potencia carb??%4d       Potencia Solar%4d"
+
+#: src/lincity-ng/Dialog.cpp:439
+#, c-format
+msgid ".  Substations %4d     Power lines %4d            Ports %4d"
+msgstr ".  Sub-estacions %4d     L??neas El??ctriques%4d        Ports%4d"
+
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ".       Camins %4d           Carreteras %4d          Vias %4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ".    Terrisserias %4d     Fargues%4d            Molins%4d"
+
+#: src/lincity-ng/Dialog.cpp:444
+#, c-format
+msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
+msgstr ".   Ind. lleugera%4d     Ind. Pesada%4d       Reciclat%4d"
+
+#: src/lincity-ng/Dialog.cpp:428
+#, c-format
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ".   Mines Carb??%4d         Mines Coure%4d        Comunes%4d"
+
+#: src/lincity-ng/ScreenInterface.cpp:261
+msgid "MM"
+msgstr ""
+
 #: src/lincity-ng/ScreenInterface.cpp:258 src/lincity-ng/GameView.cpp:1518
 #: src/lincity-ng/GameView.cpp:1549
 msgid "$"
 msgstr "$"
 
-#: src/lincity-ng/ButtonPanel.cpp:198
-msgid "Query Tool"
-msgstr "Eina de preguntar"
+#: src/lincity-ng/GameView.cpp:236
+msgid "Minimap: outline map"
+msgstr "Minimapa: perfil del mapa"
 
-#: src/lincity-ng/ButtonPanel.cpp:199
-msgid "Bulldozer"
-msgstr "Escabadora"
+#: src/lincity-ng/GameView.cpp:239
+msgid "Minimap: unemployment"
+msgstr "Minimap; Parats"
 
-#: src/lincity-ng/ButtonPanel.cpp:201
-msgid "Residential: 50 denizens, low birthrate, high deathrate"
-msgstr "Residencia; 50 habitants, pocs naixaments,alta defunci??"
+#: src/lincity-ng/GameView.cpp:242
+msgid "Minimap: pollution"
+msgstr "Minimap Contaminaci??"
 
-#: src/lincity-ng/ButtonPanel.cpp:202
-msgid "Residential: 100 denizens, high birthrate, low deathrate"
-msgstr "Residencial; 100 hab., alta natalitat, poques morts"
+#: src/lincity-ng/GameView.cpp:245
+msgid "Minimap: nourishments"
+msgstr "Minimapa: alimentaci??"
 
-#: src/lincity-ng/ButtonPanel.cpp:203
-msgid "Residential: 200 denizens, high birthrate, high deathrate"
-msgstr "Residencial;200 hab., alta natalitat, alta defunci??"
+#: src/lincity-ng/GameView.cpp:248
+msgid "Minimap: power supply"
+msgstr "Minimap: suport energ??a"
 
-#: src/lincity-ng/ButtonPanel.cpp:204
-msgid "Residential: 100 denizens, low birthrate, high deathrate"
-msgstr "Residencial; 100 hab. baixa natalitat, alta mortalitat"
+#: src/lincity-ng/GameView.cpp:251
+msgid "Minimap: firedepartment cover"
+msgstr "Minimap Departament de foc"
 
-#: src/lincity-ng/ButtonPanel.cpp:205
-msgid "Residential: 200 denizens, high birthrate, low deathrate"
-msgstr "Residencial; 200 hab, alta natalitat, baixa mortalitat"
+#: src/lincity-ng/GameView.cpp:254
+msgid "Minimap: sport cover"
+msgstr "Minimapa: esports"
 
-#: src/lincity-ng/ButtonPanel.cpp:206
-msgid "Residential: 400 denizens, high birthrate, high deathrate"
-msgstr "Residencial; 400 hab.,alta natalitat, alta mortalitat"
+#: src/lincity-ng/GameView.cpp:257
+msgid "Minimap: medical care"
+msgstr "Minimapa: Salut"
 
-#: src/lincity-ng/ButtonPanel.cpp:215
-msgid " [Click right for help.]"
-msgstr " [Clic esquerra per ajuda.]"
+#: src/lincity-ng/GameView.cpp:260
+msgid "Minimap: coal depots"
+msgstr "Minimapa:dip??sits carb??"
 
+#: src/lincity-ng/GameView.cpp:263
+msgid "Minimap: traffic density"
+msgstr "Minimapa: Densitat de trafec"
+
+#: src/lincity-ng/GameView.cpp:1513
+msgid "Estimated Bulldoze Cost: "
+msgstr "Cost estimat escabadora"
+
+#: src/lincity-ng/GameView.cpp:1515
+msgid "Bulldoze Cost: "
+msgstr "Cost Escabadora:"
+
+#: src/lincity-ng/GameView.cpp:1520
+msgid "n/a"
+msgstr "n/a"
+
+#: src/lincity-ng/GameView.cpp:1538
+msgid "Query Tool: Show information about selected building."
+msgstr "Eina de investigar. Mostre informaci?? sobres el edifici seleccionat"
+
+#: src/lincity-ng/GameView.cpp:1542
+msgid "Bulldozer: remove building -price varies-"
+msgstr "Enderroc: el.liminar l'edifici -preu variable-"
+
+#: src/lincity-ng/GameView.cpp:1549
+msgid ": Cost to build "
+msgstr "Cost de construcci??"
+
+#: src/lincity-ng/GameView.cpp:1550
+msgid ", to bulldoze "
+msgstr "Excava"
+
+#: src/lincity-ng/GameView.cpp:1550 src/lincity-ng/GameView.cpp:1553
+msgid "$."
+msgstr "$"
+
+#: src/lincity-ng/GameView.cpp:1552
+msgid " To build "
+msgstr "Construeix"
+
+#: src/lincity-ng/GameView.cpp:1552
+msgid " of them "
+msgstr "d'ells"
+
+#: src/lincity-ng/GameView.cpp:1553
+msgid "will cost about "
+msgstr "Et costar??"
+
+#: src/lincity-ng/MainMenu.cpp:162
+msgid "empty"
+msgstr "Buit"
+
 #: src/lincity-ng/MpsInterface.cpp:221
 msgid "build something here"
 msgstr "Construir aqu??"
@@ -983,114 +1213,52 @@
 msgid "Cases"
 msgstr "Casos"
 
-#: src/lincity-ng/Dialog.cpp:173
-msgid "Launchsite"
-msgstr "Zona de Llansament"
+#: src/lincity-ng/ButtonPanel.cpp:198
+msgid "Query Tool"
+msgstr "Eina de preguntar"
 
-#: src/lincity-ng/Dialog.cpp:341 src/lincity-ng/Dialog.cpp:342
-msgid "----- IN TEST MODE -------"
-msgstr "-----MODE PROBA--------"
+#: src/lincity-ng/ButtonPanel.cpp:199
+msgid "Bulldozer"
+msgstr "Escabadora"
 
-#: src/lincity-ng/Dialog.cpp:344
-#, c-format
-msgid "Game statistics from LinCity-NG Version %s"
-msgstr "Estad??stiques de joc per la versi?? %s de LinCity-NG"
+#: src/lincity-ng/ButtonPanel.cpp:201
+msgid "Residential: 50 denizens, low birthrate, high deathrate"
+msgstr "Residencia; 50 habitants, pocs naixaments,alta defunci??"
 
-#: src/lincity-ng/Dialog.cpp:348
-#, c-format
-msgid "Initial loaded scene - %s"
-msgstr "Escenari inicial carregat - %s"
+#: src/lincity-ng/ButtonPanel.cpp:202
+msgid "Residential: 100 denizens, high birthrate, low deathrate"
+msgstr "Residencial; 100 hab., alta natalitat, poques morts"
 
-#: src/lincity-ng/Dialog.cpp:353
-#, c-format
-msgid "Economy is sustainable"
-msgstr "L'econom??a es sustanible"
+#: src/lincity-ng/ButtonPanel.cpp:203
+msgid "Residential: 200 denizens, high birthrate, high deathrate"
+msgstr "Residencial;200 hab., alta natalitat, alta defunci??"
 
-#: src/lincity-ng/Dialog.cpp:357
-#, c-format
-msgid "Population  %d  of which  %d  are not housed."
-msgstr "Poblaci??  %d dels que un %d no viuan en casas"
+#: src/lincity-ng/ButtonPanel.cpp:204
+msgid "Residential: 100 denizens, low birthrate, high deathrate"
+msgstr "Residencial; 100 hab. baixa natalitat, alta mortalitat"
 
-#: src/lincity-ng/Dialog.cpp:362
-#, c-format
-msgid "Max population %d  Number evacuated %d Total births %d"
-msgstr "Maxime poblaci??%d  Nombre evacuats%d Total nascuts%d"
+#: src/lincity-ng/ButtonPanel.cpp:205
+msgid "Residential: 200 denizens, high birthrate, low deathrate"
+msgstr "Residencial; 200 hab, alta natalitat, baixa mortalitat"
 
-#: src/lincity-ng/Dialog.cpp:367
-#, c-format
-msgid "Date %s %04d  Money %8d   Tech-level %5.1f (%5.1f)"
-msgstr "Date%s %04d  Capital %8d  Nivell Tecnic %5.1f (%5.1f)"
+#: src/lincity-ng/ButtonPanel.cpp:206
+msgid "Residential: 400 denizens, high birthrate, high deathrate"
+msgstr "Residencial; 400 hab.,alta natalitat, alta mortalitat"
 
-#: src/lincity-ng/Dialog.cpp:374
-#, c-format
-msgid ".Deaths by starvation %7d   History %8.3f"
-msgstr "Morts per fam %7d   Hist??ric %8.3f"
+#: src/lincity-ng/ButtonPanel.cpp:215
+msgid " [Click right for help.]"
+msgstr " [Clic esquerra per ajuda.]"
 
-#: src/lincity-ng/Dialog.cpp:379
+#: src/lincity-ng/ButtonPanel.cpp:243 src/lincity-ng/ButtonPanel.cpp:286
 #, c-format
-msgid "Deaths from pollution %7d   History %8.3f"
-msgstr "Morts per contaminaci?? %7d Hist??ric %8.3f"
+msgid "%s (Techlevel %.1f required.)"
+msgstr ""
 
-#: src/lincity-ng/Dialog.cpp:383
+#: src/lincity-ng/ButtonPanel.cpp:252
 #, c-format
-msgid "Years of unemployment %7d   History %8.3f"
-msgstr "Anys de paro"
+msgid "%s is disabled (loaded old game)."
+msgstr ""
 
-#: src/lincity-ng/Dialog.cpp:387
-#, c-format
-msgid "Rockets launched %2d  Successful launches %2d"
-msgstr "Cohets llansats%2d Pr??xim llansament% 2d"
-
-#: src/lincity-ng/Dialog.cpp:397
-#, c-format
-msgid ".   Residences %4d         Markets %4d            Farms %4d"
-msgstr ".Residencias%4d         Mercats%4d             Granges%4d"
-
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".       Camins %4d           Carreteras %4d          Vias %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".    Terrisserias %4d     Fargues%4d            Molins%4d"
-
-#: src/lincity-ng/Dialog.cpp:418
-#, c-format
-msgid ".    Monuments %4d         Schools %4d     Universities %4d"
-msgstr ".   Monuments%4d          Escoles%4d      Universitats%4d"
-
-#: src/lincity-ng/Dialog.cpp:423
-#, c-format
-msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
-msgstr ".Bombers%4d                 Parcs%4d     Esports%4d"
-
-#: src/lincity-ng/Dialog.cpp:428
-#, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".   Mines Carb??%4d         Mines Coure%4d        Comunes%4d"
-
-#: src/lincity-ng/Dialog.cpp:433
-#, c-format
-msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
-msgstr ".    Molins%4d     Potencia carb??%4d       Potencia Solar%4d"
-
-#: src/lincity-ng/Dialog.cpp:439
-#, c-format
-msgid ".  Substations %4d     Power lines %4d            Ports %4d"
-msgstr ".  Sub-estacions %4d     L??neas El??ctriques%4d        Ports%4d"
-
-#: src/lincity-ng/Dialog.cpp:444
-#, c-format
-msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
-msgstr ".   Ind. lleugera%4d     Ind. Pesada%4d       Reciclat%4d"
-
-#: src/lincity-ng/Dialog.cpp:449
-#, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr "Centres Salut   t%4d          Abodcadors%4d      Pipicans %4d"
-
 #: src/lincity-ng/EconomyGraph.cpp:121
 msgid "Mining"
 msgstr "Miner??a"
@@ -1126,92 +1294,3 @@
 #: src/lincity-ng/EconomyGraph.cpp:216
 msgid "You lose."
 msgstr "Has perdut"
-
-#: src/lincity-ng/MainMenu.cpp:162
-msgid "empty"
-msgstr "Buit"
-
-#: src/lincity-ng/GameView.cpp:236
-msgid "Minimap: outline map"
-msgstr "Minimapa: perfil del mapa"
-
-#: src/lincity-ng/GameView.cpp:239
-msgid "Minimap: unemployment"
-msgstr "Minimap; Parats"
-
-#: src/lincity-ng/GameView.cpp:242
-msgid "Minimap: pollution"
-msgstr "Minimap Contaminaci??"
-
-#: src/lincity-ng/GameView.cpp:245
-msgid "Minimap: nourishments"
-msgstr "Minimapa: alimentaci??"
-
-#: src/lincity-ng/GameView.cpp:248
-msgid "Minimap: power supply"
-msgstr "Minimap: suport energ??a"
-
-#: src/lincity-ng/GameView.cpp:251
-msgid "Minimap: firedepartment cover"
-msgstr "Minimap Departament de foc"
-
-#: src/lincity-ng/GameView.cpp:254
-msgid "Minimap: sport cover"
-msgstr "Minimapa: esports"
-
-#: src/lincity-ng/GameView.cpp:257
-msgid "Minimap: medical care"
-msgstr "Minimapa: Salut"
-
-#: src/lincity-ng/GameView.cpp:260
-msgid "Minimap: coal depots"
-msgstr "Minimapa:dip??sits carb??"
-
-#: src/lincity-ng/GameView.cpp:263
-msgid "Minimap: traffic density"
-msgstr "Minimapa: Densitat de trafec"
-
-#: src/lincity-ng/GameView.cpp:1513
-msgid "Estimated Bulldoze Cost: "
-msgstr "Cost estimat escabadora"
-
-#: src/lincity-ng/GameView.cpp:1515
-msgid "Bulldoze Cost: "
-msgstr "Cost Escabadora:"
-
-#: src/lincity-ng/GameView.cpp:1520
-msgid "n/a"
-msgstr "n/a"
-
-#: src/lincity-ng/GameView.cpp:1538
-msgid "Query Tool: Show information about selected building."
-msgstr "Eina de investigar. Mostre informaci?? sobres el edifici seleccionat"
-
-#: src/lincity-ng/GameView.cpp:1542
-msgid "Bulldozer: remove building -price varies-"
-msgstr "Enderroc: el.liminar l'edifici -preu variable-"
-
-#: src/lincity-ng/GameView.cpp:1549
-msgid ": Cost to build "
-msgstr "Cost de construcci??"
-
-#: src/lincity-ng/GameView.cpp:1550
-msgid ", to bulldoze "
-msgstr "Excava"
-
-#: src/lincity-ng/GameView.cpp:1550 src/lincity-ng/GameView.cpp:1553
-msgid "$."
-msgstr "$"
-
-#: src/lincity-ng/GameView.cpp:1552
-msgid " To build "
-msgstr "Construeix"
-
-#: src/lincity-ng/GameView.cpp:1552
-msgid " of them "
-msgstr "d'ells"
-
-#: src/lincity-ng/GameView.cpp:1553
-msgid "will cost about "
-msgstr "Et costar??"
-

Modified: trunk/data/locale/cs.po
===================================================================
--- trunk/data/locale/cs.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/cs.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -33,27 +33,48 @@
 msgid "Out of memory: malloc failure\n"
 msgstr "Nedostatek pam??ti: malloc selhal\n"
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "Zde nem????ete postavit skl??dku"
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr ""
 
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Tato oblast b??vala skl??dkou"
+#: src/lincity/engine.cpp:121
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
 
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "Budi??"
+#: src/lincity/engine.cpp:147
+msgid "Port must be connected to river all along right side."
+msgstr ""
 
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "Zde nem????ete postavit d??l"
+#: src/lincity/engine.cpp:156 src/lincity/engine.cpp:165
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr ""
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "V tomto m??st?? ji?? nezbyla ????dn?? ruda"
+#: src/lincity/engine.cpp:195
+msgid "Too many markets. You cannot build one more"
+msgstr ""
 
+#: src/lincity/engine.cpp:218
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:243
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:247
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr ""
+
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "Vypukl u elektrick??ho veden??."
@@ -170,28 +191,6 @@
 msgid "UNKNOWN!"
 msgstr "NEZN??M??!"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Ulo??it soubor <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Nemohu otev????t soubor s ulo??enou hrou!"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Ukl??d??m sc??nu"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Nemohu otev????t <%s> (komprese gzip)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Na????t??m sc??nu"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Pr??zdn??"
@@ -360,6 +359,48 @@
 msgid "Residential HH"
 msgstr "Hust?? domy"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Ulo??it soubor <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Nemohu otev????t soubor s ulo??enou hrou!"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Ukl??d??m sc??nu"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Nemohu otev????t <%s> (komprese gzip)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Na????t??m sc??nu"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Led"
@@ -605,6 +646,18 @@
 msgid "Employed"
 msgstr "Zam??stn??no"
 
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "dobr??"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "??patn??"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Pr??ce"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Zdravotn?? p."
@@ -618,18 +671,6 @@
 msgid "Pollution"
 msgstr "Zne??ist??n??"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "dobr??"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "??patn??"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Pr??ce"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr ""
@@ -752,6 +793,10 @@
 msgid "Activity"
 msgstr "Aktivita"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Odu??en??ch hodin"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Po????rn?? stanice"
@@ -768,14 +813,34 @@
 msgid "Prod"
 msgstr "Prod"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Odu??en??ch hodin"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "Slune??n??"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Odpalovac?? rampa"
@@ -813,7 +878,8 @@
 #, c-format
 msgid "Date %s %04d  Money %8d   Tech-level %5.1f (%5.1f)"
 msgstr ""
-"Datum    %s %04d               Pen??ze     %8d     Techn. ??rove?? %5.1f (%5.1f)"
+"Datum    %s %04d               Pen??ze     %8d     Techn. ??rove?? %5.1f "
+"(%5.1f)"
 
 #: src/lincity-ng/Dialog.cpp:374
 #, c-format
@@ -838,53 +904,73 @@
 #: src/lincity-ng/Dialog.cpp:397
 #, c-format
 msgid ".   Residences %4d         Markets %4d            Farms %4d"
-msgstr ".          Obydl?? %4d           Obchod?? %4d                  Farem %4d"
+msgstr ""
+".          Obydl?? %4d           Obchod?? %4d                  Farem %4d"
 
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".           ??voz?? %4d            Silnic %4d               ??eleznic %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".      Hrn??????stv?? %4d         Kov????stv?? %4d         Zpracov. z??vod %4d"
-
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
-msgstr ".       Monument?? %4d              ??kol %4d              Univerzit %4d"
+msgstr ""
+".       Monument?? %4d              ??kol %4d              Univerzit %4d"
 
 #: src/lincity-ng/Dialog.cpp:423
 #, c-format
 msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
-msgstr ".Po????rn??ch stanic %4d             Park?? %4d      Sportovn??ch h??i??t %4d"
+msgstr ""
+".Po????rn??ch stanic %4d             Park?? %4d      Sportovn??ch h??i??t %4d"
 
-#: src/lincity-ng/Dialog.cpp:428
+#: src/lincity-ng/Dialog.cpp:449
 #, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".   Uheln??ch dol?? %4d      Dol?? na rudu %4d                 Mil?????? %4d"
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr ""
+".Zdrav. st??ediska %4d           Skl??dek %4d               Shanties %4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
 msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
-msgstr ".  V??trn??ch ml??n?? %4d  Uhel. elektr??ren %4d     Slune??. elektr??ren %4d"
+msgstr ""
+".  V??trn??ch ml??n?? %4d  Uhel. elektr??ren %4d     Slune??. elektr??ren %4d"
 
 #: src/lincity-ng/Dialog.cpp:439
 #, c-format
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
-msgstr ".        Rozvoden %4d Elektrick?? veden?? %4d               P????stav?? %4d"
+msgstr ""
+".        Rozvoden %4d Elektrick?? veden?? %4d               P????stav?? %4d"
 
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ""
+".           ??voz?? %4d            Silnic %4d               ??eleznic %4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ""
+".      Hrn??????stv?? %4d         Kov????stv?? %4d         Zpracov. z??vod "
+"%4d"
+
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
-msgstr ".   Lehk?? pr??mysl %4d     T????k?? pr??mysl %4d              Recyklace %4d"
+msgstr ""
+".   Lehk?? pr??mysl %4d     T????k?? pr??mysl %4d              Recyklace %4d"
 
-#: src/lincity-ng/Dialog.cpp:449
+#: src/lincity-ng/Dialog.cpp:428
 #, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr ".Zdrav. st??ediska %4d           Skl??dek %4d               Shanties %4d"
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ""
+".   Uheln??ch dol?? %4d      Dol?? na rudu %4d                 Mil?????? %4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:258
+msgid "MM"
+msgstr ""
+
+#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
+#: src/lincity-ng/ScreenInterface.cpp:269
+msgid "$"
+msgstr "$"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minimapa: obrysy"
@@ -933,11 +1019,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Cena zbour??n??: "
 
-#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
-#: src/lincity-ng/ScreenInterface.cpp:269
-msgid "$"
-msgstr "$"
-
 #: src/lincity-ng/GameView.cpp:1522
 msgid "n/a"
 msgstr "n/a"
@@ -1146,42 +1227,6 @@
 msgid "Cases"
 msgstr ""
 
-#: src/lincity-ng/EconomyGraph.cpp:121
-msgid "Mining"
-msgstr "T????ba"
-
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Trade"
-msgstr "Obchod"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Money"
-msgstr "Pen??ze"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Popul."
-msgstr "Popul."
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Techn."
-msgstr "Techn."
-
-#: src/lincity-ng/EconomyGraph.cpp:134
-msgid "Economy Overview:"
-msgstr "P??ehled ekonomiky:"
-
-#: src/lincity-ng/EconomyGraph.cpp:137
-msgid "Sustainability:"
-msgstr ""
-
-#: src/lincity-ng/EconomyGraph.cpp:140
-msgid "Frames per Second:"
-msgstr "Sn??mk?? za sekundu:"
-
-#: src/lincity-ng/EconomyGraph.cpp:216
-msgid "You lose."
-msgstr "Prohr??l jsi."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Dotazova??"
@@ -1223,9 +1268,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (Po??adov??na technologick?? ??rove?? %.1f)"
 
-#: src/lincity-ng/ScreenInterface.cpp:258
-msgid "MM"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
 msgstr ""
 
-#~ msgid "Couldn't create the save directory %s\n"
-#~ msgstr "Nemohu vytvo??it adres???? pro ukl??d??n?? her %s\n"
+#: src/lincity-ng/EconomyGraph.cpp:121
+msgid "Mining"
+msgstr "T????ba"
+
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Trade"
+msgstr "Obchod"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Money"
+msgstr "Pen??ze"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Popul."
+msgstr "Popul."
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Techn."
+msgstr "Techn."
+
+#: src/lincity-ng/EconomyGraph.cpp:134
+msgid "Economy Overview:"
+msgstr "P??ehled ekonomiky:"
+
+#: src/lincity-ng/EconomyGraph.cpp:137
+msgid "Sustainability:"
+msgstr ""
+
+#: src/lincity-ng/EconomyGraph.cpp:140
+msgid "Frames per Second:"
+msgstr "Sn??mk?? za sekundu:"
+
+#: src/lincity-ng/EconomyGraph.cpp:216
+msgid "You lose."
+msgstr "Prohr??l jsi."

Modified: trunk/data/locale/de.po
===================================================================
--- trunk/data/locale/de.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/de.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -41,8 +41,13 @@
 msgstr "Sie haben zu viele Stromnetze. Verbinden sie welche."
 
 #: src/lincity/engine.cpp:198
-msgid "ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "
-msgstr "Fehler: nicht vorhanden Gruppe. Das darf nicht passieren. Bitte schreiben sie einen Bugreport. Senden sie ihn zusammen mit dem Spielstand und einer Beschreibung, was sie gemacht haben an das LinCity NG Team."
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
+"Fehler: nicht vorhanden Gruppe. Das darf nicht passieren. Bitte schreiben "
+"sie einen Bugreport. Senden sie ihn zusammen mit dem Spielstand und einer "
+"Beschreibung, was sie gemacht haben an das LinCity NG Team."
 
 #: src/lincity/engine.cpp:226
 msgid "Port must be connected to river all along right side."
@@ -51,7 +56,8 @@
 #: src/lincity/engine.cpp:236
 #: src/lincity/engine.cpp:246
 msgid "Too many substations + windmills. You cannot build one more"
-msgstr "Es gibt zu viel Umspannwerke und Windm??hlen. Sie k??nnen keine mehr bauen."
+msgstr ""
+"Es gibt zu viel Umspannwerke und Windm??hlen. Sie k??nnen keine mehr bauen."
 
 #: src/lincity/engine.cpp:280
 msgid "Too many markets. You cannot build one more"
@@ -59,7 +65,8 @@
 
 #: src/lincity/engine.cpp:305
 msgid "You can't build a tip here: this area was once a landfill"
-msgstr "Hier k??nnen Sie keine M??llkippe errichten, da hier schonmal eine war."
+msgstr ""
+"Hier k??nnen Sie keine M??llkippe errichten, da hier schonmal eine war."
 
 #: src/lincity/engine.cpp:330
 msgid "You can't build a mine here: This area was once a landfill"
@@ -67,8 +74,18 @@
 
 #: src/lincity/engine.cpp:335
 msgid "You can't build a mine here: there is no ore left at this site"
-msgstr "Sie k??nnen hier kein Bergwerk bauen, da es an dieser Stelle kein Erz mehr gibt."
+msgstr ""
+"Sie k??nnen hier kein Bergwerk bauen, da es an dieser Stelle kein Erz mehr "
+"gibt."
 
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:609
 msgid "It's at a power line."
 msgstr "Es ist eine Stromleitung."
@@ -185,28 +202,6 @@
 msgid "UNKNOWN!"
 msgstr "Unbekannt."
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Speichere Datei <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Kann Speicherdatei nicht ??ffnen."
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Speichere Szenario"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Kann <%s> (komprimiert) nicht ??ffnen."
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Lade Szenario"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Leer"
@@ -392,6 +387,48 @@
 msgid "Residential HH"
 msgstr "Wohngebiet HH"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Speichere Datei <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Kann Speicherdatei nicht ??ffnen."
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Speichere Szenario"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Kann <%s> (komprimiert) nicht ??ffnen."
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Lade Szenario"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Jan"
@@ -688,6 +725,19 @@
 msgid "Employed"
 msgstr "Arbeit"
 
+#: src/lincity/modules/residence.cpp:299
+#: src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "gut"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "schlecht"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Arbeitsplatz"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "??rztl. Vers."
@@ -703,19 +753,6 @@
 msgid "Pollution"
 msgstr "Verschmutzung"
 
-#: src/lincity/modules/residence.cpp:299
-#: src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "gut"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "schlecht"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Arbeitsplatz"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Gesammelte Weisheit"
@@ -847,6 +884,10 @@
 msgid "Activity"
 msgstr "Aktivit??t"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Unterrichtsstunden"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Feuerwehr"
@@ -863,14 +904,34 @@
 msgid "Prod"
 msgstr "Produktion"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Unterrichtsstunden"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:43
 msgid "Solar"
 msgstr "Solar"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Raketenbasis"
@@ -980,6 +1041,16 @@
 msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
 msgstr ""
 
+#: src/lincity-ng/ScreenInterface.cpp:261
+msgid "MM"
+msgstr "Mio"
+
+#: src/lincity-ng/GameView.cpp:1574
+#: src/lincity-ng/GameView.cpp:1605
+#: src/lincity-ng/ScreenInterface.cpp:272
+msgid "$"
+msgstr "???"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minikarte: ??bersichtskarte"
@@ -1028,12 +1099,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Abrisskosten:"
 
-#: src/lincity-ng/GameView.cpp:1574
-#: src/lincity-ng/GameView.cpp:1605
-#: src/lincity-ng/ScreenInterface.cpp:272
-msgid "$"
-msgstr "???"
-
 #: src/lincity-ng/GameView.cpp:1576
 msgid "n/a"
 msgstr "keine"
@@ -1244,42 +1309,6 @@
 msgid "Cases"
 msgstr "F??lle"
 
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Mining"
-msgstr "Bergbau"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Trade"
-msgstr "Handel"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Money"
-msgstr "Geld"
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Popul."
-msgstr "Leute"
-
-#: src/lincity-ng/EconomyGraph.cpp:131
-msgid "Techn."
-msgstr "Tech"
-
-#: src/lincity-ng/EconomyGraph.cpp:136
-msgid "Economy Overview:"
-msgstr "Wirtschafts??bersicht"
-
-#: src/lincity-ng/EconomyGraph.cpp:139
-msgid "Sustainability:"
-msgstr "Nachhaltigkeit:"
-
-#: src/lincity-ng/EconomyGraph.cpp:142
-msgid "Frames per Second:"
-msgstr "Bilder pro Sekunde:"
-
-#: src/lincity-ng/EconomyGraph.cpp:218
-msgid "You lose."
-msgstr "Sie haben verloren."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Abfragewerkzeug"
@@ -1322,7 +1351,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (Techlevel %.1f erforderlich.)"
 
-#: src/lincity-ng/ScreenInterface.cpp:261
-msgid "MM"
-msgstr "Mio"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
+msgstr ""
 
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Mining"
+msgstr "Bergbau"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Trade"
+msgstr "Handel"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Money"
+msgstr "Geld"
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Popul."
+msgstr "Leute"
+
+#: src/lincity-ng/EconomyGraph.cpp:131
+msgid "Techn."
+msgstr "Tech"
+
+#: src/lincity-ng/EconomyGraph.cpp:136
+msgid "Economy Overview:"
+msgstr "Wirtschafts??bersicht"
+
+#: src/lincity-ng/EconomyGraph.cpp:139
+msgid "Sustainability:"
+msgstr "Nachhaltigkeit:"
+
+#: src/lincity-ng/EconomyGraph.cpp:142
+msgid "Frames per Second:"
+msgstr "Bilder pro Sekunde:"
+
+#: src/lincity-ng/EconomyGraph.cpp:218
+msgid "You lose."
+msgstr "Sie haben verloren."

Modified: trunk/data/locale/es.po
===================================================================
--- trunk/data/locale/es.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/es.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -10,8 +10,8 @@
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2007-01-27 22:03+0100\n"
 "PO-Revision-Date: 2005-10-23 22:20+0200\n"
-"Last-Translator: Jorge Gonz??lez Gonz??lez <jorge.gonzalez.gonzalez at hispalinux."
-"es>\n"
+"Last-Translator: Jorge Gonz??lez Gonz??lez "
+"<jorge.gonzalez.gonzalez at hispalinux.es>\n"
 "Language-Team: Espa??ol <traductores at es.gnome.org>\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
@@ -38,27 +38,48 @@
 msgid "Out of memory: malloc failure\n"
 msgstr "Sin memoria: error de ??malloc??\n"
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "No puedes construir un vertedero aqu??"
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr ""
 
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Este lugar antes era un vertedero"
+#: src/lincity/engine.cpp:121
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
 
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "Hecho"
+#: src/lincity/engine.cpp:147
+msgid "Port must be connected to river all along right side."
+msgstr ""
 
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "No puedes construir una mina aqu??"
+#: src/lincity/engine.cpp:156 src/lincity/engine.cpp:165
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr ""
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "No queda mineral en este sitio"
+#: src/lincity/engine.cpp:195
+msgid "Too many markets. You cannot build one more"
+msgstr ""
 
+#: src/lincity/engine.cpp:218
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:243
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:247
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr ""
+
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "Est?? en una torre de tensi??n."
@@ -175,28 +196,6 @@
 msgid "UNKNOWN!"
 msgstr "Desconocido"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Guardar archivo <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "No se puede abrir el archivo"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Guardando el escenario"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "No se puede abrir <%s> (est?? comprimido en gzip)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Cargando escenario"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Vac??o"
@@ -368,6 +367,48 @@
 msgid "Residential HH"
 msgstr "Residencial (alta capacidad, baja tecnolog??a)"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Guardar archivo <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "No se puede abrir el archivo"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Guardando el escenario"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "No se puede abrir <%s> (est?? comprimido en gzip)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Cargando escenario"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Ene"
@@ -613,6 +654,18 @@
 msgid "Employed"
 msgstr "Con trabajo"
 
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "bien"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "pobre"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Empleo"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Cobertura sanitaria"
@@ -626,18 +679,6 @@
 msgid "Pollution"
 msgstr "Poluci??n"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "bien"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "pobre"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Empleo"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Dispensador de sabidur??a"
@@ -760,6 +801,10 @@
 msgid "Activity"
 msgstr "Actividad"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Lecciones aprendidas"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Parque de bomberos"
@@ -776,14 +821,34 @@
 msgid "Prod"
 msgstr "Producci??n"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Lecciones aprendidas"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "Solar"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Zona de lanzamiento"
@@ -848,18 +913,6 @@
 msgstr ""
 "        Residencias %4d             Comercios %4d                 Granjas %4d"
 
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ""
-"            Caminos %4d            Carreteras %4d            V??as de tren %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ""
-"         Alfarer??as %4d             Herrer??as %4d                F??bricas %4d"
-
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
@@ -872,36 +925,62 @@
 msgstr ""
 "Parques de bomberos %4d               Parques %4d      Canchas de deporte %4d"
 
-#: src/lincity-ng/Dialog.cpp:428
+#: src/lincity-ng/Dialog.cpp:449
 #, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
 msgstr ""
-"    Minas de carb??n %4d      Minas de mineral %4d                 Comunas %4d"
+"         Hospitales %4d            Vertederos %4d                Chabolas %4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
 msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
 msgstr ""
-"  Molinos de viento %4d    Centrales t??rmicas %4d       Centrales solares %4d"
+"  Molinos de viento %4d    Centrales t??rmicas %4d       Centrales solares "
+"%4d"
 
 #: src/lincity-ng/Dialog.cpp:439
 #, c-format
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
 msgstr ""
-"      Subestaciones %4d     Torres de tensi??n %4d                 Puertos %4d"
+"      Subestaciones %4d     Torres de tensi??n %4d                 Puertos "
+"%4d"
 
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ""
+"            Caminos %4d            Carreteras %4d            V??as de tren "
+"%4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ""
+"         Alfarer??as %4d             Herrer??as %4d                F??bricas "
+"%4d"
+
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
 msgstr ""
 " Industrias ligeras %4d    Industrias pesadas %4d    Centros de reciclaje %4d"
 
-#: src/lincity-ng/Dialog.cpp:449
+#: src/lincity-ng/Dialog.cpp:428
 #, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
 msgstr ""
-"         Hospitales %4d            Vertederos %4d                Chabolas %4d"
+"    Minas de carb??n %4d      Minas de mineral %4d                 Comunas "
+"%4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:258
+msgid "MM"
+msgstr ""
+
+#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
+#: src/lincity-ng/ScreenInterface.cpp:269
+msgid "$"
+msgstr "???"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minimapa: perfil del mapa"
@@ -950,11 +1029,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Coste del derribo: "
 
-#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
-#: src/lincity-ng/ScreenInterface.cpp:269
-msgid "$"
-msgstr "???"
-
 #: src/lincity-ng/GameView.cpp:1522
 msgid "n/a"
 msgstr "n/a"
@@ -1164,42 +1238,6 @@
 msgid "Cases"
 msgstr "Casos"
 
-#: src/lincity-ng/EconomyGraph.cpp:121
-msgid "Mining"
-msgstr "Miner??a"
-
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Trade"
-msgstr "Comercio"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Money"
-msgstr "Dinero"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Popul."
-msgstr "Poblac."
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Techn."
-msgstr "Tecno."
-
-#: src/lincity-ng/EconomyGraph.cpp:134
-msgid "Economy Overview:"
-msgstr "Visi??n general econ??mica:"
-
-#: src/lincity-ng/EconomyGraph.cpp:137
-msgid "Sustainability:"
-msgstr "Sostenibilidad:"
-
-#: src/lincity-ng/EconomyGraph.cpp:140
-msgid "Frames per Second:"
-msgstr "Cuadros por segundo:"
-
-#: src/lincity-ng/EconomyGraph.cpp:216
-msgid "You lose."
-msgstr "Has perdido."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Herramienta de consulta"
@@ -1247,12 +1285,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr ""
 
-#: src/lincity-ng/ScreenInterface.cpp:258
-msgid "MM"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
 msgstr ""
 
-#~ msgid "Couldn't create the save directory %s\n"
-#~ msgstr "No se puede crear el directorio %s para guardar las partidas\n"
+#: src/lincity-ng/EconomyGraph.cpp:121
+msgid "Mining"
+msgstr "Miner??a"
 
-#~ msgid "Residential"
-#~ msgstr "Residencial"
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Trade"
+msgstr "Comercio"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Money"
+msgstr "Dinero"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Popul."
+msgstr "Poblac."
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Techn."
+msgstr "Tecno."
+
+#: src/lincity-ng/EconomyGraph.cpp:134
+msgid "Economy Overview:"
+msgstr "Visi??n general econ??mica:"
+
+#: src/lincity-ng/EconomyGraph.cpp:137
+msgid "Sustainability:"
+msgstr "Sostenibilidad:"
+
+#: src/lincity-ng/EconomyGraph.cpp:140
+msgid "Frames per Second:"
+msgstr "Cuadros por segundo:"
+
+#: src/lincity-ng/EconomyGraph.cpp:216
+msgid "You lose."
+msgstr "Has perdido."

Modified: trunk/data/locale/fr.po
===================================================================
--- trunk/data/locale/fr.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/fr.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -26,7 +26,8 @@
 
 #: src/lincity/fileutil.cpp:561
 msgid "Error verifying package. Can't find colour.pal."
-msgstr "Erreur de v??rification du paquet. Impossible de trouver la couleur pal."
+msgstr ""
+"Erreur de v??rification du paquet. Impossible de trouver la couleur pal."
 
 #: src/lincity/fileutil.cpp:580
 #: src/lincity/fileutil.cpp:589
@@ -41,20 +42,31 @@
 
 #: src/lincity/power.cpp:93
 msgid "You have too many power grids. Join some of them"
-msgstr "Vous avez de trop nombreux r??seaux ??lectriques. R??unissez-en quelques uns."
+msgstr ""
+"Vous avez de trop nombreux r??seaux ??lectriques. R??unissez-en quelques uns."
 
 #: src/lincity/engine.cpp:199
-msgid "ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "
-msgstr "ERREUR: ce group n'existe pas. Ceci ne devrait _jamais_ se produire. SVP envoyez un rapport de bug ?? l'??quipe linicty-ng, si possible avec une copie de la suvegarde du jeu et ce que vous avez fait pour obtenir ce message :-)"
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
+"ERREUR: ce group n'existe pas. Ceci ne devrait _jamais_ se produire. SVP "
+"envoyez un rapport de bug ?? l'??quipe linicty-ng, si possible avec une "
+"copie de la suvegarde du jeu et ce que vous avez fait pour obtenir ce "
+"message :-)"
 
 #: src/lincity/engine.cpp:225
 msgid "Port must be connected to river all along right side."
-msgstr "Les ports doivent ??tre connect??s ?? une rivi??re tout au long du cot?? droit."
+msgstr ""
+"Les ports doivent ??tre connect??s ?? une rivi??re tout au long du cot?? "
+"droit."
 
 #: src/lincity/engine.cpp:234
 #: src/lincity/engine.cpp:243
 msgid "Too many substations + windmills. You cannot build one more"
-msgstr "Trop d'??oliennes + transformateurs. Vous ne pouvez pas en construire davantage."
+msgstr ""
+"Trop d'??oliennes + transformateurs. Vous ne pouvez pas en construire "
+"davantage."
 
 #: src/lincity/engine.cpp:273
 msgid "Too many markets. You cannot build one more"
@@ -62,15 +74,19 @@
 
 #: src/lincity/engine.cpp:296
 msgid "You can't build a tip here: this area was once a landfill"
-msgstr "Vous ne pouvez pas construire de d??charge ici. Il y en a d??j?? eu une dans le pass??."
+msgstr ""
+"Vous ne pouvez pas construire de d??charge ici. Il y en a d??j?? eu une dans "
+"le pass??."
 
 #: src/lincity/engine.cpp:321
 msgid "You can't build a mine here: This area was once a landfill"
-msgstr "Vous ne pouvez pas construire une mine ici. Il y a eu une d??charge ici."
+msgstr ""
+"Vous ne pouvez pas construire une mine ici. Il y a eu une d??charge ici."
 
 #: src/lincity/engine.cpp:325
 msgid "You can't build a mine here: there is no ore left at this site"
-msgstr "Vous ne pouvez pas construire une carri??re ici. Il ne reste plus de minerai."
+msgstr ""
+"Vous ne pouvez pas construire une carri??re ici. Il ne reste plus de minerai."
 
 #: src/lincity/engine.cpp:337
 msgid "You can't build a water well here: it is all desert."
@@ -78,7 +94,9 @@
 
 #: src/lincity/engine.cpp:347
 msgid "You can't build a park here: it is a desert, parks need water"
-msgstr "Vous ne pouvez pas construire de parc ici. C'est un d??sert, hors les parcs ont besoin d'eau."
+msgstr ""
+"Vous ne pouvez pas construire de parc ici. C'est un d??sert, hors les parcs "
+"ont besoin d'eau."
 
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
@@ -989,52 +1007,62 @@
 #: src/lincity-ng/Dialog.cpp:397
 #, c-format
 msgid ".   Residences %4d         Markets %4d            Farms %4d"
-msgstr ".      R??sidences %4d              March??s %4d                Fermes %4d"
+msgstr ""
+".      R??sidences %4d              March??s %4d                Fermes %4d"
 
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
-msgstr ".       Monuments %4d               Ecoles %4d           Universit??s %4d"
+msgstr ""
+".       Monuments %4d               Ecoles %4d           Universit??s %4d"
 
 #: src/lincity-ng/Dialog.cpp:423
 #, c-format
 msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
-msgstr ".        Pompiers %4d                Parcs %4d                Stades %4d"
+msgstr ""
+".        Pompiers %4d                Parcs %4d                Stades %4d"
 
 #: src/lincity-ng/Dialog.cpp:449
 #, c-format
 msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr ". Centre de soins %4d            D??charges %4d           Bidonvilles %4d"
+msgstr ""
+". Centre de soins %4d            D??charges %4d           Bidonvilles %4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
 msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
-msgstr ".  Moulins ?? vent %4d  Centrales ?? charbon %4d     Centrales solaire %4d"
+msgstr ""
+".  Moulins ?? vent %4d  Centrales ?? charbon %4d     Centrales solaire %4d"
 
 #: src/lincity-ng/Dialog.cpp:439
 #, c-format
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
-msgstr ". Transformateurs %4d   Lignes ??lectriques %4d                 Ports %4d"
+msgstr ""
+". Transformateurs %4d   Lignes ??lectriques %4d                 Ports %4d"
 
 #: src/lincity-ng/Dialog.cpp:408
 #, c-format
 msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".          Pistes %4d               Routes %4d                 Rails %4d"
+msgstr ""
+".          Pistes %4d               Routes %4d                 Rails %4d"
 
 #: src/lincity-ng/Dialog.cpp:413
 #, c-format
 msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".        Poteries %4d               Forges %4d             Fabriques %4d"
+msgstr ""
+".        Poteries %4d               Forges %4d             Fabriques %4d"
 
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
-msgstr ".   Inds. l??g??res %4d        Inds. lourdes %4d  Centres de recyclage %4d"
+msgstr ""
+".   Inds. l??g??res %4d        Inds. lourdes %4d  Centres de recyclage %4d"
 
 #: src/lincity-ng/Dialog.cpp:428
 #, c-format
 msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".Mines de charbon %4d  Carri??re de minerai %4d              Communes %4d"
+msgstr ""
+".Mines de charbon %4d  Carri??re de minerai %4d              Communes %4d"
 
 #: src/lincity-ng/ScreenInterface.cpp:258
 msgid "MM"
@@ -1100,7 +1128,8 @@
 
 #: src/lincity-ng/GameView.cpp:1540
 msgid "Query Tool: Show information about selected building."
-msgstr "Outil de Requ??te : voir les informations sur le b??timent s??lectionn??."
+msgstr ""
+"Outil de Requ??te : voir les informations sur le b??timent s??lectionn??."
 
 #: src/lincity-ng/GameView.cpp:1544
 msgid "Bulldozer: remove building -price varies-"
@@ -1322,7 +1351,8 @@
 
 #: src/lincity-ng/ButtonPanel.cpp:203
 msgid "Residential: 200 denizens, high birthrate, high deathrate"
-msgstr "R??sidences : 200 habitants, importante natalit??, importante mortalit??"
+msgstr ""
+"R??sidences : 200 habitants, importante natalit??, importante mortalit??"
 
 #: src/lincity-ng/ButtonPanel.cpp:204
 msgid "Residential: 100 denizens, low birthrate, high deathrate"
@@ -1334,7 +1364,8 @@
 
 #: src/lincity-ng/ButtonPanel.cpp:206
 msgid "Residential: 400 denizens, high birthrate, high deathrate"
-msgstr "R??sidences : 400 habitants, importante natalit??, importante mortalit??"
+msgstr ""
+"R??sidences : 400 habitants, importante natalit??, importante mortalit??"
 
 #: src/lincity-ng/ButtonPanel.cpp:215
 msgid " [Click right for help.]"
@@ -1386,4 +1417,3 @@
 #: src/lincity-ng/EconomyGraph.cpp:216
 msgid "You lose."
 msgstr "Vous avez perdu."
-

Modified: trunk/data/locale/gui/ca.po
===================================================================
--- trunk/data/locale/gui/ca.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/ca.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -1,7 +1,6 @@
 # translation of ca.po to Catal??
 # This file is distributed under the same license as the Lincity-NG
 # package. # Copyright (C) 2007 Joan <info at lutesor.com>
-
 msgid ""
 msgstr ""
 "Project-Id-Version: ca\n"
@@ -24,12 +23,18 @@
 msgstr "Incendi declarat"
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and APPEARS to be under control. "
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
+"APPEARS to be under control. "
 msgstr "Foc a la gossera"
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may spread to other areas. "
-msgstr "Incendi a la gossera shanty town. El foc est??  fore de control i perilla que s'escampi."
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+"spread to other areas. "
+msgstr ""
+"Incendi a la gossera shanty town. El foc est??  fore de control i perilla "
+"que s'escampi."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -366,7 +371,8 @@
 msgstr "Escola disponible"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
 msgstr "Per mes informaci?? veure pantalla de ayude mines de Carb?? i Coure"
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
@@ -423,9 +429,9 @@
 msgid "Show power supply"
 msgstr "Mostre Suministre d'energia"
 
-#: data/gui/minimap.xml
-msgid "Show ressources."
-msgstr "Mostre recursos"
+#: data/gui/minimap.xml 
+msgid "Show resources."
+msgstr ""
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show sport cover"
@@ -499,6 +505,10 @@
 msgid "Trade Settings"
 msgstr "Par??metres de comer??"
 
+#: data/gui/creditslist.xml 
+msgid "Translation"
+msgstr ""
+
 #: data/gui/universityup.xml
 msgid "University available"
 msgstr "Universitat disponible"
@@ -544,116 +554,220 @@
 msgstr "Millor que aneu a cercar-ho"
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will continue costing you money to keep the rocket ready. Launch it later by clicking on the rocket area."
-msgstr "Pots llansar el cohet ara o mes tard. Si vols continuar costar?? molts diners."
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
+"continue costing you money to keep the rocket ready. Launch it later by "
+"clicking on the rocket area."
+msgstr ""
+"Pots llansar el cohet ara o mes tard. Si vols continuar costar?? molts "
+"diners."
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help pages on these subjects to find out how to use them. "
-msgstr "Pots Importar i exportar carb??, bens, coure i acer, llegeix la plana de ayuda per fer-u correctement."
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
+"pages on these subjects to find out how to use them. "
+msgstr ""
+"Pots Importar i exportar carb??, bens, coure i acer, llegeix la plana de "
+"ayuda per fer-u correctement."
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build parks on credit."
-msgstr "Quan entras en deficit la legislaci?? no et permet construir parcs a cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build parks on credit."
+msgstr ""
+"Quan entras en deficit la legislaci?? no et permet construir parcs a cr??dit."
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build recycling centres on credit."
-msgstr "Quan est??s en deficit La legislaci?? no et permet construir centres de reciclat a credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build recycling centres on credit."
+msgstr ""
+"Quan est??s en deficit La legislaci?? no et permet construir centres de "
+"reciclat a credit."
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build rocket launch pads on credit."
-msgstr "Quan estas en deficit la legislaci?? no et permet construir Plataformes de cohets a cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build rocket launch pads on credit."
+msgstr ""
+"Quan estas en deficit la legislaci?? no et permet construir Plataformes de "
+"cohets a cr??dit."
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build solar power stations on credit."
-msgstr "Quan estas en deficit La legislaci?? no et permet construir central solar a credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build solar power stations on credit."
+msgstr ""
+"Quan estas en deficit La legislaci?? no et permet construir central solar a "
+"credit."
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build universities on credit."
-msgstr "Quan est??s en deficit. El consell legislatiu no et permet construir Universitats a cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build universities on credit."
+msgstr ""
+"Quan est??s en deficit. El consell legislatiu no et permet construir "
+"Universitats a cr??dit."
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your economy to reflect the reduced population. "
-msgstr "Has evacuat a 1000 persones. Aquesta reducci?? es reflectar?? en la econom??a. "
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
+"economy to reflect the reduced population. "
+msgstr ""
+"Has evacuat a 1000 persones. Aquesta reducci?? es reflectar?? en la "
+"econom??a. "
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. Blacksmiths use jobs and steel to make goods."
-msgstr "Has arrivat al nivell t??cnic de les fargues. Les fargues necessiten llocs de treball i acer."
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
+"Blacksmiths use jobs and steel to make goods."
+msgstr ""
+"Has arrivat al nivell t??cnic de les fargues. Les fargues necessiten llocs "
+"de treball i acer."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power stations."
-msgstr "Has arrivat al nivell t??cnic  amb edificis crema carb?? a la central T??rmica."
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
+"stations."
+msgstr ""
+"Has arrivat al nivell t??cnic  amb edificis crema carb?? a la central "
+"T??rmica."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. Fire stations prevent most fires from starting. If you haven't had any fires yet, you might not think you need them."
-msgstr "Has arrivat al nivell t??cnic. Habilita una Estaci?? de Bombers. La Estaci?? de Bombers  preveu els incendis avans que es produexin i no necesiten apagarlos."
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
+"Fire stations prevent most fires from starting. If you haven't had any fires "
+"yet, you might not think you need them."
+msgstr ""
+"Has arrivat al nivell t??cnic. Habilita una Estaci?? de Bombers. La Estaci?? "
+"de Bombers  preveu els incendis avans que es produexin i no necesiten "
+"apagarlos."
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. Heath centres reduce the number of people killed by pollution and increase overall productivity."
-msgstr "Has arrivat al nivell tecnic a on pots construir un Centre Hospitalari. El Centre de Hospitalari redueig el nombre de persones mortes per contaminaci?? i incremente la productivitat."
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
+"Heath centres reduce the number of people killed by pollution and increase "
+"overall productivity."
+msgstr ""
+"Has arrivat al nivell tecnic a on pots construir un Centre Hospitalari. El "
+"Centre de Hospitalari redueig el nombre de persones mortes per contaminaci?? "
+"i incremente la productivitat."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry (steel works). Heavy industry produces steel. "
-msgstr "Has asolit un nou nivell t??cnic a on podr??s contruir ind??stria pesada (La industria pesada produeig acer)."
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
+"(steel works). Heavy industry produces steel. "
+msgstr ""
+"Has asolit un nou nivell t??cnic a on podr??s contruir ind??stria pesada (La "
+"industria pesada produeig acer)."
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. Light industry produces goods. "
-msgstr "Has arrivat a un nou nivell t??cnic que et permet construir industria el??ctrica'. La industria electrica produeix bens."
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
+"Light industry produces goods. "
+msgstr ""
+"Has arrivat a un nou nivell t??cnic que et permet construir industria "
+"el??ctrica'. La industria electrica produeix bens."
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "Has arrivat a un nou nivell t??cnic que et permet construir f??briques. Les f??briques donen feina, i aliment i produeixen bens."
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
+"jobs and food to make goods. Watch out, they can use a lot of food! "
+msgstr ""
+"Has arrivat a un nou nivell t??cnic que et permet construir f??briques. Les "
+"f??briques donen feina, i aliment i produeixen bens."
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more efficient, windmills. "
-msgstr "Has arrivat a un nou nivell t??nic que et permet construir Molins mes moderns."
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
+"efficient, windmills. "
+msgstr ""
+"Has arrivat a un nou nivell t??nic que et permet construir Molins mes "
+"moderns."
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are used to absorb pollution. "
-msgstr "Has arrivat a un nivell t??cnic que et permet contruir parcs. Els parcs es fan servir per absorvir la contaminaci??"
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
+"used to absorb pollution. "
+msgstr ""
+"Has arrivat a un nivell t??cnic que et permet contruir parcs. Els parcs es "
+"fan servir per absorvir la contaminaci??"
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
-msgstr "Has arrivat a un nou nivell t??cnic que et permet construir f??briques de cer??mique. La cer??mique genera feina i produeix bens."
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
+"Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
+msgstr ""
+"Has arrivat a un nou nivell t??cnic que et permet construir f??briques de "
+"cer??mique. La cer??mique genera feina i produeix bens."
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Has arrivat a un nivell t??cnic que et permet construir v??as f??rreas."
+msgstr ""
+"Has arrivat a un nivell t??cnic que et permet construir v??as f??rreas."
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
 msgstr "Has arrivat a un nivell t??cnic que et permet contruir canals"
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the help screen for more information."
-msgstr "Has arrivat a un nivell t??cnic que et permet construir carreteres. Per mes informaci?? mire la pantalla d'ajuda."
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
+"help screen for more information."
+msgstr ""
+"Has arrivat a un nivell t??cnic que et permet construir carreteres. Per mes "
+"informaci?? mire la pantalla d'ajuda."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch pads. Rockets enable you to evacuate your population and is a way to 'win' the game."
-msgstr "Has arrivat a un nivell t??cnic que et permet construir Plataformes de cohets.Els cohets et permeten evacuar la poblaci?? i es un cam?? per guanyar el joc."
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
+"pads. Rockets enable you to evacuate your population and is a way to 'win' "
+"the game."
+msgstr ""
+"Has arrivat a un nivell t??cnic que et permet construir Plataformes de "
+"cohets.Els cohets et permeten evacuar la poblaci?? i es un cam?? per guanyar "
+"el joc."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools use jobs and goods to increase tech level. "
-msgstr "Has arrivat a un nivell t??nic que et permet construir escoles. Les escoles donen feina i bens a m??s de incrementar el nivell t??cnic."
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
+"use jobs and goods to increase tech level. "
+msgstr ""
+"Has arrivat a un nivell t??nic que et permet construir escoles. Les escoles "
+"donen feina i bens a m??s de incrementar el nivell t??cnic."
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power stations. "
-msgstr "Has arrivat a un nivell t??nic que et permet construir Centarls Solars."
+msgid ""
+"You have reached the tech level which enables you to build solar power "
+"stations. "
+msgstr ""
+"Has arrivat a un nivell t??nic que et permet construir Centarls Solars."
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. Universities produces PhDs, which produce more technology. "
-msgstr "Has arrivat a un nivell t??nic que et permet construir Universitats. Les Universitats generen I+D, produint mes tecnolog??a."
+msgid ""
+"You have reached the tech level which enables you to build universities. "
+"Universities produces PhDs, which produce more technology. "
+msgstr ""
+"Has arrivat a un nivell t??nic que et permet construir Universitats. Les "
+"Universitats generen I+D, produint mes tecnolog??a."
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
 msgstr "Has arrivat a un nivell t??nic que et permet construir Molins."
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Has arrivat a un nivell t??nic que et permet construir mines de carb??."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Has arrivat a un nivell t??nic que et permet construir mines de carb??."
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. Recycling centres recycle used goods back into ore. "
-msgstr "Has arrivat a un nivell t??nic que et permet construir Centres de Reciclat. Els centres de reciclat reutilitzen els articles bells."
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
+"Recycling centres recycle used goods back into ore. "
+msgstr ""
+"Has arrivat a un nivell t??nic que et permet construir Centres de Reciclat. "
+"Els centres de reciclat reutilitzen els articles bells."
 
 #: data/gui/launch-gone.xml data/gui/sustain.xml
 msgid "You have won the game."
@@ -664,16 +778,26 @@
 msgstr "Necesites comensar una nova partida"
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and goods and make people in the surrounding areas (about 10 units in each direction) happier."
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
+"goods and make people in the surrounding areas (about 10 units in each "
+"direction) happier."
 msgstr "La gent a inventat el Basket. El deport fa la gent m??s sana i feli??."
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the technology for evacuation. You must launch five more unmanned rockets to restore confidence."
-msgstr "El teu cohet a explotat despr??s del llansament. La gent que viatjava a dins a mort. Llansa cuatre cohets sense gent per agafar confiansa."
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
+"technology for evacuation. You must launch five more unmanned rockets to "
+"restore confidence."
+msgstr ""
+"El teu cohet a explotat despr??s del llansament. La gent que viatjava a dins "
+"a mort. Llansa cuatre cohets sense gent per agafar confiansa."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
-msgstr "[+] Augmenta el zoom que fa que es mostrin menys edificis per?? m??s detalls s??n visibles"
+msgstr ""
+"[+] Augmenta el zoom que fa que es mostrin menys edificis per?? m??s detalls "
+"s??n visibles"
 
 #: data/gui/minimap.xml
 msgid "[-] Zoom out"
@@ -694,4 +818,3 @@
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "Desa opci?? triada"
-

Modified: trunk/data/locale/gui/cs.po
===================================================================
--- trunk/data/locale/gui/cs.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/cs.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -372,7 +372,8 @@
 #: data/gui/coalmineup.xml
 msgid ""
 "See the help screen for more information on coal mines and coal surveys."
-msgstr "Vizte n??pov??du pro v??ce informac?? o uheln??ch dolech a pr??zkumech."
+msgstr ""
+"Vizte n??pov??du pro v??ce informac?? o uheln??ch dolech a pr??zkumech."
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
 #: data/gui/windmillup.xml data/gui/ltindustryup.xml data/gui/universityup.xml
@@ -559,8 +560,9 @@
 "continue costing you money to keep the rocket ready. Launch it later by "
 "clicking on the rocket area."
 msgstr ""
-"Raketu m????ete odp??lit ihned, nebo chv??li po??kat. ??ek??n?? ale bude st??t pen??za "
-"za ??dr??bu rakety. Pro pozd??j???? odpal klikn??te na pole rakety."
+"Raketu m????ete odp??lit ihned, nebo chv??li po??kat. ??ek??n?? ale bude "
+"st??t pen??za za ??dr??bu rakety. Pro pozd??j???? odpal klikn??te na pole "
+"rakety."
 
 #: data/gui/import-exportup.xml
 msgid ""

Modified: trunk/data/locale/gui/de.po
===================================================================
--- trunk/data/locale/gui/de.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/de.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -25,12 +25,20 @@
 msgstr "Ein Feuer ist ausgebrochen."
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and APPEARS to be under control. "
-msgstr "In einer Barackensiedlung ist ein Feuer ausgebrochen. Es befindet sich im von der Feuerwehr abgedeckten Gebiet und SCHEINT unter Kontrolle zu sein."
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
+"APPEARS to be under control. "
+msgstr ""
+"In einer Barackensiedlung ist ein Feuer ausgebrochen. Es befindet sich im "
+"von der Feuerwehr abgedeckten Gebiet und SCHEINT unter Kontrolle zu sein."
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may spread to other areas. "
-msgstr "In einer Barackensiedlung ist ein Feuer ausgebrochen. Das Feuer ist AUSSER KONTROLLE und k??nnte sich in weitere Gebiete ausbreiten."
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+"spread to other areas. "
+msgstr ""
+"In einer Barackensiedlung ist ein Feuer ausgebrochen. Das Feuer ist AUSSER "
+"KONTROLLE und k??nnte sich in weitere Gebiete ausbreiten."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -59,7 +67,8 @@
 
 #: data/gui/bulldoze_shanty_yn.xml
 msgid "Bulldozing a shanty town costs a lot of money and may cause a fire."
-msgstr "Barackensiedlungen abreisen ist sehr teuer und kann Br??nde verursachen."
+msgstr ""
+"Barackensiedlungen abreisen ist sehr teuer und kann Br??nde verursachen."
 
 #: data/gui/tradedialog.xml data/gui/portdialog.xml
 msgid "Buy"
@@ -366,8 +375,11 @@
 msgstr "Schulen verf??gbar"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "Sehen Sie in der Hilfe nach, um mehr Informationen ??ber Kohlebergwerke und Prospektoren zu erhalten."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"Sehen Sie in der Hilfe nach, um mehr Informationen ??ber Kohlebergwerke und "
+"Prospektoren zu erhalten."
 
 #: data/gui/hvindustryup.xml data/gui/windmillup.xml data/gui/ltindustryup.xml
 #: data/gui/cricketup.xml data/gui/riverup.xml data/gui/coalpowerup.xml
@@ -389,7 +401,9 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "Einnahmen und Ausgaben. Hier nochmal klicken um zwischen den verschiedenen Ansichten zu wechseln."
+msgstr ""
+"Einnahmen und Ausgaben. Hier nochmal klicken um zwischen den verschiedenen "
+"Ansichten zu wechseln."
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show coal depots"
@@ -489,7 +503,9 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
-msgstr "Hierf??r fallen einmalige Kosten von einer Millionen an. Weitere Aufrufe sind kostenlos."
+msgstr ""
+"Hierf??r fallen einmalige Kosten von einer Millionen an. Weitere Aufrufe "
+"sind kostenlos."
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -548,116 +564,237 @@
 msgstr "Sie sehen besser danach."
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will continue costing you money to keep the rocket ready. Launch it later by clicking on the rocket area."
-msgstr "Sie k??nnen die Rakete jetzt starten, oder abwarten. Wenn sie warten kostet es sie weiterhin Geld, die Rakete abflugbereit zu halten. Klicken sie auf die Rakete um diesen Dialog sp??ter wieder zu ??ffnen."
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
+"continue costing you money to keep the rocket ready. Launch it later by "
+"clicking on the rocket area."
+msgstr ""
+"Sie k??nnen die Rakete jetzt starten, oder abwarten. Wenn sie warten kostet "
+"es sie weiterhin Geld, die Rakete abflugbereit zu halten. Klicken sie auf "
+"die Rakete um diesen Dialog sp??ter wieder zu ??ffnen."
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help pages on these subjects to find out how to use them. "
-msgstr "Sie k??nnen jetzt Kohle, Waren, Erz und Stahl Ein- und ausf??hren. Lesen sie die Hilfe um mehr zu erfahren."
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
+"pages on these subjects to find out how to use them. "
+msgstr ""
+"Sie k??nnen jetzt Kohle, Waren, Erz und Stahl Ein- und ausf??hren. Lesen sie "
+"die Hilfe um mehr zu erfahren."
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build parks on credit."
-msgstr "Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau von Parks auf Kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build parks on credit."
+msgstr ""
+"Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau von Parks auf "
+"Kredit."
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build recycling centres on credit."
-msgstr "Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau eines Recyclinzentrums auf Kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build recycling centres on credit."
+msgstr ""
+"Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau eines "
+"Recyclinzentrums auf Kredit."
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build rocket launch pads on credit."
-msgstr "Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau einer Rakete auf Kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build rocket launch pads on credit."
+msgstr ""
+"Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau einer Rakete auf "
+"Kredit."
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build solar power stations on credit."
-msgstr "Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau von eines Solarkraftwerks auf Kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build solar power stations on credit."
+msgstr ""
+"Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau von eines "
+"Solarkraftwerks auf Kredit."
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build universities on credit."
-msgstr "Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau einer Universit??t auf Kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build universities on credit."
+msgstr ""
+"Sie haben Schulden. Der Gemeinderat stimmt gegen den Bau einer Universit??t "
+"auf Kredit."
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your economy to reflect the reduced population. "
-msgstr "Sie haben 1000 Leute evakuiert. Sie sollten die gr????e ihrer Wirtschaft an die reduzierte Bev??lkerungszahl anpassen."
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
+"economy to reflect the reduced population. "
+msgstr ""
+"Sie haben 1000 Leute evakuiert. Sie sollten die gr????e ihrer Wirtschaft an "
+"die reduzierte Bev??lkerungszahl anpassen."
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. Blacksmiths use jobs and steel to make goods."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Schmieden zu errichten. Schmieden ben??tigen Arbeitskr??fte und Stahl um G??ter herzustellen."
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
+"Blacksmiths use jobs and steel to make goods."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Schmieden zu errichten. Schmieden ben??tigen Arbeitskr??fte und Stahl um "
+"G??ter herzustellen."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power stations."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Kohlekraftwerke zu bauen."
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
+"stations."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Kohlekraftwerke zu bauen."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. Fire stations prevent most fires from starting. If you haven't had any fires yet, you might not think you need them."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Feuerwachen zu errichten. Feuerwachen verhindern den Ausbruch der meisten Br??nde. Sollten sie bisher keine Br??nde gehabt haben k??nnten sie denken, sie brauchen keine Feuerwachen."
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
+"Fire stations prevent most fires from starting. If you haven't had any fires "
+"yet, you might not think you need them."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Feuerwachen zu errichten. Feuerwachen verhindern den Ausbruch der meisten "
+"Br??nde. Sollten sie bisher keine Br??nde gehabt haben k??nnten sie denken, "
+"sie brauchen keine Feuerwachen."
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. Heath centres reduce the number of people killed by pollution and increase overall productivity."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Krakenh??user zu errichten. Krankenh??user reduzieren die Zahl der Toten durch Umweltverschmutzung und erh??hen die allgemeine Produktivit??t."
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
+"Heath centres reduce the number of people killed by pollution and increase "
+"overall productivity."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Krakenh??user zu errichten. Krankenh??user reduzieren die Zahl der Toten "
+"durch Umweltverschmutzung und erh??hen die allgemeine Produktivit??t."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry (steel works). Heavy industry produces steel. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Schwerindustrie (Stahlwerke) zu bauen. Schwerindustrie erzeugt Stahl."
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
+"(steel works). Heavy industry produces steel. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Schwerindustrie (Stahlwerke) zu bauen. Schwerindustrie erzeugt Stahl."
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. Light industry produces goods. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Industriebetriebe zu errichten. Industriebetriebe stellen G??ter her."
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
+"Light industry produces goods. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Industriebetriebe zu errichten. Industriebetriebe stellen G??ter her."
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Spinnereien zu errichten. Spinnereien ben??tigen Arbeitskr??fte und Nahrung um G??ter herzustellen. Vorsicht, sie k??nnen sehr viel Nahrung verbrauchen."
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
+"jobs and food to make goods. Watch out, they can use a lot of food! "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Spinnereien zu errichten. Spinnereien ben??tigen Arbeitskr??fte und Nahrung "
+"um G??ter herzustellen. Vorsicht, sie k??nnen sehr viel Nahrung verbrauchen."
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more efficient, windmills. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, moderne Windm??hlen zu errichten. Diese sind effizienter und erzeugen elektischen Strom."
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
+"efficient, windmills. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"moderne Windm??hlen zu errichten. Diese sind effizienter und erzeugen "
+"elektischen Strom."
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are used to absorb pollution. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Parks zu errichten. Parks absorbiern Umweltverschmutzung."
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
+"used to absorb pollution. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Parks zu errichten. Parks absorbiern Umweltverschmutzung."
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, T??pfereien zu errichten. T??pfereien ben??tigen Arbeitskr??fte und Erz um G??ter herzustellen. (Sie ben??tigen Erzgruben um zu Erz zu geleangen.)"
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
+"Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"T??pfereien zu errichten. T??pfereien ben??tigen Arbeitskr??fte und Erz um "
+"G??ter herzustellen. (Sie ben??tigen Erzgruben um zu Erz zu geleangen.)"
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Eisenbahnen zu bauen."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Eisenbahnen zu bauen."
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Kan??le zu bauen."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Kan??le zu bauen."
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the help screen for more information."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Stra??en zu bauen. Lesen sie die Hilfe f??r mehr Details."
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
+"help screen for more information."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Stra??en zu bauen. Lesen sie die Hilfe f??r mehr Details."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch pads. Rockets enable you to evacuate your population and is a way to 'win' the game."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Raketenbasen zu bauen. Mit Raketen k??nnen Leute evakuiert werden, was eine Art ist, das SPiel zu gewinnen."
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
+"pads. Rockets enable you to evacuate your population and is a way to 'win' "
+"the game."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Raketenbasen zu bauen. Mit Raketen k??nnen Leute evakuiert werden, was eine "
+"Art ist, das SPiel zu gewinnen."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools use jobs and goods to increase tech level. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Schulen zu errichten. Schulen ben??tigen Arbeitskr??fte und G??ter um G??ter das Technologieniveau zu erh??hen."
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
+"use jobs and goods to increase tech level. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Schulen zu errichten. Schulen ben??tigen Arbeitskr??fte und G??ter um G??ter "
+"das Technologieniveau zu erh??hen."
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power stations. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Solarkraftwerke zu errichten."
+msgid ""
+"You have reached the tech level which enables you to build solar power "
+"stations. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Solarkraftwerke zu errichten."
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. Universities produces PhDs, which produce more technology. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Universit??ten zu errichten.Universit??ten bilden Informatiker aus, die mehr Technologie erzeugen."
+msgid ""
+"You have reached the tech level which enables you to build universities. "
+"Universities produces PhDs, which produce more technology. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Universit??ten zu errichten.Universit??ten bilden Informatiker aus, die mehr "
+"Technologie erzeugen."
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Windm??hlen zu bauen."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Windm??hlen zu bauen."
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Kohleminen zu graben."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Kohleminen zu graben."
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. Recycling centres recycle used goods back into ore. "
-msgstr "Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, Recyclingwerke zu bauen. Recyclingwerke k??nnen gebrauchte G??ter zur??ck in Erz aufarbeiten."
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
+"Recycling centres recycle used goods back into ore. "
+msgstr ""
+"Sie haben ein Technologieniveau erreicht, auf dem sie in der Lage sind, "
+"Recyclingwerke zu bauen. Recyclingwerke k??nnen gebrauchte G??ter zur??ck in "
+"Erz aufarbeiten."
 
 #: data/gui/sustain.xml data/gui/launch-gone.xml
 msgid "You have won the game."
@@ -668,16 +805,30 @@
 msgstr "Sie sollten in einer anderen Stadt neu anfangen."
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and goods and make people in the surrounding areas (about 10 units in each direction) happier."
-msgstr "Ihre Leute haben Korbball erfunden. Korbballfelder brauchen ein paar Arbeiter und G??ter und machen die Leute in der Umgebung (etwa 10 Einheiten in jede Richtung) gl??cklicher."
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
+"goods and make people in the surrounding areas (about 10 units in each "
+"direction) happier."
+msgstr ""
+"Ihre Leute haben Korbball erfunden. Korbballfelder brauchen ein paar "
+"Arbeiter und G??ter und machen die Leute in der Umgebung (etwa 10 Einheiten "
+"in jede Richtung) gl??cklicher."
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the technology for evacuation. You must launch five more unmanned rockets to restore confidence."
-msgstr "Iher Rakete ist kurz nach dem Start abgest??rzt. Die Leute trauen der Technik die Evakuierung nicht mehr zu. Sie m??ssen f??nf weitere unbemannte Raketen starten um ihr Vertrauen zur??ckzugewinnen."
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
+"technology for evacuation. You must launch five more unmanned rockets to "
+"restore confidence."
+msgstr ""
+"Iher Rakete ist kurz nach dem Start abgest??rzt. Die Leute trauen der "
+"Technik die Evakuierung nicht mehr zu. Sie m??ssen f??nf weitere unbemannte "
+"Raketen starten um ihr Vertrauen zur??ckzugewinnen."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
-msgstr "[+] Ansicht vergr????ern, so da?? weniger Geb??ude aber mehr Details sichtbar sind."
+msgstr ""
+"[+] Ansicht vergr????ern, so da?? weniger Geb??ude aber mehr Details "
+"sichtbar sind."
 
 #: data/gui/minimap.xml
 msgid "[-] Zoom out"
@@ -698,4 +849,3 @@
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "Speichern"
-

Modified: trunk/data/locale/gui/es.po
===================================================================
--- trunk/data/locale/gui/es.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/es.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -381,8 +381,8 @@
 msgid ""
 "See the help screen for more information on coal mines and coal surveys."
 msgstr ""
-"Para obtener m??s informaci??n sobre minas de carb??n y prospecciones mira la "
-"pantalla de ayuda."
+"Para obtener m??s informaci??n sobre minas de carb??n y prospecciones mira "
+"la pantalla de ayuda."
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
 #: data/gui/windmillup.xml data/gui/ltindustryup.xml data/gui/universityup.xml
@@ -629,8 +629,8 @@
 "You have evacuated 1000 people. You might want to reduce the size of your "
 "economy to reflect the reduced population. "
 msgstr ""
-"Has evacuado a 1000 personas. Quiz?? quieras reducir el tama??o de tu econom??a "
-"para adecuarla a la nueva poblaci??n."
+"Has evacuado a 1000 personas. Quiz?? quieras reducir el tama??o de tu "
+"econom??a para adecuarla a la nueva poblaci??n."
 
 #: data/gui/blacksmithup.xml
 msgid ""
@@ -666,8 +666,8 @@
 "overall productivity."
 msgstr ""
 "Has alcanzado un nivel tecnol??gico que te permite construir hospitales. Los "
-"hospitales reducen el n??mero de muertos por poluci??n y tambi??n incrementan "
-"la productividad general."
+"hospitales reducen el n??mero de muertos por poluci??n y tambi??n "
+"incrementan la productividad general."
 
 #: data/gui/hvindustryup.xml
 msgid ""
@@ -715,9 +715,9 @@
 "You have reached the tech level which enables you to build potteries. "
 "Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
 msgstr ""
-"Has alcanzado un nivel tecnol??gico que te permite construir alfarer??as. Las "
-"alfarer??as usan empleos y hierro para fabricar mercanc??as. (Necesitas minas "
-"de mineral para obtener mineral)."
+"Has alcanzado un nivel tecnol??gico que te permite construir alfarer??as. "
+"Las alfarer??as usan empleos y hierro para fabricar mercanc??as. (Necesitas "
+"minas de mineral para obtener mineral)."
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
@@ -733,8 +733,8 @@
 "You have reached the tech level which enables you to build roads. See the "
 "help screen for more information."
 msgstr ""
-"Has alcanzado un nivel tecnol??gico que te permite construir carreteras. Para "
-"obtener m??s informaci??n mira la pantalla de ayuda."
+"Has alcanzado un nivel tecnol??gico que te permite construir carreteras. "
+"Para obtener m??s informaci??n mira la pantalla de ayuda."
 
 #: data/gui/rocketup.xml
 msgid ""
@@ -781,8 +781,8 @@
 msgid ""
 "You have reached the tech level which enables you to dig deep coal mines."
 msgstr ""
-"Has alcanzado un nivel tecnol??gico que te permite construir minas de carb??n "
-"profundas."
+"Has alcanzado un nivel tecnol??gico que te permite construir minas de "
+"carb??n profundas."
 
 #: data/gui/recycleup.xml
 msgid ""
@@ -817,8 +817,8 @@
 "technology for evacuation. You must launch five more unmanned rockets to "
 "restore confidence."
 msgstr ""
-"Tu cohete se estrell?? al poco tiempo de despegar. La poblaci??n no volver?? a "
-"confiar en la tecnolog??a para realizar evacuaciones. Debes lanzar cinco o "
+"Tu cohete se estrell?? al poco tiempo de despegar. La poblaci??n no volver?? "
+"a confiar en la tecnolog??a para realizar evacuaciones. Debes lanzar cinco o "
 "m??s cohetes vac??os para devolver la confianza al pueblo."
 
 #: data/gui/minimap.xml

Modified: trunk/data/locale/gui/fr.po
===================================================================
--- trunk/data/locale/gui/fr.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/fr.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -26,12 +26,20 @@
 msgstr "Un incendie a d??but??"
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and APPEARS to be under control. "
-msgstr "Un incendie a ??clat?? dans un bidonville. Il est dans un secteur de couverture du feu et SEMBLE ??tre sous contr??le"
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
+"APPEARS to be under control. "
+msgstr ""
+"Un incendie a ??clat?? dans un bidonville. Il est dans un secteur de "
+"couverture du feu et SEMBLE ??tre sous contr??le"
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may spread to other areas. "
-msgstr "Un incendie a ??clat?? dans un bidonville. Le feu est HORS DE CONTROLE et peut se r??pendre ?? d'autres secteurs."
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+"spread to other areas. "
+msgstr ""
+"Un incendie a ??clat?? dans un bidonville. Le feu est HORS DE CONTROLE et "
+"peut se r??pendre ?? d'autres secteurs."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -60,7 +68,9 @@
 
 #: data/gui/bulldoze_shanty_yn.xml
 msgid "Bulldozing a shanty town costs a lot of money and may cause a fire."
-msgstr "D??truire un bidonville co??te beaucoup d'argent et peu provoquer un incendie."
+msgstr ""
+"D??truire un bidonville co??te beaucoup d'argent et peu provoquer un "
+"incendie."
 
 #: data/gui/tradedialog.xml data/gui/portdialog.xml
 msgid "Buy"
@@ -371,8 +381,11 @@
 msgstr "Ecoles disponibles"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "Voir l'??cran d'aide pour plus d'informations sur les aper??us du charbon et des mines de charbon ."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"Voir l'??cran d'aide pour plus d'informations sur les aper??us du charbon et "
+"des mines de charbon ."
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
 #: data/gui/windmillup.xml data/gui/ltindustryup.xml data/gui/universityup.xml
@@ -394,7 +407,9 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "Voir les Revenus et D??penses.Cliquez sur cet onglet ?? nouveau pour traverser les vues."
+msgstr ""
+"Voir les Revenus et D??penses.Cliquez sur cet onglet ?? nouveau pour "
+"traverser les vues."
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show coal depots"
@@ -494,7 +509,9 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
-msgstr "Ceci vous co??tera 1 million la premi??re fois. Ensuite, vous pourrez le rappeler gratuitement."
+msgstr ""
+"Ceci vous co??tera 1 million la premi??re fois. Ensuite, vous pourrez le "
+"rappeler gratuitement."
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -553,116 +570,236 @@
 msgstr "Vous feriez mieux de voir cela de plus pr??s"
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will continue costing you money to keep the rocket ready. Launch it later by clicking on the rocket area."
-msgstr "Vous pouvez lancer la fus??e maintenant ou attendre plus tard. Si vous attendez cela continuera de vous co??ter de l'argent pour maintenir la fus??e pr??te. Lancez-la en cliquant sur le site de lancement."
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
+"continue costing you money to keep the rocket ready. Launch it later by "
+"clicking on the rocket area."
+msgstr ""
+"Vous pouvez lancer la fus??e maintenant ou attendre plus tard. Si vous "
+"attendez cela continuera de vous co??ter de l'argent pour maintenir la "
+"fus??e pr??te. Lancez-la en cliquant sur le site de lancement."
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help pages on these subjects to find out how to use them. "
-msgstr "Vous pouvez maintenant importer et exporter du charbon, des biens, du minerai et de l'acier. Lisez les pages d'aide sur ces sujets afin de comprendre comment les utiliser. "
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
+"pages on these subjects to find out how to use them. "
+msgstr ""
+"Vous pouvez maintenant importer et exporter du charbon, des biens, du "
+"minerai et de l'acier. Lisez les pages d'aide sur ces sujets afin de "
+"comprendre comment les utiliser. "
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build parks on credit."
-msgstr "Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera pas ?? construire des parcs ?? cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build parks on credit."
+msgstr ""
+"Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera "
+"pas ?? construire des parcs ?? cr??dit."
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build recycling centres on credit."
-msgstr "Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera pas ?? construire des centres de recyclage ?? cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build recycling centres on credit."
+msgstr ""
+"Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera "
+"pas ?? construire des centres de recyclage ?? cr??dit."
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build rocket launch pads on credit."
-msgstr "Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous permettra pas d'emprunter pour construire un site de lancement de fus??e."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build rocket launch pads on credit."
+msgstr ""
+"Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous permettra "
+"pas d'emprunter pour construire un site de lancement de fus??e."
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build solar power stations on credit."
-msgstr "Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous permettra pas d'emprunter pour construire une centrale ??lectique solaire."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build solar power stations on credit."
+msgstr ""
+"Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous permettra "
+"pas d'emprunter pour construire une centrale ??lectique solaire."
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build universities on credit."
-msgstr "Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera pas ?? construire des universit??s ?? cr??dit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build universities on credit."
+msgstr ""
+"Vous avez un d??ficit budg??taire. Le conseil l??gislatif ne vous autorisera "
+"pas ?? construire des universit??s ?? cr??dit."
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your economy to reflect the reduced population. "
-msgstr "Vous avez ??vacu?? 1000 personnes. Vous pourriez vouloir r??duire la taille de votre ??conomie pour refl??ter la population r??duite. "
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
+"economy to reflect the reduced population. "
+msgstr ""
+"Vous avez ??vacu?? 1000 personnes. Vous pourriez vouloir r??duire la taille "
+"de votre ??conomie pour refl??ter la population r??duite. "
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. Blacksmiths use jobs and steel to make goods."
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des forges. Les forges utilisent des emplois et de l'acier pour cr??er des biens."
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
+"Blacksmiths use jobs and steel to make goods."
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"forges. Les forges utilisent des emplois et de l'acier pour cr??er des biens."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power stations."
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des centrales ??lectriques au charbon."
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
+"stations."
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"centrales ??lectriques au charbon."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. Fire stations prevent most fires from starting. If you haven't had any fires yet, you might not think you need them."
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des casernes de pompier. Les casernes de pompier emp??chent la plupart des feux de commencer. Si vous n'avez eu aucun feu encore, vous ne pourriez pas penser que vous avez besoin d'eux."
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
+"Fire stations prevent most fires from starting. If you haven't had any fires "
+"yet, you might not think you need them."
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"casernes de pompier. Les casernes de pompier emp??chent la plupart des feux "
+"de commencer. Si vous n'avez eu aucun feu encore, vous ne pourriez pas "
+"penser que vous avez besoin d'eux."
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. Heath centres reduce the number of people killed by pollution and increase overall productivity."
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des centres de soins. Les centres de soins r??duisent le nombre de personnes tu??es par pollution et augmentent la productivit?? globale."
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
+"Heath centres reduce the number of people killed by pollution and increase "
+"overall productivity."
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"centres de soins. Les centres de soins r??duisent le nombre de personnes "
+"tu??es par pollution et augmentent la productivit?? globale."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry (steel works). Heavy industry produces steel. "
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des industries lourdes (Aci??ries). Les industries lourdes produisent de l'acier."
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
+"(steel works). Heavy industry produces steel. "
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"industries lourdes (Aci??ries). Les industries lourdes produisent de l'acier."
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. Light industry produces goods. "
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des industries l??g??res. les industries l??g??res produisent des biens."
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
+"Light industry produces goods. "
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"industries l??g??res. les industries l??g??res produisent des biens."
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des Fabriques. Les Fabriques utlisent des emplois et des nourritures pour produire des biens. Attention, ils utilisent beaucoup de nourriture! "
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
+"jobs and food to make goods. Watch out, they can use a lot of food! "
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"Fabriques. Les Fabriques utlisent des emplois et des nourritures pour "
+"produire des biens. Attention, ils utilisent beaucoup de nourriture! "
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more efficient, windmills. "
-msgstr "Vous avez atteint le niveau techonologique permettant de construire des ??oliennes, version plus modernes et efficaces moulins ?? vent."
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
+"efficient, windmills. "
+msgstr ""
+"Vous avez atteint le niveau techonologique permettant de construire des "
+"??oliennes, version plus modernes et efficaces moulins ?? vent."
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are used to absorb pollution. "
-msgstr "Vous avez atteint le niveau de technologie qui vous permet de construire des parcs. Les parcs sont employ??s pour absorber la pollution. "
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
+"used to absorb pollution. "
+msgstr ""
+"Vous avez atteint le niveau de technologie qui vous permet de construire des "
+"parcs. Les parcs sont employ??s pour absorber la pollution. "
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
-msgstr "Vous avez atteint le niveau de technologie qui vous permet de construire des poteries. Les potteries utlisent des emplois et du mineraipour faire des biens. (vous avez besoin des mines de fer pour obtenir le minerai) "
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
+"Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
+msgstr ""
+"Vous avez atteint le niveau de technologie qui vous permet de construire des "
+"poteries. Les potteries utlisent des emplois et du mineraipour faire des "
+"biens. (vous avez besoin des mines de fer pour obtenir le minerai) "
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des chemins de fer. "
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"chemins de fer. "
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des rivi??res. "
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"rivi??res. "
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the help screen for more information."
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des routes. Voir les ??crans d'aide pour plus d'informations."
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
+"help screen for more information."
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"routes. Voir les ??crans d'aide pour plus d'informations."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch pads. Rockets enable you to evacuate your population and is a way to 'win' the game."
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des sites de lancement de fus??e. Les fus??es vous permettent d'??vacuer votre population et sont une mani??re 'de gagner' le jeu."
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
+"pads. Rockets enable you to evacuate your population and is a way to 'win' "
+"the game."
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"sites de lancement de fus??e. Les fus??es vous permettent d'??vacuer votre "
+"population et sont une mani??re 'de gagner' le jeu."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools use jobs and goods to increase tech level. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des ??coles. Les ??coles utilisent des emplois et des biens pour augmenter le niveau technologique. "
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
+"use jobs and goods to increase tech level. "
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"??coles. Les ??coles utilisent des emplois et des biens pour augmenter le "
+"niveau technologique. "
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power stations. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des centrales ??lectriques solaires. "
+msgid ""
+"You have reached the tech level which enables you to build solar power "
+"stations. "
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"centrales ??lectriques solaires. "
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. Universities produces PhDs, which produce more technology. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des universit??s. Les universit??s forment des chercheurs, qui produisent plus de technologie."
+msgid ""
+"You have reached the tech level which enables you to build universities. "
+"Universities produces PhDs, which produce more technology. "
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"universit??s. Les universit??s forment des chercheurs, qui produisent plus "
+"de technologie."
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Vous avez atteint le niveau technologique qui vous permet de construire des moulins ?? vent."
+msgstr ""
+"Vous avez atteint le niveau technologique qui vous permet de construire des "
+"moulins ?? vent."
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Vous avez atteint le niveau de technologie qui vous permet de creuser des mines de charbon profondes."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Vous avez atteint le niveau de technologie qui vous permet de creuser des "
+"mines de charbon profondes."
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. Recycling centres recycle used goods back into ore. "
-msgstr "Vous avez atteint le niveau de technologie qui vous permet de construire des centres de recyclage. Le recyclage permet de r??cuperer le minerai des dechets. "
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
+"Recycling centres recycle used goods back into ore. "
+msgstr ""
+"Vous avez atteint le niveau de technologie qui vous permet de construire des "
+"centres de recyclage. Le recyclage permet de r??cuperer le minerai des "
+"dechets. "
 
 #: data/gui/launch-gone.xml data/gui/sustain.xml
 msgid "You have won the game."
@@ -673,12 +810,24 @@
 msgstr "Vous devriez commencer une nouvelle carri??re autre part."
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and goods and make people in the surrounding areas (about 10 units in each direction) happier."
-msgstr "Les gens ont invent?? le basketball. Les gymnases utilisent un peu d'emplois, des biens et rends les personnes dans les environs (environ 10 unit??s dans chaque direction) plus heureux."
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
+"goods and make people in the surrounding areas (about 10 units in each "
+"direction) happier."
+msgstr ""
+"Les gens ont invent?? le basketball. Les gymnases utilisent un peu "
+"d'emplois, des biens et rends les personnes dans les environs (environ 10 "
+"unit??s dans chaque direction) plus heureux."
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the technology for evacuation. You must launch five more unmanned rockets to restore confidence."
-msgstr "Votre fus??e s'est ??cras??e peu apr??s le lancement. Les gens ne font plus confiance en cette technologie pour l'??avcuation. Vous devez lancer cinq fus??es sans pilote pour restaurer la confiance."
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
+"technology for evacuation. You must launch five more unmanned rockets to "
+"restore confidence."
+msgstr ""
+"Votre fus??e s'est ??cras??e peu apr??s le lancement. Les gens ne font plus "
+"confiance en cette technologie pour l'??avcuation. Vous devez lancer cinq "
+"fus??es sans pilote pour restaurer la confiance."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
@@ -703,4 +852,3 @@
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "Sauver dans l'emplacement"
-

Modified: trunk/data/locale/gui/nl.po
===================================================================
--- trunk/data/locale/gui/nl.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/nl.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -28,13 +28,17 @@
 msgid ""
 "A fire has broken out at a shanty town. It is in a fire cover area and "
 "APPEARS to be under control. "
-msgstr "Er is brand uitgebroken in een krottenwijk.Het is beschermd tegen brand en LIJKT onder controle."
+msgstr ""
+"Er is brand uitgebroken in een krottenwijk.Het is beschermd tegen brand en "
+"LIJKT onder controle."
 
 #: data/gui/shfire-oc.xml
 msgid ""
 "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
 "spread to other areas. "
-msgstr "Er is brand uitgebroken in een krottenwijk.De brand is niet onder controle en kan zich verspreiden naar andere gebieden."
+msgstr ""
+"Er is brand uitgebroken in een krottenwijk.De brand is niet onder controle "
+"en kan zich verspreiden naar andere gebieden."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -63,7 +67,8 @@
 
 #: data/gui/bulldoze_shanty_yn.xml
 msgid "Bulldozing a shanty town costs a lot of money and may cause a fire."
-msgstr "Een krottenwijk afbreken kost heel veel geld en dit kan brand veroorzaken."
+msgstr ""
+"Een krottenwijk afbreken kost heel veel geld en dit kan brand veroorzaken."
 
 #: data/gui/tradedialog.xml data/gui/portdialog.xml
 msgid "Buy"
@@ -371,8 +376,11 @@
 msgstr "Scholen zijn beschikbaar"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "Lees de help-pagina's voor meer informatie over kolenmijnen en surveys naar kolen."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"Lees de help-pagina's voor meer informatie over kolenmijnen en surveys naar "
+"kolen."
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
 #: data/gui/windmillup.xml data/gui/ltindustryup.xml data/gui/universityup.xml
@@ -394,7 +402,9 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "Toon inkomsten en uitgaven. klik opnieuw op deze tab om door de verschillende vensters te wisselen."
+msgstr ""
+"Toon inkomsten en uitgaven. klik opnieuw op deze tab om door de "
+"verschillende vensters te wisselen."
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show coal depots"
@@ -494,7 +504,9 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
-msgstr "Dit kost eenmalig 1 miljoen ???. Daarna is het gratis om het opnieuw op te vragen."
+msgstr ""
+"Dit kost eenmalig 1 miljoen ???. Daarna is het gratis om het opnieuw op te "
+"vragen."
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -567,44 +579,57 @@
 "You can now import and export coal, goods, ore and steel. Read the help "
 "pages on these subjects to find out how to use them. "
 msgstr ""
-"Kolen, goederen, ijzererts en staal kunnen nu ge??mporteerd en ge??xporteerd worden. "
-"Lees de helppagina's over deze onderwerpen om te begrijpen hoe dit gebruikt kan worden. "
+"Kolen, goederen, ijzererts en staal kunnen nu ge??mporteerd en ge??xporteerd "
+"worden. Lees de helppagina's over deze onderwerpen om te begrijpen hoe dit "
+"gebruikt kan worden. "
 
 #: data/gui/no-credit-parkland.xml
 msgid ""
 "You have a budget deficit. The legislative council will not allow you to "
 "build parks on credit."
-msgstr "U heeft geld tekort. De gemeenteraad staat niet toe dat er parken gebouwd worden met geleend geld."
+msgstr ""
+"U heeft geld tekort. De gemeenteraad staat niet toe dat er parken gebouwd "
+"worden met geleend geld."
 
 #: data/gui/no-credit-recycle.xml
 msgid ""
 "You have a budget deficit. The legislative council will not allow you to "
 "build recycling centres on credit."
-msgstr "U heeft geld tekort. De gemeenteraad staat niet toe dat er recycleercentrum gebouwd worden met geleend geld."
+msgstr ""
+"U heeft geld tekort. De gemeenteraad staat niet toe dat er recycleercentrum "
+"gebouwd worden met geleend geld."
 
 #: data/gui/no-credit-rocket.xml
 msgid ""
 "You have a budget deficit. The legislative council will not allow you to "
 "build rocket launch pads on credit."
-msgstr "U heeft geld tekort. De gemeenteraad staat niet toe dat er lanceerplatformen gebouwd worden met geleend geld."
+msgstr ""
+"U heeft geld tekort. De gemeenteraad staat niet toe dat er lanceerplatformen "
+"gebouwd worden met geleend geld."
 
 #: data/gui/no-credit-solar-power.xml
 msgid ""
 "You have a budget deficit. The legislative council will not allow you to "
 "build solar power stations on credit."
-msgstr "U heeft geld tekort. De gemeenteraad staat niet toe dat er zonne-energie centrales gebouwd worden met geleend geld."
+msgstr ""
+"U heeft geld tekort. De gemeenteraad staat niet toe dat er zonne-energie "
+"centrales gebouwd worden met geleend geld."
 
 #: data/gui/no-credit-university.xml
 msgid ""
 "You have a budget deficit. The legislative council will not allow you to "
 "build universities on credit."
-msgstr "U heeft geld tekort. De gemeenteraad staat niet toe dat er universiteiten gebouwd worden met geleend geld."
+msgstr ""
+"U heeft geld tekort. De gemeenteraad staat niet toe dat er universiteiten "
+"gebouwd worden met geleend geld."
 
 #: data/gui/launch-evac.xml
 msgid ""
 "You have evacuated 1000 people. You might want to reduce the size of your "
 "economy to reflect the reduced population. "
-msgstr "Er zijn 1000 mensen ge??vacueerd. Omdat er minder mensen zijn, wilt U mischien de economie kleiner maken."
+msgstr ""
+"Er zijn 1000 mensen ge??vacueerd. Omdat er minder mensen zijn, wilt U "
+"mischien de economie kleiner maken."
 
 #: data/gui/blacksmithup.xml
 msgid ""
@@ -618,7 +643,9 @@
 msgid ""
 "You have reached the tech level which enables you to build coal fired power "
 "stations."
-msgstr "Het technische nivo is bereikt waarmee kolen-centrales kunnen worden gebouwd. "
+msgstr ""
+"Het technische nivo is bereikt waarmee kolen-centrales kunnen worden "
+"gebouwd. "
 
 #: data/gui/firestationup.xml
 msgid ""
@@ -626,8 +653,9 @@
 "Fire stations prevent most fires from starting. If you haven't had any fires "
 "yet, you might not think you need them."
 msgstr ""
-"Het technische nivo is bereikt waarmee brandweerkazernes kunnen worden gebouwd. "
-"Brandweerkazernes zorgen ervoor dat de meeste vuren doven. Als er nog geen branden geweest zijn, zou men denken dat ze niet nodig zijn."
+"Het technische nivo is bereikt waarmee brandweerkazernes kunnen worden "
+"gebouwd. Brandweerkazernes zorgen ervoor dat de meeste vuren doven. Als er "
+"nog geen branden geweest zijn, zou men denken dat ze niet nodig zijn."
 
 #: data/gui/healthup.xml
 msgid ""
@@ -636,15 +664,16 @@
 "overall productivity."
 msgstr ""
 "Het technische nivo is bereikt waarmee ziekenhuizen kunnen worden gebouwd. "
-"Ziekenhuizen zorgen ervoor dat er minder mensen dood gaan door vervuiling en verhogen daarom de productie."
+"Ziekenhuizen zorgen ervoor dat er minder mensen dood gaan door vervuiling en "
+"verhogen daarom de productie."
 
 #: data/gui/hvindustryup.xml
 msgid ""
 "You have reached the tech level which enables you to build heavy industry "
 "(steel works). Heavy industry produces steel. "
 msgstr ""
-"Het technische nivo is bereikt waarmee zware industrie (staal-fabriek) kan worden gebouwd. "
-"Zware industrie produceert staal."
+"Het technische nivo is bereikt waarmee zware industrie (staal-fabriek) kan "
+"worden gebouwd. Zware industrie produceert staal."
 
 #: data/gui/ltindustryup.xml
 msgid ""
@@ -659,46 +688,52 @@
 "You have reached the tech level which enables you to build mills. Mills use "
 "jobs and food to make goods. Watch out, they can use a lot of food! "
 msgstr ""
-"Het technische nivo is bereikt waarmee textiel-fabrieken kunnen worden gebouwd. "
-"Textielfabrieken gebruiken werk en voedsel om goederen te maken. Pasop: ze kunnen een heleboel voedsel gebruiken."
+"Het technische nivo is bereikt waarmee textiel-fabrieken kunnen worden "
+"gebouwd. Textielfabrieken gebruiken werk en voedsel om goederen te maken. "
+"Pasop: ze kunnen een heleboel voedsel gebruiken."
 
 #: data/gui/mod_wind_up.xml
 msgid ""
 "You have reached the tech level which enables you to build modern, more "
 "efficient, windmills. "
-msgstr "Het technische nivo is bereikt waarmee moderne, meer efficiente windmolens kunnen worden gebouwd. "
+msgstr ""
+"Het technische nivo is bereikt waarmee moderne, meer efficiente windmolens "
+"kunnen worden gebouwd. "
 
 #: data/gui/parkup.xml
 msgid ""
 "You have reached the tech level which enables you to build parks. Parks are "
 "used to absorb pollution. "
 msgstr ""
-"Het technische nivo is bereikt waarmee parken kunnen worden gebouwd. "
-"Parken worden gebruikt om vervuiling te laten verdwijnen."
+"Het technische nivo is bereikt waarmee parken kunnen worden gebouwd. Parken "
+"worden gebruikt om vervuiling te laten verdwijnen."
 
 #: data/gui/potteryup.xml
 msgid ""
 "You have reached the tech level which enables you to build potteries. "
 "Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
 msgstr ""
-"Het technische nivo is bereikt waarmee pottenbakkerijen kunnen worden gebouwd. "
-"Pottenbakkerijen gebruiken werk en ijzererts om goederen te maken. (ijzererts-mijnen zijn nodig om ijzererts te krijgen)"
+"Het technische nivo is bereikt waarmee pottenbakkerijen kunnen worden "
+"gebouwd. Pottenbakkerijen gebruiken werk en ijzererts om goederen te maken. "
+"(ijzererts-mijnen zijn nodig om ijzererts te krijgen)"
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Het technische nivo is bereikt waarmee spoorwegen kunnen worden gebouwd. "
+msgstr ""
+"Het technische nivo is bereikt waarmee spoorwegen kunnen worden gebouwd. "
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
-msgstr "Het technische nivo is bereikt waarmee revieren kunnen worden gebouwd. "
+msgstr ""
+"Het technische nivo is bereikt waarmee revieren kunnen worden gebouwd. "
 
 #: data/gui/roadup.xml
 msgid ""
 "You have reached the tech level which enables you to build roads. See the "
 "help screen for more information."
 msgstr ""
-"Het technische nivo is bereikt waarmee straten kunnen worden gebouwd. "
-"Lees de help-pagina's voor meer informatie."
+"Het technische nivo is bereikt waarmee straten kunnen worden gebouwd. Lees "
+"de help-pagina's voor meer informatie."
 
 #: data/gui/rocketup.xml
 msgid ""
@@ -706,8 +741,9 @@
 "pads. Rockets enable you to evacuate your population and is a way to 'win' "
 "the game."
 msgstr ""
-"Het technische nivo is bereikt waarmee lanceer-platformen kunnen worden gebouwd. "
-"Lanceer-platformen maken mogelijk om de bevolking te evacueren en is daarmee een manier om het spel te winnen."
+"Het technische nivo is bereikt waarmee lanceer-platformen kunnen worden "
+"gebouwd. Lanceer-platformen maken mogelijk om de bevolking te evacueren en "
+"is daarmee een manier om het spel te winnen."
 
 #: data/gui/schoolup.xml
 msgid ""
@@ -721,7 +757,9 @@
 msgid ""
 "You have reached the tech level which enables you to build solar power "
 "stations. "
-msgstr "Het technische nivo is bereikt waarmee zonne-energie centrales kunnen worden gebouwd."
+msgstr ""
+"Het technische nivo is bereikt waarmee zonne-energie centrales kunnen worden "
+"gebouwd."
 
 #: data/gui/universityup.xml
 msgid ""
@@ -733,17 +771,23 @@
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Het technische nivo is bereikt waarmee windmolens kunnen worden gebouwd."
+msgstr ""
+"Het technische nivo is bereikt waarmee windmolens kunnen worden gebouwd."
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Het technische nivo is bereikt waarmee diepe kolenmijnen kunnen worden gedolven."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Het technische nivo is bereikt waarmee diepe kolenmijnen kunnen worden "
+"gedolven."
 
 #: data/gui/recycleup.xml
 msgid ""
 "You have reached the tech level which enables you to recycling centres. "
 "Recycling centres recycle used goods back into ore. "
-msgstr "Het technische nivo is bereikt waarmee een recycleercentrum kan worden gebouwd. Een recycleercentrum recycled gebruikte goederen naar ijzererts."
+msgstr ""
+"Het technische nivo is bereikt waarmee een recycleercentrum kan worden "
+"gebouwd. Een recycleercentrum recycled gebruikte goederen naar ijzererts."
 
 #: data/gui/launch-gone.xml data/gui/sustain.xml
 msgid "You have won the game."
@@ -759,15 +803,20 @@
 "goods and make people in the surrounding areas (about 10 units in each "
 "direction) happier."
 msgstr ""
-"Het technische nivo is bereikt waarmee basketbal-velden kunnen worden gebouwd. "
-"Basket-velden gebruiken een beetje werk en goederen. En maakt de mensen in de omliggende wijken (ongeveer 10 eenheden in elke richting) gelukkiger."
+"Het technische nivo is bereikt waarmee basketbal-velden kunnen worden "
+"gebouwd. Basket-velden gebruiken een beetje werk en goederen. En maakt de "
+"mensen in de omliggende wijken (ongeveer 10 eenheden in elke richting) "
+"gelukkiger."
 
 #: data/gui/launch-fail.xml
 msgid ""
 "Your rocket crashed shortly after launch. People no longer trust the "
 "technology for evacuation. You must launch five more unmanned rockets to "
 "restore confidence."
-msgstr "De raket is kort na de lancering neergestort.. De mensen vertrouwen niet langer deze technologie voor evacuatie. Eerst moeten vijf onbemande raketten gelanceerd worden om het vertrouwen te winnen."
+msgstr ""
+"De raket is kort na de lancering neergestort.. De mensen vertrouwen niet "
+"langer deze technologie voor evacuatie. Eerst moeten vijf onbemande raketten "
+"gelanceerd worden om het vertrouwen te winnen."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
@@ -787,9 +836,9 @@
 
 #: data/gui/minimap.xml
 msgid "[v] Cycle through MiniMap overlay modes. "
-msgstr "[v] Hiermee kan tussen de verschillende mini-kaartjes gewisseld worden."
+msgstr ""
+"[v] Hiermee kan tussen de verschillende mini-kaartjes gewisseld worden."
 
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "Opslaan in het geselecteerde slot"
-

Modified: trunk/data/locale/gui/pl.po
===================================================================
--- trunk/data/locale/gui/pl.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/pl.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -40,8 +40,8 @@
 "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
 "spread to other areas. "
 msgstr ""
-"Po??ar ogarn???? slumsy. Ogie?? wymkn???? si?? spod kontroli i istnieje szansa jego "
-"rozprzestrzenienia si??."
+"Po??ar ogarn???? slumsy. Ogie?? wymkn???? si?? spod kontroli i istnieje "
+"szansa jego rozprzestrzenienia si??."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -508,8 +508,8 @@
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
 msgstr ""
-"To b??dzie Ci?? kosztowa?? jednorazowo 1 milion. P????niej jest ju?? dost??pne za "
-"darmo."
+"To b??dzie Ci?? kosztowa?? jednorazowo 1 milion. P????niej jest ju?? "
+"dost??pne za darmo."
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -574,8 +574,8 @@
 "clicking on the rocket area."
 msgstr ""
 "Mo??esz wystrzeli?? rakiet?? teraz lub p????niej. Je??li b??dziesz czeka??, "
-"utrzymywanie rakiety w stanie gotowo??ci b??dzie Ci?? kosztowa??. Mo??esz j?? "
-"potem wystrzeli?? klikaj??c na kosmodrom."
+"utrzymywanie rakiety w stanie gotowo??ci b??dzie Ci?? kosztowa??. Mo??esz "
+"j?? potem wystrzeli?? klikaj??c na kosmodrom."
 
 #: data/gui/import-exportup.xml
 msgid ""
@@ -583,7 +583,8 @@
 "pages on these subjects to find out how to use them. "
 msgstr ""
 "Teraz mo??esz importowa?? i eksportowa?? w??giel, towary, rude i stal. "
-"Przeczytaj strony pomocy tych temat??w, ??eby dowiedzie?? si?? jak to zrobi??."
+"Przeczytaj strony pomocy tych temat??w, ??eby dowiedzie?? si?? jak to "
+"zrobi??."
 
 #: data/gui/no-credit-parkland.xml
 msgid ""
@@ -597,8 +598,8 @@
 "You have a budget deficit. The legislative council will not allow you to "
 "build recycling centres on credit."
 msgstr ""
-"Masz deficyt bud??etu. Rada miejska zabroni??a Ci budowy zak??ad??w recyklingu "
-"na kredyt."
+"Masz deficyt bud??etu. Rada miejska zabroni??a Ci budowy zak??ad??w "
+"recyklingu na kredyt."
 
 #: data/gui/no-credit-rocket.xml
 msgid ""
@@ -645,7 +646,8 @@
 "You have reached the tech level which enables you to build coal fired power "
 "stations."
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe elektrowni w??glowych."
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe elektrowni "
+"w??glowych."
 
 #: data/gui/firestationup.xml
 msgid ""
@@ -653,9 +655,10 @@
 "Fire stations prevent most fires from starting. If you haven't had any fires "
 "yet, you might not think you need them."
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe remiz stra??ackich. "
-"Remizy stra??ackie zapobiegaj?? wi??kszo??ci po??ar??w. Je??li nie mia??e?? jeszcze "
-"??adnych po??ar??w, mo??e Ci si?? wydawa??, ??e ich nie potrzebujesz."
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe remiz "
+"stra??ackich. Remizy stra??ackie zapobiegaj?? wi??kszo??ci po??ar??w. Je??li "
+"nie mia??e?? jeszcze ??adnych po??ar??w, mo??e Ci si?? wydawa??, ??e ich nie "
+"potrzebujesz."
 
 #: data/gui/healthup.xml
 msgid ""
@@ -663,25 +666,25 @@
 "Heath centres reduce the number of people killed by pollution and increase "
 "overall productivity."
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe szpitali. Szpitale "
-"zmniejszaj?? ilo???? ludzi zabitych przez zanieczyszczenia oraz zwi??kszaj?? "
-"ca??kowit?? wydajno????."
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe szpitali. "
+"Szpitale zmniejszaj?? ilo???? ludzi zabitych przez zanieczyszczenia oraz "
+"zwi??kszaj?? ca??kowit?? wydajno????."
 
 #: data/gui/hvindustryup.xml
 msgid ""
 "You have reached the tech level which enables you to build heavy industry "
 "(steel works). Heavy industry produces steel. "
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w ci????kiego "
-"przemys??u. Zak??ady ci????kiego przemys??u produkuj?? stal. "
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w "
+"ci????kiego przemys??u. Zak??ady ci????kiego przemys??u produkuj?? stal. "
 
 #: data/gui/ltindustryup.xml
 msgid ""
 "You have reached the tech level which enables you to build light industry. "
 "Light industry produces goods. "
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w lekkiego "
-"przemys??u. Zak??ady lekkiego przemys??u produkuj?? towary. "
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w "
+"lekkiego przemys??u. Zak??ady lekkiego przemys??u produkuj?? towary. "
 
 #: data/gui/millup.xml
 msgid ""
@@ -713,14 +716,15 @@
 "You have reached the tech level which enables you to build potteries. "
 "Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe garncarni. Garncarnie "
-"wykorzystuj?? si???? robocz?? oraz rud?? do wytwarzania towar??w. (Musisz mie?? "
-"kopalnie rudy, ??eby uzyska?? rud??) "
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe garncarni. "
+"Garncarnie wykorzystuj?? si???? robocz?? oraz rud?? do wytwarzania towar??w. "
+"(Musisz mie?? kopalnie rudy, ??eby uzyska?? rud??) "
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe tor??w kolejowych. "
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe tor??w "
+"kolejowych. "
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
@@ -731,8 +735,8 @@
 "You have reached the tech level which enables you to build roads. See the "
 "help screen for more information."
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe ulic. Zobacz ekran "
-"pomocy w celu uzyskania wi??kszej ilo??ci informacji."
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe ulic. Zobacz "
+"ekran pomocy w celu uzyskania wi??kszej ilo??ci informacji."
 
 #: data/gui/rocketup.xml
 msgid ""
@@ -740,9 +744,9 @@
 "pads. Rockets enable you to evacuate your population and is a way to 'win' "
 "the game."
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe kosmodrom??w. Rakiety "
-"pozwalaj?? ewakuowa?? mieszka??c??w miasta, co jest sposobem na 'przej??cie' tej "
-"gry."
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe kosmodrom??w. "
+"Rakiety pozwalaj?? ewakuowa?? mieszka??c??w miasta, co jest sposobem na "
+"'przej??cie' tej gry."
 
 #: data/gui/schoolup.xml
 msgid ""
@@ -767,11 +771,13 @@
 "Universities produces PhDs, which produce more technology. "
 msgstr ""
 "Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe uniwersytet??w. "
-"Uniwersytety produkuj?? jajog??owych, kt??rzy opracowywuj?? nowe technologi??."
+"Uniwersytety produkuj?? jajog??owych, kt??rzy opracowywuj?? nowe "
+"technologi??."
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe wiatrak??w. "
+msgstr ""
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe wiatrak??w. "
 
 #: data/gui/coalmineup.xml
 msgid ""
@@ -785,8 +791,8 @@
 "You have reached the tech level which enables you to recycling centres. "
 "Recycling centres recycle used goods back into ore. "
 msgstr ""
-"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w recyklingu. "
-"Zak??ady recyklingu przerabiaj?? towary na rud??. "
+"Osi??gn????e?? poziom technologiczny pozwalaj??cy na budowe zak??ad??w "
+"recyklingu. Zak??ady recyklingu przerabiaj?? towary na rud??. "
 
 #: data/gui/launch-gone.xml data/gui/sustain.xml
 msgid "You have won the game."
@@ -802,9 +808,9 @@
 "goods and make people in the surrounding areas (about 10 units in each "
 "direction) happier."
 msgstr ""
-"Twoi ludzie wynale??li koszyk??wk??. Boiska do koszyk??wki wykorzystuj?? niewiele "
-"si??y roboczej oraz towar??w, a ludzie w okolicy (oko??o 10 p??l w ka??dym "
-"kierunku) s?? szcz????liwsi."
+"Twoi ludzie wynale??li koszyk??wk??. Boiska do koszyk??wki wykorzystuj?? "
+"niewiele si??y roboczej oraz towar??w, a ludzie w okolicy (oko??o 10 p??l w "
+"ka??dym kierunku) s?? szcz????liwsi."
 
 #: data/gui/launch-fail.xml
 msgid ""
@@ -819,7 +825,8 @@
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
 msgstr ""
-"[+] Przybli??enie widoku - wida?? mniej budynk??w, ale s?? bardziej szczeg????owe."
+"[+] Przybli??enie widoku - wida?? mniej budynk??w, ale s?? bardziej "
+"szczeg????owe."
 
 #: data/gui/minimap.xml
 msgid "[-] Zoom out"

Modified: trunk/data/locale/gui/pt_BR.po
===================================================================
--- trunk/data/locale/gui/pt_BR.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/pt_BR.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -26,15 +26,19 @@
 msgstr "Come??ou um inc??ndio"
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and "
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
 "APPEARS to be under control. "
-msgstr "Um inc??ndio iniciou na favela, que esta numa ??rea coberta pelos bombeiros e "
-"APARENTA estar sob controle."
+msgstr ""
+"Um inc??ndio iniciou na favela, que esta numa ??rea coberta pelos bombeiros "
+"e APARENTA estar sob controle."
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
 "spread to other areas. "
-msgstr "Um inc??ndio iniciou na favela, o fogo esta FORA DE CONTROLE e poder?? se "
+msgstr ""
+"Um inc??ndio iniciou na favela, o fogo esta FORA DE CONTROLE e poder?? se "
 "espalhar para outras ??reas."
 
 #: data/gui/credits.xml data/gui/savegame.xml data/gui/newgame.xml
@@ -371,8 +375,10 @@
 msgstr "Escola dispon??vel"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "Veja a tela de ajuda para maiores informa????es sobre minas de carv??o e "
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"Veja a tela de ajuda para maiores informa????es sobre minas de carv??o e "
 "an??lise do carv??o."
 
 #: data/gui/hvindustryup.xml data/gui/windmillup.xml data/gui/ltindustryup.xml
@@ -395,7 +401,8 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "Exibir Receitas e Despesas. Clique nesta tab novamente para circular entre "
+msgstr ""
+"Exibir Receitas e Despesas. Clique nesta tab novamente para circular entre "
 "as visualiza????es."
 
 #: data/gui/minimapswitchbuttons.xml
@@ -555,174 +562,228 @@
 msgstr "Voc?? pode ir a procurar por isso"
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will "
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
 "continue costing you money to keep the rocket ready. Launch it later by "
 "clicking on the rocket area."
-msgstr "Voc?? pode lan??ar o foguete agora ou mais tarde. Lan??ar mais tarde continuar?? "
-"custando para manter o foguete pronto para o lan??amento. Lance-o clicando na "
-"??rea do foguete."
+msgstr ""
+"Voc?? pode lan??ar o foguete agora ou mais tarde. Lan??ar mais tarde "
+"continuar?? custando para manter o foguete pronto para o lan??amento. "
+"Lance-o clicando na ??rea do foguete."
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help "
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
 "pages on these subjects to find out how to use them. "
-msgstr "Voc?? pode agora importar e exportar carv??o, bens, min??rios e a??o. Leia as "
-"p??ginas de ajuda destes itens para saber como utiliz??-los."
+msgstr ""
+"Voc?? pode agora importar e exportar carv??o, bens, min??rios e a??o. Leia "
+"as p??ginas de ajuda destes itens para saber como utiliz??-los."
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to "
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
 "build parks on credit."
-msgstr "Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? que "
-"voc?? construa parques ?? cr??dito."
+msgstr ""
+"Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? "
+"que voc?? construa parques ?? cr??dito."
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to "
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
 "build recycling centres on credit."
-msgstr "Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? que "
-"voc?? construa centros de reciclagem ?? cr??dito."
+msgstr ""
+"Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? "
+"que voc?? construa centros de reciclagem ?? cr??dito."
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to "
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
 "build rocket launch pads on credit."
-msgstr "Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? que "
-"voc?? construa ??reas de lan??amento ?? cr??dito."
+msgstr ""
+"Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? "
+"que voc?? construa ??reas de lan??amento ?? cr??dito."
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to "
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
 "build solar power stations on credit."
-msgstr "Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? que "
-"voc?? construa usinas el??tricas solares ?? cr??dito."
+msgstr ""
+"Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? "
+"que voc?? construa usinas el??tricas solares ?? cr??dito."
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to "
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
 "build universities on credit."
-msgstr "Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? que "
-"voc?? construa universidades ?? cr??dito."
+msgstr ""
+"Voc?? tem um d??ficit no or??amento. O conselho legislativo n??o deixar?? "
+"que voc?? construa universidades ?? cr??dito."
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your "
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
 "economy to reflect the reduced population. "
-msgstr "Voc?? evacuou 1000 pessoas. Voc?? pode querer reduzir o tamanho da sua "
+msgstr ""
+"Voc?? evacuou 1000 pessoas. Voc?? pode querer reduzir o tamanho da sua "
 "economia para refletir a popula????o reduzida."
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. "
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
 "Blacksmiths use jobs and steel to make goods."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ferreiros. "
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ferreiros. "
 "Ferreiros utiliza produ????o e a??o para produzir bens."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power "
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
 "stations."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir usinas el??tricas "
-"carvoeiras."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir usinas "
+"el??tricas carvoeiras."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. "
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
 "Fire stations prevent most fires from starting. If you haven't had any fires "
 "yet, you might not think you need them."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir Bombeiros. "
-"Bombeiro previne a maioria dos inc??ndios antes de come??ar. Se voc?? n??o teve "
-"um inc??ndio ainda, n??o deve pensar que n??o precisa deles."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir Bombeiros. "
+"Bombeiro previne a maioria dos inc??ndios antes de come??ar. Se voc?? n??o "
+"teve um inc??ndio ainda, n??o deve pensar que n??o precisa deles."
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. "
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
 "Heath centres reduce the number of people killed by pollution and increase "
 "overall productivity."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir hospitais. "
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir hospitais. "
 "Hospitais reduzem o n??mero de pessoas mortas pela polui????o e aumentam a "
 "produtividade."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry "
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
 "(steel works). Heavy industry produces steel. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ind??strias "
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ind??strias "
 "pesadas (sider??rgicas). Ind??strias pesadas produzem a??o."
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. "
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
 "Light industry produces goods. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ind??strias leves. "
-"Ind??strias leves produzem bens."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir ind??strias "
+"leves. Ind??strias leves produzem bens."
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use "
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
 "jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir moinhos. Moinhos "
-"utilizam produ????o e alimento para produzir bens. Aten??ao, eles podem "
-"utilizar bastante alimentos!"
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir moinhos. "
+"Moinhos utilizam produ????o e alimento para produzir bens. Aten??ao, eles "
+"podem utilizar bastante alimentos!"
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more "
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
 "efficient, windmills. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir modernos, e mais "
-"eficientes, moinhos de vento."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir modernos, e "
+"mais eficientes, moinhos de vento."
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are "
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
 "used to absorb pollution. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir parques. Parques "
-"s??o utilizados para absorver a polui????o."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir parques. "
+"Parques s??o utilizados para absorver a polui????o."
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. "
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
 "Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir olarias. Olarias "
-"utilizam produ????o e min??rio para produzir bens. (Voc?? necessita de minas "
-"para conseguir os min??rios)"
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir olarias. "
+"Olarias utilizam produ????o e min??rio para produzir bens. (Voc?? necessita "
+"de minas para conseguir os min??rios)"
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir estradas de ferro."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir estradas de "
+"ferro."
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
 msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir rios."
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the "
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
 "help screen for more information."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir estradas. Veja a "
-"tela de ajuda para maiores informa????es."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir estradas. "
+"Veja a tela de ajuda para maiores informa????es."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch "
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
 "pads. Rockets enable you to evacuate your population and is a way to 'win' "
 "the game."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir bases de "
-"lan??amentos. Foguetes habilitam voc?? a evacuar sua popula????o e ?? um meio de "
-"'ganhar' o jogo."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir bases de "
+"lan??amentos. Foguetes habilitam voc?? a evacuar sua popula????o e ?? um "
+"meio de 'ganhar' o jogo."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools "
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
 "use jobs and goods to increase tech level. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir escolas. Escolas "
-"utilizam produ????o e bens para aumentar o n??vel tecnol??gico."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir escolas. "
+"Escolas utilizam produ????o e bens para aumentar o n??vel tecnol??gico."
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power "
+msgid ""
+"You have reached the tech level which enables you to build solar power "
 "stations. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir usinas el??tricas "
-"solares."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir usinas "
+"el??tricas solares."
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. "
+msgid ""
+"You have reached the tech level which enables you to build universities. "
 "Universities produces PhDs, which produce more technology. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir universidades. "
-"Universidades produzem PhDs, que produzem mais tecnologia."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir "
+"universidades. Universidades produzem PhDs, que produzem mais tecnologia."
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir moinhos de vento."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir moinhos de "
+"vento."
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a cavar profundamente nas "
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a cavar profundamente nas "
 "minas de carv??o."
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. "
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
 "Recycling centres recycle used goods back into ore. "
-msgstr "Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir centros de "
+msgstr ""
+"Voc?? alcan??ou o n??vel tecnol??gico que habilita a construir centros de "
 "reciclagem. Centros de reciclagem transformam bens usados em min??rios."
 
 #: data/gui/sustain.xml data/gui/launch-gone.xml
@@ -734,20 +795,24 @@
 msgstr "Voc?? pode come??ar uma nova profiss??o em outro lugar."
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and "
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
 "goods and make people in the surrounding areas (about 10 units in each "
 "direction) happier."
-msgstr "Seus habitantes inventaram o basquete. As quadras de basquete utilizam um "
-"pouca produ????o e bens e fazem as pessoas ao redor (mais ou menos 10 pessoas "
-"em cada dire????o) mais felizes."
+msgstr ""
+"Seus habitantes inventaram o basquete. As quadras de basquete utilizam um "
+"pouca produ????o e bens e fazem as pessoas ao redor (mais ou menos 10 "
+"pessoas em cada dire????o) mais felizes."
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the "
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
 "technology for evacuation. You must launch five more unmanned rockets to "
 "restore confidence."
-msgstr "Seu foguete explodiu logo ap??s o lan??amento. As pessoas n??o confiam mais "
-"nesta tecnologia para evacua????o. Voc?? dever?? lan??ar mais 5 foguetes n??o "
-"tripulados para que eles recuperem a confian??a."
+msgstr ""
+"Seu foguete explodiu logo ap??s o lan??amento. As pessoas n??o confiam mais "
+"nesta tecnologia para evacua????o. Voc?? dever?? lan??ar mais 5 foguetes "
+"n??o tripulados para que eles recuperem a confian??a."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"

Modified: trunk/data/locale/gui/ru.po
===================================================================
--- trunk/data/locale/gui/ru.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/ru.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -23,12 +23,21 @@
 msgstr "?????????????? ??????????"
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and APPEARS to be under control. "
-msgstr "?????????? ?????????????????? ????????????. ???????? ?????? ???????????? ????????????, ???? ?????????? ?????????? ???? ?????? ????????????????."
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
+"APPEARS to be under control. "
+msgstr ""
+"?????????? ?????????????????? ????????????. ???????? ?????? ???????????? "
+"????????????, ???? ?????????? ?????????? ???? ?????? ????????????????."
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may spread to other areas. "
-msgstr "?????????? ?????????????????? ????????????. ?????????? ?????????? ???? ?????? ????????????????! ?? ?????????? ???????????????????? ???????????? ??????????????????!!!"
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+"spread to other areas. "
+msgstr ""
+"?????????? ?????????????????? ????????????. ?????????? ?????????? ???? "
+"?????? ????????????????! ?? ?????????? ???????????????????? ???????????? "
+"??????????????????!!!"
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -49,7 +58,9 @@
 
 #: data/gui/bulldoze_monument_yn.xml
 msgid "Bulldozing a monument costs a lot of money."
-msgstr "?????????????????????? ?????????????????? ?????????? ?????????????? ??????????."
+msgstr ""
+"?????????????????????? ?????????????????? ?????????? ?????????????? "
+"??????????."
 
 #: data/gui/bulldoze_river_yn.xml
 msgid "Bulldozing a section of river costs a lot of money."
@@ -57,7 +68,9 @@
 
 #: data/gui/bulldoze_shanty_yn.xml
 msgid "Bulldozing a shanty town costs a lot of money and may cause a fire."
-msgstr "?????????????????????? ???????????? ?????????? ?????????????? ?????????? ?? ?????????????? ??????????."
+msgstr ""
+"?????????????????????? ???????????? ?????????? ?????????????? ?????????? ?? "
+"?????????????? ??????????."
 
 #: data/gui/tradedialog.xml data/gui/portdialog.xml
 msgid "Buy"
@@ -97,7 +110,8 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "Do coal survey?"
-msgstr "?????????????? ???????????? ???????????????? ???????????????????????????"
+msgstr ""
+"?????????????? ???????????? ???????????????? ???????????????????????????"
 
 #: data/gui/launch-good.xml
 msgid "Doing well."
@@ -189,7 +203,9 @@
 
 #: data/gui/sustain.xml
 msgid "LinCity has determined that you have a sustainable economy."
-msgstr "LinCity ?????????????? ?????????????? ?? ??????, ?????? ?? ?????? ?????????????????????????????????? ??????????????????."
+msgstr ""
+"LinCity ?????????????? ?????????????? ?? ??????, ?????? ?? ?????? "
+"?????????????????????????????????? ??????????????????."
 
 #: data/gui/mainmenu.xml data/gui/loadgame.xml
 msgid "Load"
@@ -209,7 +225,8 @@
 
 #: data/gui/mod_wind_up.xml
 msgid "Modern Windmills available"
-msgstr "?????????????????????? ???????????????? ???????????????? ????????????????"
+msgstr ""
+"?????????????????????? ???????????????? ???????????????? ????????????????"
 
 #: data/gui/pbar.xml
 msgid "Money"
@@ -350,7 +367,8 @@
 
 #: data/gui/speedpanel.xml
 msgid "Run the simulation with very fast speed"
-msgstr "?????????????????? ???????? ?? ?????????? ?????????????? ??????????????????"
+msgstr ""
+"?????????????????? ???????? ?? ?????????? ?????????????? ??????????????????"
 
 #: data/gui/mainmenu.xml
 msgid "Save"
@@ -365,8 +383,12 @@
 msgstr "?????????? ????????????????"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "???????????????? ???????? ???????????? ?????? ?????????????? ???????????????????? ???? ?????????? ?????????? ?? ???????????????? ??????????????."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"???????????????? ???????? ???????????? ?????? ?????????????? "
+"???????????????????? ???? ?????????? ?????????? ?? ???????????????? "
+"??????????????."
 
 #: data/gui/firestationup.xml data/gui/hvindustryup.xml
 #: data/gui/windmillup.xml data/gui/ltindustryup.xml data/gui/universityup.xml
@@ -376,7 +398,9 @@
 #: data/gui/mod_wind_up.xml data/gui/rocketup.xml data/gui/schoolup.xml
 #: data/gui/millup.xml data/gui/healthup.xml
 msgid "See the help screen for more information."
-msgstr "???????????????? ???????? ???????????? ?????? ?????????????? ????????????????????."
+msgstr ""
+"???????????????? ???????? ???????????? ?????? ?????????????? "
+"????????????????????."
 
 #: data/gui/tradedialog.xml data/gui/portdialog.xml
 msgid "Sell"
@@ -388,7 +412,9 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "???????????????? ?????????????? ?? ??????????????. ?????????????????? ??????????, ?????? ???? ?????????????? ???????????? ????????????."
+msgstr ""
+"???????????????? ?????????????? ?? ??????????????. ?????????????????? "
+"??????????, ?????? ???? ?????????????? ???????????? ????????????."
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show coal depots"
@@ -422,9 +448,9 @@
 msgid "Show power supply"
 msgstr "???????????????? ?????????????? ????????"
 
-#: data/gui/minimap.xml
-msgid "Show ressources."
-msgstr "???????????????? ??????????????."
+#: data/gui/minimap.xml 
+msgid "Show resources."
+msgstr ""
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show sport cover"
@@ -488,7 +514,9 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
-msgstr "?????? ???????????????? ?????????????? 1 ?????????????? ????????????, ?? ???????????????????? ?????????????? ???? ????????????????. "
+msgstr ""
+"?????? ???????????????? ?????????????? 1 ?????????????? ????????????, ?? "
+"???????????????????? ?????????????? ???? ????????????????. "
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -498,6 +526,10 @@
 msgid "Trade Settings"
 msgstr ""
 
+#: data/gui/creditslist.xml 
+msgid "Translation"
+msgstr ""
+
 #: data/gui/universityup.xml
 msgid "University available"
 msgstr "???????????????????????? ????????????????. "
@@ -514,7 +546,8 @@
 
 #: data/gui/bulldoze_monument_yn.xml
 msgid "Warning: Bulldozing monuments is expensive"
-msgstr "????????????????: ?????????????? ?????????????????????? ??????????????????. "
+msgstr ""
+"????????????????: ?????????????? ?????????????????????? ??????????????????. "
 
 #: data/gui/bulldoze_shanty_yn.xml
 msgid "Warning: Bulldozing shanties is dangerous."
@@ -526,7 +559,8 @@
 
 #: data/gui/launch-gone.xml
 msgid "Well done you have evacuated all your people."
-msgstr "??????????????????????, ???? ???????????????????????? ???????? ??????????."
+msgstr ""
+"??????????????????????, ???? ???????????????????????? ???????? ??????????."
 
 #: data/gui/windmillup.xml
 msgid "Windmills available"
@@ -543,115 +577,218 @@
 msgstr "??????????, ???????????????? ????????????????"
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will continue costing you money to keep the rocket ready. Launch it later by clicking on the rocket area."
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
+"continue costing you money to keep the rocket ready. Launch it later by "
+"clicking on the rocket area."
 msgstr ""
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help pages on these subjects to find out how to use them. "
-msgstr "???????????? ???? ?????????????? ???????????????? ?? ?????????????????? ??????????????. ?????? ??????????, ?????????? ?? ????????????. ???????????????????? ????????????, ?????? ???? ?????????? ??????????, ?????? ???????? ????????????????????????."
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
+"pages on these subjects to find out how to use them. "
+msgstr ""
+"???????????? ???? ?????????????? ???????????????? ?? ?????????????????? "
+"??????????????. ?????? ??????????, ?????????? ?? ????????????. "
+"???????????????????? ????????????, ?????? ???? ?????????? ??????????, ?????? "
+"???????? ????????????????????????."
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build parks on credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build parks on credit."
 msgstr ""
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build recycling centres on credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build recycling centres on credit."
 msgstr ""
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build rocket launch pads on credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build rocket launch pads on credit."
 msgstr ""
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build solar power stations on credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build solar power stations on credit."
 msgstr ""
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build universities on credit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build universities on credit."
 msgstr ""
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your economy to reflect the reduced population. "
-msgstr "???? ???????????? 1000 ??????????????. ???????????? ?????????? ?????????????? ???? ???????????????????? ?? ???????????? ??????????????????."
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
+"economy to reflect the reduced population. "
+msgstr ""
+"???? ???????????? 1000 ??????????????. ???????????? ?????????? "
+"?????????????? ???? ???????????????????? ?? ???????????? ??????????????????."
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. Blacksmiths use jobs and steel to make goods."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ??????????????. ?????????????? ???????? ???????????? ?? ?????????????????? ?????????????????????? ????????????."
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
+"Blacksmiths use jobs and steel to make goods."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ??????????????. ?????????????? ???????? ???????????? ?? "
+"?????????????????? ?????????????????????? ????????????."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power stations."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????????? ????????????????????????????."
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
+"stations."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????????? ????????????????????????????."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. Fire stations prevent most fires from starting. If you haven't had any fires yet, you might not think you need them."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????????? ??????????????. ?????????????? ???????????? ???? ??????, ?????? ???? ???? ???????????????????? ????????????. "
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
+"Fire stations prevent most fires from starting. If you haven't had any fires "
+"yet, you might not think you need them."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????????? ??????????????. ?????????????? ???????????? "
+"???? ??????, ?????? ???? ???? ???????????????????? ????????????. "
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. Heath centres reduce the number of people killed by pollution and increase overall productivity."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ????????????????."
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
+"Heath centres reduce the number of people killed by pollution and increase "
+"overall productivity."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ????????????????."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry (steel works). Heavy industry produces steel. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ?????????????? ??????????????????(?????????????????????? ??????????)."
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
+"(steel works). Heavy industry produces steel. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ?????????????? ??????????????????(?????????????????????? "
+"??????????)."
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. Light industry produces goods. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????? ??????????????????. ?????? ?????????????? ????????????."
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
+"Light industry produces goods. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????? ??????????????????. ?????? ?????????????? "
+"????????????."
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ????????????????. ?????? ???????? ???????????? ?? ?????????????????? ?????????????????????? ???????????? ???? ??????. ?????? ?????????? ?????????????????? ?????????????? ?????????? ??????!"
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
+"jobs and food to make goods. Watch out, they can use a lot of food! "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ????????????????. ?????? ???????? ???????????? ?? "
+"?????????????????? ?????????????????????? ???????????? ???? ??????. ?????? "
+"?????????? ?????????????????? ?????????????? ?????????? ??????!"
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more efficient, windmills. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ??????????????????????, ?????????????????????? ???????????????? ????????????????. "
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
+"efficient, windmills. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ??????????????????????, ?????????????????????? "
+"???????????????? ????????????????. "
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are used to absorb pollution. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ??????????. ?????? ?????????????????? ???? ??????????????????."
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
+"used to absorb pollution. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ??????????. ?????? ?????????????????? ???? ??????????????????."
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
+"Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
 msgstr ""
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????????? ????????????."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????????? ????????????."
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????????? ????????."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????????? ????????."
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the help screen for more information."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ????????????."
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
+"help screen for more information."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ????????????."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch pads. Rockets enable you to evacuate your population and is a way to 'win' the game."
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????????? ????????????????. ???? ?????????????? ?????????? ???????????? ???????? ?????????? ?? ???????????? ??????, ?????? ?????????? ???????????????? ????????."
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
+"pads. Rockets enable you to evacuate your population and is a way to 'win' "
+"the game."
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????????? ????????????????. ???? ?????????????? "
+"?????????? ???????????? ???????? ?????????? ?? ???????????? ??????, ?????? "
+"?????????? ???????????????? ????????."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools use jobs and goods to increase tech level. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ??????????. ?????????? ???????? ???????????? ?? ?????????? ???????????????????????? ?? ?????????????? ??????????????."
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
+"use jobs and goods to increase tech level. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ??????????. ?????????? ???????? ???????????? ?? ?????????? "
+"???????????????????????? ?? ?????????????? ??????????????."
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power stations. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ?????????????????? ????????????????????????????."
+msgid ""
+"You have reached the tech level which enables you to build solar power "
+"stations. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ?????????????????? ????????????????????????????."
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. Universities produces PhDs, which produce more technology. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ????????????????????????. "
+msgid ""
+"You have reached the tech level which enables you to build universities. "
+"Universities produces PhDs, which produce more technology. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ????????????????????????. "
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "?????????????? ???????????????? ???????????????? ?????????????????? ?????????????? ???????????????? ????????????????. "
+msgstr ""
+"?????????????? ???????????????? ???????????????? ?????????????????? "
+"?????????????? ???????????????? ????????????????. "
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
 msgstr ""
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. Recycling centres recycle used goods back into ore. "
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
+"Recycling centres recycle used goods back into ore. "
 msgstr ""
 
 #: data/gui/launch-gone.xml data/gui/sustain.xml
@@ -660,15 +797,27 @@
 
 #: data/gui/allgone.xml
 msgid "You should start a new career elsewhere."
-msgstr "???? ???????????? ?????????????????????? ?????????????????????????? ??????-???????????? ??????."
+msgstr ""
+"???? ???????????? ?????????????????????? ?????????????????????????? "
+"??????-???????????? ??????."
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and goods and make people in the surrounding areas (about 10 units in each direction) happier."
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
+"goods and make people in the surrounding areas (about 10 units in each "
+"direction) happier."
 msgstr ""
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the technology for evacuation. You must launch five more unmanned rockets to restore confidence."
-msgstr "???????? ???????????? ???????????????????? ?????????? ????????????. ???????? ?????????????????? ???????????? ?? ??????. ???? ???????????? ?????????????????? ?????? 5 ??????????, ?????? ???? ????????????????, ?????? ?????? ??????????????????."
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
+"technology for evacuation. You must launch five more unmanned rockets to "
+"restore confidence."
+msgstr ""
+"???????? ???????????? ???????????????????? ?????????? ????????????. ???????? "
+"?????????????????? ???????????? ?? ??????. ???? ???????????? "
+"?????????????????? ?????? 5 ??????????, ?????? ???? ????????????????, ?????? "
+"?????? ??????????????????."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
@@ -688,9 +837,10 @@
 
 #: data/gui/minimap.xml
 msgid "[v] Cycle through MiniMap overlay modes. "
-msgstr "[v] ???????????????? ???? ???????????????? ?????????? ????, ?????? ???????????????????? ???? ????????-??????????."
+msgstr ""
+"[v] ???????????????? ???? ???????????????? ?????????? ????, ?????? "
+"???????????????????? ???? ????????-??????????."
 
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "?????????????????? ?? ?????????????????? ????????"
-

Modified: trunk/data/locale/gui/sv.po
===================================================================
--- trunk/data/locale/gui/sv.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/gui/sv.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -26,12 +26,20 @@
 msgstr "En brand har brutit ut"
 
 #: data/gui/shfire-uc.xml
-msgid "A fire has broken out at a shanty town. It is in a fire cover area and APPEARS to be under control. "
-msgstr "En brand har brutit ut i en k??kstad. Den ??r inom brandskyddsomr??det och VERKAR vara under kontroll."
+msgid ""
+"A fire has broken out at a shanty town. It is in a fire cover area and "
+"APPEARS to be under control. "
+msgstr ""
+"En brand har brutit ut i en k??kstad. Den ??r inom brandskyddsomr??det och "
+"VERKAR vara under kontroll."
 
 #: data/gui/shfire-oc.xml
-msgid "A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may spread to other areas. "
-msgstr "En brand har brutit ut i en k??kstad. Branden ??r INTE UNDER KONTROLL och kan sprida sig till andra omr??den."
+msgid ""
+"A fire has broken out at a shanty town. The fire is OUT OF CONTROL and may "
+"spread to other areas. "
+msgstr ""
+"En brand har brutit ut i en k??kstad. Branden ??r INTE UNDER KONTROLL och "
+"kan sprida sig till andra omr??den."
 
 #: data/gui/newgame.xml data/gui/loadgame.xml data/gui/credits.xml
 #: data/gui/savegame.xml
@@ -367,8 +375,10 @@
 msgstr "Skolor tillg??ngliga"
 
 #: data/gui/coalmineup.xml
-msgid "See the help screen for more information on coal mines and coal surveys."
-msgstr "Se hj??lpsk??rmen f??r mer information om kolgruvor och s??kning efter kol."
+msgid ""
+"See the help screen for more information on coal mines and coal surveys."
+msgstr ""
+"Se hj??lpsk??rmen f??r mer information om kolgruvor och s??kning efter kol."
 
 #: data/gui/hvindustryup.xml data/gui/windmillup.xml data/gui/ltindustryup.xml
 #: data/gui/cricketup.xml data/gui/riverup.xml data/gui/coalpowerup.xml
@@ -390,7 +400,8 @@
 
 #: data/gui/minimap.xml
 msgid "Show Income and Expenses. Click this tab again to cycle through views."
-msgstr "Visa inkomst och utgifter. Klicka h??r igen f??r att v??xla mellan vyer."
+msgstr ""
+"Visa inkomst och utgifter. Klicka h??r igen f??r att v??xla mellan vyer."
 
 #: data/gui/minimapswitchbuttons.xml
 msgid "Show coal depots"
@@ -490,7 +501,8 @@
 
 #: data/gui/coal_survey_yn.xml
 msgid "This will cost you 1 million once. After that it is free to call again."
-msgstr "Detta kommer att kosta dig 1 miljon. Senare ??r det gratis att ringa igen."
+msgstr ""
+"Detta kommer att kosta dig 1 miljon. Senare ??r det gratis att ringa igen."
 
 #: data/gui/launch-gone.xml
 msgid "Total Evacuation Complete."
@@ -549,116 +561,226 @@
 msgstr "B??st att du g??r och ser efter"
 
 #: data/gui/launch_rocket_yn.xml
-msgid "You can launch the rocket now or wait until later. If you wait it will continue costing you money to keep the rocket ready. Launch it later by clicking on the rocket area."
-msgstr "Du kan avfyra raketen nu eller v??nta tills senare. Om du v??ntar kommer den forts??tta att kosta dig pengar f??r att h??lla raketen klar. Avfyra den senare genom att klicka p?? raketomr??det."
+msgid ""
+"You can launch the rocket now or wait until later. If you wait it will "
+"continue costing you money to keep the rocket ready. Launch it later by "
+"clicking on the rocket area."
+msgstr ""
+"Du kan avfyra raketen nu eller v??nta tills senare. Om du v??ntar kommer den "
+"forts??tta att kosta dig pengar f??r att h??lla raketen klar. Avfyra den "
+"senare genom att klicka p?? raketomr??det."
 
 #: data/gui/import-exportup.xml
-msgid "You can now import and export coal, goods, ore and steel. Read the help pages on these subjects to find out how to use them. "
-msgstr "Du kan nu importera och exportera kol, varor, malm och st??l. L??s hj??lpsidorna f??r dessa ??mnen f??r att f?? hj??lp hur man anv??nder dom. "
+msgid ""
+"You can now import and export coal, goods, ore and steel. Read the help "
+"pages on these subjects to find out how to use them. "
+msgstr ""
+"Du kan nu importera och exportera kol, varor, malm och st??l. L??s "
+"hj??lpsidorna f??r dessa ??mnen f??r att f?? hj??lp hur man anv??nder dom. "
 
 #: data/gui/no-credit-parkland.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build parks on credit."
-msgstr "Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att bygga parker p?? kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build parks on credit."
+msgstr ""
+"Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att "
+"bygga parker p?? kredit."
 
 #: data/gui/no-credit-recycle.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build recycling centres on credit."
-msgstr "Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att bygga ??tervinningsstationer p?? kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build recycling centres on credit."
+msgstr ""
+"Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att "
+"bygga ??tervinningsstationer p?? kredit."
 
 #: data/gui/no-credit-rocket.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build rocket launch pads on credit."
-msgstr "Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att bygga raketavfyrningsramper p?? kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build rocket launch pads on credit."
+msgstr ""
+"Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att "
+"bygga raketavfyrningsramper p?? kredit."
 
 #: data/gui/no-credit-solar-power.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build solar power stations on credit."
-msgstr "Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att bygga solkraftverk p?? kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build solar power stations on credit."
+msgstr ""
+"Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att "
+"bygga solkraftverk p?? kredit."
 
 #: data/gui/no-credit-university.xml
-msgid "You have a budget deficit. The legislative council will not allow you to build universities on credit."
-msgstr "Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att bygga universitet p?? kredit."
+msgid ""
+"You have a budget deficit. The legislative council will not allow you to "
+"build universities on credit."
+msgstr ""
+"Du har ett budgetunderskott. Det lagstiftande r??det till??ter inte dig att "
+"bygga universitet p?? kredit."
 
 #: data/gui/launch-evac.xml
-msgid "You have evacuated 1000 people. You might want to reduce the size of your economy to reflect the reduced population. "
-msgstr "Du har evakuerat 1000 personer. Du kanske vill minska storleken av din ekonomi f??r att passa den minskade befolkningen. "
+msgid ""
+"You have evacuated 1000 people. You might want to reduce the size of your "
+"economy to reflect the reduced population. "
+msgstr ""
+"Du har evakuerat 1000 personer. Du kanske vill minska storleken av din "
+"ekonomi f??r att passa den minskade befolkningen. "
 
 #: data/gui/blacksmithup.xml
-msgid "You have reached the tech level which enables you to build blacksmiths. Blacksmiths use jobs and steel to make goods."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga smedjor. Smedjor anv??nder jobb och st??l f??r att producera varor."
+msgid ""
+"You have reached the tech level which enables you to build blacksmiths. "
+"Blacksmiths use jobs and steel to make goods."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga smedjor. Smedjor "
+"anv??nder jobb och st??l f??r att producera varor."
 
 #: data/gui/coalpowerup.xml
-msgid "You have reached the tech level which enables you to build coal fired power stations."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga kolkraftverk."
+msgid ""
+"You have reached the tech level which enables you to build coal fired power "
+"stations."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga kolkraftverk."
 
 #: data/gui/firestationup.xml
-msgid "You have reached the tech level which enables you to build fire stations. Fire stations prevent most fires from starting. If you haven't had any fires yet, you might not think you need them."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga brandstationer. Brandstationer f??rebygger de flesta br??nder fr??n b??rjan. Om du inte haft n??gra br??nder ??nnu kanske du tror att du inte beh??ver dom."
+msgid ""
+"You have reached the tech level which enables you to build fire stations. "
+"Fire stations prevent most fires from starting. If you haven't had any fires "
+"yet, you might not think you need them."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga brandstationer. "
+"Brandstationer f??rebygger de flesta br??nder fr??n b??rjan. Om du inte haft "
+"n??gra br??nder ??nnu kanske du tror att du inte beh??ver dom."
 
 #: data/gui/healthup.xml
-msgid "You have reached the tech level which enables you to build health centres. Heath centres reduce the number of people killed by pollution and increase overall productivity."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga sjukhus. Sjukhus reducerar antalet folk som d??r av milj??f??rst??ring och ??kar allm??nt produktiviteten."
+msgid ""
+"You have reached the tech level which enables you to build health centres. "
+"Heath centres reduce the number of people killed by pollution and increase "
+"overall productivity."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga sjukhus. Sjukhus "
+"reducerar antalet folk som d??r av milj??f??rst??ring och ??kar allm??nt "
+"produktiviteten."
 
 #: data/gui/hvindustryup.xml
-msgid "You have reached the tech level which enables you to build heavy industry (steel works). Heavy industry produces steel. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga tung industri (st??lverk). Tung industri producerar st??l. "
+msgid ""
+"You have reached the tech level which enables you to build heavy industry "
+"(steel works). Heavy industry produces steel. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga tung industri "
+"(st??lverk). Tung industri producerar st??l. "
 
 #: data/gui/ltindustryup.xml
-msgid "You have reached the tech level which enables you to build light industry. Light industry produces goods. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga industri. Industri producerar varor. "
+msgid ""
+"You have reached the tech level which enables you to build light industry. "
+"Light industry produces goods. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga industri. "
+"Industri producerar varor. "
 
 #: data/gui/millup.xml
-msgid "You have reached the tech level which enables you to build mills. Mills use jobs and food to make goods. Watch out, they can use a lot of food! "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga verkst??der. Verkst??der anv??nder jobb och mat f??r att producera varor. T??nk p?? att de kan anv??nda mycket mat! "
+msgid ""
+"You have reached the tech level which enables you to build mills. Mills use "
+"jobs and food to make goods. Watch out, they can use a lot of food! "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga verkst??der. "
+"Verkst??der anv??nder jobb och mat f??r att producera varor. T??nk p?? att "
+"de kan anv??nda mycket mat! "
 
 #: data/gui/mod_wind_up.xml
-msgid "You have reached the tech level which enables you to build modern, more efficient, windmills. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga moderna och mer effektiva v??derkvarnar. "
+msgid ""
+"You have reached the tech level which enables you to build modern, more "
+"efficient, windmills. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga moderna och mer "
+"effektiva v??derkvarnar. "
 
 #: data/gui/parkup.xml
-msgid "You have reached the tech level which enables you to build parks. Parks are used to absorb pollution. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga parker. Parker anv??nds f??r att bek??mpa milj??f??rst??ringen. "
+msgid ""
+"You have reached the tech level which enables you to build parks. Parks are "
+"used to absorb pollution. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga parker. Parker "
+"anv??nds f??r att bek??mpa milj??f??rst??ringen. "
 
 #: data/gui/potteryup.xml
-msgid "You have reached the tech level which enables you to build potteries. Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga keramikfabriker. Keramikfabriker anv??nder jobb och malm f??r att producera varor. (Du beh??ver malmgruvor f??r att f?? fram malm) "
+msgid ""
+"You have reached the tech level which enables you to build potteries. "
+"Potteries use jobs and ore to make goods. (You need ore mines to get ore) "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga keramikfabriker. "
+"Keramikfabriker anv??nder jobb och malm f??r att producera varor. (Du "
+"beh??ver malmgruvor f??r att f?? fram malm) "
 
 #: data/gui/railwayup.xml
 msgid "You have reached the tech level which enables you to build railways. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga j??rnv??g. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga j??rnv??g. "
 
 #: data/gui/riverup.xml
 msgid "You have reached the tech level which enables you to build rivers. "
 msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga kanaler. "
 
 #: data/gui/roadup.xml
-msgid "You have reached the tech level which enables you to build roads. See the help screen for more information."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga v??gar. Se hj??lpsk??rmen f??r mer information."
+msgid ""
+"You have reached the tech level which enables you to build roads. See the "
+"help screen for more information."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga v??gar. Se "
+"hj??lpsk??rmen f??r mer information."
 
 #: data/gui/rocketup.xml
-msgid "You have reached the tech level which enables you to build rocket launch pads. Rockets enable you to evacuate your population and is a way to 'win' the game."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga raketavfyrningsramper. Raketer ger dig m??jligheten att evakuera din befolkning och ??r ett s??tt att \"vinna\" spelet."
+msgid ""
+"You have reached the tech level which enables you to build rocket launch "
+"pads. Rockets enable you to evacuate your population and is a way to 'win' "
+"the game."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga "
+"raketavfyrningsramper. Raketer ger dig m??jligheten att evakuera din "
+"befolkning och ??r ett s??tt att \"vinna\" spelet."
 
 #: data/gui/schoolup.xml
-msgid "You have reached the tech level which enables you to build schools. Schools use jobs and goods to increase tech level. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga skolor. Skolor anv??nder jobb och varor f??r att ??ka teknologiniv??n. "
+msgid ""
+"You have reached the tech level which enables you to build schools. Schools "
+"use jobs and goods to increase tech level. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga skolor. Skolor "
+"anv??nder jobb och varor f??r att ??ka teknologiniv??n. "
 
 #: data/gui/solarpowerup.xml
-msgid "You have reached the tech level which enables you to build solar power stations. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga solkraftverk. "
+msgid ""
+"You have reached the tech level which enables you to build solar power "
+"stations. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga solkraftverk. "
 
 #: data/gui/universityup.xml
-msgid "You have reached the tech level which enables you to build universities. Universities produces PhDs, which produce more technology. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga universitet. Universitet producerar professorer som producerar mer teknologi. "
+msgid ""
+"You have reached the tech level which enables you to build universities. "
+"Universities produces PhDs, which produce more technology. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga universitet. "
+"Universitet producerar professorer som producerar mer teknologi. "
 
 #: data/gui/windmillup.xml
 msgid "You have reached the tech level which enables you to build windmills. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig bygga v??derkvarnar. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig bygga v??derkvarnar. "
 
 #: data/gui/coalmineup.xml
-msgid "You have reached the tech level which enables you to dig deep coal mines."
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig gr??va djupare kolgruvor."
+msgid ""
+"You have reached the tech level which enables you to dig deep coal mines."
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig gr??va djupare "
+"kolgruvor."
 
 #: data/gui/recycleup.xml
-msgid "You have reached the tech level which enables you to recycling centres. Recycling centres recycle used goods back into ore. "
-msgstr "Du har n??tt fram till teknologiniv??n som l??ter dig att ta fram ??tervinningsstationer. ??tervinningsstationer ??tervinner anv??nda varor och ger dig malm. "
+msgid ""
+"You have reached the tech level which enables you to recycling centres. "
+"Recycling centres recycle used goods back into ore. "
+msgstr ""
+"Du har n??tt fram till teknologiniv??n som l??ter dig att ta fram "
+"??tervinningsstationer. ??tervinningsstationer ??tervinner anv??nda varor "
+"och ger dig malm. "
 
 #: data/gui/sustain.xml data/gui/launch-gone.xml
 msgid "You have won the game."
@@ -669,12 +791,24 @@
 msgstr "Du b??r starta en karri??r n??gon annanstans."
 
 #: data/gui/cricketup.xml
-msgid "Your people have invented basketball. Basketball Courts use a few jobs and goods and make people in the surrounding areas (about 10 units in each direction) happier."
-msgstr "Ditt folk har uppfunnit sporten basketboll. Basketbollplaner anv??nder ett f??tal jobb och varor men g??r folk i de angr??nsande omr??dena (omkring 10 punkter i varje riktning) gladare."
+msgid ""
+"Your people have invented basketball. Basketball Courts use a few jobs and "
+"goods and make people in the surrounding areas (about 10 units in each "
+"direction) happier."
+msgstr ""
+"Ditt folk har uppfunnit sporten basketboll. Basketbollplaner anv??nder ett "
+"f??tal jobb och varor men g??r folk i de angr??nsande omr??dena (omkring 10 "
+"punkter i varje riktning) gladare."
 
 #: data/gui/launch-fail.xml
-msgid "Your rocket crashed shortly after launch. People no longer trust the technology for evacuation. You must launch five more unmanned rockets to restore confidence."
-msgstr "Din raket kraschade kort efter avfyrning. Folk har inte l??ngre n??gon tilltro f??r teknologin f??r evakuering. Du m??ste avfyra fem obemannade raketer till f??r att ??terst??lla f??rtroendet."
+msgid ""
+"Your rocket crashed shortly after launch. People no longer trust the "
+"technology for evacuation. You must launch five more unmanned rockets to "
+"restore confidence."
+msgstr ""
+"Din raket kraschade kort efter avfyrning. Folk har inte l??ngre n??gon "
+"tilltro f??r teknologin f??r evakuering. Du m??ste avfyra fem obemannade "
+"raketer till f??r att ??terst??lla f??rtroendet."
 
 #: data/gui/minimap.xml
 msgid "[+] Zoom in view so that less buildings but more details are visible"
@@ -699,4 +833,3 @@
 #: data/gui/savegame.xml
 msgid "save to selected slot"
 msgstr "spara till vald post"
-

Modified: trunk/data/locale/nl.po
===================================================================
--- trunk/data/locale/nl.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/nl.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -26,7 +26,8 @@
 
 #: src/lincity/fileutil.cpp:561
 msgid "Error verifying package. Can't find colour.pal."
-msgstr "Fout bij het controleren van het pakket. Kan het kleurenpallet niet vinden"
+msgstr ""
+"Fout bij het controleren van het pakket. Kan het kleurenpallet niet vinden"
 
 #: src/lincity/fileutil.cpp:580 src/lincity/fileutil.cpp:589
 #, c-format
@@ -38,27 +39,48 @@
 msgid "Out of memory: malloc failure\n"
 msgstr "Te weinig geheugen: malloc faalt\n"
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "U kan hier geen vuilstort bouwen"
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr ""
 
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Deze plaats was ooit een vuilstort"
+#: src/lincity/engine.cpp:121
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
 
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "OK"
+#: src/lincity/engine.cpp:147
+msgid "Port must be connected to river all along right side."
+msgstr ""
 
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "U kan hier geen mijn bouwen."
+#: src/lincity/engine.cpp:156 src/lincity/engine.cpp:165
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr ""
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "Er is geen ijzererts meer over op deze plek"
+#: src/lincity/engine.cpp:195
+msgid "Too many markets. You cannot build one more"
+msgstr ""
 
+#: src/lincity/engine.cpp:218
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:243
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:247
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr ""
+
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "Het is bij een electriciteitskabel"
@@ -175,28 +197,6 @@
 msgid "UNKNOWN!"
 msgstr "ONBEKEND!"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Sla bestand <%s> op"
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Kan het bestand niet openen"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Scene opslaan"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Kan <%s> niet openen (gzipped)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Bezig scene laden"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Leeg"
@@ -365,6 +365,48 @@
 msgid "Residential HH"
 msgstr "Woonwijk HH"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Sla bestand <%s> op"
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Kan het bestand niet openen"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Scene opslaan"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Kan <%s> niet openen (gzipped)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Bezig scene laden"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Jan"
@@ -610,6 +652,18 @@
 msgid "Employed"
 msgstr "Met werk"
 
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "goed"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "slecht"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Werk"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Welzijn."
@@ -623,18 +677,6 @@
 msgid "Pollution"
 msgstr "Vervuiling"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "goed"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "slecht"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Werk"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Wijsheid vergaard"
@@ -757,6 +799,10 @@
 msgid "Activity"
 msgstr "Activiteit"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Lessen geleerd"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Brandweerkazerne"
@@ -773,14 +819,34 @@
 msgid "Prod"
 msgstr "Productie"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Lessen geleerd"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "Zon"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Lanceerbasis"
@@ -844,16 +910,6 @@
 msgid ".   Residences %4d         Markets %4d            Farms %4d"
 msgstr "    Woonwijken?%4d?????????Markten?%4d????????????Boerderijen?%4d"
 
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".       Landwegen %4d           Wegen %4d             Treinsporen %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".????Pottenbakkerijen?%4d?????Smidsen?%4d????????????Textielfabrieken?%4d"
-
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
@@ -864,10 +920,10 @@
 msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
 msgstr ".Brandweerkazernes?%4d???????????Parken?%4d????Sportsvelden?%4d"
 
-#: src/lincity-ng/Dialog.cpp:428
+#: src/lincity-ng/Dialog.cpp:449
 #, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".???Steenkoolmijnen?%4d???????Ijzerertsmijnen?%4d?????????houtskool-branderijen?%4d"
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr "Ziekenhuizen?%4d????????????Vuilstorten?%4d?????????Sloppenwijken?%4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
@@ -877,20 +933,43 @@
 #: src/lincity-ng/Dialog.cpp:439
 #, c-format
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
-msgstr ".??Transformatorhuisje?%4d?????Electriciteitsdraden?%4d????????????Havens?%4d"
+msgstr ""
+".??Transformatorhuisje?%4d?????Electriciteitsdraden?%4d????????????Havens?%4d"
 
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ".       Landwegen %4d           Wegen %4d             Treinsporen %4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ""
+".????Pottenbakkerijen?%4d?????Smidsen?%4d????????????Textielfabrieken?%4d"
+
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
 msgstr ""
-".???Lichte industri?n?%4d??????Zware Industri?n?%4d????????Recycleercentra?%"
-"4d"
+".???Lichte industri?n?%4d??????Zware "
+"Industri?n?%4d????????Recycleercentra?%4d"
 
-#: src/lincity-ng/Dialog.cpp:449
+#: src/lincity-ng/Dialog.cpp:428
 #, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr "Ziekenhuizen?%4d????????????Vuilstorten?%4d?????????Sloppenwijken?%4d"
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ""
+""
+".???Steenkoolmijnen?%4d???????Ijzerertsmijnen?%4d?????????houtskool-branderijen?%4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:258
+msgid "MM"
+msgstr "MM"
+
+#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
+#: src/lincity-ng/ScreenInterface.cpp:269
+msgid "$"
+msgstr "?"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Kaart: overzichtskaart"
@@ -939,11 +1018,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Afbraakkosten: "
 
-#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
-#: src/lincity-ng/ScreenInterface.cpp:269
-msgid "$"
-msgstr "?"
-
 #: src/lincity-ng/GameView.cpp:1522
 msgid "n/a"
 msgstr "n/b"
@@ -1152,42 +1226,6 @@
 msgid "Cases"
 msgstr "Gevallen"
 
-#: src/lincity-ng/EconomyGraph.cpp:121
-msgid "Mining"
-msgstr "Mijnbouw"
-
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Trade"
-msgstr "Handel"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Money"
-msgstr "Geld"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Popul."
-msgstr "Bevolking"
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Techn."
-msgstr "Technisch"
-
-#: src/lincity-ng/EconomyGraph.cpp:134
-msgid "Economy Overview:"
-msgstr "Economisch overzicht:"
-
-#: src/lincity-ng/EconomyGraph.cpp:137
-msgid "Sustainability:"
-msgstr "Duurzaamheid:"
-
-#: src/lincity-ng/EconomyGraph.cpp:140
-msgid "Frames per Second:"
-msgstr "Frames per seconde:"
-
-#: src/lincity-ng/EconomyGraph.cpp:216
-msgid "You lose."
-msgstr "U heeft verloren."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Informatie Tool"
@@ -1229,7 +1267,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s?(Technisch niveau?%.1f?nodig.)"
 
-#: src/lincity-ng/ScreenInterface.cpp:258
-msgid "MM"
-msgstr "MM"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
+msgstr ""
 
+#: src/lincity-ng/EconomyGraph.cpp:121
+msgid "Mining"
+msgstr "Mijnbouw"
+
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Trade"
+msgstr "Handel"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Money"
+msgstr "Geld"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Popul."
+msgstr "Bevolking"
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Techn."
+msgstr "Technisch"
+
+#: src/lincity-ng/EconomyGraph.cpp:134
+msgid "Economy Overview:"
+msgstr "Economisch overzicht:"
+
+#: src/lincity-ng/EconomyGraph.cpp:137
+msgid "Sustainability:"
+msgstr "Duurzaamheid:"
+
+#: src/lincity-ng/EconomyGraph.cpp:140
+msgid "Frames per Second:"
+msgstr "Frames per seconde:"
+
+#: src/lincity-ng/EconomyGraph.cpp:216
+msgid "You lose."
+msgstr "U heeft verloren."

Modified: trunk/data/locale/pl.po
===================================================================
--- trunk/data/locale/pl.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/pl.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -35,27 +35,48 @@
 msgid "Out of memory: malloc failure\n"
 msgstr "Brak wolnej pami??ci: b????d malloc\n"
 
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "Nie mo??esz budowa?? tutaj wysypiska ??mieci"
+#: src/lincity/power.cpp:93
+msgid "You have too many power grids. Join some of them"
+msgstr ""
 
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "Ten teren by?? kiedy?? wysypiskiem ??mieci"
+#: src/lincity/engine.cpp:121
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
 
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "OK"
+#: src/lincity/engine.cpp:147
+msgid "Port must be connected to river all along right side."
+msgstr ""
 
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "Nie mo??esz tutaj wybudowa?? kopalni."
+#: src/lincity/engine.cpp:156 src/lincity/engine.cpp:165
+msgid "Too many substations + windmills. You cannot build one more"
+msgstr ""
 
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "Nie ma ju?? rudy na tym terenie"
+#: src/lincity/engine.cpp:195
+msgid "Too many markets. You cannot build one more"
+msgstr ""
 
+#: src/lincity/engine.cpp:218
+msgid "You can't build a tip here: this area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:243
+msgid "You can't build a mine here: This area was once a landfill"
+msgstr ""
+
+#: src/lincity/engine.cpp:247
+msgid "You can't build a mine here: there is no ore left at this site"
+msgstr ""
+
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "To jest linia wysokiego napi??cia."
@@ -172,28 +193,6 @@
 msgid "UNKNOWN!"
 msgstr "NIEZNANY!"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Zapisano plik <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Nie mo??na otworzy?? zapisanego pliku!"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Zapisywanie sceny"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Nie mo??na otworzy?? <%s> (gzipowany)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Wczytywanie sceny"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Pusty"
@@ -362,6 +361,48 @@
 msgid "Residential HH"
 msgstr ""
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Zapisano plik <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Nie mo??na otworzy?? zapisanego pliku!"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Zapisywanie sceny"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Nie mo??na otworzy?? <%s> (gzipowany)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Wczytywanie sceny"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Sty "
@@ -607,6 +648,18 @@
 msgid "Employed"
 msgstr "Zatrudnienie"
 
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "dobry"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "biedny"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr ""
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Zasi??g szpitali"
@@ -620,18 +673,6 @@
 msgid "Pollution"
 msgstr "Zanieczyszczenie"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "dobry"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "biedny"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr ""
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr ""
@@ -754,6 +795,10 @@
 msgid "Activity"
 msgstr "Aktywno????"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Lekcji nauczonych"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Remiza stra??acka"
@@ -770,14 +815,34 @@
 msgid "Prod"
 msgstr "Prod"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Lekcji nauczonych"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "S??oneczny"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Strefa wystrza??u"
@@ -841,16 +906,6 @@
 msgid ".   Residences %4d         Markets %4d            Farms %4d"
 msgstr ". Strefy mieszkalne %4d                 Sklepy %4d          Farmy %4d"
 
-#: src/lincity-ng/Dialog.cpp:408
-#, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ".             Drogi %4d                    Ulice %4d    Tory Kol. %4d"
-
-#: src/lincity-ng/Dialog.cpp:413
-#, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".        Garncarnie %4d                  Ku??nie %4d       Fabryki %4d"
-
 #: src/lincity-ng/Dialog.cpp:418
 #, c-format
 msgid ".    Monuments %4d         Schools %4d     Universities %4d"
@@ -859,33 +914,55 @@
 #: src/lincity-ng/Dialog.cpp:423
 #, c-format
 msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
-msgstr ". Remizy stra??ackie %4d              Parki %4d     O??rodki sport. %4d"
+msgstr ""
+". Remizy stra??ackie %4d              Parki %4d     O??rodki sport. %4d"
 
-#: src/lincity-ng/Dialog.cpp:428
+#: src/lincity-ng/Dialog.cpp:449
 #, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".    Kopalnie w??gla %4d      Kopalnie rudy %4d            Retorty %4d"
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr "           Szpitale %4d  Wysypiska ??mieci  %4d             Slumsy %4d"
 
 #: src/lincity-ng/Dialog.cpp:433
 #, c-format
 msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
-msgstr ".          Wiatraki %4d    Elektr. w??glowe %4d  Elektr. s??oneczne %4d"
+msgstr ""
+".          Wiatraki %4d    Elektr. w??glowe %4d  Elektr. s??oneczne %4d"
 
 #: src/lincity-ng/Dialog.cpp:439
 #, c-format
 msgid ".  Substations %4d     Power lines %4d            Ports %4d"
 msgstr ". Podstacji elektr. %4d      Linie elektr. %4d              Porty %4d"
 
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ".             Drogi %4d                    Ulice %4d    Tory Kol. %4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ".        Garncarnie %4d                  Ku??nie %4d       Fabryki %4d"
+
 #: src/lincity-ng/Dialog.cpp:444
 #, c-format
 msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
-msgstr ".      Lekki przem. %4d      Ci??zki przem. %4d   Zak??. Recyklingu %4d"
+msgstr ""
+".      Lekki przem. %4d      Ci??zki przem. %4d   Zak??. Recyklingu %4d"
 
-#: src/lincity-ng/Dialog.cpp:449
+#: src/lincity-ng/Dialog.cpp:428
 #, c-format
-msgid "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr "           Szpitale %4d  Wysypiska ??mieci  %4d             Slumsy %4d"
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ".    Kopalnie w??gla %4d      Kopalnie rudy %4d            Retorty %4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:258
+msgid "MM"
+msgstr ""
+
+#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
+#: src/lincity-ng/ScreenInterface.cpp:269
+msgid "$"
+msgstr "PLN"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minimapa: mapa konturowa"
@@ -934,11 +1011,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Koszt wyburzenia:"
 
-#: src/lincity-ng/GameView.cpp:1520 src/lincity-ng/GameView.cpp:1551
-#: src/lincity-ng/ScreenInterface.cpp:269
-msgid "$"
-msgstr "PLN"
-
 #: src/lincity-ng/GameView.cpp:1522
 msgid "n/a"
 msgstr "n/d"
@@ -1147,42 +1219,6 @@
 msgid "Cases"
 msgstr "Przypadki"
 
-#: src/lincity-ng/EconomyGraph.cpp:121
-msgid "Mining"
-msgstr "Wydobycie"
-
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Trade"
-msgstr "Handel"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Money"
-msgstr "Zarobki"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Popul."
-msgstr "Populacja"
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Techn."
-msgstr "Tech."
-
-#: src/lincity-ng/EconomyGraph.cpp:134
-msgid "Economy Overview:"
-msgstr "Przegl??d ekonomii:"
-
-#: src/lincity-ng/EconomyGraph.cpp:137
-msgid "Sustainability:"
-msgstr ""
-
-#: src/lincity-ng/EconomyGraph.cpp:140
-msgid "Frames per Second:"
-msgstr "Liczba klatek na sekund??:"
-
-#: src/lincity-ng/EconomyGraph.cpp:216
-msgid "You lose."
-msgstr "Przegra??e??."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Tryb Szczeg??????w"
@@ -1224,9 +1260,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (Wymagany poziom technologi: %.1f)"
 
-#: src/lincity-ng/ScreenInterface.cpp:258
-msgid "MM"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
 msgstr ""
 
-#~ msgid "Couldn't create the save directory %s\n"
-#~ msgstr "Nie mo??na stworzy?? katalogu z zapisami gry %s\n"
+#: src/lincity-ng/EconomyGraph.cpp:121
+msgid "Mining"
+msgstr "Wydobycie"
+
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Trade"
+msgstr "Handel"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Money"
+msgstr "Zarobki"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Popul."
+msgstr "Populacja"
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Techn."
+msgstr "Tech."
+
+#: src/lincity-ng/EconomyGraph.cpp:134
+msgid "Economy Overview:"
+msgstr "Przegl??d ekonomii:"
+
+#: src/lincity-ng/EconomyGraph.cpp:137
+msgid "Sustainability:"
+msgstr ""
+
+#: src/lincity-ng/EconomyGraph.cpp:140
+msgid "Frames per Second:"
+msgstr "Liczba klatek na sekund??:"
+
+#: src/lincity-ng/EconomyGraph.cpp:216
+msgid "You lose."
+msgstr "Przegra??e??."

Modified: trunk/data/locale/pt_BR.po
===================================================================
--- trunk/data/locale/pt_BR.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/pt_BR.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -38,15 +38,17 @@
 
 #: src/lincity/power.cpp:97
 msgid "You have too many power grids. Join some of them"
-msgstr "Voc?? possui muitas malhas de transmiss??o de energia. Junte algumas delas"
+msgstr ""
+"Voc?? possui muitas malhas de transmiss??o de energia. Junte algumas delas"
 
 #: src/lincity/engine.cpp:198
 msgid ""
 "ERROR: group does not exist. This should not happen! Please consider filling "
 "a bug report to lincity-ng team, with the saved game and what you did :-) "
-msgstr "Erro: grupo n??o existe. Isto n??o deveria ocorrer! Por favor, considere "
-"preencher um reporte de bug para o time do lincity-ng, com o arquivo do jogo salvo "
-"e uma descri????o do que voc?? fez :-)"
+msgstr ""
+"Erro: grupo n??o existe. Isto n??o deveria ocorrer! Por favor, considere "
+"preencher um reporte de bug para o time do lincity-ng, com o arquivo do jogo "
+"salvo e uma descri????o do que voc?? fez :-)"
 
 #: src/lincity/engine.cpp:226
 msgid "Port must be connected to river all along right side."
@@ -54,7 +56,8 @@
 
 #: src/lincity/engine.cpp:236 src/lincity/engine.cpp:246
 msgid "Too many substations + windmills. You cannot build one more"
-msgstr "Muitas esta????es e moinhos de vento. Voc?? n??o pode construir mais um(a)."
+msgstr ""
+"Muitas esta????es e moinhos de vento. Voc?? n??o pode construir mais um(a)."
 
 #: src/lincity/engine.cpp:280
 msgid "Too many markets. You cannot build one more"
@@ -75,6 +78,14 @@
 msgid "You can't build a mine here: there is no ore left at this site"
 msgstr "N??o existe mais min??rio neste terreno"
 
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:609
 msgid "It's at a power line."
 msgstr "Isto ?? uma linha de transmiss??o de energia."
@@ -359,6 +370,26 @@
 msgid "Residential HH"
 msgstr "Residencial HH"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
 #: src/lincity/ldsvguts.cpp:128
 #, c-format
 msgid "Save file <%s> - "
@@ -625,6 +656,18 @@
 msgid "Employed"
 msgstr "Empregados"
 
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "bom"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "pobres"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Trabalho"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Sa??de Cvr"
@@ -638,18 +681,6 @@
 msgid "Pollution"
 msgstr "Polui????o"
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "bom"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "pobres"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Trabalho"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Reconhecimento adquirido"
@@ -792,10 +823,34 @@
 msgid "Prod"
 msgstr "Prod"
 
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:43
 msgid "Solar"
 msgstr "Solar"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Terreno Inicial"
@@ -827,7 +882,8 @@
 #: src/lincity-ng/Dialog.cpp:372
 #, c-format
 msgid "Max population %d  Number evacuated %d Total births %d"
-msgstr "Popula????o m??xima %d  N??mero de evacuados %d Total de nascimentos %d"
+msgstr ""
+"Popula????o m??xima %d  N??mero de evacuados %d Total de nascimentos %d"
 
 #: src/lincity-ng/Dialog.cpp:377
 #, c-format
@@ -968,7 +1024,8 @@
 
 #: src/lincity-ng/GameView.cpp:1594
 msgid "Query Tool: Show information about selected building."
-msgstr "Ferr. de Pesquisa: Exibe informa????es sobre a constru????o selecionada."
+msgstr ""
+"Ferr. de Pesquisa: Exibe informa????es sobre a constru????o selecionada."
 
 #: src/lincity-ng/GameView.cpp:1598
 msgid "Bulldozer: remove building -price varies-"
@@ -1180,27 +1237,33 @@
 
 #: src/lincity-ng/ButtonPanel.cpp:201
 msgid "Residential: 50 denizens, low birthrate, high deathrate"
-msgstr "Residencial: 50 habitantes, baixo ??ndice de natalidade, alta mortalidade"
+msgstr ""
+"Residencial: 50 habitantes, baixo ??ndice de natalidade, alta mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:202
 msgid "Residential: 100 denizens, high birthrate, low deathrate"
-msgstr "Residencial: 100 habitantes, alto ??ndice de natalidade, baixa mortalidade"
+msgstr ""
+"Residencial: 100 habitantes, alto ??ndice de natalidade, baixa mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:203
 msgid "Residential: 200 denizens, high birthrate, high deathrate"
-msgstr "Residencial: 200 habitantes, alto ??ndice de natalidade, alta mortalidade"
+msgstr ""
+"Residencial: 200 habitantes, alto ??ndice de natalidade, alta mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:204
 msgid "Residential: 100 denizens, low birthrate, high deathrate"
-msgstr "Residencial: 100 habitantes, baixo ??ndice de natalidade, alta mortalidade"
+msgstr ""
+"Residencial: 100 habitantes, baixo ??ndice de natalidade, alta mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:205
 msgid "Residential: 200 denizens, high birthrate, low deathrate"
-msgstr "Residencial: 200 habitantes, alto ??ndice de natalidade, baixa mortalidade"
+msgstr ""
+"Residencial: 200 habitantes, alto ??ndice de natalidade, baixa mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:206
 msgid "Residential: 400 denizens, high birthrate, high deathrate"
-msgstr "Residencial: 400 habitantes, alto ??ndice de natalidade, alta mortalidade"
+msgstr ""
+"Residencial: 400 habitantes, alto ??ndice de natalidade, alta mortalidade"
 
 #: src/lincity-ng/ButtonPanel.cpp:215
 msgid " [Click right for help.]"
@@ -1211,6 +1274,11 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (N??vel Tecno. %.1f requerido.)"
 
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
+msgstr ""
+
 #: src/lincity-ng/EconomyGraph.cpp:123
 msgid "Mining"
 msgstr "Minera????o"
@@ -1246,12 +1314,3 @@
 #: src/lincity-ng/EconomyGraph.cpp:218
 msgid "You lose."
 msgstr "Voc?? perdeu."
-
-#~ msgid "You can't build a tip here"
-#~ msgstr "Voc?? n??o pode construir um aterro aqui"
-
-#~ msgid "OK"
-#~ msgstr "OK"
-
-#~ msgid "You can't build a mine here"
-#~ msgstr "Voc?? n??o pode construir uma mina aqui"

Modified: trunk/data/locale/ru.po
===================================================================
--- trunk/data/locale/ru.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/ru.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -14,81 +14,88 @@
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: src/lincity/power.cpp:97
-msgid "You have too many power grids. Join some of them"
-msgstr "?????????????? ?????????? ????????????????. ???????????????????????? ?? ??????????????????????????"
-
 #: src/lincity/fileutil.cpp:292 src/lincity/fileutil.cpp:341
 msgid "Error. Can't find LINCITY_HOME"
 msgstr "????????????, ???? ???????? ?????????? LINCITY_HOME"
 
 #: src/lincity/fileutil.cpp:561
 msgid "Error verifying package. Can't find colour.pal."
-msgstr "???????????????? ???????????? ???? ????????????. ???? ???????? ?????????? colour.pal"
+msgstr ""
+"???????????????? ???????????? ???? ????????????. ???? ???????? ?????????? "
+"colour.pal"
 
 #: src/lincity/fileutil.cpp:580
 #, c-format
 msgid "Couldn't create the save directory '%s'\n"
-msgstr "???? ???????? ?????????????? ???????????????????? ?????? ???????????????????? '%s'\n"
+msgstr ""
+"???? ???????? ?????????????? ???????????????????? ?????? "
+"???????????????????? '%s'\n"
 
 #: src/lincity/fileutil.cpp:635
 #, c-format
 msgid "Out of memory: malloc failure\n"
 msgstr "?????????????????????? ???????????? ???? ??????????????!!!\n"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "?????????????????? ?? <%s> - "
+#: src/lincity/power.cpp:97
+msgid "You have too many power grids. Join some of them"
+msgstr ""
+"?????????????? ?????????? ????????????????. ???????????????????????? ?? "
+"??????????????????????????"
 
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "???? ???????? ?????????????? ????????"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "???????????????????? ??????????????????"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "???? ???????? ?????????????? <%s> (???????? gzip)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "???????????????? ?????????????????? "
-
 #: src/lincity/engine.cpp:198
 msgid ""
 "ERROR: group does not exist. This should not happen! Please consider filling "
 "a bug report to lincity-ng team, with the saved game and what you did :-) "
-msgstr "????????????: ???????????? ???? ????????????????????. ?????? ???? ??????????????! ???????????????????? ???????????????? "
-"?????????? ???? ????????????, ?? ?????????????????????? ?????????? ?? ????????????????, ?????? ???? ?????????????? :-D "
+msgstr ""
+"????????????: ???????????? ???? ????????????????????. ?????? ???? "
+"??????????????! ???????????????????? ???????????????? ?????????? ???? "
+"????????????, ?? ?????????????????????? ?????????? ?? ????????????????, "
+"?????? ???? ?????????????? :-D "
 
 #: src/lincity/engine.cpp:226
 msgid "Port must be connected to river all along right side."
-msgstr "?????????? ???????????? ?????????????????????? ?? ??????????, ?????????????? ?????????????????? ????????????"
+msgstr ""
+"?????????? ???????????? ?????????????????????? ?? ??????????, ?????????????? "
+"?????????????????? ????????????"
 
 #: src/lincity/engine.cpp:236 src/lincity/engine.cpp:246
 msgid "Too many substations + windmills. You cannot build one more"
-msgstr "?????????????? ?????????? ???????????????????? ?? ???????????????? ??????????????. ???? ???? ???????????? ???? ???????????? ??????????????"
+msgstr ""
+"?????????????? ?????????? ???????????????????? ?? ???????????????? "
+"??????????????. ???? ???? ???????????? ???? ???????????? ??????????????"
 
 #: src/lincity/engine.cpp:280
 msgid "Too many markets. You cannot build one more"
-msgstr "?????????????? ?????????? ??????????????????. ???????????? ?????????????? ????????????"
+msgstr ""
+"?????????????? ?????????? ??????????????????. ???????????? ?????????????? "
+"????????????"
 
 #: src/lincity/engine.cpp:305
 msgid "You can't build a tip here: this area was once a landfill"
-msgstr "???? ???? ???????????? ?????????????? ????????????: ?????????? ???????????? ??????????????"
+msgstr ""
+"???? ???? ???????????? ?????????????? ????????????: ?????????? ???????????? "
+"??????????????"
 
 #: src/lincity/engine.cpp:330
 msgid "You can't build a mine here: This area was once a landfill"
-msgstr "???? ???? ???????????? ?????????????????? ?????????? ??????????: ?????????? ???????????? ????????????"
+msgstr ""
+"???? ???? ???????????? ?????????????????? ?????????? ??????????: ?????????? "
+"???????????? ????????????"
 
 #: src/lincity/engine.cpp:335
 msgid "You can't build a mine here: there is no ore left at this site"
-msgstr "???????????? ?????????????????? ?????????? ??????????: ???????? ?????? ??????????????????????"
+msgstr ""
+"???????????? ?????????????????? ?????????? ??????????: ???????? ?????? "
+"??????????????????????"
 
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:691
 msgid "It's at a power line."
 msgstr "?????? ????????????????????????."
@@ -373,6 +380,48 @@
 msgid "Residential HH"
 msgstr "???????????????????? ????"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "?????????????????? ?? <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "???? ???????? ?????????????? ????????"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "???????????????????? ??????????????????"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "???? ???????? ?????????????? <%s> (???????? gzip)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "???????????????? ?????????????????? "
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "??????"
@@ -421,6 +470,55 @@
 msgid "Dec"
 msgstr "??????"
 
+#: src/lincity/modules/health_centre.cpp:66
+msgid "Health Centre"
+msgstr "???????????????? "
+
+#: src/lincity/modules/health_centre.cpp:68
+#: src/lincity/modules/rocket_pad.cpp:169 src/lincity/modules/recycle.cpp:181
+#: src/lincity/modules/mill.cpp:107 src/lincity/modules/university.cpp:74
+#: src/lincity/modules/cricket.cpp:101 src/lincity/modules/pottery.cpp:123
+#: src/lincity/modules/blacksmith.cpp:102 src/lincity/modules/school.cpp:54
+#: src/lincity/modules/firestation.cpp:121
+msgid "Inventory"
+msgstr "??????????????????"
+
+#: src/lincity/modules/health_centre.cpp:69
+#: src/lincity/modules/rocket_pad.cpp:170 src/lincity/modules/market.cpp:1149
+#: src/lincity/modules/road.cpp:52 src/lincity/modules/rail.cpp:55
+#: src/lincity/modules/coal_power.cpp:105
+#: src/lincity/modules/university.cpp:75 src/lincity/modules/cricket.cpp:102
+#: src/lincity/modules/track.cpp:43 src/lincity/modules/pottery.cpp:124
+#: src/lincity/modules/school.cpp:55 src/lincity/modules/firestation.cpp:122
+msgid "Jobs"
+msgstr "????????????"
+
+#: src/lincity/modules/health_centre.cpp:71
+#: src/lincity/modules/rocket_pad.cpp:172 src/lincity/modules/market.cpp:1153
+#: src/lincity/modules/port.cpp:219 src/lincity/modules/road.cpp:56
+#: src/lincity/modules/rail.cpp:59 src/lincity/modules/mill.cpp:108
+#: src/lincity/modules/university.cpp:77 src/lincity/modules/cricket.cpp:104
+#: src/lincity/modules/track.cpp:47 src/lincity/modules/pottery.cpp:126
+#: src/lincity/modules/blacksmith.cpp:103 src/lincity/modules/school.cpp:57
+#: src/lincity/modules/firestation.cpp:124 src/lincity-ng/MpsInterface.cpp:448
+msgid "Goods"
+msgstr "????????????"
+
+#: src/lincity/modules/rocket_pad.cpp:163
+msgid "Rocket Pad"
+msgstr "???????????????? ???????????????? "
+
+#: src/lincity/modules/rocket_pad.cpp:166
+msgid "Completion"
+msgstr "??????????????????"
+
+#: src/lincity/modules/rocket_pad.cpp:174 src/lincity/modules/market.cpp:1157
+#: src/lincity/modules/port.cpp:223 src/lincity/modules/road.cpp:60
+#: src/lincity/modules/rail.cpp:63 src/lincity/modules/light_industry.cpp:368
+#: src/lincity/modules/commune.cpp:152 src/lincity/modules/track.cpp:51
+msgid "Steel"
+msgstr "??????????"
+
 #: src/lincity/modules/windmill.cpp:77 src/lincity/modules/windmill.cpp:88
 #: src/lincity/modules/recycle.cpp:178 src/lincity/modules/coal_power.cpp:107
 #: src/lincity/modules/organic_farm.cpp:196
@@ -462,6 +560,81 @@
 msgid "Grid ID"
 msgstr "???????????? ID"
 
+#: src/lincity/modules/water.cpp:22 src/lincity/modules/commune.cpp:147
+#: src/lincity/modules/commune.cpp:149 src/lincity/modules/commune.cpp:151
+#: src/lincity/modules/commune.cpp:153 src/lincity-ng/MpsInterface.cpp:379
+#: src/lincity-ng/MpsInterface.cpp:382 src/lincity-ng/MpsInterface.cpp:385
+msgid "Yes"
+msgstr "????"
+
+#: src/lincity/modules/water.cpp:22 src/lincity/modules/commune.cpp:147
+#: src/lincity/modules/commune.cpp:149 src/lincity/modules/commune.cpp:151
+#: src/lincity/modules/commune.cpp:153 src/lincity-ng/MpsInterface.cpp:379
+#: src/lincity-ng/MpsInterface.cpp:382 src/lincity-ng/MpsInterface.cpp:385
+msgid "No"
+msgstr "??????"
+
+#: src/lincity/modules/water.cpp:23
+msgid "Navigable"
+msgstr "??????????????????"
+
+#: src/lincity/modules/recycle.cpp:169
+msgid "Recycling"
+msgstr "??????????????????????"
+
+#: src/lincity/modules/recycle.cpp:170
+msgid "Center"
+msgstr "??????????"
+
+#: src/lincity/modules/recycle.cpp:173
+#: src/lincity/modules/heavy_industry.cpp:346 src/lincity/modules/mill.cpp:105
+#: src/lincity/modules/light_industry.cpp:370
+#: src/lincity/modules/university.cpp:79 src/lincity/modules/pottery.cpp:121
+#: src/lincity/modules/blacksmith.cpp:100 src/lincity/modules/school.cpp:60
+msgid "Capacity"
+msgstr "???????????? "
+
+#: src/lincity/modules/recycle.cpp:175 src/lincity/modules/residence.cpp:279
+#: src/lincity/modules/residence.cpp:282 src/lincity/modules/residence.cpp:285
+#: src/lincity/modules/residence.cpp:288 src/lincity/modules/residence.cpp:291
+#: src/lincity/modules/residence.cpp:294
+#: src/lincity/modules/light_industry.cpp:359
+#: src/lincity/modules/organic_farm.cpp:188
+msgid "YES"
+msgstr "????"
+
+#: src/lincity/modules/recycle.cpp:175 src/lincity/modules/residence.cpp:279
+#: src/lincity/modules/residence.cpp:282 src/lincity/modules/residence.cpp:285
+#: src/lincity/modules/residence.cpp:288 src/lincity/modules/residence.cpp:291
+#: src/lincity/modules/residence.cpp:294
+#: src/lincity/modules/heavy_industry.cpp:334
+#: src/lincity/modules/light_industry.cpp:359
+msgid "NO"
+msgstr "??????"
+
+#: src/lincity/modules/recycle.cpp:176 src/lincity/modules/residence.cpp:280
+#: src/lincity/modules/heavy_industry.cpp:337
+#: src/lincity/modules/light_industry.cpp:360
+#: src/lincity/modules/organic_farm.cpp:193
+msgid "Power"
+msgstr "??????????????"
+
+#: src/lincity/modules/recycle.cpp:182
+#: src/lincity/modules/heavy_industry.cpp:342
+#: src/lincity/modules/market.cpp:1155 src/lincity/modules/port.cpp:215
+#: src/lincity/modules/road.cpp:58 src/lincity/modules/rail.cpp:61
+#: src/lincity/modules/light_industry.cpp:366
+#: src/lincity/modules/commune.cpp:150 src/lincity/modules/track.cpp:49
+#: src/lincity/modules/pottery.cpp:128
+msgid "Ore"
+msgstr "????????"
+
+#: src/lincity/modules/recycle.cpp:184 src/lincity/modules/market.cpp:1159
+#: src/lincity/modules/road.cpp:62 src/lincity/modules/rail.cpp:65
+#: src/lincity/modules/commune.cpp:154 src/lincity/modules/track.cpp:53
+msgid "Waste"
+msgstr "??????????"
+
 #: src/lincity/modules/coalmine.cpp:168
 msgid "Coal Mine"
 msgstr "???????????????? ??????????"
@@ -479,6 +652,47 @@
 msgid "EMPTY"
 msgstr "??????????"
 
+#: src/lincity/modules/residence.cpp:273
+msgid "Residence"
+msgstr "????????????????????"
+
+#: src/lincity/modules/residence.cpp:277
+msgid "People"
+msgstr "??????????????"
+
+#: src/lincity/modules/residence.cpp:283
+msgid "Fed"
+msgstr "??????????????"
+
+#: src/lincity/modules/residence.cpp:286
+msgid "Employed"
+msgstr "?????????????????"
+
+#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "????????????"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "??????????"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "????????????"
+
+#: src/lincity/modules/residence.cpp:289
+msgid "Health Cvr"
+msgstr "????????????????"
+
+#: src/lincity/modules/residence.cpp:295 src/lincity-ng/MpsInterface.cpp:386
+#: src/lincity-ng/MpsInterface.cpp:514
+msgid "Sport"
+msgstr "??????????"
+
+#: src/lincity/modules/residence.cpp:297 src/lincity-ng/MpsInterface.cpp:388
+msgid "Pollution"
+msgstr "??????????????????"
+
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "???????????? ????????????????????????????"
@@ -488,24 +702,15 @@
 msgid "% Complete"
 msgstr "% ??????????????????"
 
-#: src/lincity/modules/commune.cpp:145
-msgid "Activity"
-msgstr "????????????????????"
+#: src/lincity/modules/heavy_industry.cpp:323
+msgid "Heavy"
+msgstr "?????????????? "
 
-#: src/lincity/modules/water.cpp:22 src/lincity/modules/commune.cpp:147
-#: src/lincity/modules/commune.cpp:149 src/lincity/modules/commune.cpp:151
-#: src/lincity/modules/commune.cpp:153 src/lincity-ng/MpsInterface.cpp:379
-#: src/lincity-ng/MpsInterface.cpp:382 src/lincity-ng/MpsInterface.cpp:385
-msgid "Yes"
-msgstr "????"
+#: src/lincity/modules/heavy_industry.cpp:324
+#: src/lincity/modules/light_industry.cpp:355
+msgid "Industry"
+msgstr "??????????????????"
 
-#: src/lincity/modules/water.cpp:22 src/lincity/modules/commune.cpp:147
-#: src/lincity/modules/commune.cpp:149 src/lincity/modules/commune.cpp:151
-#: src/lincity/modules/commune.cpp:153 src/lincity-ng/MpsInterface.cpp:379
-#: src/lincity-ng/MpsInterface.cpp:382 src/lincity-ng/MpsInterface.cpp:385
-msgid "No"
-msgstr "??????"
-
 #: src/lincity/modules/heavy_industry.cpp:329
 #: src/lincity/modules/heavy_industry.cpp:344
 #: src/lincity/modules/market.cpp:1151 src/lincity/modules/port.cpp:211
@@ -518,108 +723,72 @@
 msgid "Coal"
 msgstr "??????????"
 
-#: src/lincity/modules/recycle.cpp:182
-#: src/lincity/modules/heavy_industry.cpp:342
-#: src/lincity/modules/market.cpp:1155 src/lincity/modules/port.cpp:215
-#: src/lincity/modules/road.cpp:58 src/lincity/modules/rail.cpp:61
-#: src/lincity/modules/light_industry.cpp:366
-#: src/lincity/modules/commune.cpp:150 src/lincity/modules/track.cpp:49
-#: src/lincity/modules/pottery.cpp:128
-msgid "Ore"
-msgstr "????????"
+#: src/lincity/modules/heavy_industry.cpp:331
+msgid "Grid"
+msgstr "??????????????????????????"
 
-#: src/lincity/modules/rocket_pad.cpp:174 src/lincity/modules/market.cpp:1157
-#: src/lincity/modules/port.cpp:223 src/lincity/modules/road.cpp:60
-#: src/lincity/modules/rail.cpp:63 src/lincity/modules/light_industry.cpp:368
-#: src/lincity/modules/commune.cpp:152 src/lincity/modules/track.cpp:51
-msgid "Steel"
-msgstr "??????????"
+#: src/lincity/modules/heavy_industry.cpp:339
+#: src/lincity/modules/light_industry.cpp:362
+msgid "Output"
+msgstr "??????????????"
 
-#: src/lincity/modules/recycle.cpp:184 src/lincity/modules/market.cpp:1159
-#: src/lincity/modules/road.cpp:62 src/lincity/modules/rail.cpp:65
-#: src/lincity/modules/commune.cpp:154 src/lincity/modules/track.cpp:53
-msgid "Waste"
-msgstr "??????????"
+#: src/lincity/modules/heavy_industry.cpp:340
+#: src/lincity/modules/light_industry.cpp:364
+msgid "Store"
+msgstr "??????????"
 
-#: src/lincity/modules/firestation.cpp:119
-msgid "Fire Station"
-msgstr "???????????????? ??????????????"
-
-#: src/lincity/modules/health_centre.cpp:68
-#: src/lincity/modules/rocket_pad.cpp:169 src/lincity/modules/recycle.cpp:181
-#: src/lincity/modules/mill.cpp:107 src/lincity/modules/university.cpp:74
-#: src/lincity/modules/cricket.cpp:101 src/lincity/modules/pottery.cpp:123
-#: src/lincity/modules/blacksmith.cpp:102 src/lincity/modules/school.cpp:54
-#: src/lincity/modules/firestation.cpp:121
-msgid "Inventory"
-msgstr "??????????????????"
-
-#: src/lincity/modules/health_centre.cpp:69
-#: src/lincity/modules/rocket_pad.cpp:170 src/lincity/modules/market.cpp:1149
-#: src/lincity/modules/road.cpp:52 src/lincity/modules/rail.cpp:55
-#: src/lincity/modules/coal_power.cpp:105
-#: src/lincity/modules/university.cpp:75 src/lincity/modules/cricket.cpp:102
-#: src/lincity/modules/track.cpp:43 src/lincity/modules/pottery.cpp:124
-#: src/lincity/modules/school.cpp:55 src/lincity/modules/firestation.cpp:122
-msgid "Jobs"
-msgstr "????????????"
-
-#: src/lincity/modules/health_centre.cpp:71
-#: src/lincity/modules/rocket_pad.cpp:172 src/lincity/modules/market.cpp:1153
-#: src/lincity/modules/port.cpp:219 src/lincity/modules/road.cpp:56
-#: src/lincity/modules/rail.cpp:59 src/lincity/modules/mill.cpp:108
-#: src/lincity/modules/university.cpp:77 src/lincity/modules/cricket.cpp:104
-#: src/lincity/modules/track.cpp:47 src/lincity/modules/pottery.cpp:126
-#: src/lincity/modules/blacksmith.cpp:103 src/lincity/modules/school.cpp:57
-#: src/lincity/modules/firestation.cpp:124 src/lincity-ng/MpsInterface.cpp:448
-msgid "Goods"
-msgstr "????????????"
-
 #: src/lincity/modules/market.cpp:1147 src/lincity/modules/port.cpp:207
 #: src/lincity/modules/road.cpp:50 src/lincity/modules/rail.cpp:53
 #: src/lincity/modules/mill.cpp:110 src/lincity/modules/track.cpp:41
 msgid "Food"
 msgstr "??????"
 
-#: src/lincity/modules/university.cpp:69
-msgid "Tech Produced"
-msgstr "?????????????????????? ??????????????"
+#: src/lincity/modules/port.cpp:227 src/lincity-ng/MpsInterface.cpp:530
+msgid "Total"
+msgstr "?????????? "
 
-#: src/lincity/modules/recycle.cpp:173
-#: src/lincity/modules/heavy_industry.cpp:346 src/lincity/modules/mill.cpp:105
-#: src/lincity/modules/light_industry.cpp:370
-#: src/lincity/modules/university.cpp:79 src/lincity/modules/pottery.cpp:121
-#: src/lincity/modules/blacksmith.cpp:100 src/lincity/modules/school.cpp:60
-msgid "Capacity"
-msgstr "???????????? "
+#: src/lincity/modules/rail.cpp:50
+msgid "Rail"
+msgstr "????????????"
 
-#: src/lincity/modules/water.cpp:23
-msgid "Navigable"
-msgstr "??????????????????"
+#: src/lincity/modules/coal_power.cpp:90
+#: src/lincity/modules/solar_power.cpp:45
+msgid "Power Station"
+msgstr "?????????????????????????? ??????????????"
 
-#: src/lincity/modules/health_centre.cpp:66
-msgid "Health Centre"
-msgstr "???????????????? "
+#: src/lincity/modules/coal_power.cpp:94
+#: src/lincity/modules/solar_power.cpp:49
+msgid "Max Output"
+msgstr "???????? ??????????????"
 
-#: src/lincity/modules/rocket_pad.cpp:163
-msgid "Rocket Pad"
-msgstr "???????????????? ???????????????? "
+#: src/lincity/modules/coal_power.cpp:99
+#: src/lincity/modules/solar_power.cpp:54
+msgid "Current Output"
+msgstr "???????????????????? ??????????????"
 
-#: src/lincity/modules/rocket_pad.cpp:166
-msgid "Completion"
-msgstr "??????????????????"
+#: src/lincity/modules/substation.cpp:95
+msgid "Local Demand"
+msgstr "?????????????????? ????????????????????"
 
+#: src/lincity/modules/mill.cpp:103
+msgid "Textile Mill"
+msgstr "?????????????????????? ??????????????"
+
+#: src/lincity/modules/oremine.cpp:184
+msgid "Ore Mine"
+msgstr "?????????? ????????"
+
 #: src/lincity/modules/power_line.cpp:50
 msgid "Power Line"
 msgstr "????????????????????????"
 
-#: src/lincity/modules/port.cpp:227 src/lincity-ng/MpsInterface.cpp:530
-msgid "Total"
-msgstr "?????????? "
+#: src/lincity/modules/light_industry.cpp:354
+msgid "Light"
+msgstr "????????"
 
-#: src/lincity/modules/rail.cpp:50
-msgid "Rail"
-msgstr "????????????"
+#: src/lincity/modules/university.cpp:69
+msgid "Tech Produced"
+msgstr "?????????????????????? ??????????????"
 
 #: src/lincity/modules/tip.cpp:109
 msgid "Landfill"
@@ -642,93 +811,18 @@
 msgid "% Filled"
 msgstr "% ????????????????????"
 
-#: src/lincity/modules/light_industry.cpp:354
-msgid "Light"
-msgstr "????????"
+#: src/lincity/modules/commune.cpp:145
+msgid "Activity"
+msgstr "????????????????????"
 
-#: src/lincity/modules/heavy_industry.cpp:324
-#: src/lincity/modules/light_industry.cpp:355
-msgid "Industry"
-msgstr "??????????????????"
-
-#: src/lincity/modules/recycle.cpp:175 src/lincity/modules/residence.cpp:279
-#: src/lincity/modules/residence.cpp:282 src/lincity/modules/residence.cpp:285
-#: src/lincity/modules/residence.cpp:288 src/lincity/modules/residence.cpp:291
-#: src/lincity/modules/residence.cpp:294
-#: src/lincity/modules/light_industry.cpp:359
-#: src/lincity/modules/organic_farm.cpp:188
-msgid "YES"
-msgstr "????"
-
-#: src/lincity/modules/recycle.cpp:175 src/lincity/modules/residence.cpp:279
-#: src/lincity/modules/residence.cpp:282 src/lincity/modules/residence.cpp:285
-#: src/lincity/modules/residence.cpp:288 src/lincity/modules/residence.cpp:291
-#: src/lincity/modules/residence.cpp:294
-#: src/lincity/modules/heavy_industry.cpp:334
-#: src/lincity/modules/light_industry.cpp:359
-msgid "NO"
-msgstr "??????"
-
-#: src/lincity/modules/recycle.cpp:176 src/lincity/modules/residence.cpp:280
-#: src/lincity/modules/heavy_industry.cpp:337
-#: src/lincity/modules/light_industry.cpp:360
-#: src/lincity/modules/organic_farm.cpp:193
-msgid "Power"
-msgstr "??????????????"
-
-#: src/lincity/modules/heavy_industry.cpp:339
-#: src/lincity/modules/light_industry.cpp:362
-msgid "Output"
-msgstr "??????????????"
-
-#: src/lincity/modules/heavy_industry.cpp:340
-#: src/lincity/modules/light_industry.cpp:364
-msgid "Store"
-msgstr "??????????"
-
-#: src/lincity/modules/recycle.cpp:169
-msgid "Recycling"
-msgstr "??????????????????????"
-
-#: src/lincity/modules/recycle.cpp:170
-msgid "Center"
-msgstr "??????????"
-
 #: src/lincity/modules/school.cpp:51
 msgid "Lessons Learned"
 msgstr "???????????? ??????????????????"
 
-#: src/lincity/modules/oremine.cpp:184
-msgid "Ore Mine"
-msgstr "?????????? ????????"
+#: src/lincity/modules/firestation.cpp:119
+msgid "Fire Station"
+msgstr "???????????????? ??????????????"
 
-#: src/lincity/modules/mill.cpp:103
-msgid "Textile Mill"
-msgstr "?????????????????????? ??????????????"
-
-#: src/lincity/modules/coal_power.cpp:90
-#: src/lincity/modules/solar_power.cpp:45
-msgid "Power Station"
-msgstr "?????????????????????????? ??????????????"
-
-#: src/lincity/modules/coal_power.cpp:94
-#: src/lincity/modules/solar_power.cpp:49
-msgid "Max Output"
-msgstr "???????? ??????????????"
-
-#: src/lincity/modules/coal_power.cpp:99
-#: src/lincity/modules/solar_power.cpp:54
-msgid "Current Output"
-msgstr "???????????????????? ??????????????"
-
-#: src/lincity/modules/heavy_industry.cpp:323
-msgid "Heavy"
-msgstr "?????????????? "
-
-#: src/lincity/modules/heavy_industry.cpp:331
-msgid "Grid"
-msgstr "??????????????????????????"
-
 #: src/lincity/modules/organic_farm.cpp:183
 msgid "Organic Farm"
 msgstr "???????????????????????? ??????????"
@@ -741,55 +835,166 @@
 msgid "Prod"
 msgstr "??????????????"
 
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:44
 msgid "Solar"
 msgstr "????????????"
 
-#: src/lincity/modules/substation.cpp:95
-msgid "Local Demand"
-msgstr "?????????????????? ????????????????????"
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
 
-#: src/lincity/modules/residence.cpp:273
-msgid "Residence"
-msgstr "????????????????????"
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
 
-#: src/lincity/modules/residence.cpp:277
-msgid "People"
-msgstr "??????????????"
+#: src/lincity-ng/Dialog.cpp:173
+msgid "Launchsite"
+msgstr "??????????????????"
 
-#: src/lincity/modules/residence.cpp:283
-msgid "Fed"
-msgstr "??????????????"
+#: src/lincity-ng/Dialog.cpp:341 src/lincity-ng/Dialog.cpp:342
+msgid "----- IN TEST MODE -------"
+msgstr "----- ?? ???????????????? ???????????? -------"
 
-#: src/lincity/modules/residence.cpp:286
-msgid "Employed"
-msgstr "?????????????????"
+#: src/lincity-ng/Dialog.cpp:344
+#, c-format
+msgid "Game statistics from LinCity-NG Version %s"
+msgstr "???????????????????? ???????? LinCity-NG ???????????? %s"
 
-#: src/lincity/modules/residence.cpp:289
-msgid "Health Cvr"
-msgstr "????????????????"
+#: src/lincity-ng/Dialog.cpp:348
+#, c-format
+msgid "Initial loaded scene - %s"
+msgstr "?????????????????? ?????????? - %s"
 
-#: src/lincity/modules/residence.cpp:295 src/lincity-ng/MpsInterface.cpp:386
-#: src/lincity-ng/MpsInterface.cpp:514
-msgid "Sport"
-msgstr "??????????"
+#: src/lincity-ng/Dialog.cpp:353
+#, c-format
+msgid "Economy is sustainable"
+msgstr "?????????????????? ???????????????????? "
 
-#: src/lincity/modules/residence.cpp:297 src/lincity-ng/MpsInterface.cpp:388
-msgid "Pollution"
-msgstr "??????????????????"
+#: src/lincity-ng/Dialog.cpp:357
+#, c-format
+msgid "Population  %d  of which  %d  are not housed."
+msgstr "?????????????????? %d ???? ?????? %d ??????????????????."
 
-#: src/lincity/modules/residence.cpp:299 src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "????????????"
+#: src/lincity-ng/Dialog.cpp:362
+#, c-format
+msgid "Max population %d  Number evacuated %d Total births %d"
+msgstr ""
+"???????????????????????? ?????????????????? %d , ??????-???? "
+"???????????????????????????? %d , ??????-???? ???????????????? %d"
 
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "??????????"
+#: src/lincity-ng/Dialog.cpp:367
+#, c-format
+msgid "Date %s %04d  Money %8d   Tech-level %5.1f (%5.1f)"
+msgstr ""
+"???????? %s %04d  ???????????? %8d ?????????????? ???????????????? %5.1f "
+"(%5.1f)"
 
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "????????????"
+#: src/lincity-ng/Dialog.cpp:374
+#, c-format
+msgid ".Deaths by starvation %7d   History %8.3f"
+msgstr "?????????????? ???? ????????????        %7d ?????????????? %8.3f"
 
+#: src/lincity-ng/Dialog.cpp:379
+#, c-format
+msgid "Deaths from pollution %7d   History %8.3f"
+msgstr "?????????????? ???? ?????????????????????? %7d ?????????????? %8.3f"
+
+#: src/lincity-ng/Dialog.cpp:383
+#, c-format
+msgid "Years of unemployment %7d   History %8.3f"
+msgstr "?????? ?????? ???????????? %7d  ?????????????? %8.3f"
+
+#: src/lincity-ng/Dialog.cpp:387
+#, c-format
+msgid "Rockets launched %2d  Successful launches %2d"
+msgstr "?????????????????? ?????????? %2d ???? ?????? ???????????? %2d"
+
+#: src/lincity-ng/Dialog.cpp:397
+#, c-format
+msgid ".   Residences %4d         Markets %4d            Farms %4d"
+msgstr ""
+".   ???????????????????? %4d         ???????????????? %4d           "
+"?????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:418
+#, c-format
+msgid ".    Monuments %4d         Schools %4d     Universities %4d"
+msgstr ""
+".    ?????????????????? %4d         ?????????? %4d       "
+"???????????????????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:423
+#, c-format
+msgid ".Fire stations %4d           Parks %4d    Sports fields %4d"
+msgstr ""
+".???????????????? ?????????????? %4d        ?????????? %4d    "
+"?????????????????????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:449
+#, c-format
+msgid "Health centres %4d            Tips %4d         Shanties %4d"
+msgstr ""
+"???????????????? %4d                  ?????????????? %4d      ???????????? "
+"%4d"
+
+#: src/lincity-ng/Dialog.cpp:433
+#, c-format
+msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
+msgstr ""
+".    ???????????????? %4d      ???????????????? ???? %4d     "
+"?????????????????? ???? %4d"
+
+#: src/lincity-ng/Dialog.cpp:439
+#, c-format
+msgid ".  Substations %4d     Power lines %4d            Ports %4d"
+msgstr ""
+".  ???????????????????? %4d      ???????????????????????? %4d           "
+"?????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:408
+#, c-format
+msgid ".       Tracks %4d           Roads %4d             Rail %4d"
+msgstr ""
+".       ?????????????????? %4d        ????????????    %4d         ?????????? "
+"%4d"
+
+#: src/lincity-ng/Dialog.cpp:413
+#, c-format
+msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
+msgstr ""
+".    ?????????????????? %4d     ??????????????????   %4d            "
+"???????????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:444
+#, c-format
+msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
+msgstr ""
+".   ???????????? ??????-???? %4d   ?????????????? ??????-???? %4d    "
+"?????????????????????? %4d"
+
+#: src/lincity-ng/Dialog.cpp:428
+#, c-format
+msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
+msgstr ""
+".   ???????????????? ?????????? %4d   ?????????? ???????? %4d        "
+"???????????? %4d"
+
 #: src/lincity-ng/ScreenInterface.cpp:252
 msgid "MM"
 msgstr "????"
@@ -799,47 +1004,97 @@
 msgid "$"
 msgstr "??????"
 
-#: src/lincity-ng/ButtonPanel.cpp:198
-msgid "Query Tool"
-msgstr "????????????"
+#: src/lincity-ng/GameView.cpp:236
+msgid "Minimap: outline map"
+msgstr "????????-??????????: ??????????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:199
-msgid "Bulldozer"
-msgstr "??????????????????"
+#: src/lincity-ng/GameView.cpp:239
+msgid "Minimap: unemployment"
+msgstr "????????-??????????: ????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:201
-msgid "Residential: 50 denizens, low birthrate, high deathrate"
-msgstr "????????????????????: 50 ??????????????, ???????????? ??????????????????????, ?????????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:242
+msgid "Minimap: pollution"
+msgstr "????????-??????????: ??????????????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:202
-msgid "Residential: 100 denizens, high birthrate, low deathrate"
-msgstr "????????????????????: 100 ??????????????, ?????????????? ??????????????????????, ???????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:245
+msgid "Minimap: nourishments"
+msgstr "????????-??????????: ??????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:203
-msgid "Residential: 200 denizens, high birthrate, high deathrate"
-msgstr "????????????????????: 200 ??????????????, ?????????????? ??????????????????????, ?????????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:248
+msgid "Minimap: power supply"
+msgstr "????????-??????????: ????????????????????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:204
-msgid "Residential: 100 denizens, low birthrate, high deathrate"
-msgstr "????????????????????: 100 ??????????????, ???????????? ??????????????????????, ?????????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:251
+msgid "Minimap: firedepartment cover"
+msgstr "????????-??????????: ???????????????? ????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:205
-msgid "Residential: 200 denizens, high birthrate, low deathrate"
-msgstr "????????????????????: 200 ??????????????, ?????????????? ??????????????????????, ???????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:254
+msgid "Minimap: sport cover"
+msgstr "????????-??????????: ??????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:206
-msgid "Residential: 400 denizens, high birthrate, high deathrate"
-msgstr "????????????????????: 400 ??????????????, ?????????????? ??????????????????????, ?????????????? ????????????????????."
+#: src/lincity-ng/GameView.cpp:257
+msgid "Minimap: medical care"
+msgstr "????????-??????????: ????????????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:215
-msgid " [Click right for help.]"
-msgstr " [?????????? ???????????? ?????? ????????????.]"
+#: src/lincity-ng/GameView.cpp:260
+msgid "Minimap: coal depots"
+msgstr "????????-??????????: ???????????????? ??????????"
 
-#: src/lincity-ng/ButtonPanel.cpp:243 src/lincity-ng/ButtonPanel.cpp:277
-#, c-format
-msgid "%s (Techlevel %.1f required.)"
-msgstr "%s (?????????? %.1f ?????????????? ??????????????.)"
+#: src/lincity-ng/GameView.cpp:263
+msgid "Minimap: traffic density"
+msgstr "????????-??????????: ????????????"
 
+#: src/lincity-ng/GameView.cpp:1513
+msgid "Estimated Bulldoze Cost: "
+msgstr "???????? ??????????: "
+
+#: src/lincity-ng/GameView.cpp:1515
+msgid "Bulldoze Cost: "
+msgstr "???????? ??????????: "
+
+#: src/lincity-ng/GameView.cpp:1520
+msgid "n/a"
+msgstr "??/??"
+
+#: src/lincity-ng/GameView.cpp:1538
+msgid "Query Tool: Show information about selected building."
+msgstr ""
+"????????????: ???????????????? ???????????????????? ?? ?????????????????? "
+"????????????????????. "
+
+#: src/lincity-ng/GameView.cpp:1542
+msgid "Bulldozer: remove building -price varies-"
+msgstr ""
+"??????????????????: ?????????????? ???????????? -???????? ??????????????????-"
+
+#: src/lincity-ng/GameView.cpp:1549
+msgid ": Cost to build "
+msgstr ": ?????????????????? ?????????????????? "
+
+#: src/lincity-ng/GameView.cpp:1550
+msgid ", to bulldoze "
+msgstr ", ???????????????????? "
+
+#: src/lincity-ng/GameView.cpp:1550 src/lincity-ng/GameView.cpp:1553
+msgid "$."
+msgstr "??????."
+
+#: src/lincity-ng/GameView.cpp:1552
+msgid " To build "
+msgstr " ?????????????? "
+
+#: src/lincity-ng/GameView.cpp:1552
+msgid " of them "
+msgstr " ???? "
+
+#: src/lincity-ng/GameView.cpp:1553
+msgid "will cost about "
+msgstr "???????????? ???? "
+
+#: src/lincity-ng/MainMenu.cpp:163
+msgid "empty"
+msgstr "??????????"
+
 #: src/lincity-ng/MpsInterface.cpp:224
 msgid "build something here"
 msgstr "?????? ?????????? ??????????????"
@@ -1008,120 +1263,64 @@
 msgid "Cases"
 msgstr "??????????"
 
-#: src/lincity-ng/Dialog.cpp:173
-msgid "Launchsite"
-msgstr "??????????????????"
+#: src/lincity-ng/ButtonPanel.cpp:198
+msgid "Query Tool"
+msgstr "????????????"
 
-#: src/lincity-ng/Dialog.cpp:341 src/lincity-ng/Dialog.cpp:342
-msgid "----- IN TEST MODE -------"
-msgstr "----- ?? ???????????????? ???????????? -------"
+#: src/lincity-ng/ButtonPanel.cpp:199
+msgid "Bulldozer"
+msgstr "??????????????????"
 
-#: src/lincity-ng/Dialog.cpp:344
-#, c-format
-msgid "Game statistics from LinCity-NG Version %s"
-msgstr "???????????????????? ???????? LinCity-NG ???????????? %s"
+#: src/lincity-ng/ButtonPanel.cpp:201
+msgid "Residential: 50 denizens, low birthrate, high deathrate"
+msgstr ""
+"????????????????????: 50 ??????????????, ???????????? "
+"??????????????????????, ?????????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:348
-#, c-format
-msgid "Initial loaded scene - %s"
-msgstr "?????????????????? ?????????? - %s"
+#: src/lincity-ng/ButtonPanel.cpp:202
+msgid "Residential: 100 denizens, high birthrate, low deathrate"
+msgstr ""
+"????????????????????: 100 ??????????????, ?????????????? "
+"??????????????????????, ???????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:353
-#, c-format
-msgid "Economy is sustainable"
-msgstr "?????????????????? ???????????????????? "
-
-#: src/lincity-ng/Dialog.cpp:357
-#, c-format
-msgid "Population  %d  of which  %d  are not housed."
-msgstr "?????????????????? %d ???? ?????? %d ??????????????????."
-
-#: src/lincity-ng/Dialog.cpp:362
-#, c-format
-msgid "Max population %d  Number evacuated %d Total births %d"
+#: src/lincity-ng/ButtonPanel.cpp:203
+msgid "Residential: 200 denizens, high birthrate, high deathrate"
 msgstr ""
-"???????????????????????? ?????????????????? %d , ??????-???? ???????????????????????????? %d , ??????-???? ???????????????? %d"
+"????????????????????: 200 ??????????????, ?????????????? "
+"??????????????????????, ?????????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:367
-#, c-format
-msgid "Date %s %04d  Money %8d   Tech-level %5.1f (%5.1f)"
-msgstr "???????? %s %04d  ???????????? %8d ?????????????? ???????????????? %5.1f (%5.1f)"
-
-#: src/lincity-ng/Dialog.cpp:374
-#, c-format
-msgid ".Deaths by starvation %7d   History %8.3f"
-msgstr "?????????????? ???? ????????????        %7d ?????????????? %8.3f"
-
-#: src/lincity-ng/Dialog.cpp:379
-#, c-format
-msgid "Deaths from pollution %7d   History %8.3f"
-msgstr "?????????????? ???? ?????????????????????? %7d ?????????????? %8.3f"
-
-#: src/lincity-ng/Dialog.cpp:383
-#, c-format
-msgid "Years of unemployment %7d   History %8.3f"
-msgstr "?????? ?????? ???????????? %7d  ?????????????? %8.3f"
-
-#: src/lincity-ng/Dialog.cpp:387
-#, c-format
-msgid "Rockets launched %2d  Successful launches %2d"
-msgstr "?????????????????? ?????????? %2d ???? ?????? ???????????? %2d"
-
-#: src/lincity-ng/Dialog.cpp:397
-#, c-format
-msgid ".   Residences %4d         Markets %4d            Farms %4d"
+#: src/lincity-ng/ButtonPanel.cpp:204
+msgid "Residential: 100 denizens, low birthrate, high deathrate"
 msgstr ""
-      ".   ???????????????????? %4d         ???????????????? %4d           ?????????? %4d"
+"????????????????????: 100 ??????????????, ???????????? "
+"??????????????????????, ?????????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:418
-#, c-format
-msgid ".    Monuments %4d         Schools %4d     Universities %4d"
+#: src/lincity-ng/ButtonPanel.cpp:205
+msgid "Residential: 200 denizens, high birthrate, low deathrate"
 msgstr ""
-      ".    ?????????????????? %4d         ?????????? %4d       ???????????????????????? %4d"
+"????????????????????: 200 ??????????????, ?????????????? "
+"??????????????????????, ???????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:423
-#, c-format
-msgid  ".Fire stations %4d           Parks %4d    Sports fields %4d"
-msgstr ".???????????????? ?????????????? %4d        ?????????? %4d    ?????????????????????????? %4d"
-
-#: src/lincity-ng/Dialog.cpp:449
-#, c-format
-msgid  "Health centres %4d            Tips %4d         Shanties %4d"
-msgstr "???????????????? %4d                  ?????????????? %4d      ???????????? %4d"
-
-#: src/lincity-ng/Dialog.cpp:433
-#, c-format
-msgid ".    Windmills %4d     Coal powers %4d     Solar powers %4d"
+#: src/lincity-ng/ButtonPanel.cpp:206
+msgid "Residential: 400 denizens, high birthrate, high deathrate"
 msgstr ""
-      ".    ???????????????? %4d      ???????????????? ???? %4d     ?????????????????? ???? %4d"
+"????????????????????: 400 ??????????????, ?????????????? "
+"??????????????????????, ?????????????? ????????????????????."
 
-#: src/lincity-ng/Dialog.cpp:439
-#, c-format
-msgid  ".  Substations %4d     Power lines %4d            Ports %4d"
-msgstr ".  ???????????????????? %4d      ???????????????????????? %4d           ?????????? %4d"
+#: src/lincity-ng/ButtonPanel.cpp:215
+msgid " [Click right for help.]"
+msgstr " [?????????? ???????????? ?????? ????????????.]"
 
-#: src/lincity-ng/Dialog.cpp:408
+#: src/lincity-ng/ButtonPanel.cpp:243 src/lincity-ng/ButtonPanel.cpp:277
 #, c-format
-msgid ".       Tracks %4d           Roads %4d             Rail %4d"
-msgstr ""
-      ".       ?????????????????? %4d        ????????????    %4d         ?????????? %4d"
+msgid "%s (Techlevel %.1f required.)"
+msgstr "%s (?????????? %.1f ?????????????? ??????????????.)"
 
-#: src/lincity-ng/Dialog.cpp:413
+#: src/lincity-ng/ButtonPanel.cpp:252
 #, c-format
-msgid ".    Potteries %4d     Blacksmiths %4d            Mills %4d"
-msgstr ".    ?????????????????? %4d     ??????????????????   %4d            ???????????????? %4d"
-
-#: src/lincity-ng/Dialog.cpp:444
-#, c-format
-msgid ".   Light inds %4d      Heavy inds %4d        Recyclers %4d"
+msgid "%s is disabled (loaded old game)."
 msgstr ""
-      ".   ???????????? ??????-???? %4d   ?????????????? ??????-???? %4d    ?????????????????????? %4d"
 
-#: src/lincity-ng/Dialog.cpp:428
-#, c-format
-msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
-msgstr ".   ???????????????? ?????????? %4d   ?????????? ???????? %4d        ???????????? %4d"
-
 #: src/lincity-ng/EconomyGraph.cpp:121
 msgid "Mining"
 msgstr "????????????"
@@ -1157,117 +1356,3 @@
 #: src/lincity-ng/EconomyGraph.cpp:216
 msgid "You lose."
 msgstr "???? ??????????????????."
-
-#: src/lincity-ng/MainMenu.cpp:163
-msgid "empty"
-msgstr "??????????"
-
-#: src/lincity-ng/GameView.cpp:236
-msgid "Minimap: outline map"
-msgstr "????????-??????????: ??????????????????"
-
-#: src/lincity-ng/GameView.cpp:239
-msgid "Minimap: unemployment"
-msgstr "????????-??????????: ????????????"
-
-#: src/lincity-ng/GameView.cpp:242
-msgid "Minimap: pollution"
-msgstr "????????-??????????: ??????????????????????"
-
-#: src/lincity-ng/GameView.cpp:245
-msgid "Minimap: nourishments"
-msgstr "????????-??????????: ??????????????"
-
-#: src/lincity-ng/GameView.cpp:248
-msgid "Minimap: power supply"
-msgstr "????????-??????????: ????????????????????????????"
-
-#: src/lincity-ng/GameView.cpp:251
-msgid "Minimap: firedepartment cover"
-msgstr "????????-??????????: ???????????????? ????????????"
-
-#: src/lincity-ng/GameView.cpp:254
-msgid "Minimap: sport cover"
-msgstr "????????-??????????: ??????????"
-
-#: src/lincity-ng/GameView.cpp:257
-msgid "Minimap: medical care"
-msgstr "????????-??????????: ????????????????"
-
-#: src/lincity-ng/GameView.cpp:260
-msgid "Minimap: coal depots"
-msgstr "????????-??????????: ???????????????? ??????????"
-
-#: src/lincity-ng/GameView.cpp:263
-msgid "Minimap: traffic density"
-msgstr "????????-??????????: ????????????"
-
-#: src/lincity-ng/GameView.cpp:1513
-msgid "Estimated Bulldoze Cost: "
-msgstr "???????? ??????????: "
-
-#: src/lincity-ng/GameView.cpp:1515
-msgid "Bulldoze Cost: "
-msgstr "???????? ??????????: "
-
-#: src/lincity-ng/GameView.cpp:1520
-msgid "n/a"
-msgstr "??/??"
-
-#: src/lincity-ng/GameView.cpp:1538
-msgid "Query Tool: Show information about selected building."
-msgstr "????????????: ???????????????? ???????????????????? ?? ?????????????????? ????????????????????. "
-
-#: src/lincity-ng/GameView.cpp:1542
-msgid "Bulldozer: remove building -price varies-"
-msgstr "??????????????????: ?????????????? ???????????? -???????? ??????????????????-"
-
-#: src/lincity-ng/GameView.cpp:1549
-msgid ": Cost to build "
-msgstr ": ?????????????????? ?????????????????? "
-
-#: src/lincity-ng/GameView.cpp:1550
-msgid ", to bulldoze "
-msgstr ", ???????????????????? "
-
-#: src/lincity-ng/GameView.cpp:1550 src/lincity-ng/GameView.cpp:1553
-msgid "$."
-msgstr "??????."
-
-#: src/lincity-ng/GameView.cpp:1552
-msgid " To build "
-msgstr " ?????????????? "
-
-#: src/lincity-ng/GameView.cpp:1552
-msgid " of them "
-msgstr " ???? "
-
-#: src/lincity-ng/GameView.cpp:1553
-msgid "will cost about "
-msgstr "???????????? ???? "
-
-#: src/lincity/fileutil.cpp:589
-#, c-format
-msgid "Couldn't create the save directory %s\n"
-msgstr "???? ???????? ?????????????? ???????????????????? ?????? ???????????????????? '%s'\n"
-
-#: src/lincity/engine.cpp:157
-msgid "You can't build a tip here"
-msgstr "???? ???? ???????????? ?????????????????? ??????????-???? ??????????"
-
-#: src/lincity/engine.cpp:158 src/lincity/engine.cpp:189
-msgid "This area was once a landfill"
-msgstr "?????? ???????? ???????????????? ????????????"
-
-#: src/lincity/engine.cpp:159 src/lincity/engine.cpp:190
-#: src/lincity/engine.cpp:197
-msgid "OK"
-msgstr "??????"
-
-#: src/lincity/engine.cpp:188 src/lincity/engine.cpp:195
-msgid "You can't build a mine here"
-msgstr "???????????? ?????????????? ???????????? ??????????"
-
-#: src/lincity/engine.cpp:196
-msgid "There is no ore left at this site"
-msgstr "?????????? ?????????????????????? ????????"

Modified: trunk/data/locale/sv.po
===================================================================
--- trunk/data/locale/sv.po	2007-11-28 23:27:07 UTC (rev 1289)
+++ trunk/data/locale/sv.po	2007-11-29 20:37:08 UTC (rev 1290)
@@ -42,8 +42,13 @@
 msgstr "Du har f??r m??nga kraftledningar. Anslut n??gra av dem till varandra"
 
 #: src/lincity/engine.cpp:198
-msgid "ERROR: group does not exist. This should not happen! Please consider filling a bug report to lincity-ng team, with the saved game and what you did :-) "
-msgstr "FEL: gruppen finns inte. Det h??r ska inte h??nda! Skicka g??rna in en felrapport till lincity-ng-teamet med det sparade spelet och information om vad du gjorde :-) "
+msgid ""
+"ERROR: group does not exist. This should not happen! Please consider filling "
+"a bug report to lincity-ng team, with the saved game and what you did :-) "
+msgstr ""
+"FEL: gruppen finns inte. Det h??r ska inte h??nda! Skicka g??rna in en "
+"felrapport till lincity-ng-teamet med det sparade spelet och information om "
+"vad du gjorde :-) "
 
 #: src/lincity/engine.cpp:226
 msgid "Port must be connected to river all along right side."
@@ -60,16 +65,27 @@
 
 #: src/lincity/engine.cpp:305
 msgid "You can't build a tip here: this area was once a landfill"
-msgstr "Du kan inte bygga en soptipp h??r: den h??r platsen var tidigare en landfyllnad"
+msgstr ""
+"Du kan inte bygga en soptipp h??r: den h??r platsen var tidigare en "
+"landfyllnad"
 
 #: src/lincity/engine.cpp:330
 msgid "You can't build a mine here: This area was once a landfill"
-msgstr "Du kan inte bygga en gruva h??r: den h??r platsen var tidigare en landfyllnad"
+msgstr ""
+"Du kan inte bygga en gruva h??r: den h??r platsen var tidigare en landfyllnad"
 
 #: src/lincity/engine.cpp:335
 msgid "You can't build a mine here: there is no ore left at this site"
 msgstr "Du kan inte bygga en gruva h??r: det finns ingen malm kvar h??r"
 
+#: src/lincity/engine.cpp:259
+msgid "You can't build a water well here: it is all desert."
+msgstr ""
+
+#: src/lincity/engine.cpp:269
+msgid "You can't build a park here: it is a desert, parks need water"
+msgstr ""
+
 #: src/lincity/engine.cpp:609
 msgid "It's at a power line."
 msgstr "Den ??r vid en kraftledning."
@@ -186,28 +202,6 @@
 msgid "UNKNOWN!"
 msgstr "OK??ND!"
 
-#: src/lincity/ldsvguts.cpp:128
-#, c-format
-msgid "Save file <%s> - "
-msgstr "Spara filen <%s> - "
-
-#: src/lincity/ldsvguts.cpp:129
-msgid "Can't open save file!"
-msgstr "Kan inte ??ppna sparad fil!"
-
-#: src/lincity/ldsvguts.cpp:134
-msgid "Saving scene"
-msgstr "Sparar scenario"
-
-#: src/lincity/ldsvguts.cpp:334
-#, c-format
-msgid "Can't open <%s> (gzipped)"
-msgstr "Kan inte ??ppna <%s> (gzippad)"
-
-#: src/lincity/ldsvguts.cpp:352
-msgid "Loading scene"
-msgstr "Laddar scenario"
-
 #: src/lincity/lintypes.cpp:22
 msgid "Empty"
 msgstr "Tom"
@@ -393,6 +387,48 @@
 msgid "Residential HH"
 msgstr "Bostadsomr??de"
 
+#: src/lincity/lintypes.cpp:477
+msgid "Water well"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:489
+msgid "Desert"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:501
+msgid "Tree"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:514
+msgid "Trees"
+msgstr ""
+
+#: src/lincity/lintypes.cpp:527
+msgid "Forest"
+msgstr ""
+
+#: src/lincity/ldsvguts.cpp:128
+#, c-format
+msgid "Save file <%s> - "
+msgstr "Spara filen <%s> - "
+
+#: src/lincity/ldsvguts.cpp:129
+msgid "Can't open save file!"
+msgstr "Kan inte ??ppna sparad fil!"
+
+#: src/lincity/ldsvguts.cpp:134
+msgid "Saving scene"
+msgstr "Sparar scenario"
+
+#: src/lincity/ldsvguts.cpp:334
+#, c-format
+msgid "Can't open <%s> (gzipped)"
+msgstr "Kan inte ??ppna <%s> (gzippad)"
+
+#: src/lincity/ldsvguts.cpp:352
+msgid "Loading scene"
+msgstr "Laddar scenario"
+
 #: src/lincity/lclib.cpp:17
 msgid "Jan"
 msgstr "Jan"
@@ -689,6 +725,19 @@
 msgid "Employed"
 msgstr "Anst??llda"
 
+#: src/lincity/modules/residence.cpp:299
+#: src/lincity-ng/MpsInterface.cpp:393
+msgid "good"
+msgstr "bra"
+
+#: src/lincity/modules/residence.cpp:299
+msgid "poor"
+msgstr "d??lig"
+
+#: src/lincity/modules/residence.cpp:300
+msgid "Job"
+msgstr "Jobb"
+
 #: src/lincity/modules/residence.cpp:289
 msgid "Health Cvr"
 msgstr "Sjukhust??."
@@ -704,19 +753,6 @@
 msgid "Pollution"
 msgstr "Milj??f??rst??ring"
 
-#: src/lincity/modules/residence.cpp:299
-#: src/lincity-ng/MpsInterface.cpp:393
-msgid "good"
-msgstr "bra"
-
-#: src/lincity/modules/residence.cpp:299
-msgid "poor"
-msgstr "d??lig"
-
-#: src/lincity/modules/residence.cpp:300
-msgid "Job"
-msgstr "Jobb"
-
 #: src/lincity/modules/monument.cpp:63
 msgid "Wisdom Bestowed"
 msgstr "Visdom sk??nker"
@@ -848,6 +884,10 @@
 msgid "Activity"
 msgstr "Aktivitet"
 
+#: src/lincity/modules/school.cpp:51
+msgid "Lessons Learned"
+msgstr "Lexor l??rda"
+
 #: src/lincity/modules/firestation.cpp:119
 msgid "Fire Station"
 msgstr "Brandstation"
@@ -864,14 +904,34 @@
 msgid "Prod"
 msgstr "Produktion"
 
-#: src/lincity/modules/school.cpp:51
-msgid "Lessons Learned"
-msgstr "Lexor l??rda"
+#: src/lincity/modules/organic_farm.cpp:238
+msgid "Debug info"
+msgstr ""
 
+#: src/lincity/modules/organic_farm.cpp:239
+msgid " max with power & water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:240
+msgid " number of tile with water"
+msgstr ""
+
+#: src/lincity/modules/organic_farm.cpp:241
+msgid " current production"
+msgstr ""
+
 #: src/lincity/modules/solar_power.cpp:43
 msgid "Solar"
 msgstr "Solkraft"
 
+#: src/lincity/modules/waterwell.cpp:44
+msgid "Water_well"
+msgstr ""
+
+#: src/lincity/modules/waterwell.cpp:51
+msgid "Drinkable"
+msgstr ""
+
 #: src/lincity-ng/Dialog.cpp:173
 msgid "Launchsite"
 msgstr "Avfyrningsramp"
@@ -981,6 +1041,16 @@
 msgid ".   Coal mines %4d       Ore mines %4d         Communes %4d"
 msgstr ".    Kolgruvor %4d      Malmgruvor %4d         Kolmilor %4d"
 
+#: src/lincity-ng/ScreenInterface.cpp:261
+msgid "MM"
+msgstr "M"
+
+#: src/lincity-ng/GameView.cpp:1574
+#: src/lincity-ng/GameView.cpp:1605
+#: src/lincity-ng/ScreenInterface.cpp:272
+msgid "$"
+msgstr "???"
+
 #: src/lincity-ng/GameView.cpp:236
 msgid "Minimap: outline map"
 msgstr "Minikarta: ??versiktskarta"
@@ -1029,12 +1099,6 @@
 msgid "Bulldoze Cost: "
 msgstr "Rivningskostnad: "
 
-#: src/lincity-ng/GameView.cpp:1574
-#: src/lincity-ng/GameView.cpp:1605
-#: src/lincity-ng/ScreenInterface.cpp:272
-msgid "$"
-msgstr "???"
-
 #: src/lincity-ng/GameView.cpp:1576
 msgid "n/a"
 msgstr "ingen"
@@ -1245,42 +1309,6 @@
 msgid "Cases"
 msgstr "Fall"
 
-#: src/lincity-ng/EconomyGraph.cpp:123
-msgid "Mining"
-msgstr "Gruvdrift"
-
-#: src/lincity-ng/EconomyGraph.cpp:125
-msgid "Trade"
-msgstr "Handel"
-
-#: src/lincity-ng/EconomyGraph.cpp:127
-msgid "Money"
-msgstr "Pengar"
-
-#: src/lincity-ng/EconomyGraph.cpp:129
-msgid "Popul."
-msgstr "Befolk."
-
-#: src/lincity-ng/EconomyGraph.cpp:131
-msgid "Techn."
-msgstr "Teknologi"
-
-#: src/lincity-ng/EconomyGraph.cpp:136
-msgid "Economy Overview:"
-msgstr "Ekonomi??versikt:"
-
-#: src/lincity-ng/EconomyGraph.cpp:139
-msgid "Sustainability:"
-msgstr "H??llbarhet:"
-
-#: src/lincity-ng/EconomyGraph.cpp:142
-msgid "Frames per Second:"
-msgstr "Bilder per sekund:"
-
-#: src/lincity-ng/EconomyGraph.cpp:218
-msgid "You lose."
-msgstr "Du har f??rlorat."
-
 #: src/lincity-ng/ButtonPanel.cpp:198
 msgid "Query Tool"
 msgstr "Fr??geverktyg"
@@ -1323,7 +1351,43 @@
 msgid "%s (Techlevel %.1f required.)"
 msgstr "%s (Teknologiniv?? %.1f kr??vs.)"
 
-#: src/lincity-ng/ScreenInterface.cpp:261
-msgid "MM"
-msgstr "M"
+#: src/lincity-ng/ButtonPanel.cpp:252
+#, c-format
+msgid "%s is disabled (loaded old game)."
+msgstr ""
 
+#: src/lincity-ng/EconomyGraph.cpp:123
+msgid "Mining"
+msgstr "Gruvdrift"
+
+#: src/lincity-ng/EconomyGraph.cpp:125
+msgid "Trade"
+msgstr "Handel"
+
+#: src/lincity-ng/EconomyGraph.cpp:127
+msgid "Money"
+msgstr "Pengar"
+
+#: src/lincity-ng/EconomyGraph.cpp:129
+msgid "Popul."
+msgstr "Befolk."
+
+#: src/lincity-ng/EconomyGraph.cpp:131
+msgid "Techn."
+msgstr "Teknologi"
+
+#: src/lincity-ng/EconomyGraph.cpp:136
+msgid "Economy Overview:"
+msgstr "Ekonomi??versikt:"
+
+#: src/lincity-ng/EconomyGraph.cpp:139
+msgid "Sustainability:"
+msgstr "H??llbarhet:"
+
+#: src/lincity-ng/EconomyGraph.cpp:142
+msgid "Frames per Second:"
+msgstr "Bilder per sekund:"
+
+#: src/lincity-ng/EconomyGraph.cpp:218
+msgid "You lose."
+msgstr "Du har f??rlorat."



